{
  "contractName": "IERC20HoldableToken",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "holdId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "lockPreimage",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "ExecutedHold",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "holdId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "notary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "expirationDateTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "lockHash",
          "type": "bytes32"
        }
      ],
      "name": "NewHold",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "holdId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ReleaseHold",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "holdId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "notary",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expirationDateTime",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "lockHash",
          "type": "bytes32"
        }
      ],
      "name": "hold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "holdId",
          "type": "bytes32"
        }
      ],
      "name": "retrieveHoldData",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "notary",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationDateTime",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "secretHash",
              "type": "bytes32"
            },
            {
              "internalType": "enum HoldStatusCode",
              "name": "status",
              "type": "uint8"
            }
          ],
          "internalType": "struct ERC20HoldData",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "holdId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "lockPreimage",
          "type": "bytes32"
        }
      ],
      "name": "executeHold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "holdId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "lockPreimage",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "executeHold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "holdId",
          "type": "bytes32"
        }
      ],
      "name": "executeHold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "holdId",
          "type": "bytes32"
        }
      ],
      "name": "releaseHold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOnHold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "spendableBalanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupplyOnHold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "holdId",
          "type": "bytes32"
        }
      ],
      "name": "holdStatus",
      "outputs": [
        {
          "internalType": "enum HoldStatusCode",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"holdId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"lockPreimage\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"ExecutedHold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"holdId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"notary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expirationDateTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"lockHash\",\"type\":\"bytes32\"}],\"name\":\"NewHold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"holdId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ReleaseHold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOnHold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"holdId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"lockPreimage\",\"type\":\"bytes32\"}],\"name\":\"executeHold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"holdId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"lockPreimage\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"executeHold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"holdId\",\"type\":\"bytes32\"}],\"name\":\"executeHold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"holdId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"notary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDateTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"lockHash\",\"type\":\"bytes32\"}],\"name\":\"hold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"holdId\",\"type\":\"bytes32\"}],\"name\":\"holdStatus\",\"outputs\":[{\"internalType\":\"enum HoldStatusCode\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"holdId\",\"type\":\"bytes32\"}],\"name\":\"releaseHold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"holdId\",\"type\":\"bytes32\"}],\"name\":\"retrieveHoldData\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"notary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDateTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"secretHash\",\"type\":\"bytes32\"},{\"internalType\":\"enum HoldStatusCode\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct ERC20HoldData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"spendableBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupplyOnHold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"like approve except the tokens can't be spent by the sender while they are on hold.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"balanceOnHold(address)\":{\"params\":{\"account\":\"owner of the tokens\"}},\"executeHold(bytes32)\":{\"params\":{\"holdId\":\"a unique identifier for the hold.\"}},\"executeHold(bytes32,bytes32)\":{\"params\":{\"holdId\":\"a unique identifier for the hold.\",\"lockPreimage\":\"the image used to generate the lock hash with a keccak256 hash\"}},\"executeHold(bytes32,bytes32,address)\":{\"params\":{\"holdId\":\"a unique identifier for the hold.\",\"lockPreimage\":\"the image used to generate the lock hash with a keccak256 hash\",\"recipient\":\"the account the tokens will be transferred to on execution.\"}},\"hold(bytes32,address,address,uint256,uint256,bytes32)\":{\"params\":{\"amount\":\"of tokens to be transferred to the recipient on execution. Must be a non zero amount.\",\"expirationDateTime\":\"UNIX epoch seconds the held amount can be released back to the sender by the sender. Past dates are allowed.\",\"holdId\":\"a unique identifier for the hold.\",\"lockHash\":\"optional keccak256 hash of a lock preimage. An empty hash will not enforce the hash lock when the hold is executed.\",\"notary\":\"account that can execute the hold. Typically the recipient but can be a third party or a smart contract.\",\"recipient\":\"optional account the tokens will be transferred to on execution. If a zero address, the recipient must be specified on execution of the hold.\"}},\"holdStatus(bytes32)\":{\"params\":{\"holdId\":\"a unique identifier for the hold.\"},\"returns\":{\"_0\":\"hold status code.\"}},\"releaseHold(bytes32)\":{\"params\":{\"holdId\":\"a unique identifier for the hold.\"}},\"spendableBalanceOf(address)\":{\"params\":{\"account\":\"owner of the tokens\"}},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"title\":\"Holdable ERC20 Token Interface.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"balanceOnHold(address)\":{\"notice\":\"Amount of tokens owned by an account that are held pending execution or release.\"},\"executeHold(bytes32)\":{\"notice\":\"Called by the notary to transfer the held tokens to the set at the hold recipient if there is no hash lock.\"},\"executeHold(bytes32,bytes32)\":{\"notice\":\"Called by the notary to transfer the held tokens to the recipient that was set at the hold.\"},\"executeHold(bytes32,bytes32,address)\":{\"notice\":\"Called by the notary to transfer the held tokens to the recipient if no recipient was specified at the hold.\"},\"hold(bytes32,address,address,uint256,uint256,bytes32)\":{\"notice\":\"Called by the sender to hold some tokens for a recipient that the sender can not release back to themself until after the expiration date.\"},\"releaseHold(bytes32)\":{\"notice\":\"Called by the notary at any time or the sender after the expiration date to release the held tokens back to the sender.\"},\"spendableBalanceOf(address)\":{\"notice\":\"Total amount of tokens owned by an account including all the held tokens pending execution or release.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/interface/IERC20HoldableToken.sol\":\"IERC20HoldableToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":0},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"project:/contracts/interface/HoldStatusCode.sol\":{\"keccak256\":\"0x6deb0acca580b9e9474d8dc953a759311c1f77876fa06cf672550970db0289a6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://603ba40c099b8affdd7a25a2922b7a13fe30a52d0922cc10d669723dac80de05\",\"dweb:/ipfs/QmWE3hHWtcJqaL1g2rU3ztTxwJMUJnMQS5ZdA2QvChpRo6\"]},\"project:/contracts/interface/IERC20HoldableToken.sol\":{\"keccak256\":\"0x8348bebc4695425ee6e0adbb79980ee226fbe410ccb4d46bca76d45214f123a1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://722d3a124137d7f819066ab36108fbcf54d77fd130e2069ae093e454af10fbc6\",\"dweb:/ipfs/QmNRgnDos5dW12tiW71g1h4JCQ7dqNxisXRjczEaNFb1Cp\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: Apache-2.0\n/*\n * This code has not been reviewed.\n * Do not use or deploy this code before reviewing it personally first.\n */\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"./HoldStatusCode.sol\";\n\nstruct ERC20HoldData {\n    address sender;\n    address recipient;\n    address notary;\n    uint256 amount;\n    uint256 expirationDateTime;\n    bytes32 secretHash;\n    HoldStatusCode status;\n}\n\n/**\n * @title Holdable ERC20 Token Interface.\n * @dev like approve except the tokens can't be spent by the sender while they are on hold.\n */\ninterface IERC20HoldableToken is IERC20 {\n\n    event NewHold(\n        bytes32 indexed holdId,\n        address indexed recipient,\n        address indexed notary,\n        uint256 amount,\n        uint256 expirationDateTime,\n        bytes32 lockHash\n    );\n    event ExecutedHold(\n        bytes32 indexed holdId,\n        bytes32 lockPreimage,\n        address recipient\n    );\n    event ReleaseHold(bytes32 indexed holdId, address sender);\n\n    /**\n     @notice Called by the sender to hold some tokens for a recipient that the sender can not release back to themself until after the expiration date.\n     @param holdId a unique identifier for the hold.\n     @param recipient optional account the tokens will be transferred to on execution. If a zero address, the recipient must be specified on execution of the hold.\n     @param notary account that can execute the hold. Typically the recipient but can be a third party or a smart contract.\n     @param amount of tokens to be transferred to the recipient on execution. Must be a non zero amount.\n     @param expirationDateTime UNIX epoch seconds the held amount can be released back to the sender by the sender. Past dates are allowed.\n     @param lockHash optional keccak256 hash of a lock preimage. An empty hash will not enforce the hash lock when the hold is executed.\n     */\n    function hold(\n        bytes32 holdId,\n        address recipient,\n        address notary,\n        uint256 amount,\n        uint256 expirationDateTime,\n        bytes32 lockHash\n    ) external;\n\n    function retrieveHoldData(bytes32 holdId) external view returns (ERC20HoldData memory);\n\n    /**\n     @notice Called by the notary to transfer the held tokens to the set at the hold recipient if there is no hash lock.\n     @param holdId a unique identifier for the hold.\n     */\n    function executeHold(bytes32 holdId) external;\n\n    /**\n     @notice Called by the notary to transfer the held tokens to the recipient that was set at the hold.\n     @param holdId a unique identifier for the hold.\n     @param lockPreimage the image used to generate the lock hash with a keccak256 hash\n     */\n    function executeHold(bytes32 holdId, bytes32 lockPreimage) external;\n\n    /**\n     @notice Called by the notary to transfer the held tokens to the recipient if no recipient was specified at the hold.\n     @param holdId a unique identifier for the hold.\n     @param lockPreimage the image used to generate the lock hash with a keccak256 hash\n     @param recipient the account the tokens will be transferred to on execution.\n     */\n    function executeHold(\n        bytes32 holdId,\n        bytes32 lockPreimage,\n        address recipient\n    ) external;\n\n    /**\n     @notice Called by the notary at any time or the sender after the expiration date to release the held tokens back to the sender.\n     @param holdId a unique identifier for the hold.\n     */\n    function releaseHold(bytes32 holdId) external;\n\n    /**\n     @notice Amount of tokens owned by an account that are held pending execution or release.\n     @param account owner of the tokens\n     */\n    function balanceOnHold(address account) external view returns (uint256);\n\n    /**\n     @notice Total amount of tokens owned by an account including all the held tokens pending execution or release.\n     @param account owner of the tokens\n     */\n    function spendableBalanceOf(address account) external view returns (uint256);\n\n    function totalSupplyOnHold() external view returns (uint256);\n\n    /**\n     @param holdId a unique identifier for the hold.\n     @return hold status code.\n     */\n    function holdStatus(bytes32 holdId) external view returns (HoldStatusCode);\n}\n",
  "sourcePath": "/Users/sergio/Desktop/project/contracts/interface/IERC20HoldableToken.sol",
  "ast": {
    "absolutePath": "project:/contracts/interface/IERC20HoldableToken.sol",
    "exportedSymbols": {
      "ERC20HoldData": [
        5467
      ],
      "HoldStatusCode": [
        5396
      ],
      "IERC20": [
        819
      ],
      "IERC20HoldableToken": [
        5583
      ]
    },
    "id": 5584,
    "license": "Apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5449,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "154:23:19"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 5450,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5584,
        "sourceUnit": 820,
        "src": "179:56:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interface/HoldStatusCode.sol",
        "file": "./HoldStatusCode.sol",
        "id": 5451,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5584,
        "sourceUnit": 5397,
        "src": "236:30:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "canonicalName": "ERC20HoldData",
        "id": 5467,
        "members": [
          {
            "constant": false,
            "id": 5453,
            "mutability": "mutable",
            "name": "sender",
            "nameLocation": "303:6:19",
            "nodeType": "VariableDeclaration",
            "scope": 5467,
            "src": "295:14:19",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5452,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "295:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 5455,
            "mutability": "mutable",
            "name": "recipient",
            "nameLocation": "323:9:19",
            "nodeType": "VariableDeclaration",
            "scope": 5467,
            "src": "315:17:19",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5454,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "315:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 5457,
            "mutability": "mutable",
            "name": "notary",
            "nameLocation": "346:6:19",
            "nodeType": "VariableDeclaration",
            "scope": 5467,
            "src": "338:14:19",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5456,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "338:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 5459,
            "mutability": "mutable",
            "name": "amount",
            "nameLocation": "366:6:19",
            "nodeType": "VariableDeclaration",
            "scope": 5467,
            "src": "358:14:19",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5458,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "358:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 5461,
            "mutability": "mutable",
            "name": "expirationDateTime",
            "nameLocation": "386:18:19",
            "nodeType": "VariableDeclaration",
            "scope": 5467,
            "src": "378:26:19",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5460,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "378:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 5463,
            "mutability": "mutable",
            "name": "secretHash",
            "nameLocation": "418:10:19",
            "nodeType": "VariableDeclaration",
            "scope": 5467,
            "src": "410:18:19",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 5462,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "410:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 5466,
            "mutability": "mutable",
            "name": "status",
            "nameLocation": "449:6:19",
            "nodeType": "VariableDeclaration",
            "scope": 5467,
            "src": "434:21:19",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_HoldStatusCode_$5396",
              "typeString": "enum HoldStatusCode"
            },
            "typeName": {
              "id": 5465,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 5464,
                "name": "HoldStatusCode",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5396,
                "src": "434:14:19"
              },
              "referencedDeclaration": 5396,
              "src": "434:14:19",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_HoldStatusCode_$5396",
                "typeString": "enum HoldStatusCode"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "ERC20HoldData",
        "nameLocation": "275:13:19",
        "nodeType": "StructDefinition",
        "scope": 5584,
        "src": "268:190:19",
        "visibility": "public"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5469,
              "name": "IERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 819,
              "src": "635:6:19"
            },
            "id": 5470,
            "nodeType": "InheritanceSpecifier",
            "src": "635:6:19"
          }
        ],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 5468,
          "nodeType": "StructuredDocumentation",
          "src": "460:141:19",
          "text": " @title Holdable ERC20 Token Interface.\n @dev like approve except the tokens can't be spent by the sender while they are on hold."
        },
        "fullyImplemented": false,
        "id": 5583,
        "linearizedBaseContracts": [
          5583,
          819
        ],
        "name": "IERC20HoldableToken",
        "nameLocation": "612:19:19",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 5484,
            "name": "NewHold",
            "nameLocation": "655:7:19",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5472,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "holdId",
                  "nameLocation": "688:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5484,
                  "src": "672:22:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5471,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "672:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5474,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "720:9:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5484,
                  "src": "704:25:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5473,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "704:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5476,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "notary",
                  "nameLocation": "755:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5484,
                  "src": "739:22:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5475,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "739:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5478,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "779:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5484,
                  "src": "771:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5477,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "771:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5480,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "expirationDateTime",
                  "nameLocation": "803:18:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5484,
                  "src": "795:26:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5479,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "795:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5482,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "lockHash",
                  "nameLocation": "839:8:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5484,
                  "src": "831:16:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5481,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "831:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "662:191:19"
            },
            "src": "649:205:19"
          },
          {
            "anonymous": false,
            "id": 5492,
            "name": "ExecutedHold",
            "nameLocation": "865:12:19",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5491,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5486,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "holdId",
                  "nameLocation": "903:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5492,
                  "src": "887:22:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5485,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "887:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5488,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "lockPreimage",
                  "nameLocation": "927:12:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5492,
                  "src": "919:20:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5487,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "919:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5490,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "957:9:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5492,
                  "src": "949:17:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5489,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "949:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "877:95:19"
            },
            "src": "859:114:19"
          },
          {
            "anonymous": false,
            "id": 5498,
            "name": "ReleaseHold",
            "nameLocation": "984:11:19",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5494,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "holdId",
                  "nameLocation": "1012:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5498,
                  "src": "996:22:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5493,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "996:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5496,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1028:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5498,
                  "src": "1020:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5495,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1020:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "995:40:19"
            },
            "src": "978:58:19"
          },
          {
            "documentation": {
              "id": 5499,
              "nodeType": "StructuredDocumentation",
              "src": "1042:886:19",
              "text": "@notice Called by the sender to hold some tokens for a recipient that the sender can not release back to themself until after the expiration date.\n@param holdId a unique identifier for the hold.\n@param recipient optional account the tokens will be transferred to on execution. If a zero address, the recipient must be specified on execution of the hold.\n@param notary account that can execute the hold. Typically the recipient but can be a third party or a smart contract.\n@param amount of tokens to be transferred to the recipient on execution. Must be a non zero amount.\n@param expirationDateTime UNIX epoch seconds the held amount can be released back to the sender by the sender. Past dates are allowed.\n@param lockHash optional keccak256 hash of a lock preimage. An empty hash will not enforce the hash lock when the hold is executed."
            },
            "functionSelector": "c0e8330e",
            "id": 5514,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "hold",
            "nameLocation": "1942:4:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5501,
                  "mutability": "mutable",
                  "name": "holdId",
                  "nameLocation": "1964:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5514,
                  "src": "1956:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5500,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1956:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5503,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1988:9:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5514,
                  "src": "1980:17:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5502,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1980:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5505,
                  "mutability": "mutable",
                  "name": "notary",
                  "nameLocation": "2015:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5514,
                  "src": "2007:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5504,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2007:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5507,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2039:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5514,
                  "src": "2031:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5506,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2031:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5509,
                  "mutability": "mutable",
                  "name": "expirationDateTime",
                  "nameLocation": "2063:18:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5514,
                  "src": "2055:26:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5508,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2055:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5511,
                  "mutability": "mutable",
                  "name": "lockHash",
                  "nameLocation": "2099:8:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5514,
                  "src": "2091:16:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5510,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2091:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1946:167:19"
            },
            "returnParameters": {
              "id": 5513,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2122:0:19"
            },
            "scope": 5583,
            "src": "1933:190:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "da1ec246",
            "id": 5522,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "retrieveHoldData",
            "nameLocation": "2138:16:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5517,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5516,
                  "mutability": "mutable",
                  "name": "holdId",
                  "nameLocation": "2163:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5522,
                  "src": "2155:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5515,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2155:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2154:16:19"
            },
            "returnParameters": {
              "id": 5521,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5520,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5522,
                  "src": "2194:20:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ERC20HoldData_$5467_memory_ptr",
                    "typeString": "struct ERC20HoldData"
                  },
                  "typeName": {
                    "id": 5519,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5518,
                      "name": "ERC20HoldData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5467,
                      "src": "2194:13:19"
                    },
                    "referencedDeclaration": 5467,
                    "src": "2194:13:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20HoldData_$5467_storage_ptr",
                      "typeString": "struct ERC20HoldData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2193:22:19"
            },
            "scope": 5583,
            "src": "2129:87:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 5523,
              "nodeType": "StructuredDocumentation",
              "src": "2222:185:19",
              "text": "@notice Called by the notary to transfer the held tokens to the set at the hold recipient if there is no hash lock.\n@param holdId a unique identifier for the hold."
            },
            "functionSelector": "f8abd4bc",
            "id": 5528,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "executeHold",
            "nameLocation": "2421:11:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5525,
                  "mutability": "mutable",
                  "name": "holdId",
                  "nameLocation": "2441:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5528,
                  "src": "2433:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5524,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2433:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2432:16:19"
            },
            "returnParameters": {
              "id": 5527,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2457:0:19"
            },
            "scope": 5583,
            "src": "2412:46:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 5529,
              "nodeType": "StructuredDocumentation",
              "src": "2464:257:19",
              "text": "@notice Called by the notary to transfer the held tokens to the recipient that was set at the hold.\n@param holdId a unique identifier for the hold.\n@param lockPreimage the image used to generate the lock hash with a keccak256 hash"
            },
            "functionSelector": "445850af",
            "id": 5536,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "executeHold",
            "nameLocation": "2735:11:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5534,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5531,
                  "mutability": "mutable",
                  "name": "holdId",
                  "nameLocation": "2755:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5536,
                  "src": "2747:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5530,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2747:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5533,
                  "mutability": "mutable",
                  "name": "lockPreimage",
                  "nameLocation": "2771:12:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5536,
                  "src": "2763:20:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5532,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2763:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2746:38:19"
            },
            "returnParameters": {
              "id": 5535,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2793:0:19"
            },
            "scope": 5583,
            "src": "2726:68:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 5537,
              "nodeType": "StructuredDocumentation",
              "src": "2800:356:19",
              "text": "@notice Called by the notary to transfer the held tokens to the recipient if no recipient was specified at the hold.\n@param holdId a unique identifier for the hold.\n@param lockPreimage the image used to generate the lock hash with a keccak256 hash\n@param recipient the account the tokens will be transferred to on execution."
            },
            "functionSelector": "603dfcb5",
            "id": 5546,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "executeHold",
            "nameLocation": "3170:11:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5544,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5539,
                  "mutability": "mutable",
                  "name": "holdId",
                  "nameLocation": "3199:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5546,
                  "src": "3191:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5538,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3191:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5541,
                  "mutability": "mutable",
                  "name": "lockPreimage",
                  "nameLocation": "3223:12:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5546,
                  "src": "3215:20:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5540,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3215:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5543,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "3253:9:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5546,
                  "src": "3245:17:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5542,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3245:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3181:87:19"
            },
            "returnParameters": {
              "id": 5545,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3277:0:19"
            },
            "scope": 5583,
            "src": "3161:117:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 5547,
              "nodeType": "StructuredDocumentation",
              "src": "3284:197:19",
              "text": "@notice Called by the notary at any time or the sender after the expiration date to release the held tokens back to the sender.\n@param holdId a unique identifier for the hold."
            },
            "functionSelector": "9335c28f",
            "id": 5552,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "releaseHold",
            "nameLocation": "3495:11:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5549,
                  "mutability": "mutable",
                  "name": "holdId",
                  "nameLocation": "3515:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5552,
                  "src": "3507:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5548,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3507:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3506:16:19"
            },
            "returnParameters": {
              "id": 5551,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3531:0:19"
            },
            "scope": 5583,
            "src": "3486:46:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 5553,
              "nodeType": "StructuredDocumentation",
              "src": "3538:145:19",
              "text": "@notice Amount of tokens owned by an account that are held pending execution or release.\n@param account owner of the tokens"
            },
            "functionSelector": "c5a468c6",
            "id": 5560,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOnHold",
            "nameLocation": "3697:13:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5556,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5555,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3719:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5560,
                  "src": "3711:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5554,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3711:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3710:17:19"
            },
            "returnParameters": {
              "id": 5559,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5558,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5560,
                  "src": "3751:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5557,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3751:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3750:9:19"
            },
            "scope": 5583,
            "src": "3688:72:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 5561,
              "nodeType": "StructuredDocumentation",
              "src": "3766:167:19",
              "text": "@notice Total amount of tokens owned by an account including all the held tokens pending execution or release.\n@param account owner of the tokens"
            },
            "functionSelector": "0f8f8b83",
            "id": 5568,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "spendableBalanceOf",
            "nameLocation": "3947:18:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5564,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5563,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3974:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5568,
                  "src": "3966:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5562,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3966:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3965:17:19"
            },
            "returnParameters": {
              "id": 5567,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5566,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5568,
                  "src": "4006:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5565,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4006:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4005:9:19"
            },
            "scope": 5583,
            "src": "3938:77:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "51bfb961",
            "id": 5573,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupplyOnHold",
            "nameLocation": "4030:17:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5569,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4047:2:19"
            },
            "returnParameters": {
              "id": 5572,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5571,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5573,
                  "src": "4073:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5570,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4073:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4072:9:19"
            },
            "scope": 5583,
            "src": "4021:61:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 5574,
              "nodeType": "StructuredDocumentation",
              "src": "4088:95:19",
              "text": "@param holdId a unique identifier for the hold.\n@return hold status code."
            },
            "functionSelector": "b67f7bd4",
            "id": 5582,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "holdStatus",
            "nameLocation": "4197:10:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5577,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5576,
                  "mutability": "mutable",
                  "name": "holdId",
                  "nameLocation": "4216:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5582,
                  "src": "4208:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5575,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4208:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4207:16:19"
            },
            "returnParameters": {
              "id": 5581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5580,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5582,
                  "src": "4247:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_HoldStatusCode_$5396",
                    "typeString": "enum HoldStatusCode"
                  },
                  "typeName": {
                    "id": 5579,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5578,
                      "name": "HoldStatusCode",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5396,
                      "src": "4247:14:19"
                    },
                    "referencedDeclaration": 5396,
                    "src": "4247:14:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_HoldStatusCode_$5396",
                      "typeString": "enum HoldStatusCode"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4246:16:19"
            },
            "scope": 5583,
            "src": "4188:75:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 5584,
        "src": "602:3663:19",
        "usedErrors": []
      }
    ],
    "src": "154:4112:19"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-05-07T22:41:49.891Z",
  "devdoc": {
    "details": "like approve except the tokens can't be spent by the sender while they are on hold.",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
      },
      "approve(address,uint256)": {
        "details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
      },
      "balanceOf(address)": {
        "details": "Returns the amount of tokens owned by `account`."
      },
      "balanceOnHold(address)": {
        "params": {
          "account": "owner of the tokens"
        }
      },
      "executeHold(bytes32)": {
        "params": {
          "holdId": "a unique identifier for the hold."
        }
      },
      "executeHold(bytes32,bytes32)": {
        "params": {
          "holdId": "a unique identifier for the hold.",
          "lockPreimage": "the image used to generate the lock hash with a keccak256 hash"
        }
      },
      "executeHold(bytes32,bytes32,address)": {
        "params": {
          "holdId": "a unique identifier for the hold.",
          "lockPreimage": "the image used to generate the lock hash with a keccak256 hash",
          "recipient": "the account the tokens will be transferred to on execution."
        }
      },
      "hold(bytes32,address,address,uint256,uint256,bytes32)": {
        "params": {
          "amount": "of tokens to be transferred to the recipient on execution. Must be a non zero amount.",
          "expirationDateTime": "UNIX epoch seconds the held amount can be released back to the sender by the sender. Past dates are allowed.",
          "holdId": "a unique identifier for the hold.",
          "lockHash": "optional keccak256 hash of a lock preimage. An empty hash will not enforce the hash lock when the hold is executed.",
          "notary": "account that can execute the hold. Typically the recipient but can be a third party or a smart contract.",
          "recipient": "optional account the tokens will be transferred to on execution. If a zero address, the recipient must be specified on execution of the hold."
        }
      },
      "holdStatus(bytes32)": {
        "params": {
          "holdId": "a unique identifier for the hold."
        },
        "returns": {
          "_0": "hold status code."
        }
      },
      "releaseHold(bytes32)": {
        "params": {
          "holdId": "a unique identifier for the hold."
        }
      },
      "spendableBalanceOf(address)": {
        "params": {
          "account": "owner of the tokens"
        }
      },
      "totalSupply()": {
        "details": "Returns the amount of tokens in existence."
      },
      "transfer(address,uint256)": {
        "details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
      }
    },
    "title": "Holdable ERC20 Token Interface.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "balanceOnHold(address)": {
        "notice": "Amount of tokens owned by an account that are held pending execution or release."
      },
      "executeHold(bytes32)": {
        "notice": "Called by the notary to transfer the held tokens to the set at the hold recipient if there is no hash lock."
      },
      "executeHold(bytes32,bytes32)": {
        "notice": "Called by the notary to transfer the held tokens to the recipient that was set at the hold."
      },
      "executeHold(bytes32,bytes32,address)": {
        "notice": "Called by the notary to transfer the held tokens to the recipient if no recipient was specified at the hold."
      },
      "hold(bytes32,address,address,uint256,uint256,bytes32)": {
        "notice": "Called by the sender to hold some tokens for a recipient that the sender can not release back to themself until after the expiration date."
      },
      "releaseHold(bytes32)": {
        "notice": "Called by the notary at any time or the sender after the expiration date to release the held tokens back to the sender."
      },
      "spendableBalanceOf(address)": {
        "notice": "Total amount of tokens owned by an account including all the held tokens pending execution or release."
      }
    },
    "version": 1
  }
}