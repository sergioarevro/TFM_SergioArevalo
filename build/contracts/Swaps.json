{
  "contractName": "Swaps",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "owned",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "noteHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "CreateNote",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "noteHash",
          "type": "bytes32"
        }
      ],
      "name": "DestroyNote",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "holdId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "lockPreimage",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "ExecutedHold",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "fromPartition",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "TransferByPartition",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "interfaceHash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "canImplementInterfaceForAddress",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "canReceive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "partition",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "tokensReceived",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "holder1",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "holder2",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "executer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "expirationDate",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "tokenAddress1",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenValue1",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId1",
              "type": "bytes32"
            },
            {
              "internalType": "enum Swaps.Standard",
              "name": "tokenStandard1",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "tokenAddress2",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenValue2",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId2",
              "type": "bytes32"
            },
            {
              "internalType": "enum Swaps.Standard",
              "name": "tokenStandard2",
              "type": "uint8"
            },
            {
              "internalType": "enum Swaps.TradeType",
              "name": "tradeType1",
              "type": "uint8"
            },
            {
              "internalType": "enum Swaps.TradeType",
              "name": "tradeType2",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "settlementDate",
              "type": "uint256"
            }
          ],
          "internalType": "struct Swaps.TradeRequestInput",
          "name": "inputData",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "preimage",
          "type": "bytes32"
        }
      ],
      "name": "requestTrade",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "preimage",
          "type": "bytes32"
        }
      ],
      "name": "acceptTrade",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getTradeAcceptanceStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "approveTrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "preimage",
          "type": "bytes32"
        }
      ],
      "name": "approveTradeWithPreimage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getTradeApprovalStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "executeTrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "preimage",
          "type": "bytes32"
        }
      ],
      "name": "executeTradeWithPreimage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "forceTrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "preimage",
          "type": "bytes32"
        }
      ],
      "name": "forceTradeWithPreimage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "cancelTrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tradeExecuters",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "operators",
          "type": "address[]"
        }
      ],
      "name": "setTradeExecuters",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "tokenControllers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "operators",
          "type": "address[]"
        }
      ],
      "name": "setTokenControllers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "priceOracles",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "oracles",
          "type": "address[]"
        }
      ],
      "name": "setPriceOracles",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress1",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenAddress2",
          "type": "address"
        }
      ],
      "name": "getPriceOwnership",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress1",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenAddress2",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "priceOwnership",
          "type": "bool"
        }
      ],
      "name": "setPriceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "variablePriceStartDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "startDate",
          "type": "uint256"
        }
      ],
      "name": "setVariablePriceStartDate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress1",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenAddress2",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId1",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId2",
          "type": "bytes32"
        }
      ],
      "name": "getTokenPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress1",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenAddress2",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId1",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId2",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "newPrice",
          "type": "uint256"
        }
      ],
      "name": "setTokenPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getTrade",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "holder1",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "holder2",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "executer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "expirationDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "settlementDate",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "tokenAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenValue",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "tokenId",
                  "type": "bytes32"
                },
                {
                  "internalType": "enum Swaps.Standard",
                  "name": "tokenStandard",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "accepted",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                },
                {
                  "internalType": "enum Swaps.TradeType",
                  "name": "tradeType",
                  "type": "uint8"
                }
              ],
              "internalType": "struct Swaps.UserTradeData",
              "name": "userTradeData1",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "tokenAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenValue",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "tokenId",
                  "type": "bytes32"
                },
                {
                  "internalType": "enum Swaps.Standard",
                  "name": "tokenStandard",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "accepted",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                },
                {
                  "internalType": "enum Swaps.TradeType",
                  "name": "tradeType",
                  "type": "uint8"
                }
              ],
              "internalType": "struct Swaps.UserTradeData",
              "name": "userTradeData2",
              "type": "tuple"
            },
            {
              "internalType": "enum Swaps.State",
              "name": "state",
              "type": "uint8"
            }
          ],
          "internalType": "struct Swaps.Trade",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getNbTrades",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"owned\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"noteHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"CreateNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"noteHash\",\"type\":\"bytes32\"}],\"name\":\"DestroyNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"holdId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"lockPreimage\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"ExecutedHold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"fromPartition\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"TransferByPartition\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"preimage\",\"type\":\"bytes32\"}],\"name\":\"acceptTrade\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"approveTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"preimage\",\"type\":\"bytes32\"}],\"name\":\"approveTradeWithPreimage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"interfaceHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"canImplementInterfaceForAddress\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"canReceive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"cancelTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"executeTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"preimage\",\"type\":\"bytes32\"}],\"name\":\"executeTradeWithPreimage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"forceTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"preimage\",\"type\":\"bytes32\"}],\"name\":\"forceTradeWithPreimage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNbTrades\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress2\",\"type\":\"address\"}],\"name\":\"getPriceOwnership\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress2\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId1\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId2\",\"type\":\"bytes32\"}],\"name\":\"getTokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getTrade\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"holder1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"holder2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"executer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"settlementDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"enum Swaps.Standard\",\"name\":\"tokenStandard\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"accepted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"},{\"internalType\":\"enum Swaps.TradeType\",\"name\":\"tradeType\",\"type\":\"uint8\"}],\"internalType\":\"struct Swaps.UserTradeData\",\"name\":\"userTradeData1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"enum Swaps.Standard\",\"name\":\"tokenStandard\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"accepted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"},{\"internalType\":\"enum Swaps.TradeType\",\"name\":\"tradeType\",\"type\":\"uint8\"}],\"internalType\":\"struct Swaps.UserTradeData\",\"name\":\"userTradeData2\",\"type\":\"tuple\"},{\"internalType\":\"enum Swaps.State\",\"name\":\"state\",\"type\":\"uint8\"}],\"internalType\":\"struct Swaps.Trade\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getTradeAcceptanceStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getTradeApprovalStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"priceOracles\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"holder1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"holder2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"executer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenValue1\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId1\",\"type\":\"bytes32\"},{\"internalType\":\"enum Swaps.Standard\",\"name\":\"tokenStandard1\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"tokenAddress2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenValue2\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId2\",\"type\":\"bytes32\"},{\"internalType\":\"enum Swaps.Standard\",\"name\":\"tokenStandard2\",\"type\":\"uint8\"},{\"internalType\":\"enum Swaps.TradeType\",\"name\":\"tradeType1\",\"type\":\"uint8\"},{\"internalType\":\"enum Swaps.TradeType\",\"name\":\"tradeType2\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"settlementDate\",\"type\":\"uint256\"}],\"internalType\":\"struct Swaps.TradeRequestInput\",\"name\":\"inputData\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"preimage\",\"type\":\"bytes32\"}],\"name\":\"requestTrade\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"oracles\",\"type\":\"address[]\"}],\"name\":\"setPriceOracles\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress2\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"priceOwnership\",\"type\":\"bool\"}],\"name\":\"setPriceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"operators\",\"type\":\"address[]\"}],\"name\":\"setTokenControllers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress2\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId1\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId2\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"setTokenPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"operators\",\"type\":\"address[]\"}],\"name\":\"setTradeExecuters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"}],\"name\":\"setVariablePriceStartDate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"tokenControllers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"partition\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"tokensReceived\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradeExecuters\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"variablePriceStartDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Delivery-Vs-Payment contract for investor-to-investor token trades.Intended usage: The purpose of the contract is to allow secure token transfers/exchanges between 2 stakeholders (called holder1 and holder2). From now on, an operation in the Swaps smart contract (transfer/exchange) is called a trade. Depending on the type of trade, one/multiple token transfers will be executed. The simplified workflow is the following: 1) A trade request is created in the Swaps smart contract, it specifies:  - The token holder(s) involved in the trade  - The trade executer (optional)  - An expiration date  - Details on the first token (address, requested amount, standard)  - Details on the second token (address, requested amount, standard)  - Whether the tokens need to be escrowed in the Swaps contract or not  - The current status of the trade (pending / executed / forced / cancelled) 2) The trade is accepted by both token holders 3) [OPTIONAL] The trade is approved by token controllers (only if requested by tokens controllers) 4) The trade is executed (either by the executer in case the executer is specified, or by anyone) STANDARD-AGNOSTIC: The Swaps smart contract is standard-agnostic, it supports ETH, ERC20, ERC721, ERC1400. The advantage of using an ERC1400 token is to leverages its hook property, thus requiring ONE single transaction (operatorTransferByPartition()) to send tokens to the Swaps smart contract instead of TWO with the ERC20 token standard (approve() + transferFrom()). OFF-CHAIN PAYMENT: The contract can be used as escrow contract while waiting for an off-chain payment. Once payment is received off-chain, the token sender realeases the tokens escrowed in the Swaps contract to deliver them to the recipient. ESCROW VS SWAP MODE: In case escrow mode is selected, tokens need to be escrowed in Swaps smart contract before the trade can occur. In case swap mode is selected, tokens are not escrowed in the Swaps. Instead, the Swaps contract is only allowed to transfer tokens ON BEHALF of their owners. When trade is executed, an atomic token swap occurs. EXPIRATION DATE: The trade can be cancelled by both parties in case expiration date is passed. CLAIMS: The executer has the ability to force or cancel the trade. In case of disagreement/missing payment, both parties can contact the \\\"executer\\\" of the trade to deposit a claim and solve the issue. MARKETPLACE: The contract can be used as a token marketplace. Indeed, when trades are created without specifying the recipient address, anyone can purchase them by sending the requested payment in exchange. PRICE ORACLES: When price oracles are defined, those can define the price at which trades need to be executed. This feature is particularly useful for assets with NAV (net asset value).\",\"events\":{\"ExecutedHold(address,bytes32,bytes32,address)\":{\"details\":\"Include token events so they can be parsed by Ethereum clients from the settlement transactions.\"}},\"kind\":\"dev\",\"methods\":{\"acceptTrade(uint256,bytes32)\":{\"details\":\"Accept a given trade (+ potentially escrow tokens).\",\"params\":{\"index\":\"Index of the trade to be accepted.\"}},\"approveTradeWithPreimage(uint256,bool,bytes32)\":{\"details\":\"Approve a trade (if the tokens involved in the trade are controlled) This function can only be called by a token controller of one of the tokens involved in the trade. Indeed, when a token smart contract is controlled by an owner, the owner can decide to open the secondary market by:  - Allowlisting the Swaps smart contract  - Setting \\\"token controllers\\\" in the Swaps smart contract, in order to approve all the trades made with his token\",\"params\":{\"approved\":\"'true' if trade is approved, 'false' if not.\",\"index\":\"Index of the trade to be executed.\"}},\"canReceive(bytes,bytes32,address,address,address,uint256,bytes,bytes)\":{\"details\":\"Indicate whether or not the Swaps contract can receive the tokens or not. [USED FOR ERC1400 TOKENS ONLY]\",\"params\":{\"data\":\"Information attached to the token transfer.\",\"operatorData\":\"Information attached to the Swaps transfer, by the operator.\"},\"returns\":{\"_0\":\"'true' if the Swaps contract can receive the tokens, 'false' if not.\"}},\"cancelTrade(uint256)\":{\"details\":\"Cancel a trade execution in the Swaps contract by transferring tokens back to their initial owners.\",\"params\":{\"index\":\"Index of the trade to be cancelled.\"}},\"constructor\":{\"details\":\"Initialize Swaps + register the contract implementation in ERC1820Registry.\"},\"executeTradeWithPreimage(uint256,bytes32)\":{\"details\":\"Execute a trade in the Swaps contract if possible (e.g. if tokens have been esccrowed, in case it is required). This function can only be called by the executer specified at trade creation. If no executer is specified, the trade can be launched by anyone.\",\"params\":{\"index\":\"Index of the trade to be executed.\"}},\"forceTradeWithPreimage(uint256,bytes32)\":{\"details\":\"Force a trade execution in the Swaps contract by transferring tokens back to their target recipients.\",\"params\":{\"index\":\"Index of the trade to be forced.\"}},\"getNbTrades()\":{\"details\":\"Get the total number of requests in the Swaps contract.\",\"returns\":{\"_0\":\"Total number of requests in the Swaps contract.\"}},\"getPrice(uint256)\":{\"details\":\"Get amount of token2 to pay to acquire the token1.\",\"params\":{\"index\":\"Index of the Swaps request.\"}},\"getPriceOwnership(address,address)\":{\"details\":\"Get price of the token.\",\"params\":{\"tokenAddress1\":\"Address of the token to be priced.\",\"tokenAddress2\":\"Address of the token to pay for token1.\"}},\"getTokenPrice(address,address,bytes32,bytes32)\":{\"details\":\"Get price of the token.\",\"params\":{\"tokenAddress1\":\"Address of the token to be priced.\",\"tokenAddress2\":\"Address of the token to pay for token1.\",\"tokenId1\":\"ID/partition of the token2 (set to 0 bytes32 if price is set for all IDs/partitions).\"}},\"getTrade(uint256)\":{\"details\":\"Get the trade.\",\"params\":{\"index\":\"Index of the trade.\"},\"returns\":{\"_0\":\"Trade.\"}},\"getTradeAcceptanceStatus(uint256)\":{\"details\":\"Verify if a trade has been accepted by the token holders. The trade needs to be accepted by both parties (token holders) before it gets executed.\",\"params\":{\"index\":\"Index of the trade to be accepted.\"}},\"getTradeApprovalStatus(uint256)\":{\"details\":\"Verify if a trade has been approved by the token controllers. In case a given token has token controllers, those need to validate the trade before it gets executed.\",\"params\":{\"index\":\"Index of the trade to be approved.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"priceOracles(address)\":{\"details\":\"Get the list of price oracles for a given token.\",\"params\":{\"tokenAddress\":\"Token address.\"},\"returns\":{\"_0\":\"List of addresses of all the price oracles for a given token.\"}},\"renounceOwnership()\":{\"details\":\"Renounce ownership of the contract.\"},\"requestTrade((address,address,address,uint256,address,uint256,bytes32,uint8,address,uint256,bytes32,uint8,uint8,uint8,uint256),bytes32)\":{\"details\":\"Create a new trade request in the Swaps smart contract.\",\"params\":{\"inputData\":\"The input for this function\"}},\"setPriceOracles(address,address[])\":{\"details\":\"Set list of price oracles for a given token.\",\"params\":{\"oracles\":\"Oracles addresses.\",\"tokenAddress\":\"Token address.\"}},\"setPriceOwnership(address,address,bool)\":{\"details\":\"Take ownership for setting the price of a token.\",\"params\":{\"tokenAddress1\":\"Address of the token to be priced.\",\"tokenAddress2\":\"Address of the token to pay for token1.\"}},\"setTokenControllers(address,address[])\":{\"details\":\"Set list of token controllers for a given token.\",\"params\":{\"operators\":\"Operators addresses.\",\"tokenAddress\":\"Token address.\"}},\"setTokenPrice(address,address,bytes32,bytes32,uint256)\":{\"details\":\"Set price of a token.\",\"params\":{\"newPrice\":\"New price of the token.\",\"tokenAddress1\":\"Address of the token to be priced.\",\"tokenAddress2\":\"Address of the token to pay for token1.\",\"tokenId1\":\"ID/partition of the token1 (set to 0 bytes32 if price is set for all IDs/partitions).\",\"tokenId2\":\"ID/partition of the token2 (set to 0 bytes32 if price is set for all IDs/partitions).\"}},\"setTradeExecuters(address[])\":{\"details\":\"Set list of trade executers for the Swaps contract.\",\"params\":{\"operators\":\"Trade executers addresses.\"}},\"setVariablePriceStartDate(address,uint256)\":{\"details\":\"Set date after which the token price can potentially be set by an oracle (0 if price can not be set by an oracle).\",\"params\":{\"startDate\":\"Date after which token price can potentially be set by an oracle (0 if price can not be set by an oracle).\",\"tokenAddress\":\"Token address.\"}},\"tokenControllers(address)\":{\"details\":\"Get the list of token controllers for a given token.\",\"params\":{\"tokenAddress\":\"Token address.\"},\"returns\":{\"_0\":\"List of addresses of all the token controllers for a given token.\"}},\"tokensReceived(bytes,bytes32,address,address,address,uint256,bytes,bytes)\":{\"details\":\"Hook function executed when tokens are sent to the Swaps contract. [USED FOR ERC1400 TOKENS ONLY]\",\"params\":{\"data\":\"Information attached to the token transfer.\",\"from\":\"Token holder.\",\"operatorData\":\"Information attached to the Swaps transfer, by the operator.\",\"partition\":\"Name of the partition.\",\"to\":\"Token recipient.\",\"value\":\"Number of tokens to transfer.\"}},\"tradeExecuters()\":{\"details\":\"Get the list of trade executers as defined by the Swaps contract.\",\"returns\":{\"_0\":\"List of addresses of all the trade executers.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"variablePriceStartDate(address)\":{\"details\":\"Get date after which the token price can potentially be set by an oracle (0 if price can not be set by an oracle).\",\"params\":{\"tokenAddress\":\"Token address.\"}}},\"title\":\"Swaps\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"canReceive(bytes,bytes32,address,address,address,uint256,bytes,bytes)\":{\"notice\":\"[ERC1400TokensRecipient INTERFACE (1/2)]\"},\"constructor\":{\"notice\":\"[Swaps CONSTRUCTOR]\"},\"tokensReceived(bytes,bytes32,address,address,address,uint256,bytes,bytes)\":{\"notice\":\"[ERC1400TokensRecipient INTERFACE (2/2)]\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/tools/Swaps.sol\":\"Swaps\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":0},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf101e8720213560fab41104d53b3cc7ba0456ef3a98455aa7f022391783144a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e7820bcf567e6892d937c3cb10db263a4042e446799bca602535868d822384e\",\"dweb:/ipfs/QmPG2oeDjKncqsEeyYGjAN7CwAJmMgHterXGGnpzhha4z7\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol\":{\"keccak256\":\"0xdf30b8f2bba82b86661928377f70ba4b68739a799f8bad36e542144811aa70d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21bd0454780574067a356fb6e2f312c742c6f6cd0ce1ff38cf7152ff62d75896\",\"dweb:/ipfs/QmUmojQcsT1B6tsVicqpv9keAjvXjuj9pJcvQgQ8Kvuumq\"]},\"project:/contracts/IERC1400.sol\":{\"keccak256\":\"0x068dca77537afdd3e7bfe1bdfa93db232c2d84b48b7c1a2b924fb68cf6479502\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4a3819432a4fc0e7da7b461e98c86beab4b7b47058a02f6871cbd74ea366de3f\",\"dweb:/ipfs/QmXSpFeYECHKh7aQbXPa7BczPEhjERxS9Dfof1XXW2BNiK\"]},\"project:/contracts/extensions/userExtensions/IERC1400TokensRecipient.sol\":{\"keccak256\":\"0x9aa77234a6a2ef6f39fe911f04c47287662373eee44e7e105615a56017683aea\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://023b9567bef57401d5690c1d9dea89f771095aab7499bc7ea8d17ac8eba40f7a\",\"dweb:/ipfs/QmZh8oQpLzYPNdrcRbYUrL9FuHmp6YsLJm1LA9tETz7fEs\"]},\"project:/contracts/interface/ERC1820Implementer.sol\":{\"keccak256\":\"0x73a779c5921dd13ed066e7f552c70650a7dc180259c7ae3ca737412c44f456f4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6ef9b2cd1dc82ba9a8a0174f3eb319ad4272ba88ece590245b1b226587c6c640\",\"dweb:/ipfs/QmVQ154bNWE8ZVtC9HFYEntAgxGj5KNamUSXmCGWjacebx\"]},\"project:/contracts/interface/HoldStatusCode.sol\":{\"keccak256\":\"0x6deb0acca580b9e9474d8dc953a759311c1f77876fa06cf672550970db0289a6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://603ba40c099b8affdd7a25a2922b7a13fe30a52d0922cc10d669723dac80de05\",\"dweb:/ipfs/QmWE3hHWtcJqaL1g2rU3ztTxwJMUJnMQS5ZdA2QvChpRo6\"]},\"project:/contracts/interface/IERC1643.sol\":{\"keccak256\":\"0xf742bf58825da4284363ab3571edb627777df9a6a20856b9cc8bbbf31205d1d8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://041f2b44632942ea03c0a8667d9f7db9dc7be058d7e31eb83f69501f7f1ee2b9\",\"dweb:/ipfs/Qmbik5bq1RKkGaqFcJ1aiL4pPjwgxPfRuH9D8tKNkqmyvJ\"]},\"project:/contracts/interface/IERC20HoldableToken.sol\":{\"keccak256\":\"0x8348bebc4695425ee6e0adbb79980ee226fbe410ccb4d46bca76d45214f123a1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://722d3a124137d7f819066ab36108fbcf54d77fd130e2069ae093e454af10fbc6\",\"dweb:/ipfs/QmNRgnDos5dW12tiW71g1h4JCQ7dqNxisXRjczEaNFb1Cp\"]},\"project:/contracts/interface/IHoldableERC1400TokenExtension.sol\":{\"keccak256\":\"0xc37ba418eac8f7eff956bc790514cd1cc04d2fedf5f69dcb91274ffcfca41b09\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://85c956f11c5748242815ebdfa315758d242641d97a34a9ddfdceed43cb0f8fac\",\"dweb:/ipfs/QmeCGZUzmrb3D4RNStwgrHRNAsVLy9kXppLdpq6fAkkGXN\"]},\"project:/contracts/tools/ERC1820Client.sol\":{\"keccak256\":\"0x00a2c91c981963733d6a6d56db442e1c763b0312aea8a8ea3129ee9d3f59ba5b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6479dc6c115e17cda4ccad06007c8c7684fc2ba85dd599c61169df5c25c8c759\",\"dweb:/ipfs/QmWtQNzvP3yst9H2mYBEmno99KBX3JAW2ppy6JtPoFc9cp\"]},\"project:/contracts/tools/Swaps.sol\":{\"keccak256\":\"0x4c047ef3d552509a30aae4a4228255d5dd16a546b25fe11e67db21a1ca4c337d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d64f1b4ac2e189f5b08ee4e10143b57229576fa384e51fd4d0dc9a60dbdb9f9e\",\"dweb:/ipfs/QmeSA88HECqnfck8HreFi6uiZqu8WrsS7nPDbL8mHHZGym\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620064e0380380620064e0833981016040819052620000349162000453565b6200003f3362000188565b6200007e6040518060400160405280601181526020017011195b1a5d995c9e559cd4185e5b595b9d607a1b815250620001d860201b62002c051760201c565b620000c96040518060400160405280601681526020017f45524331343030546f6b656e73526563697069656e7400000000000000000000815250620001d860201b62002c051760201c565b60408051808201909152601681527f45524331343030546f6b656e73526563697069656e7400000000000000000000602082015262000109903062000227565b6008805460ff191682151590811790915560ff161562000181576040805160018082528183019092526000916020808301908036833701905050905033816000815181106200015c576200015c620004e6565b6001600160a01b03909216602092830291909101909101526200017f81620002d5565b505b50620004fc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600180600083604051602001620001f091906200047e565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff191691151591909117905550565b6000826040516020016200023c91906200047e565b60408051808303601f190181529082905280516020909101206329965a1d60e01b8252306004830152602482018190526001600160a01b03841660448301529150731820a4b7618bde71dce8cdc73aab6c95905fad24906329965a1d90606401600060405180830381600087803b158015620002b757600080fd5b505af1158015620002cc573d6000803e3d6000fd5b50505050505050565b60005b60095481101562000348576000600a600060098481548110620002ff57620002ff620004e6565b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff1916911515919091179055806200033f81620004bc565b915050620002d8565b5060005b8151811015620003b8576001600a6000848481518110620003715762000371620004e6565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580620003af81620004bc565b9150506200034c565b508051620003ce906009906020840190620003d2565b5050565b8280548282559060005260206000209081019282156200042a579160200282015b828111156200042a57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620003f3565b50620004389291506200043c565b5090565b5b808211156200043857600081556001016200043d565b6000602082840312156200046657600080fd5b815180151581146200047757600080fd5b9392505050565b6000825160005b81811015620004a1576020818601810151858301520162000485565b81811115620004b1576000828501525b509190910192915050565b6000600019821415620004df57634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b615fd4806200050c6000396000f3fe6080604052600436106101735760003560e01c8063013745181461017857806301636f4e146101ae57806302d2838b146101d057806309ec6cc7146101f05780630baf41a6146102105780631af6649f14610230578063249cb3fa146102605780632cb437d81461028e5780632db25e05146102ae57806330f97699146102db578063353414641461031157806345a06cb21461033157806351965a8314610346578063582dcd1314610359578063587274671461037957806361108c06146103995780636775ce04146103b9578063715018a6146103d9578063759561fa146103ee5780638595240b1461040e57806389a0c9e7146104655780638da5cb5b14610478578063935259a8146104a5578063a22ae631146104c5578063c9adffe2146104e5578063d95b585e14610505578063e757223014610525578063ebbca40714610545578063ec96dfb41461055a578063f2fde38b1461057a578063f464b5761461059a578063f55886df146105ba575b600080fd5b34801561018457600080fd5b506101986101933660046152e1565b6105da565b6040516101a59190615a43565b60405180910390f35b3480156101ba57600080fd5b506101ce6101c9366004615436565b610650565b005b3480156101dc57600080fd5b506101ce6101eb3660046158b8565b6107d3565b3480156101fc57600080fd5b506101ce61020b3660046158b8565b6107e1565b34801561021c57600080fd5b506101ce61022b366004615354565b610b4c565b34801561023c57600080fd5b5061025061024b36600461531b565b610bae565b60405190151581526020016101a5565b34801561026c57600080fd5b5061028061027b36600461552d565b610bde565b6040519081526020016101a5565b34801561029a57600080fd5b506101ce6102a93660046158f6565b610c3d565b3480156102ba57600080fd5b506102ce6102c93660046158b8565b610e26565b6040516101a59190615d16565b3480156102e757600080fd5b506102806102f63660046152e1565b6001600160a01b03166000908152600d602052604090205490565b34801561031d57600080fd5b5061025061032c3660046158b8565b61104b565b34801561033d57600080fd5b50610198611242565b6101ce61035436600461592e565b6112a4565b34801561036557600080fd5b506101ce61037436600461592e565b6112b6565b34801561038557600080fd5b506101ce6103943660046153e5565b6114fd565b3480156103a557600080fd5b506101ce6103b43660046158b8565b611709565b3480156103c557600080fd5b506101ce6103d43660046158d1565b611714565b3480156103e557600080fd5b506101ce611720565b3480156103fa57600080fd5b506101986104093660046152e1565b611763565b34801561041a57600080fd5b5061028061042936600461539f565b6001600160a01b039384166000908152600760209081526040808320959096168252938452848120928152918352838220908252909152205490565b6101ce610473366004615886565b6117d7565b34801561048457600080fd5b5061048d6119af565b6040516001600160a01b0390911681526020016101a5565b3480156104b157600080fd5b506102506104c03660046158b8565b6119be565b3480156104d157600080fd5b506101ce6104e03660046154b6565b611a5b565b3480156104f157600080fd5b506101ce61050036600461548a565b611b16565b34801561051157600080fd5b506101ce61052036600461592e565b611bd8565b34801561053157600080fd5b506102806105403660046158b8565b611f34565b34801561055157600080fd5b50600254610280565b34801561056657600080fd5b506101ce610575366004615436565b612473565b34801561058657600080fd5b506101ce6105953660046152e1565b6126c9565b3480156105a657600080fd5b506101ce6105b53660046156c3565b612766565b3480156105c657600080fd5b506102506105d53660046155e1565b612b80565b6001600160a01b03811660009081526004602090815260409182902080548351818402810184019094528084526060939283018282801561064457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610626575b50505050509050919050565b8261065b8133612c52565b6106805760405162461bcd60e51b815260040161067790615bf5565b60405180910390fd5b60005b6001600160a01b038516600090815260046020526040902054811015610720576001600160a01b0385166000908152600560209081526040808320600490925282208054839190859081106106da576106da615e7f565b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff19169115159190911790558061071881615e38565b915050610683565b5060005b828110156107a8576001600160a01b038516600090815260056020526040812060019186868581811061075957610759615e7f565b905060200201602081019061076e91906152e1565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055806107a081615e38565b915050610724565b506001600160a01b03841660009081526004602052604090206107cc908484615035565b5050505050565b6107de8160006112b6565b50565b60008181526003602052604090206001600d82015460ff16600481111561080a5761080a615e69565b146108275760405162461bcd60e51b815260040161067790615c76565b60068101546008820154600a830154600c84015460ff61010093849004811693909104168280156108555750805b156109625760028501546001600160a01b03163314806108a35750846003015442101580156108a3575084546001600160a01b03163314806108a3575060018501546001600160a01b031633145b6108ef5760405162461bcd60e51b81526020600482015260296024820152600080516020615f3f83398151915260448201526874726164652028302960b81b6064820152608401610677565b600260088601546301000000900460ff16600281111561091157610911615e69565b14156109265761092686600086600182612d0f565b6002600c8601546301000000900460ff16600281111561094857610948615e69565b141561095d5761095d86600184816000612d0f565b610b2d565b8215610a1e5760028501546001600160a01b031633148061099b57508460030154421015801561099b575084546001600160a01b031633145b6109e75760405162461bcd60e51b81526020600482015260296024820152600080516020615f3f83398151915260448201526874726164652028312960b81b6064820152608401610677565b600260088601546301000000900460ff166002811115610a0957610a09615e69565b141561095d5761095d86600086600182612d0f565b8015610aa65760028501546001600160a01b0316331480610a5a575084600301544210158015610a5a575060018501546001600160a01b031633145b6109265760405162461bcd60e51b81526020600482015260296024820152600080516020615f3f83398151915260448201526874726164652028322960b81b6064820152608401610677565b60028501546001600160a01b0316331480610aca575084546001600160a01b031633145b80610ae1575060018501546001600160a01b031633145b610b2d5760405162461bcd60e51b81526020600482015260296024820152600080516020615f3f83398151915260448201526874726164652028332960b81b6064820152608401610677565b600d850180546004919060ff19166001835b0217905550505050505050565b82610b578133612c52565b610b735760405162461bcd60e51b815260040161067790615bf5565b506001600160a01b03928316600090815260066020908152604080832094909516825292909252919020805460ff1916911515919091179055565b6001600160a01b0380831660009081526006602090815260408083209385168352929052205460ff165b92915050565b60008281526001602052604081205460ff1615610c355760405173455243313832305f4143434550545f4d4147494360601b6020820152603401604051602081830303815290604052805190602001209050610bd8565b506000610bd8565b60008381526003602052604090206001600d82015460ff166004811115610c6657610c66615e69565b14610c835760405162461bcd60e51b815260040161067790615c76565b60058101546001600160a01b03166000908152600c6020908152604080832033845290915290205460ff1680610ce0575060098101546001600160a01b03166000908152600c6020908152604080832033845290915290205460ff165b610d525760405162461bcd60e51b815260206004820152603d60248201527f4f6e6c7920746f6b656e20636f6e74726f6c6c657273206f6620696e766f6c7660448201527f656420746f6b656e732063616e20617070726f766520612074726164650000006064820152608401610677565b60058101546001600160a01b03166000908152600c6020908152604080832033845290915290205460ff1615610d9a5760088101805462ff0000191662010000851515021790555b60098101546001600160a01b03166000908152600c6020908152604080832033845290915290205460ff1615610de257600c8101805462ff0000191662010000851515021790555b60028101546001600160a01b0316158015610e015750610e018461104b565b8015610e115750610e11846119be565b15610e2057610e208483612e47565b50505050565b610e2e615098565b60008281526003602081815260409283902083516101008101855281546001600160a01b03908116825260018301548116828501526002830154811682870152938201546060808301919091526004808401546080840152865160e0810188526005850180549097168152600685015495810195909552600784015496850196909652600883015492959194869460a08701949093919284019160ff90911690811115610edd57610edd615e69565b6004811115610eee57610eee615e69565b8152600382015460ff61010082048116151560208401526201000082048116151560408401526060909201916301000000909104166002811115610f3457610f34615e69565b6002811115610f4557610f45615e69565b90525081526040805160e0810182526009840180546001600160a01b03168252600a850154602083810191909152600b86015493830193909352600c85015492909301929091606083019060ff166004811115610fa457610fa4615e69565b6004811115610fb557610fb5615e69565b8152600382015460ff61010082048116151560208401526201000082048116151560408401526060909201916301000000909104166002811115610ffb57610ffb615e69565b600281111561100c5761100c615e69565b9052508152600d82015460209091019060ff16600481111561103057611030615e69565b600481111561104157611041615e69565b9052509392505050565b60008181526003602052604081206001600d82015460ff16600481111561107457611074615e69565b141561121957600060088201546301000000900460ff16600281111561109c5761109c615e69565b148015611172575080546040805160e0810182526005840180546001600160a01b039081168352600686015460208401526007860154938301939093526008850154611170949390931692606083019060ff16600481111561110057611100615e69565b600481111561111157611111615e69565b8152600382015460ff6101008204811615156020840152620100008204811615156040840152606090920191630100000090910416600281111561115757611157615e69565b600281111561116857611168615e69565b905250612fa0565b155b156111805750600092915050565b6000600c8201546301000000900460ff1660028111156111a2576111a2615e69565b14801561120b575060018101546040805160e0810182526009840180546001600160a01b039081168352600a8601546020840152600b86015493830193909352600c850154611209949390931692606083019060ff16600481111561110057611100615e69565b155b156112195750600092915050565b6008810154610100900460ff16801561123b5750600c810154610100900460ff165b9392505050565b6060600980548060200260200160405190810160405280929190818152602001828054801561129a57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161127c575b5050505050905090565b6112b282333460008561316f565b5050565b60008281526003602052604090206001600d82015460ff1660048111156112df576112df615e69565b146112fc5760405162461bcd60e51b815260040161067790615c76565b60028101546001600160a01b0316156113935760028101546001600160a01b03163314611393576040805162461bcd60e51b81526020600482015260248101919091527f54726164652063616e206f6e6c7920626520657865637574656420627920657860448201527f65637574657220646566696e6564206174207472616465206372656174696f6e6064820152608401610677565b80600401544210156114065760405162461bcd60e51b815260206004820152603660248201527f54726164652063616e206f6e6c79206265206578656375746564206f6e206f7260448201527520616674657220736574746c656d656e74206461746560501b6064820152608401610677565b61140f8361104b565b6114785760405162461bcd60e51b815260206004820152603460248201527f547261646520686173206e6f74206265656e20616363657074656420627920616044820152731b1b081d1bdad95b881a1bdb19195c9cc81e595d60621b6064820152608401610677565b611481836119be565b6114ee5760405162461bcd60e51b815260206004820152603860248201527f547261646520686173206e6f74206265656e20617070726f76656420627920616044820152771b1b081d1bdad95b8818dbdb9d1c9bdb1b195c9cc81e595d60421b6064820152608401610677565b6114f88383612e47565b505050565b6001600160a01b0380861660009081526006602090815260408083209388168352929052205460ff16801561155757506001600160a01b0380851660009081526006602090815260408083209389168352929052205460ff165b156115745760405162461bcd60e51b815260040161067790615bbe565b6001600160a01b0380861660009081526006602090815260408083209388168352929052205460ff1615611604576115ac8533612c52565b6115ff5760405162461bcd60e51b81526020600482015260306024820152600080516020615f1f83398151915260448201526f72207468697320746f6b656e2028312960801b6064820152608401610677565b6116cc565b6001600160a01b0380851660009081526006602090815260408083209389168352929052205460ff161561168f5761163c8433612c52565b6115ff5760405162461bcd60e51b81526020600482015260306024820152600080516020615f1f83398151915260448201526f72207468697320746f6b656e2028322960801b6064820152608401610677565b60405162461bcd60e51b815260206004820152601260248201527104e6f207072696365206f776e6572736869760741b6044820152606401610677565b6001600160a01b03948516600090815260076020908152604080832096909716825294855285812093815292845284832091835292529190912055565b6107de816000611bd8565b6112b282826000610c3d565b336117296119af565b6001600160a01b03161461174f5760405162461bcd60e51b815260040161067790615b52565b611757613a8a565b6008805460ff19169055565b6001600160a01b0381166000908152600b6020908152604091829020805483518184028101840190945280845260609392830182828015610644576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116106265750505050509050919050565b61194e6117e760208401846152e1565b6117f760408501602086016152e1565b61180760608601604087016152e1565b8560600135866101c001356040518060e0016040528089608001602081019061183091906152e1565b6001600160a01b0316815260a08a0135602082015260c08a013560408201526060016118636101008b0160e08c016157a2565b600481111561187457611874615e69565b815260006020820181905260408201526060016118996101a08b016101808c016157c3565b60028111156118aa576118aa615e69565b90526040805160e08101909152806118ca6101208c016101008d016152e1565b6001600160a01b031681526101208b013560208201526101408b013560408201526060016119006101808c016101608d016157a2565b600481111561191157611911615e69565b815260006020820181905260408201526060016119366101c08c016101a08d016157c3565b600281111561194757611947615e69565b9052613ac5565b61195b60208301836152e1565b6001600160a01b0316336001600160a01b0316148061199a575061198560408301602084016152e1565b6001600160a01b0316336001600160a01b0316145b156112b2576112b2600254333460008561316f565b6000546001600160a01b031690565b600081815260036020908152604080832060058101546001600160a01b03168452600b90925282205415801590611a005750600881015462010000900460ff16155b15611a0e5750600092915050565b60098101546001600160a01b03166000908152600b602052604090205415801590611a445750600c81015462010000900460ff16155b15611a525750600092915050565b50600192915050565b33611a646119af565b6001600160a01b031614611a8a5760405162461bcd60e51b815260040161067790615b52565b60085460ff16611ada5760405162461bcd60e51b815260206004820152601b60248201527a14ddd85c1cc818dbdb9d1c9858dd081a5cc81b9bdd081bdddb9959602a1b6044820152606401610677565b6112b282828080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061407592505050565b81611b218133612c52565b611b3d5760405162461bcd60e51b815260040161067790615bf5565b611b4a62093a8042615d9c565b821180611b55575081155b611bbb5760405162461bcd60e51b815260206004820152603160248201527f53746172742064617465206e6565647320746f20626520736574206174206c656044820152706173742061207765656b206265666f726560781b6064820152608401610677565b506001600160a01b039091166000908152600d6020526040902055565b60008281526003602052604090206001600d82015460ff166004811115611c0157611c01615e69565b14611c1e5760405162461bcd60e51b815260040161067790615c76565b6005810154600682015460088301546009840154600a850154600c8601546001600160a01b039586169560ff61010095869004811695949091169390910416838015611c675750805b15611cb15760405162461bcd60e51b815260206004820152601a602482015279195e1958dd5d19551c9859194818d85b8818994818d85b1b195960321b6044820152606401610677565b6001600160a01b0386166000908152600b6020526040902054158015611ced57506001600160a01b0383166000908152600b6020526040902054155b611d545760405162461bcd60e51b815260206004820152603260248201527f54726164652063616e206e6f7420626520666f7263656420696620746f6b656e60448201527173206861766520636f6e74726f6c6c65727360701b6064820152608401610677565b60028701546001600160a01b031615611dc75760028701546001600160a01b03163314611dc25760405162461bcd60e51b81526020600482015260286024820152600080516020615f7f833981519152604482015267726164652028302960c01b6064820152608401610677565b611eef565b8315611e255786546001600160a01b03163314611dc25760405162461bcd60e51b81526020600482015260286024820152600080516020615f7f833981519152604482015267726164652028312960c01b6064820152608401610677565b8015611e865760018701546001600160a01b03163314611dc25760405162461bcd60e51b81526020600482015260286024820152600080516020615f7f833981519152604482015267726164652028322960c01b6064820152608401610677565b60405162461bcd60e51b815260206004820152603860248201527f54726164652063616e277420626520666f7263656420617320746f6b656e732060448201527730b932903737ba1030bb30b4b630b136329039b7903330b960411b6064820152608401610677565b8315611f0457611f048960008760008c612d0f565b8015611f1957611f198960018460008c612d0f565b50505050600d92909201805460ff1916600317905550505050565b6000818152600360209081526040808320600581015460068083015460078401546009850154600a860154600b8701546001600160a01b03968716808c52958a52888b2096909216808b529590985295882054949692959194909392919060ff168015611fc657506001600160a01b038084166000908152600660209081526040808320938a168352929052205460ff165b15611fe35760405162461bcd60e51b815260040161067790615bbe565b6001600160a01b0386166000908152600d6020526040902054158061201f57506001600160a01b0386166000908152600d602052604090205442105b156120305750979650505050505050565b6001600160a01b0380871660009081526006602090815260408083209387168352929052205460ff168061208957506001600160a01b038084166000908152600660209081526040808320938a168352929052205460ff165b15612467576001600160a01b038087166000908152600760209081526040808320938716835292815282822087835281528282208483529052205415612116576001600160a01b03808716600090815260076020908152604080832093871683529281528282208783528152828220848352905220546121099086615dd6565b9998505050505050505050565b6001600160a01b038084166000908152600760209081526040808320938a16835292815282822084835281528282208783529052205415612191576001600160a01b038084166000908152600760209081526040808320938a1683529281528282208483528152828220878352905220546121099086615db4565b6001600160a01b03808716600090815260076020908152604080832093871683529281528282208783528152828220828052905220541561220c576001600160a01b03808716600090815260076020908152604080832093871683529281528282208783528152828220828052905220546121099086615dd6565b6001600160a01b038084166000908152600760209081526040808320938a16835292815282822082805281528282208783529052205415612287576001600160a01b038084166000908152600760209081526040808320938a1683529281528282208280528152828220878352905220546121099086615db4565b6001600160a01b038087166000908152600760209081526040808320938716835292815282822082805281528282208483529052205415612302576001600160a01b03808716600090815260076020908152604080832093871683529281528282208280528152828220848352905220546121099086615dd6565b6001600160a01b038084166000908152600760209081526040808320938a1683529281528282208483528152828220828052905220541561237d576001600160a01b038084166000908152600760209081526040808320938a1683529281528282208483528152828220828052905220546121099086615db4565b6001600160a01b0380871660009081526007602090815260408083209387168352928152828220828052815282822090522054156123f2576001600160a01b03808716600090815260076020908152604080832093871683529281528282208280528152828220905220546121099086615dd6565b6001600160a01b038084166000908152600760209081526040808320938a16835292815282822082805281528282209052205415612467576001600160a01b038084166000908152600760209081526040808320938a1683529281528282208280528152828220905220546121099086615db4565b50979650505050505050565b82806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156124ad57600080fd5b505afa1580156124c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124e591906152fe565b6001600160a01b0316336001600160a01b0316148061252757506001600160a01b0381166000908152600c6020908152604080832033845290915290205460ff165b61257d5760405162461bcd60e51b815260206004820152602160248201527f53656e646572206973206e6f74206120746f6b656e20636f6e74726f6c6c65726044820152601760f91b6064820152608401610677565b60005b6001600160a01b0385166000908152600b602052604090205481101561261d576001600160a01b0385166000908152600c60209081526040808320600b90925282208054839190859081106125d7576125d7615e7f565b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff19169115159190911790558061261581615e38565b915050612580565b5060005b828110156126a5576001600160a01b0385166000908152600c6020526040812060019186868581811061265657612656615e7f565b905060200201602081019061266b91906152e1565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790558061269d81615e38565b915050612621565b506001600160a01b0384166000908152600b602052604090206107cc908484615035565b336126d26119af565b6001600160a01b0316146126f85760405162461bcd60e51b815260040161067790615b52565b6001600160a01b03811661275d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610677565b6107de8161415e565b336001600160a01b031661279e336040518060400160405280600c81526020016b22a921989a18182a37b5b2b760a11b8152506141ae565b6001600160a01b0316146127d95760405162461bcd60e51b8152602060048201526002602482015261353560f01b6044820152606401610677565b6001600160a01b03851630146128165760405162461bcd60e51b8152602060048201526002602482015261035360f41b6044820152606401610677565b6128568383838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061426b92505050565b6128875760405162461bcd60e51b8152602060048201526002602482015261353760f01b6044820152606401610677565b6000612894846020015190565b9050600080516020615f5f83398151915281141561292957604084810151606080870151608088015160a0890151855160e081018752338152602081018c90529586018f905293949193909290916000918101600481526001602082015260006040820152606001600290529050600061290d8a61432c565b905061291e8d878787878787613ac5565b505050505050612b73565b600080516020615edf833981519152811415612b73576040840151845160009060601415612958575060608501515b600082815260036020526040812080549091906001600160a01b038c8116911614612986578160090161298b565b816005015b6040805160e08101825282546001600160a01b03168152600183015460208201526002830154918101919091526003820154909190606083019060ff1660048111156129d9576129d9615e69565b60048111156129ea576129ea615e69565b8152600382015460ff61010082048116151560208401526201000082048116151560408401526060909201916301000000909104166002811115612a3057612a30615e69565b6002811115612a4157612a41615e69565b90525080519091506001600160a01b03163314612a935760405162461bcd60e51b815260206004820152601060248201526f15dc9bdb99c81d1bdad95b881cd95b9d60821b6044820152606401610677565b80604001518d14612af15760405162461bcd60e51b815260206004820152602260248201527f546f6b656e73206f66207468652077726f6e6720706172746974696f6e2073656044820152611b9d60f21b6064820152608401610677565b80606001516004811115612b0757612b07615e69565b600414612b605760405162461bcd60e51b815260206004820152602160248201527f546f6b656e73206f66207468652077726f6e67207374616e646172642073656e6044820152601d60fa1b6064820152608401610677565b612b6e848c60008c8761316f565b505050505b5050505050505050505050565b6000612bf585858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8901819004810282018101909252878152925087915086908190840183828082843760009201919091525061426b92505050565b9c9b505050505050505050505050565b600180600083604051602001612c1b91906159ea565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff191691151591909117905550565b6001600160a01b03808316600090815260056020908152604080832093851683529290529081205460ff168061123b5750826001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015612cbc57600080fd5b505afa158015612cd0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cf491906152fe565b6001600160a01b0316826001600160a01b0316149392505050565b60008581526003602052604081209080866001811115612d3157612d31615e69565b14612d3f5781600901612d44565b816005015b6040805160e08101825282546001600160a01b03168152600183015460208201526002830154918101919091526003820154909190606083019060ff166004811115612d9257612d92615e69565b6004811115612da357612da3615e69565b8152600382015460ff61010082048116151560208401526201000082048116151560408401526060909201916301000000909104166002811115612de957612de9615e69565b6002811115612dfa57612dfa615e69565b90525060c08101519091506001816002811115612e1957612e19615e69565b1415612e3157612e2c88888888886143c0565b612e3d565b612e3d88888888614638565b5050505050505050565b600082815260036020526040812090612e5f84611f34565b6006830154600a8401549192509080831415612e9857612e8486600084600089612d0f565b612e9386600183600089612d0f565b612f8a565b808311158015612ec857506001600c8501546301000000900460ff166002811115612ec557612ec5615e69565b14155b612f2c5760405162461bcd60e51b815260206004820152602f60248201527f507269636520697320686967686572207468616e20616d6f756e74206573637260448201526e1bddd9590bd85d5d1a1bdc9a5e9959608a1b6064820152608401610677565b612f3b86600084600089612d0f565b612f4a86600185600089612d0f565b6002600c8501546301000000900460ff166002811115612f6c57612f6c615e69565b1415612f8a57612f8a866001612f828685615df5565b600189612d0f565b600d840180546002919060ff1916600183610b3f565b80516020820151604083015160608401516000939291906002816004811115612fcb57612fcb615e69565b141561306157604051636eb1769f60e11b81526001600160a01b03888116600483015230602483015284919086169063dd62ed3e906044015b60206040518083038186803b15801561301c57600080fd5b505afa158015613030573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130549190615514565b1015945050505050610bd8565b600381600481111561307557613075615e69565b141561310a5760405163020604bf60e21b81526004810183905230906001600160a01b0386169063081812fc9060240160206040518083038186803b1580156130bd57600080fd5b505afa1580156130d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130f591906152fe565b6001600160a01b031614945050505050610bd8565b600481600481111561311e5761311e615e69565b141561316257604051630bf641e560e11b8152600481018390526001600160a01b0388811660248301523060448301528491908616906317ec83ca90606401613004565b5060019695505050505050565b60008581526003602052604090206001600d82015460ff16600481111561319857613198615e69565b146131b55760405162461bcd60e51b815260040161067790615c76565b80546000906001600160a01b03878116911614156131e1575060018101546001600160a01b03166132a2565b60018201546001600160a01b038781169116141561320a575080546001600160a01b03166132a2565b60018201546001600160a01b031661324757506001810180546001600160a01b0319166001600160a01b03878116919091179091558154166132a2565b60405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79207265676973746572656420686f6c646572732063616e20616363656044820152697074206120747261646560b01b6064820152608401610677565b81546000906001600160a01b038881169116146132c257826009016132c7565b826005015b6040805160e08101825282546001600160a01b03168152600183015460208201526002830154918101919091526003820154909190606083019060ff16600481111561331557613315615e69565b600481111561332657613326615e69565b8152600382015460ff6101008204811615156020840152620100008204811615156040840152606090920191630100000090910416600281111561336c5761336c615e69565b600281111561337d5761337d615e69565b8152505090508060800151156133e15760405162461bcd60e51b8152602060048201526024808201527f547261646520616c72656164792061636365707465642062792074686520686f604482015263363232b960e11b6064820152608401610677565b60028160c0015160028111156133f9576133f9615e69565b141561374a5760018160600151600481111561341757613417615e69565b1415613474578060200151861461346f5760405162461bcd60e51b815260206004820152601c60248201527b105b5bdd5b9d081bd988115512081a5cc81b9bdd0818dbdc9c9958dd60221b6044820152606401610677565b61385a565b60028160600151600481111561348c5761348c615e69565b141561352057805160208201516040516323b872dd60e01b81526001600160a01b03909216916323b872dd916134c8918b913091600401615a06565b602060405180830381600087803b1580156134e257600080fd5b505af11580156134f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061351a91906154f7565b5061385a565b60038160600151600481111561353857613538615e69565b14156135ab57805160408083015190516323b872dd60e01b81526001600160a01b03909216916323b872dd91613574918b913091600401615a06565b600060405180830381600087803b15801561358e57600080fd5b505af11580156135a2573d6000803e3d6000fd5b5050505061385a565b6004816060015160048111156135c3576135c3615e69565b1480156135ce575084155b156136be5780600001516001600160a01b0316638c0dee9c826040015189308560200151600080516020615eff83398151915260001b60405160200161361691815260200190565b60408051808303601f19018152828252600080516020615eff833981519152602084015291016040516020818303038152906040526040518763ffffffff1660e01b815260040161366c96959493929190615a90565b602060405180830381600087803b15801561368657600080fd5b505af115801561369a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061351a9190615514565b6004816060015160048111156136d6576136d6615e69565b1480156136e257508415155b1561346f578060200151851461346f5760405162461bcd60e51b815260206004820152602760248201527f416d6f756e74206f66204552433134303020746f6b656e73206973206e6f742060448201526618dbdc9c9958dd60ca1b6064820152608401610677565b60018160c00151600281111561376257613762615e69565b14156137df576137738783836149f2565b61346f5760405162461bcd60e51b815260206004820152603760248201527f486f6c64206e6565647320746f2062652070726f766964656420696e20746f6b604482015276195b881cdb585c9d0818dbdb9d1c9858dd08199a5c9cdd604a1b6064820152608401610677565b6137e98782612fa0565b61385a5760405162461bcd60e51b815260206004820152603c60248201527f416c6c6f77616e6365206e6565647320746f2062652070726f7669646564206960448201527b1b881d1bdad95b881cdb585c9d0818dbdb9d1c9858dd08199a5c9cdd60221b6064820152608401610677565b82546001600160a01b03888116911614156138855760088301805461ff001916610100179055613897565b600c8301805461ff0019166101001790555b600483015442101560006138aa8a6119be565b90508180156138c4575060028501546001600160a01b0316155b80156138ef5750600160088601546301000000900460ff1660028111156138ed576138ed615e69565b145b801561391a57506001600c8601546301000000900460ff16600281111561391857613918615e69565b145b80156139235750805b15613a3e5784546000906001600160a01b038b8116911614613948578560050161394d565b856009015b6040805160e08101825282546001600160a01b03168152600183015460208201526002830154918101919091526003820154909190606083019060ff16600481111561399b5761399b615e69565b60048111156139ac576139ac615e69565b8152600382015460ff610100820481161515602084015262010000820481161515604084015260609092019163010000009091041660028111156139f2576139f2615e69565b6002811115613a0357613a03615e69565b9052509050613a13858b836149f2565b15613a3c5760088601805461010061ff00199182168117909255600c8801805490911690911790555b505b60028501546001600160a01b0316158015613a5d5750613a5d8a61104b565b8015613a665750805b8015613a6f5750815b15613a7e57613a7e8a87612e47565b50505050505050505050565b33613a936119af565b6001600160a01b031614613ab95760405162461bcd60e51b815260040161067790615b52565b613ac3600061415e565b565b600182606001516004811115613add57613add615e69565b1415613b185760028260c001516002811115613afb57613afb615e69565b14613b185760405162461bcd60e51b815260040161067790615adb565b600181606001516004811115613b3057613b30615e69565b1415613b6b5760028160c001516002811115613b4e57613b4e615e69565b14613b6b5760405162461bcd60e51b815260040161067790615adb565b60018260c001516002811115613b8357613b83615e69565b1415613bff57600282606001516004811115613ba157613ba1615e69565b1480613bc25750600482606001516004811115613bc057613bc0615e69565b145b613bde5760405162461bcd60e51b815260040161067790615c2c565b6040820151613bff5760405162461bcd60e51b815260040161067790615ce9565b60018160c001516002811115613c1757613c17615e69565b1415613c9357600281606001516004811115613c3557613c35615e69565b1480613c565750600481606001516004811115613c5457613c54615e69565b145b613c725760405162461bcd60e51b815260040161067790615c2c565b6040810151613c935760405162461bcd60e51b815260040161067790615ce9565b60085460ff1615613d3a576001600160a01b0385166000908152600a602052604090205460ff16613d3a5760405162461bcd60e51b815260206004820152604560248201527f5472616465206578656375746572206e6565647320746f2062656c6f6e67207460448201527f6f20746865206c697374206f6620616c6c6f7765642074726164652065786563606482015264757465727360d81b608482015260a401610677565b6001600160a01b038716613da95760405162461bcd60e51b815260206004820152603060248201527f412074726164652063616e206e6f74206265206372656174656420776974682060448201526f746865207a65726f206164647265737360801b6064820152608401610677565b60028054906000613db983615e38565b91905055506000428511613dd957613dd462278d0042615d9c565b613ddb565b845b9050604051806101000160405280896001600160a01b03168152602001886001600160a01b03168152602001876001600160a01b0316815260200182815260200185815260200184815260200183815260200160016004811115613e4157613e41615e69565b905260028054600090815260036020818152604092839020855181546001600160a01b039182166001600160a01b03199182161783558784015160018085018054928516928416929092179091558887015197840180549884169883169890981790975560608089015195840195909555608088015160048085019190915560a089015180516005860180549190951693169290921783559381015160068401559485015160078301559284015160088201805492969193909260ff191691908490811115613f1257613f12615e69565b0217905550608082015160038201805460a08501511515620100000262ff000019931515610100029390931662ffff0019909116179190911780825560c0840151919063ff00000019166301000000836002811115613f7357613f73615e69565b0217905550505060c082015180516009830180546001600160a01b0319166001600160a01b039092169190911781556020820151600a8401556040820151600b8401556060820151600c8401805460ff19166001836004811115613fd957613fd9615e69565b0217905550608082015160038201805460a08501511515620100000262ff000019931515610100029390931662ffff0019909116179190911780825560c0840151919063ff0000001916630100000083600281111561403a5761403a615e69565b0217905550505060e0820151600d8201805460ff1916600183600481111561406457614064615e69565b021790555050505050505050505050565b60005b6009548110156140e1576000600a60006009848154811061409b5761409b615e7f565b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff1916911515919091179055806140d981615e38565b915050614078565b5060005b815181101561414a576001600a600084848151811061410657614106615e7f565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061414281615e38565b9150506140e5565b5080516112b2906009906020840190615103565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080826040516020016141c291906159ea565b60408051601f1981840301815290829052805160209091012063555ddc6560e11b82529150731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca906142139087908590600401615a2a565b60206040518083038186803b15801561422b57600080fd5b505afa15801561423f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061426391906152fe565b949350505050565b600081516000141561427f57506000610bd8565b600061428c846020015190565b905083516101401480156142ad5750600080516020615f5f83398151915281145b156142bc576001915050610bd8565b8351604014806142cd575083516060145b80156142e65750600080516020615edf83398151915281145b156142f5576001915050610bd8565b835160201480156143135750600080516020615eff83398151915281145b15614322576001915050610bd8565b6000915050610bd8565b614334615158565b60c082015160e0808401516101008501516101208601516101408701516040805195860181526001600160a01b03871686526020860185905285018390529293919290916060810183600481111561438e5761438e615e69565b815260006020820181905260408201526060018260028111156143b3576143b3615e69565b9052979650505050505050565b600085815260036020526040812090808660018111156143e2576143e2615e69565b146143fa5760018201546001600160a01b0316614406565b81546001600160a01b03165b905060008087600181111561441d5761441d615e69565b146144325782546001600160a01b0316614441565b60018301546001600160a01b03165b905060008088600181111561445857614458615e69565b14614466578360090161446b565b836005015b6040805160e08101825282546001600160a01b03168152600183015460208201526002830154918101919091526003820154909190606083019060ff1660048111156144b9576144b9615e69565b60048111156144ca576144ca615e69565b8152600382015460ff6101008204811615156020840152620100008204811615156040840152606090920191630100000090910416600281111561451057614510615e69565b600281111561452157614521615e69565b815250509050836003015442111561454b5760405162461bcd60e51b815260040161067790615b21565b805160408201516060830151600281600481111561456b5761456b615e69565b14806145885750600481600481111561458657614586615e69565b145b6145d45760405162461bcd60e51b815260206004820152601f60248201527f546f6b656e207374616e64617264206d75737420626520686f6c6461626c65006044820152606401610677565b6145df8686866149f2565b61461d5760405162461bcd60e51b815260206004820152600f60248201526e121bdb19081b5d5cdd08195e1a5cdd608a1b6044820152606401610677565b61462a8383838b89614d4f565b505050505050505050505050565b6000848152600360205260408120908085600181111561465a5761465a615e69565b146146725760018201546001600160a01b031661467e565b81546001600160a01b03165b905060008086600181111561469557614695615e69565b146146aa5782546001600160a01b03166146b9565b60018301546001600160a01b03165b90506000808760018111156146d0576146d0615e69565b146146de57836009016146e3565b836005015b805460028083015460038401549394506001600160a01b039092169260ff1690869060038601546301000000900460ff16600281111561472557614725615e69565b141561472e5750305b881561473c57869550614760565b87600301544211156147605760405162461bcd60e51b815260040161067790615b21565b600182600481111561477457614774615e69565b14156147b95760405186906001600160a01b038216908c156108fc02908d906000818181858888f193505050501580156147b2573d6000803e3d6000fd5b505061462a565b60028260048111156147cd576147cd615e69565b141561489a576001600160a01b03811630141561486a5760405163a9059cbb60e01b81526001600160a01b0385169063a9059cbb906148129089908e90600401615a2a565b602060405180830381600087803b15801561482c57600080fd5b505af1158015614840573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061486491906154f7565b5061462a565b6040516323b872dd60e01b81526001600160a01b038516906323b872dd906148129084908a908f90600401615a06565b60038260048111156148ae576148ae615e69565b141561491b576040516323b872dd60e01b81526001600160a01b038516906323b872dd906148e49084908a908890600401615a06565b600060405180830381600087803b1580156148fe57600080fd5b505af1158015614912573d6000803e3d6000fd5b5050505061462a565b600482600481111561492f5761492f615e69565b141561462a576040516323037ba760e21b8152600481018490526001600160a01b0382811660248301528781166044830152606482018c905260c06084830152600060c4830181905260e060a484015260e4830152851690638c0dee9c9061010401602060405180830381600087803b1580156149ab57600080fd5b505af11580156149bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906149e39190615514565b50505050505050505050505050565b80516040820151606083015160009291906004816004811115614a1757614a17615e69565b1415614bbf576000614a57846040518060400160405280601681526020017522a921989a18182a37b5b2b739ab30b634b230ba37b960511b8152506141ae565b90506001600160a01b038116614a7f5760405162461bcd60e51b815260040161067790615ca4565b600080600080600080866001600160a01b03166312da4de68b8b6040518363ffffffff1660e01b8152600401614ab6929190615a2a565b6101206040518083038186803b158015614acf57600080fd5b505afa158015614ae3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614b079190615552565b9d50959b5093995090975090955090935060019250614b24915050565b866006811115614b3657614b36615e69565b148015614b4657508b6020015183145b8015614b7457508d6001600160a01b0316856001600160a01b03161480614b7457506001600160a01b038516155b8015614b9157508c6001600160a01b0316846001600160a01b0316145b8015614bae575080151580614bae57506001600160a01b03821630145b9a505050505050505050505061123b565b6002816004811115614bd357614bd3615e69565b1415614d0757604051636d0f612360e11b8152600481018390526000906001600160a01b0385169063da1ec2469060240160e06040518083038186803b158015614c1c57600080fd5b505afa158015614c30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614c5491906157e4565b9050876001600160a01b031681600001516001600160a01b03161480614c82575080516001600160a01b0316155b8015614ca35750866001600160a01b031681602001516001600160a01b0316145b8015614cb6575085602001518160600151145b8015614cd7575060018160c001516006811115614cd557614cd5615e69565b145b8015614cfc575060a0810151151580614cfc575060408101516001600160a01b031630145b94505050505061123b565b60405162461bcd60e51b815260206004820152601e60248201527f496e76616c696420746f6b656e5374616e646172642070726f766964656400006044820152606401610677565b6002836004811115614d6357614d63615e69565b1415614df5576001600160a01b038516614d8f5760405162461bcd60e51b815260040161067790615b87565b60405163445850af60e01b815260048101859052602481018390526001600160a01b0386169063445850af90604401600060405180830381600087803b158015614dd857600080fd5b505af1158015614dec573d6000803e3d6000fd5b50505050614fe6565b6004836004811115614e0957614e09615e69565b1415614fa5576001600160a01b038516614e355760405162461bcd60e51b815260040161067790615b87565b6000614e6f866040518060400160405280601681526020017522a921989a18182a37b5b2b739ab30b634b230ba37b960511b8152506141ae565b90506001600160a01b038116614e975760405162461bcd60e51b815260040161067790615ca4565b60405163096d26f360e11b81526000906001600160a01b038316906312da4de690614ec8908a908a90600401615a2a565b6101206040518083038186803b158015614ee157600080fd5b505afa158015614ef5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614f199190615552565b5050604051631531bc2360e21b81526001600160a01b038f81166004830152602482018f905260448201859052606482018d905293985092891696506354c6f08c95505060849091019250614f6c915050565b600060405180830381600087803b158015614f8657600080fd5b505af1158015614f9a573d6000803e3d6000fd5b505050505050614fe6565b60405162461bcd60e51b81526020600482015260166024820152751a5b9d985b1a59081d1bdad95b881cdd185b99185c9960521b6044820152606401610677565b604080518381526001600160a01b0383811660208301528692908816917ff16e81ebbf4a87ccaa6230614a9d911f4d2a9e9274e2aaca49922f1779959489910160405180910390a35050505050565b828054828255906000526020600020908101928215615088579160200282015b828111156150885781546001600160a01b0319166001600160a01b03843516178255602090920191600190910190615055565b50615094929150615195565b5090565b60405180610100016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600081526020016150ea615158565b81526020016150f7615158565b81526020016000905290565b828054828255906000526020600020908101928215615088579160200282015b8281111561508857825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190615123565b6040805160e08101825260008082526020820181905291810182905290606082019081526000602082018190526040820181905260609091015290565b5b808211156150945760008155600101615196565b80356151b581615ebb565b919050565b60008083601f8401126151cc57600080fd5b5081356001600160401b038111156151e357600080fd5b6020830191508360208260051b85010111156151fe57600080fd5b9250929050565b60008083601f84011261521757600080fd5b5081356001600160401b0381111561522e57600080fd5b6020830191508360208285010111156151fe57600080fd5b600082601f83011261525757600080fd5b81356001600160401b038082111561527157615271615e95565b604051601f8301601f19908116603f0116810190828211818310171561529957615299615e95565b816040528381528660208588010111156152b257600080fd5b836020870160208301376000602085830101528094505050505092915050565b8051600781106151b557600080fd5b6000602082840312156152f357600080fd5b813561123b81615ebb565b60006020828403121561531057600080fd5b815161123b81615ebb565b6000806040838503121561532e57600080fd5b823561533981615ebb565b9150602083013561534981615ebb565b809150509250929050565b60008060006060848603121561536957600080fd5b833561537481615ebb565b9250602084013561538481615ebb565b9150604084013561539481615ed0565b809150509250925092565b600080600080608085870312156153b557600080fd5b84356153c081615ebb565b935060208501356153d081615ebb565b93969395505050506040820135916060013590565b600080600080600060a086880312156153fd57600080fd5b853561540881615ebb565b9450602086013561541881615ebb565b94979496505050506040830135926060810135926080909101359150565b60008060006040848603121561544b57600080fd5b833561545681615ebb565b925060208401356001600160401b0381111561547157600080fd5b61547d868287016151ba565b9497909650939450505050565b6000806040838503121561549d57600080fd5b82356154a881615ebb565b946020939093013593505050565b600080602083850312156154c957600080fd5b82356001600160401b038111156154df57600080fd5b6154eb858286016151ba565b90969095509350505050565b60006020828403121561550957600080fd5b815161123b81615ed0565b60006020828403121561552657600080fd5b5051919050565b6000806040838503121561554057600080fd5b82359150602083013561534981615ebb565b60008060008060008060008060006101208a8c03121561557157600080fd5b8951985060208a015161558381615ebb565b60408b015190985061559481615ebb565b60608b01519097506155a581615ebb565b8096505060808a0151945060a08a0151935060c08a0151925060e08a015191506155d26101008b016152d2565b90509295985092959850929598565b60008060008060008060008060008060006101008c8e03121561560357600080fd5b6001600160401b038c3581101561561957600080fd5b6156268e8e358f01615205565b909c509a5060208d0135995061563e60408e016151aa565b985061564c60608e016151aa565b975061565a60808e016151aa565b965060a08d013595508060c08e0135111561567457600080fd5b6156848e60c08f01358f01615205565b909550935060e08d013581101561569a57600080fd5b506156ab8d60e08e01358e01615205565b81935080925050509295989b509295989b9093969950565b6000806000806000806000806000806101008b8d0312156156e357600080fd5b8a356001600160401b03808211156156fa57600080fd5b6157068e838f01615205565b909c509a5060208d013599508a915061572160408e016151aa565b985061572f60608e016151aa565b975061573d60808e016151aa565b965060a08d0135955060c08d013591508082111561575a57600080fd5b6157668e838f01615246565b945060e08d013591508082111561577c57600080fd5b506157898d828e01615205565b915080935050809150509295989b9194979a5092959850565b6000602082840312156157b457600080fd5b81356005811061123b57600080fd5b6000602082840312156157d557600080fd5b81356003811061123b57600080fd5b600060e082840312156157f657600080fd5b60405160e081016001600160401b038111828210171561581857615818615e95565b604052825161582681615ebb565b8152602083015161583681615ebb565b6020820152604083015161584981615ebb565b80604083015250606083015160608201526080830151608082015260a083015160a082015261587a60c084016152d2565b60c08201529392505050565b60008082840361020081121561589b57600080fd5b6101e0808212156158ab57600080fd5b9395938601359450505050565b6000602082840312156158ca57600080fd5b5035919050565b600080604083850312156158e457600080fd5b82359150602083013561534981615ed0565b60008060006060848603121561590b57600080fd5b83359250602084013561591d81615ed0565b929592945050506040919091013590565b6000806040838503121561594157600080fd5b50508035926020909101359150565b60008151808452615968816020860160208601615e0c565b601f01601f19169290920160200192915050565b80516001600160a01b03168252602080820151908301526040808201519083015260608101516159ab81615eab565b8060608401525060808101511515608083015260a0810151151560a083015260c0810151600381106159df576159df615e69565b8060c0840152505050565b600082516159fc818460208701615e0c565b9190910192915050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6020808252825182820181905260009190848201906040850190845b81811015615a845783516001600160a01b031683529284019291840191600101615a5f565b50909695505050505050565b8681526001600160a01b038681166020830152851660408201526060810184905260c060808201819052600090615ac990830185615950565b82810360a08401526121098185615950565b60208082526026908201527f457468657220747261646573206e65656420746f206265206f66207479706520604082015265457363726f7760d01b606082015260800190565b602080825260179082015276115e1c1a5c985d1a5bdb8819185d19481a5cc81c185cdd604a1b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601f908201527f746f6b656e2063616e206e6f742062652061207a65726f206164647265737300604082015260600190565b6020808252601e908201527f436f6d7065746974696f6e206f6e207072696365206f776e6572736869700000604082015260600190565b6020808252601d908201527f53656e646572206973206e6f742061207072696365206f7261636c652e000000604082015260600190565b6020808252602a908201527f496e76616c696420746f6b656e207374616e6461726420666f7220686f6c64206040820152697472616465207479706560b01b606082015260800190565b6020808252601490820152735472616465206973206e6f742070656e64696e6760601b604082015260600190565b60208082526025908201527f746f6b656e20686173206e6f20686f6c6461626c6520746f6b656e20657874656040820152643739b4b7b760d91b606082015260800190565b602080825260139082015272139bc81a1bdb191259081cdc1958da599a5959606a1b604082015260600190565b60006102808201905060018060a01b0380845116835280602085015116602084015280604085015116604084015250606083015160608301526080830151608083015260a0830151615d6b60a084018261597c565b5060c0830151615d7f61018084018261597c565b5060e0830151615d8e81615eab565b806102608401525092915050565b60008219821115615daf57615daf615e53565b500190565b600082615dd157634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615615df057615df0615e53565b500290565b600082821015615e0757615e07615e53565b500390565b60005b83811015615e27578181015183820152602001615e0f565b83811115610e205750506000910152565b6000600019821415615e4c57615e4c615e53565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600581106107de576107de615e69565b6001600160a01b03811681146107de57600080fd5b80151581146107de57600080fdfeddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa507269636520736574746572206973206e6f7420616e206f7261636c6520666f53656e646572206973206e6f7420616c6c6f77656420746f2063616e63656c20cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc53656e646572206973206e6f7420616c6c6f77656420746f20666f7263652074a26469706673582212207720d0a673a1b30b63bdc444b48c97891945c2b04dc9054c0710026db0336bf664736f6c63430008070033",
  "deployedBytecode": "0x6080604052600436106101735760003560e01c8063013745181461017857806301636f4e146101ae57806302d2838b146101d057806309ec6cc7146101f05780630baf41a6146102105780631af6649f14610230578063249cb3fa146102605780632cb437d81461028e5780632db25e05146102ae57806330f97699146102db578063353414641461031157806345a06cb21461033157806351965a8314610346578063582dcd1314610359578063587274671461037957806361108c06146103995780636775ce04146103b9578063715018a6146103d9578063759561fa146103ee5780638595240b1461040e57806389a0c9e7146104655780638da5cb5b14610478578063935259a8146104a5578063a22ae631146104c5578063c9adffe2146104e5578063d95b585e14610505578063e757223014610525578063ebbca40714610545578063ec96dfb41461055a578063f2fde38b1461057a578063f464b5761461059a578063f55886df146105ba575b600080fd5b34801561018457600080fd5b506101986101933660046152e1565b6105da565b6040516101a59190615a43565b60405180910390f35b3480156101ba57600080fd5b506101ce6101c9366004615436565b610650565b005b3480156101dc57600080fd5b506101ce6101eb3660046158b8565b6107d3565b3480156101fc57600080fd5b506101ce61020b3660046158b8565b6107e1565b34801561021c57600080fd5b506101ce61022b366004615354565b610b4c565b34801561023c57600080fd5b5061025061024b36600461531b565b610bae565b60405190151581526020016101a5565b34801561026c57600080fd5b5061028061027b36600461552d565b610bde565b6040519081526020016101a5565b34801561029a57600080fd5b506101ce6102a93660046158f6565b610c3d565b3480156102ba57600080fd5b506102ce6102c93660046158b8565b610e26565b6040516101a59190615d16565b3480156102e757600080fd5b506102806102f63660046152e1565b6001600160a01b03166000908152600d602052604090205490565b34801561031d57600080fd5b5061025061032c3660046158b8565b61104b565b34801561033d57600080fd5b50610198611242565b6101ce61035436600461592e565b6112a4565b34801561036557600080fd5b506101ce61037436600461592e565b6112b6565b34801561038557600080fd5b506101ce6103943660046153e5565b6114fd565b3480156103a557600080fd5b506101ce6103b43660046158b8565b611709565b3480156103c557600080fd5b506101ce6103d43660046158d1565b611714565b3480156103e557600080fd5b506101ce611720565b3480156103fa57600080fd5b506101986104093660046152e1565b611763565b34801561041a57600080fd5b5061028061042936600461539f565b6001600160a01b039384166000908152600760209081526040808320959096168252938452848120928152918352838220908252909152205490565b6101ce610473366004615886565b6117d7565b34801561048457600080fd5b5061048d6119af565b6040516001600160a01b0390911681526020016101a5565b3480156104b157600080fd5b506102506104c03660046158b8565b6119be565b3480156104d157600080fd5b506101ce6104e03660046154b6565b611a5b565b3480156104f157600080fd5b506101ce61050036600461548a565b611b16565b34801561051157600080fd5b506101ce61052036600461592e565b611bd8565b34801561053157600080fd5b506102806105403660046158b8565b611f34565b34801561055157600080fd5b50600254610280565b34801561056657600080fd5b506101ce610575366004615436565b612473565b34801561058657600080fd5b506101ce6105953660046152e1565b6126c9565b3480156105a657600080fd5b506101ce6105b53660046156c3565b612766565b3480156105c657600080fd5b506102506105d53660046155e1565b612b80565b6001600160a01b03811660009081526004602090815260409182902080548351818402810184019094528084526060939283018282801561064457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610626575b50505050509050919050565b8261065b8133612c52565b6106805760405162461bcd60e51b815260040161067790615bf5565b60405180910390fd5b60005b6001600160a01b038516600090815260046020526040902054811015610720576001600160a01b0385166000908152600560209081526040808320600490925282208054839190859081106106da576106da615e7f565b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff19169115159190911790558061071881615e38565b915050610683565b5060005b828110156107a8576001600160a01b038516600090815260056020526040812060019186868581811061075957610759615e7f565b905060200201602081019061076e91906152e1565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055806107a081615e38565b915050610724565b506001600160a01b03841660009081526004602052604090206107cc908484615035565b5050505050565b6107de8160006112b6565b50565b60008181526003602052604090206001600d82015460ff16600481111561080a5761080a615e69565b146108275760405162461bcd60e51b815260040161067790615c76565b60068101546008820154600a830154600c84015460ff61010093849004811693909104168280156108555750805b156109625760028501546001600160a01b03163314806108a35750846003015442101580156108a3575084546001600160a01b03163314806108a3575060018501546001600160a01b031633145b6108ef5760405162461bcd60e51b81526020600482015260296024820152600080516020615f3f83398151915260448201526874726164652028302960b81b6064820152608401610677565b600260088601546301000000900460ff16600281111561091157610911615e69565b14156109265761092686600086600182612d0f565b6002600c8601546301000000900460ff16600281111561094857610948615e69565b141561095d5761095d86600184816000612d0f565b610b2d565b8215610a1e5760028501546001600160a01b031633148061099b57508460030154421015801561099b575084546001600160a01b031633145b6109e75760405162461bcd60e51b81526020600482015260296024820152600080516020615f3f83398151915260448201526874726164652028312960b81b6064820152608401610677565b600260088601546301000000900460ff166002811115610a0957610a09615e69565b141561095d5761095d86600086600182612d0f565b8015610aa65760028501546001600160a01b0316331480610a5a575084600301544210158015610a5a575060018501546001600160a01b031633145b6109265760405162461bcd60e51b81526020600482015260296024820152600080516020615f3f83398151915260448201526874726164652028322960b81b6064820152608401610677565b60028501546001600160a01b0316331480610aca575084546001600160a01b031633145b80610ae1575060018501546001600160a01b031633145b610b2d5760405162461bcd60e51b81526020600482015260296024820152600080516020615f3f83398151915260448201526874726164652028332960b81b6064820152608401610677565b600d850180546004919060ff19166001835b0217905550505050505050565b82610b578133612c52565b610b735760405162461bcd60e51b815260040161067790615bf5565b506001600160a01b03928316600090815260066020908152604080832094909516825292909252919020805460ff1916911515919091179055565b6001600160a01b0380831660009081526006602090815260408083209385168352929052205460ff165b92915050565b60008281526001602052604081205460ff1615610c355760405173455243313832305f4143434550545f4d4147494360601b6020820152603401604051602081830303815290604052805190602001209050610bd8565b506000610bd8565b60008381526003602052604090206001600d82015460ff166004811115610c6657610c66615e69565b14610c835760405162461bcd60e51b815260040161067790615c76565b60058101546001600160a01b03166000908152600c6020908152604080832033845290915290205460ff1680610ce0575060098101546001600160a01b03166000908152600c6020908152604080832033845290915290205460ff165b610d525760405162461bcd60e51b815260206004820152603d60248201527f4f6e6c7920746f6b656e20636f6e74726f6c6c657273206f6620696e766f6c7660448201527f656420746f6b656e732063616e20617070726f766520612074726164650000006064820152608401610677565b60058101546001600160a01b03166000908152600c6020908152604080832033845290915290205460ff1615610d9a5760088101805462ff0000191662010000851515021790555b60098101546001600160a01b03166000908152600c6020908152604080832033845290915290205460ff1615610de257600c8101805462ff0000191662010000851515021790555b60028101546001600160a01b0316158015610e015750610e018461104b565b8015610e115750610e11846119be565b15610e2057610e208483612e47565b50505050565b610e2e615098565b60008281526003602081815260409283902083516101008101855281546001600160a01b03908116825260018301548116828501526002830154811682870152938201546060808301919091526004808401546080840152865160e0810188526005850180549097168152600685015495810195909552600784015496850196909652600883015492959194869460a08701949093919284019160ff90911690811115610edd57610edd615e69565b6004811115610eee57610eee615e69565b8152600382015460ff61010082048116151560208401526201000082048116151560408401526060909201916301000000909104166002811115610f3457610f34615e69565b6002811115610f4557610f45615e69565b90525081526040805160e0810182526009840180546001600160a01b03168252600a850154602083810191909152600b86015493830193909352600c85015492909301929091606083019060ff166004811115610fa457610fa4615e69565b6004811115610fb557610fb5615e69565b8152600382015460ff61010082048116151560208401526201000082048116151560408401526060909201916301000000909104166002811115610ffb57610ffb615e69565b600281111561100c5761100c615e69565b9052508152600d82015460209091019060ff16600481111561103057611030615e69565b600481111561104157611041615e69565b9052509392505050565b60008181526003602052604081206001600d82015460ff16600481111561107457611074615e69565b141561121957600060088201546301000000900460ff16600281111561109c5761109c615e69565b148015611172575080546040805160e0810182526005840180546001600160a01b039081168352600686015460208401526007860154938301939093526008850154611170949390931692606083019060ff16600481111561110057611100615e69565b600481111561111157611111615e69565b8152600382015460ff6101008204811615156020840152620100008204811615156040840152606090920191630100000090910416600281111561115757611157615e69565b600281111561116857611168615e69565b905250612fa0565b155b156111805750600092915050565b6000600c8201546301000000900460ff1660028111156111a2576111a2615e69565b14801561120b575060018101546040805160e0810182526009840180546001600160a01b039081168352600a8601546020840152600b86015493830193909352600c850154611209949390931692606083019060ff16600481111561110057611100615e69565b155b156112195750600092915050565b6008810154610100900460ff16801561123b5750600c810154610100900460ff165b9392505050565b6060600980548060200260200160405190810160405280929190818152602001828054801561129a57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161127c575b5050505050905090565b6112b282333460008561316f565b5050565b60008281526003602052604090206001600d82015460ff1660048111156112df576112df615e69565b146112fc5760405162461bcd60e51b815260040161067790615c76565b60028101546001600160a01b0316156113935760028101546001600160a01b03163314611393576040805162461bcd60e51b81526020600482015260248101919091527f54726164652063616e206f6e6c7920626520657865637574656420627920657860448201527f65637574657220646566696e6564206174207472616465206372656174696f6e6064820152608401610677565b80600401544210156114065760405162461bcd60e51b815260206004820152603660248201527f54726164652063616e206f6e6c79206265206578656375746564206f6e206f7260448201527520616674657220736574746c656d656e74206461746560501b6064820152608401610677565b61140f8361104b565b6114785760405162461bcd60e51b815260206004820152603460248201527f547261646520686173206e6f74206265656e20616363657074656420627920616044820152731b1b081d1bdad95b881a1bdb19195c9cc81e595d60621b6064820152608401610677565b611481836119be565b6114ee5760405162461bcd60e51b815260206004820152603860248201527f547261646520686173206e6f74206265656e20617070726f76656420627920616044820152771b1b081d1bdad95b8818dbdb9d1c9bdb1b195c9cc81e595d60421b6064820152608401610677565b6114f88383612e47565b505050565b6001600160a01b0380861660009081526006602090815260408083209388168352929052205460ff16801561155757506001600160a01b0380851660009081526006602090815260408083209389168352929052205460ff165b156115745760405162461bcd60e51b815260040161067790615bbe565b6001600160a01b0380861660009081526006602090815260408083209388168352929052205460ff1615611604576115ac8533612c52565b6115ff5760405162461bcd60e51b81526020600482015260306024820152600080516020615f1f83398151915260448201526f72207468697320746f6b656e2028312960801b6064820152608401610677565b6116cc565b6001600160a01b0380851660009081526006602090815260408083209389168352929052205460ff161561168f5761163c8433612c52565b6115ff5760405162461bcd60e51b81526020600482015260306024820152600080516020615f1f83398151915260448201526f72207468697320746f6b656e2028322960801b6064820152608401610677565b60405162461bcd60e51b815260206004820152601260248201527104e6f207072696365206f776e6572736869760741b6044820152606401610677565b6001600160a01b03948516600090815260076020908152604080832096909716825294855285812093815292845284832091835292529190912055565b6107de816000611bd8565b6112b282826000610c3d565b336117296119af565b6001600160a01b03161461174f5760405162461bcd60e51b815260040161067790615b52565b611757613a8a565b6008805460ff19169055565b6001600160a01b0381166000908152600b6020908152604091829020805483518184028101840190945280845260609392830182828015610644576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116106265750505050509050919050565b61194e6117e760208401846152e1565b6117f760408501602086016152e1565b61180760608601604087016152e1565b8560600135866101c001356040518060e0016040528089608001602081019061183091906152e1565b6001600160a01b0316815260a08a0135602082015260c08a013560408201526060016118636101008b0160e08c016157a2565b600481111561187457611874615e69565b815260006020820181905260408201526060016118996101a08b016101808c016157c3565b60028111156118aa576118aa615e69565b90526040805160e08101909152806118ca6101208c016101008d016152e1565b6001600160a01b031681526101208b013560208201526101408b013560408201526060016119006101808c016101608d016157a2565b600481111561191157611911615e69565b815260006020820181905260408201526060016119366101c08c016101a08d016157c3565b600281111561194757611947615e69565b9052613ac5565b61195b60208301836152e1565b6001600160a01b0316336001600160a01b0316148061199a575061198560408301602084016152e1565b6001600160a01b0316336001600160a01b0316145b156112b2576112b2600254333460008561316f565b6000546001600160a01b031690565b600081815260036020908152604080832060058101546001600160a01b03168452600b90925282205415801590611a005750600881015462010000900460ff16155b15611a0e5750600092915050565b60098101546001600160a01b03166000908152600b602052604090205415801590611a445750600c81015462010000900460ff16155b15611a525750600092915050565b50600192915050565b33611a646119af565b6001600160a01b031614611a8a5760405162461bcd60e51b815260040161067790615b52565b60085460ff16611ada5760405162461bcd60e51b815260206004820152601b60248201527a14ddd85c1cc818dbdb9d1c9858dd081a5cc81b9bdd081bdddb9959602a1b6044820152606401610677565b6112b282828080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061407592505050565b81611b218133612c52565b611b3d5760405162461bcd60e51b815260040161067790615bf5565b611b4a62093a8042615d9c565b821180611b55575081155b611bbb5760405162461bcd60e51b815260206004820152603160248201527f53746172742064617465206e6565647320746f20626520736574206174206c656044820152706173742061207765656b206265666f726560781b6064820152608401610677565b506001600160a01b039091166000908152600d6020526040902055565b60008281526003602052604090206001600d82015460ff166004811115611c0157611c01615e69565b14611c1e5760405162461bcd60e51b815260040161067790615c76565b6005810154600682015460088301546009840154600a850154600c8601546001600160a01b039586169560ff61010095869004811695949091169390910416838015611c675750805b15611cb15760405162461bcd60e51b815260206004820152601a602482015279195e1958dd5d19551c9859194818d85b8818994818d85b1b195960321b6044820152606401610677565b6001600160a01b0386166000908152600b6020526040902054158015611ced57506001600160a01b0383166000908152600b6020526040902054155b611d545760405162461bcd60e51b815260206004820152603260248201527f54726164652063616e206e6f7420626520666f7263656420696620746f6b656e60448201527173206861766520636f6e74726f6c6c65727360701b6064820152608401610677565b60028701546001600160a01b031615611dc75760028701546001600160a01b03163314611dc25760405162461bcd60e51b81526020600482015260286024820152600080516020615f7f833981519152604482015267726164652028302960c01b6064820152608401610677565b611eef565b8315611e255786546001600160a01b03163314611dc25760405162461bcd60e51b81526020600482015260286024820152600080516020615f7f833981519152604482015267726164652028312960c01b6064820152608401610677565b8015611e865760018701546001600160a01b03163314611dc25760405162461bcd60e51b81526020600482015260286024820152600080516020615f7f833981519152604482015267726164652028322960c01b6064820152608401610677565b60405162461bcd60e51b815260206004820152603860248201527f54726164652063616e277420626520666f7263656420617320746f6b656e732060448201527730b932903737ba1030bb30b4b630b136329039b7903330b960411b6064820152608401610677565b8315611f0457611f048960008760008c612d0f565b8015611f1957611f198960018460008c612d0f565b50505050600d92909201805460ff1916600317905550505050565b6000818152600360209081526040808320600581015460068083015460078401546009850154600a860154600b8701546001600160a01b03968716808c52958a52888b2096909216808b529590985295882054949692959194909392919060ff168015611fc657506001600160a01b038084166000908152600660209081526040808320938a168352929052205460ff165b15611fe35760405162461bcd60e51b815260040161067790615bbe565b6001600160a01b0386166000908152600d6020526040902054158061201f57506001600160a01b0386166000908152600d602052604090205442105b156120305750979650505050505050565b6001600160a01b0380871660009081526006602090815260408083209387168352929052205460ff168061208957506001600160a01b038084166000908152600660209081526040808320938a168352929052205460ff165b15612467576001600160a01b038087166000908152600760209081526040808320938716835292815282822087835281528282208483529052205415612116576001600160a01b03808716600090815260076020908152604080832093871683529281528282208783528152828220848352905220546121099086615dd6565b9998505050505050505050565b6001600160a01b038084166000908152600760209081526040808320938a16835292815282822084835281528282208783529052205415612191576001600160a01b038084166000908152600760209081526040808320938a1683529281528282208483528152828220878352905220546121099086615db4565b6001600160a01b03808716600090815260076020908152604080832093871683529281528282208783528152828220828052905220541561220c576001600160a01b03808716600090815260076020908152604080832093871683529281528282208783528152828220828052905220546121099086615dd6565b6001600160a01b038084166000908152600760209081526040808320938a16835292815282822082805281528282208783529052205415612287576001600160a01b038084166000908152600760209081526040808320938a1683529281528282208280528152828220878352905220546121099086615db4565b6001600160a01b038087166000908152600760209081526040808320938716835292815282822082805281528282208483529052205415612302576001600160a01b03808716600090815260076020908152604080832093871683529281528282208280528152828220848352905220546121099086615dd6565b6001600160a01b038084166000908152600760209081526040808320938a1683529281528282208483528152828220828052905220541561237d576001600160a01b038084166000908152600760209081526040808320938a1683529281528282208483528152828220828052905220546121099086615db4565b6001600160a01b0380871660009081526007602090815260408083209387168352928152828220828052815282822090522054156123f2576001600160a01b03808716600090815260076020908152604080832093871683529281528282208280528152828220905220546121099086615dd6565b6001600160a01b038084166000908152600760209081526040808320938a16835292815282822082805281528282209052205415612467576001600160a01b038084166000908152600760209081526040808320938a1683529281528282208280528152828220905220546121099086615db4565b50979650505050505050565b82806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156124ad57600080fd5b505afa1580156124c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124e591906152fe565b6001600160a01b0316336001600160a01b0316148061252757506001600160a01b0381166000908152600c6020908152604080832033845290915290205460ff165b61257d5760405162461bcd60e51b815260206004820152602160248201527f53656e646572206973206e6f74206120746f6b656e20636f6e74726f6c6c65726044820152601760f91b6064820152608401610677565b60005b6001600160a01b0385166000908152600b602052604090205481101561261d576001600160a01b0385166000908152600c60209081526040808320600b90925282208054839190859081106125d7576125d7615e7f565b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff19169115159190911790558061261581615e38565b915050612580565b5060005b828110156126a5576001600160a01b0385166000908152600c6020526040812060019186868581811061265657612656615e7f565b905060200201602081019061266b91906152e1565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790558061269d81615e38565b915050612621565b506001600160a01b0384166000908152600b602052604090206107cc908484615035565b336126d26119af565b6001600160a01b0316146126f85760405162461bcd60e51b815260040161067790615b52565b6001600160a01b03811661275d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610677565b6107de8161415e565b336001600160a01b031661279e336040518060400160405280600c81526020016b22a921989a18182a37b5b2b760a11b8152506141ae565b6001600160a01b0316146127d95760405162461bcd60e51b8152602060048201526002602482015261353560f01b6044820152606401610677565b6001600160a01b03851630146128165760405162461bcd60e51b8152602060048201526002602482015261035360f41b6044820152606401610677565b6128568383838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061426b92505050565b6128875760405162461bcd60e51b8152602060048201526002602482015261353760f01b6044820152606401610677565b6000612894846020015190565b9050600080516020615f5f83398151915281141561292957604084810151606080870151608088015160a0890151855160e081018752338152602081018c90529586018f905293949193909290916000918101600481526001602082015260006040820152606001600290529050600061290d8a61432c565b905061291e8d878787878787613ac5565b505050505050612b73565b600080516020615edf833981519152811415612b73576040840151845160009060601415612958575060608501515b600082815260036020526040812080549091906001600160a01b038c8116911614612986578160090161298b565b816005015b6040805160e08101825282546001600160a01b03168152600183015460208201526002830154918101919091526003820154909190606083019060ff1660048111156129d9576129d9615e69565b60048111156129ea576129ea615e69565b8152600382015460ff61010082048116151560208401526201000082048116151560408401526060909201916301000000909104166002811115612a3057612a30615e69565b6002811115612a4157612a41615e69565b90525080519091506001600160a01b03163314612a935760405162461bcd60e51b815260206004820152601060248201526f15dc9bdb99c81d1bdad95b881cd95b9d60821b6044820152606401610677565b80604001518d14612af15760405162461bcd60e51b815260206004820152602260248201527f546f6b656e73206f66207468652077726f6e6720706172746974696f6e2073656044820152611b9d60f21b6064820152608401610677565b80606001516004811115612b0757612b07615e69565b600414612b605760405162461bcd60e51b815260206004820152602160248201527f546f6b656e73206f66207468652077726f6e67207374616e646172642073656e6044820152601d60fa1b6064820152608401610677565b612b6e848c60008c8761316f565b505050505b5050505050505050505050565b6000612bf585858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8901819004810282018101909252878152925087915086908190840183828082843760009201919091525061426b92505050565b9c9b505050505050505050505050565b600180600083604051602001612c1b91906159ea565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff191691151591909117905550565b6001600160a01b03808316600090815260056020908152604080832093851683529290529081205460ff168061123b5750826001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015612cbc57600080fd5b505afa158015612cd0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cf491906152fe565b6001600160a01b0316826001600160a01b0316149392505050565b60008581526003602052604081209080866001811115612d3157612d31615e69565b14612d3f5781600901612d44565b816005015b6040805160e08101825282546001600160a01b03168152600183015460208201526002830154918101919091526003820154909190606083019060ff166004811115612d9257612d92615e69565b6004811115612da357612da3615e69565b8152600382015460ff61010082048116151560208401526201000082048116151560408401526060909201916301000000909104166002811115612de957612de9615e69565b6002811115612dfa57612dfa615e69565b90525060c08101519091506001816002811115612e1957612e19615e69565b1415612e3157612e2c88888888886143c0565b612e3d565b612e3d88888888614638565b5050505050505050565b600082815260036020526040812090612e5f84611f34565b6006830154600a8401549192509080831415612e9857612e8486600084600089612d0f565b612e9386600183600089612d0f565b612f8a565b808311158015612ec857506001600c8501546301000000900460ff166002811115612ec557612ec5615e69565b14155b612f2c5760405162461bcd60e51b815260206004820152602f60248201527f507269636520697320686967686572207468616e20616d6f756e74206573637260448201526e1bddd9590bd85d5d1a1bdc9a5e9959608a1b6064820152608401610677565b612f3b86600084600089612d0f565b612f4a86600185600089612d0f565b6002600c8501546301000000900460ff166002811115612f6c57612f6c615e69565b1415612f8a57612f8a866001612f828685615df5565b600189612d0f565b600d840180546002919060ff1916600183610b3f565b80516020820151604083015160608401516000939291906002816004811115612fcb57612fcb615e69565b141561306157604051636eb1769f60e11b81526001600160a01b03888116600483015230602483015284919086169063dd62ed3e906044015b60206040518083038186803b15801561301c57600080fd5b505afa158015613030573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130549190615514565b1015945050505050610bd8565b600381600481111561307557613075615e69565b141561310a5760405163020604bf60e21b81526004810183905230906001600160a01b0386169063081812fc9060240160206040518083038186803b1580156130bd57600080fd5b505afa1580156130d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130f591906152fe565b6001600160a01b031614945050505050610bd8565b600481600481111561311e5761311e615e69565b141561316257604051630bf641e560e11b8152600481018390526001600160a01b0388811660248301523060448301528491908616906317ec83ca90606401613004565b5060019695505050505050565b60008581526003602052604090206001600d82015460ff16600481111561319857613198615e69565b146131b55760405162461bcd60e51b815260040161067790615c76565b80546000906001600160a01b03878116911614156131e1575060018101546001600160a01b03166132a2565b60018201546001600160a01b038781169116141561320a575080546001600160a01b03166132a2565b60018201546001600160a01b031661324757506001810180546001600160a01b0319166001600160a01b03878116919091179091558154166132a2565b60405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79207265676973746572656420686f6c646572732063616e20616363656044820152697074206120747261646560b01b6064820152608401610677565b81546000906001600160a01b038881169116146132c257826009016132c7565b826005015b6040805160e08101825282546001600160a01b03168152600183015460208201526002830154918101919091526003820154909190606083019060ff16600481111561331557613315615e69565b600481111561332657613326615e69565b8152600382015460ff6101008204811615156020840152620100008204811615156040840152606090920191630100000090910416600281111561336c5761336c615e69565b600281111561337d5761337d615e69565b8152505090508060800151156133e15760405162461bcd60e51b8152602060048201526024808201527f547261646520616c72656164792061636365707465642062792074686520686f604482015263363232b960e11b6064820152608401610677565b60028160c0015160028111156133f9576133f9615e69565b141561374a5760018160600151600481111561341757613417615e69565b1415613474578060200151861461346f5760405162461bcd60e51b815260206004820152601c60248201527b105b5bdd5b9d081bd988115512081a5cc81b9bdd0818dbdc9c9958dd60221b6044820152606401610677565b61385a565b60028160600151600481111561348c5761348c615e69565b141561352057805160208201516040516323b872dd60e01b81526001600160a01b03909216916323b872dd916134c8918b913091600401615a06565b602060405180830381600087803b1580156134e257600080fd5b505af11580156134f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061351a91906154f7565b5061385a565b60038160600151600481111561353857613538615e69565b14156135ab57805160408083015190516323b872dd60e01b81526001600160a01b03909216916323b872dd91613574918b913091600401615a06565b600060405180830381600087803b15801561358e57600080fd5b505af11580156135a2573d6000803e3d6000fd5b5050505061385a565b6004816060015160048111156135c3576135c3615e69565b1480156135ce575084155b156136be5780600001516001600160a01b0316638c0dee9c826040015189308560200151600080516020615eff83398151915260001b60405160200161361691815260200190565b60408051808303601f19018152828252600080516020615eff833981519152602084015291016040516020818303038152906040526040518763ffffffff1660e01b815260040161366c96959493929190615a90565b602060405180830381600087803b15801561368657600080fd5b505af115801561369a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061351a9190615514565b6004816060015160048111156136d6576136d6615e69565b1480156136e257508415155b1561346f578060200151851461346f5760405162461bcd60e51b815260206004820152602760248201527f416d6f756e74206f66204552433134303020746f6b656e73206973206e6f742060448201526618dbdc9c9958dd60ca1b6064820152608401610677565b60018160c00151600281111561376257613762615e69565b14156137df576137738783836149f2565b61346f5760405162461bcd60e51b815260206004820152603760248201527f486f6c64206e6565647320746f2062652070726f766964656420696e20746f6b604482015276195b881cdb585c9d0818dbdb9d1c9858dd08199a5c9cdd604a1b6064820152608401610677565b6137e98782612fa0565b61385a5760405162461bcd60e51b815260206004820152603c60248201527f416c6c6f77616e6365206e6565647320746f2062652070726f7669646564206960448201527b1b881d1bdad95b881cdb585c9d0818dbdb9d1c9858dd08199a5c9cdd60221b6064820152608401610677565b82546001600160a01b03888116911614156138855760088301805461ff001916610100179055613897565b600c8301805461ff0019166101001790555b600483015442101560006138aa8a6119be565b90508180156138c4575060028501546001600160a01b0316155b80156138ef5750600160088601546301000000900460ff1660028111156138ed576138ed615e69565b145b801561391a57506001600c8601546301000000900460ff16600281111561391857613918615e69565b145b80156139235750805b15613a3e5784546000906001600160a01b038b8116911614613948578560050161394d565b856009015b6040805160e08101825282546001600160a01b03168152600183015460208201526002830154918101919091526003820154909190606083019060ff16600481111561399b5761399b615e69565b60048111156139ac576139ac615e69565b8152600382015460ff610100820481161515602084015262010000820481161515604084015260609092019163010000009091041660028111156139f2576139f2615e69565b6002811115613a0357613a03615e69565b9052509050613a13858b836149f2565b15613a3c5760088601805461010061ff00199182168117909255600c8801805490911690911790555b505b60028501546001600160a01b0316158015613a5d5750613a5d8a61104b565b8015613a665750805b8015613a6f5750815b15613a7e57613a7e8a87612e47565b50505050505050505050565b33613a936119af565b6001600160a01b031614613ab95760405162461bcd60e51b815260040161067790615b52565b613ac3600061415e565b565b600182606001516004811115613add57613add615e69565b1415613b185760028260c001516002811115613afb57613afb615e69565b14613b185760405162461bcd60e51b815260040161067790615adb565b600181606001516004811115613b3057613b30615e69565b1415613b6b5760028160c001516002811115613b4e57613b4e615e69565b14613b6b5760405162461bcd60e51b815260040161067790615adb565b60018260c001516002811115613b8357613b83615e69565b1415613bff57600282606001516004811115613ba157613ba1615e69565b1480613bc25750600482606001516004811115613bc057613bc0615e69565b145b613bde5760405162461bcd60e51b815260040161067790615c2c565b6040820151613bff5760405162461bcd60e51b815260040161067790615ce9565b60018160c001516002811115613c1757613c17615e69565b1415613c9357600281606001516004811115613c3557613c35615e69565b1480613c565750600481606001516004811115613c5457613c54615e69565b145b613c725760405162461bcd60e51b815260040161067790615c2c565b6040810151613c935760405162461bcd60e51b815260040161067790615ce9565b60085460ff1615613d3a576001600160a01b0385166000908152600a602052604090205460ff16613d3a5760405162461bcd60e51b815260206004820152604560248201527f5472616465206578656375746572206e6565647320746f2062656c6f6e67207460448201527f6f20746865206c697374206f6620616c6c6f7765642074726164652065786563606482015264757465727360d81b608482015260a401610677565b6001600160a01b038716613da95760405162461bcd60e51b815260206004820152603060248201527f412074726164652063616e206e6f74206265206372656174656420776974682060448201526f746865207a65726f206164647265737360801b6064820152608401610677565b60028054906000613db983615e38565b91905055506000428511613dd957613dd462278d0042615d9c565b613ddb565b845b9050604051806101000160405280896001600160a01b03168152602001886001600160a01b03168152602001876001600160a01b0316815260200182815260200185815260200184815260200183815260200160016004811115613e4157613e41615e69565b905260028054600090815260036020818152604092839020855181546001600160a01b039182166001600160a01b03199182161783558784015160018085018054928516928416929092179091558887015197840180549884169883169890981790975560608089015195840195909555608088015160048085019190915560a089015180516005860180549190951693169290921783559381015160068401559485015160078301559284015160088201805492969193909260ff191691908490811115613f1257613f12615e69565b0217905550608082015160038201805460a08501511515620100000262ff000019931515610100029390931662ffff0019909116179190911780825560c0840151919063ff00000019166301000000836002811115613f7357613f73615e69565b0217905550505060c082015180516009830180546001600160a01b0319166001600160a01b039092169190911781556020820151600a8401556040820151600b8401556060820151600c8401805460ff19166001836004811115613fd957613fd9615e69565b0217905550608082015160038201805460a08501511515620100000262ff000019931515610100029390931662ffff0019909116179190911780825560c0840151919063ff0000001916630100000083600281111561403a5761403a615e69565b0217905550505060e0820151600d8201805460ff1916600183600481111561406457614064615e69565b021790555050505050505050505050565b60005b6009548110156140e1576000600a60006009848154811061409b5761409b615e7f565b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff1916911515919091179055806140d981615e38565b915050614078565b5060005b815181101561414a576001600a600084848151811061410657614106615e7f565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061414281615e38565b9150506140e5565b5080516112b2906009906020840190615103565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080826040516020016141c291906159ea565b60408051601f1981840301815290829052805160209091012063555ddc6560e11b82529150731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca906142139087908590600401615a2a565b60206040518083038186803b15801561422b57600080fd5b505afa15801561423f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061426391906152fe565b949350505050565b600081516000141561427f57506000610bd8565b600061428c846020015190565b905083516101401480156142ad5750600080516020615f5f83398151915281145b156142bc576001915050610bd8565b8351604014806142cd575083516060145b80156142e65750600080516020615edf83398151915281145b156142f5576001915050610bd8565b835160201480156143135750600080516020615eff83398151915281145b15614322576001915050610bd8565b6000915050610bd8565b614334615158565b60c082015160e0808401516101008501516101208601516101408701516040805195860181526001600160a01b03871686526020860185905285018390529293919290916060810183600481111561438e5761438e615e69565b815260006020820181905260408201526060018260028111156143b3576143b3615e69565b9052979650505050505050565b600085815260036020526040812090808660018111156143e2576143e2615e69565b146143fa5760018201546001600160a01b0316614406565b81546001600160a01b03165b905060008087600181111561441d5761441d615e69565b146144325782546001600160a01b0316614441565b60018301546001600160a01b03165b905060008088600181111561445857614458615e69565b14614466578360090161446b565b836005015b6040805160e08101825282546001600160a01b03168152600183015460208201526002830154918101919091526003820154909190606083019060ff1660048111156144b9576144b9615e69565b60048111156144ca576144ca615e69565b8152600382015460ff6101008204811615156020840152620100008204811615156040840152606090920191630100000090910416600281111561451057614510615e69565b600281111561452157614521615e69565b815250509050836003015442111561454b5760405162461bcd60e51b815260040161067790615b21565b805160408201516060830151600281600481111561456b5761456b615e69565b14806145885750600481600481111561458657614586615e69565b145b6145d45760405162461bcd60e51b815260206004820152601f60248201527f546f6b656e207374616e64617264206d75737420626520686f6c6461626c65006044820152606401610677565b6145df8686866149f2565b61461d5760405162461bcd60e51b815260206004820152600f60248201526e121bdb19081b5d5cdd08195e1a5cdd608a1b6044820152606401610677565b61462a8383838b89614d4f565b505050505050505050505050565b6000848152600360205260408120908085600181111561465a5761465a615e69565b146146725760018201546001600160a01b031661467e565b81546001600160a01b03165b905060008086600181111561469557614695615e69565b146146aa5782546001600160a01b03166146b9565b60018301546001600160a01b03165b90506000808760018111156146d0576146d0615e69565b146146de57836009016146e3565b836005015b805460028083015460038401549394506001600160a01b039092169260ff1690869060038601546301000000900460ff16600281111561472557614725615e69565b141561472e5750305b881561473c57869550614760565b87600301544211156147605760405162461bcd60e51b815260040161067790615b21565b600182600481111561477457614774615e69565b14156147b95760405186906001600160a01b038216908c156108fc02908d906000818181858888f193505050501580156147b2573d6000803e3d6000fd5b505061462a565b60028260048111156147cd576147cd615e69565b141561489a576001600160a01b03811630141561486a5760405163a9059cbb60e01b81526001600160a01b0385169063a9059cbb906148129089908e90600401615a2a565b602060405180830381600087803b15801561482c57600080fd5b505af1158015614840573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061486491906154f7565b5061462a565b6040516323b872dd60e01b81526001600160a01b038516906323b872dd906148129084908a908f90600401615a06565b60038260048111156148ae576148ae615e69565b141561491b576040516323b872dd60e01b81526001600160a01b038516906323b872dd906148e49084908a908890600401615a06565b600060405180830381600087803b1580156148fe57600080fd5b505af1158015614912573d6000803e3d6000fd5b5050505061462a565b600482600481111561492f5761492f615e69565b141561462a576040516323037ba760e21b8152600481018490526001600160a01b0382811660248301528781166044830152606482018c905260c06084830152600060c4830181905260e060a484015260e4830152851690638c0dee9c9061010401602060405180830381600087803b1580156149ab57600080fd5b505af11580156149bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906149e39190615514565b50505050505050505050505050565b80516040820151606083015160009291906004816004811115614a1757614a17615e69565b1415614bbf576000614a57846040518060400160405280601681526020017522a921989a18182a37b5b2b739ab30b634b230ba37b960511b8152506141ae565b90506001600160a01b038116614a7f5760405162461bcd60e51b815260040161067790615ca4565b600080600080600080866001600160a01b03166312da4de68b8b6040518363ffffffff1660e01b8152600401614ab6929190615a2a565b6101206040518083038186803b158015614acf57600080fd5b505afa158015614ae3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614b079190615552565b9d50959b5093995090975090955090935060019250614b24915050565b866006811115614b3657614b36615e69565b148015614b4657508b6020015183145b8015614b7457508d6001600160a01b0316856001600160a01b03161480614b7457506001600160a01b038516155b8015614b9157508c6001600160a01b0316846001600160a01b0316145b8015614bae575080151580614bae57506001600160a01b03821630145b9a505050505050505050505061123b565b6002816004811115614bd357614bd3615e69565b1415614d0757604051636d0f612360e11b8152600481018390526000906001600160a01b0385169063da1ec2469060240160e06040518083038186803b158015614c1c57600080fd5b505afa158015614c30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614c5491906157e4565b9050876001600160a01b031681600001516001600160a01b03161480614c82575080516001600160a01b0316155b8015614ca35750866001600160a01b031681602001516001600160a01b0316145b8015614cb6575085602001518160600151145b8015614cd7575060018160c001516006811115614cd557614cd5615e69565b145b8015614cfc575060a0810151151580614cfc575060408101516001600160a01b031630145b94505050505061123b565b60405162461bcd60e51b815260206004820152601e60248201527f496e76616c696420746f6b656e5374616e646172642070726f766964656400006044820152606401610677565b6002836004811115614d6357614d63615e69565b1415614df5576001600160a01b038516614d8f5760405162461bcd60e51b815260040161067790615b87565b60405163445850af60e01b815260048101859052602481018390526001600160a01b0386169063445850af90604401600060405180830381600087803b158015614dd857600080fd5b505af1158015614dec573d6000803e3d6000fd5b50505050614fe6565b6004836004811115614e0957614e09615e69565b1415614fa5576001600160a01b038516614e355760405162461bcd60e51b815260040161067790615b87565b6000614e6f866040518060400160405280601681526020017522a921989a18182a37b5b2b739ab30b634b230ba37b960511b8152506141ae565b90506001600160a01b038116614e975760405162461bcd60e51b815260040161067790615ca4565b60405163096d26f360e11b81526000906001600160a01b038316906312da4de690614ec8908a908a90600401615a2a565b6101206040518083038186803b158015614ee157600080fd5b505afa158015614ef5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614f199190615552565b5050604051631531bc2360e21b81526001600160a01b038f81166004830152602482018f905260448201859052606482018d905293985092891696506354c6f08c95505060849091019250614f6c915050565b600060405180830381600087803b158015614f8657600080fd5b505af1158015614f9a573d6000803e3d6000fd5b505050505050614fe6565b60405162461bcd60e51b81526020600482015260166024820152751a5b9d985b1a59081d1bdad95b881cdd185b99185c9960521b6044820152606401610677565b604080518381526001600160a01b0383811660208301528692908816917ff16e81ebbf4a87ccaa6230614a9d911f4d2a9e9274e2aaca49922f1779959489910160405180910390a35050505050565b828054828255906000526020600020908101928215615088579160200282015b828111156150885781546001600160a01b0319166001600160a01b03843516178255602090920191600190910190615055565b50615094929150615195565b5090565b60405180610100016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600081526020016150ea615158565b81526020016150f7615158565b81526020016000905290565b828054828255906000526020600020908101928215615088579160200282015b8281111561508857825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190615123565b6040805160e08101825260008082526020820181905291810182905290606082019081526000602082018190526040820181905260609091015290565b5b808211156150945760008155600101615196565b80356151b581615ebb565b919050565b60008083601f8401126151cc57600080fd5b5081356001600160401b038111156151e357600080fd5b6020830191508360208260051b85010111156151fe57600080fd5b9250929050565b60008083601f84011261521757600080fd5b5081356001600160401b0381111561522e57600080fd5b6020830191508360208285010111156151fe57600080fd5b600082601f83011261525757600080fd5b81356001600160401b038082111561527157615271615e95565b604051601f8301601f19908116603f0116810190828211818310171561529957615299615e95565b816040528381528660208588010111156152b257600080fd5b836020870160208301376000602085830101528094505050505092915050565b8051600781106151b557600080fd5b6000602082840312156152f357600080fd5b813561123b81615ebb565b60006020828403121561531057600080fd5b815161123b81615ebb565b6000806040838503121561532e57600080fd5b823561533981615ebb565b9150602083013561534981615ebb565b809150509250929050565b60008060006060848603121561536957600080fd5b833561537481615ebb565b9250602084013561538481615ebb565b9150604084013561539481615ed0565b809150509250925092565b600080600080608085870312156153b557600080fd5b84356153c081615ebb565b935060208501356153d081615ebb565b93969395505050506040820135916060013590565b600080600080600060a086880312156153fd57600080fd5b853561540881615ebb565b9450602086013561541881615ebb565b94979496505050506040830135926060810135926080909101359150565b60008060006040848603121561544b57600080fd5b833561545681615ebb565b925060208401356001600160401b0381111561547157600080fd5b61547d868287016151ba565b9497909650939450505050565b6000806040838503121561549d57600080fd5b82356154a881615ebb565b946020939093013593505050565b600080602083850312156154c957600080fd5b82356001600160401b038111156154df57600080fd5b6154eb858286016151ba565b90969095509350505050565b60006020828403121561550957600080fd5b815161123b81615ed0565b60006020828403121561552657600080fd5b5051919050565b6000806040838503121561554057600080fd5b82359150602083013561534981615ebb565b60008060008060008060008060006101208a8c03121561557157600080fd5b8951985060208a015161558381615ebb565b60408b015190985061559481615ebb565b60608b01519097506155a581615ebb565b8096505060808a0151945060a08a0151935060c08a0151925060e08a015191506155d26101008b016152d2565b90509295985092959850929598565b60008060008060008060008060008060006101008c8e03121561560357600080fd5b6001600160401b038c3581101561561957600080fd5b6156268e8e358f01615205565b909c509a5060208d0135995061563e60408e016151aa565b985061564c60608e016151aa565b975061565a60808e016151aa565b965060a08d013595508060c08e0135111561567457600080fd5b6156848e60c08f01358f01615205565b909550935060e08d013581101561569a57600080fd5b506156ab8d60e08e01358e01615205565b81935080925050509295989b509295989b9093969950565b6000806000806000806000806000806101008b8d0312156156e357600080fd5b8a356001600160401b03808211156156fa57600080fd5b6157068e838f01615205565b909c509a5060208d013599508a915061572160408e016151aa565b985061572f60608e016151aa565b975061573d60808e016151aa565b965060a08d0135955060c08d013591508082111561575a57600080fd5b6157668e838f01615246565b945060e08d013591508082111561577c57600080fd5b506157898d828e01615205565b915080935050809150509295989b9194979a5092959850565b6000602082840312156157b457600080fd5b81356005811061123b57600080fd5b6000602082840312156157d557600080fd5b81356003811061123b57600080fd5b600060e082840312156157f657600080fd5b60405160e081016001600160401b038111828210171561581857615818615e95565b604052825161582681615ebb565b8152602083015161583681615ebb565b6020820152604083015161584981615ebb565b80604083015250606083015160608201526080830151608082015260a083015160a082015261587a60c084016152d2565b60c08201529392505050565b60008082840361020081121561589b57600080fd5b6101e0808212156158ab57600080fd5b9395938601359450505050565b6000602082840312156158ca57600080fd5b5035919050565b600080604083850312156158e457600080fd5b82359150602083013561534981615ed0565b60008060006060848603121561590b57600080fd5b83359250602084013561591d81615ed0565b929592945050506040919091013590565b6000806040838503121561594157600080fd5b50508035926020909101359150565b60008151808452615968816020860160208601615e0c565b601f01601f19169290920160200192915050565b80516001600160a01b03168252602080820151908301526040808201519083015260608101516159ab81615eab565b8060608401525060808101511515608083015260a0810151151560a083015260c0810151600381106159df576159df615e69565b8060c0840152505050565b600082516159fc818460208701615e0c565b9190910192915050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6020808252825182820181905260009190848201906040850190845b81811015615a845783516001600160a01b031683529284019291840191600101615a5f565b50909695505050505050565b8681526001600160a01b038681166020830152851660408201526060810184905260c060808201819052600090615ac990830185615950565b82810360a08401526121098185615950565b60208082526026908201527f457468657220747261646573206e65656420746f206265206f66207479706520604082015265457363726f7760d01b606082015260800190565b602080825260179082015276115e1c1a5c985d1a5bdb8819185d19481a5cc81c185cdd604a1b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601f908201527f746f6b656e2063616e206e6f742062652061207a65726f206164647265737300604082015260600190565b6020808252601e908201527f436f6d7065746974696f6e206f6e207072696365206f776e6572736869700000604082015260600190565b6020808252601d908201527f53656e646572206973206e6f742061207072696365206f7261636c652e000000604082015260600190565b6020808252602a908201527f496e76616c696420746f6b656e207374616e6461726420666f7220686f6c64206040820152697472616465207479706560b01b606082015260800190565b6020808252601490820152735472616465206973206e6f742070656e64696e6760601b604082015260600190565b60208082526025908201527f746f6b656e20686173206e6f20686f6c6461626c6520746f6b656e20657874656040820152643739b4b7b760d91b606082015260800190565b602080825260139082015272139bc81a1bdb191259081cdc1958da599a5959606a1b604082015260600190565b60006102808201905060018060a01b0380845116835280602085015116602084015280604085015116604084015250606083015160608301526080830151608083015260a0830151615d6b60a084018261597c565b5060c0830151615d7f61018084018261597c565b5060e0830151615d8e81615eab565b806102608401525092915050565b60008219821115615daf57615daf615e53565b500190565b600082615dd157634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615615df057615df0615e53565b500290565b600082821015615e0757615e07615e53565b500390565b60005b83811015615e27578181015183820152602001615e0f565b83811115610e205750506000910152565b6000600019821415615e4c57615e4c615e53565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600581106107de576107de615e69565b6001600160a01b03811681146107de57600080fd5b80151581146107de57600080fdfeddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa507269636520736574746572206973206e6f7420616e206f7261636c6520666f53656e646572206973206e6f7420616c6c6f77656420746f2063616e63656c20cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc53656e646572206973206e6f7420616c6c6f77656420746f20666f7263652074a26469706673582212207720d0a673a1b30b63bdc444b48c97891945c2b04dc9054c0710026db0336bf664736f6c63430008070033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1607:36",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:36",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "92:199:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "138:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "147:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "140:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "140:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "140:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "113:7:36"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "122:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "109:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "109:23:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "134:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "105:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "105:32:36"
                  },
                  "nodeType": "YulIf",
                  "src": "102:52:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "163:29:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "182:9:36"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "176:5:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "176:16:36"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "167:5:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "245:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "254:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "257:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "247:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "247:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "247:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "214:5:36"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "235:5:36"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "228:6:36"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "228:13:36"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "221:6:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "221:21:36"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "211:2:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "211:32:36"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "204:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "204:40:36"
                  },
                  "nodeType": "YulIf",
                  "src": "201:60:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "270:15:36",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "280:5:36"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "270:6:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "58:9:36",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "69:7:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "81:6:36",
                "type": ""
              }
            ],
            "src": "14:277:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "435:289:36",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "445:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "465:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "459:5:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "459:13:36"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "449:6:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "481:10:36",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "490:1:36",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "485:1:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "552:77:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "577:3:36"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "582:1:36"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "573:3:36"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "573:11:36"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "600:6:36"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "608:1:36"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "596:3:36"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "596:14:36"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "612:4:36",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "592:3:36"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "592:25:36"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "586:5:36"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "586:32:36"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "566:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "566:53:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "566:53:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "511:1:36"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "514:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "508:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "508:13:36"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "522:21:36",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "524:17:36",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "533:1:36"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "536:4:36",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "529:3:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "529:12:36"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "524:1:36"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "504:3:36",
                    "statements": []
                  },
                  "src": "500:129:36"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "655:31:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "668:3:36"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "673:6:36"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "664:3:36"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "664:16:36"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "682:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "657:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "657:27:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "657:27:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "644:1:36"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "647:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "641:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "641:13:36"
                  },
                  "nodeType": "YulIf",
                  "src": "638:48:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "695:23:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "706:3:36"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "711:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "702:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "702:16:36"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "695:3:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "411:3:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "416:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "427:3:36",
                "type": ""
              }
            ],
            "src": "296:428:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "886:218:36",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "896:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "908:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "919:2:36",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "904:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "904:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "896:4:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "931:29:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "949:3:36",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "954:1:36",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "945:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "945:11:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "958:1:36",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "941:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "941:19:36"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "935:2:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "976:9:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "991:6:36"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "999:2:36"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "987:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "987:15:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "969:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "969:34:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "969:34:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1023:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1034:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1019:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1019:18:36"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1039:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1012:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1012:34:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1012:34:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1066:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1077:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1062:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1062:18:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "1086:6:36"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1094:2:36"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1082:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1082:15:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1055:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1055:43:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1055:43:36"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_bytes32_t_address__to_t_address_t_bytes32_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "839:9:36",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "850:6:36",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "858:6:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "866:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "877:4:36",
                "type": ""
              }
            ],
            "src": "729:375:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1156:185:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1195:111:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1216:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1223:3:36",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1228:10:36",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "1219:3:36"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1219:20:36"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1209:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1209:31:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1209:31:36"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1260:1:36",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1263:4:36",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1253:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1253:15:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1253:15:36"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1288:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1291:4:36",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1281:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1281:15:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1281:15:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1172:5:36"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1183:1:36",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "1179:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1179:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "1169:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1169:17:36"
                  },
                  "nodeType": "YulIf",
                  "src": "1166:140:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1315:20:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1326:5:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1333:1:36",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1322:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1322:13:36"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "1315:3:36"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1138:5:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "1148:3:36",
                "type": ""
              }
            ],
            "src": "1109:232:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1378:95:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1395:1:36",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1402:3:36",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1407:10:36",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1398:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1398:20:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1388:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1388:31:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1388:31:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1435:1:36",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1438:4:36",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1428:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1428:15:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1428:15:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1459:1:36",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1462:4:36",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1452:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1452:15:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1452:15:36"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "1346:127:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1510:95:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1527:1:36",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1534:3:36",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1539:10:36",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1530:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1530:20:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1520:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1520:31:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1520:31:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1567:1:36",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1570:4:36",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1560:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1560:15:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1560:15:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1591:1:36",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1594:4:36",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1584:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1584:15:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1584:15:36"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "1478:127:36"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        if gt(i, length) { mstore(add(pos, length), 0) }\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address_t_bytes32_t_address__to_t_address_t_bytes32_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
      "id": 36,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:43467:36",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:36",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:85:36",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:36"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:36"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "136:5:36"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "111:24:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "111:31:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "111:31:36"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:36",
                "type": ""
              }
            ],
            "src": "14:134:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "237:283:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "286:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "295:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "298:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "288:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "288:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "288:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "265:6:36"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "273:4:36",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "261:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "261:17:36"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "280:3:36"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "257:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "257:27:36"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "250:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "250:35:36"
                  },
                  "nodeType": "YulIf",
                  "src": "247:55:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "311:30:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "334:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "321:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "321:20:36"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "311:6:36"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "384:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "393:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "396:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "386:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "386:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "386:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "356:6:36"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "372:2:36",
                                "type": "",
                                "value": "64"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "376:1:36",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "368:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "368:10:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "380:1:36",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "364:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "364:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "353:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "353:30:36"
                  },
                  "nodeType": "YulIf",
                  "src": "350:50:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "409:29:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "425:6:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "433:4:36",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "421:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "421:17:36"
                  },
                  "variableNames": [
                    {
                      "name": "arrayPos",
                      "nodeType": "YulIdentifier",
                      "src": "409:8:36"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "498:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "507:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "510:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "500:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "500:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "500:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "461:6:36"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "473:1:36",
                                    "type": "",
                                    "value": "5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "476:6:36"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "469:3:36"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "469:14:36"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "457:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "457:27:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "486:4:36",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "453:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "453:38:36"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "493:3:36"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "450:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "450:47:36"
                  },
                  "nodeType": "YulIf",
                  "src": "447:67:36"
                }
              ]
            },
            "name": "abi_decode_array_address_dyn_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "200:6:36",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "208:3:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "arrayPos",
                "nodeType": "YulTypedName",
                "src": "216:8:36",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "226:6:36",
                "type": ""
              }
            ],
            "src": "153:367:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "597:275:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "646:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "655:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "658:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "648:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "648:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "648:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "625:6:36"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "633:4:36",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "621:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "621:17:36"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "640:3:36"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "617:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "617:27:36"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "610:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "610:35:36"
                  },
                  "nodeType": "YulIf",
                  "src": "607:55:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "671:30:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "694:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "681:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "681:20:36"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "671:6:36"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "744:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "753:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "756:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "746:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "746:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "746:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "716:6:36"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "732:2:36",
                                "type": "",
                                "value": "64"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "736:1:36",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "728:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "728:10:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "740:1:36",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "724:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "724:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "713:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "713:30:36"
                  },
                  "nodeType": "YulIf",
                  "src": "710:50:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "769:29:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "785:6:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "793:4:36",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "781:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "781:17:36"
                  },
                  "variableNames": [
                    {
                      "name": "arrayPos",
                      "nodeType": "YulIdentifier",
                      "src": "769:8:36"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "850:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "859:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "862:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "852:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "852:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "852:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "821:6:36"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "829:6:36"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "817:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "817:19:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "838:4:36",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "813:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "813:30:36"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "845:3:36"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "810:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "810:39:36"
                  },
                  "nodeType": "YulIf",
                  "src": "807:59:36"
                }
              ]
            },
            "name": "abi_decode_bytes_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "560:6:36",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "568:3:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "arrayPos",
                "nodeType": "YulTypedName",
                "src": "576:8:36",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "586:6:36",
                "type": ""
              }
            ],
            "src": "525:347:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "929:666:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "978:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "987:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "990:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "980:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "980:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "980:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "957:6:36"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "965:4:36",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "953:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "953:17:36"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "972:3:36"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "949:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "949:27:36"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "942:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "942:35:36"
                  },
                  "nodeType": "YulIf",
                  "src": "939:55:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1003:30:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1026:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1013:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1013:20:36"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1007:2:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1042:28:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1060:2:36",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1064:1:36",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1056:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1056:10:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1068:1:36",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1052:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1052:18:36"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1046:2:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1093:22:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1095:16:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1095:18:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1095:18:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1085:2:36"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1089:2:36"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1082:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1082:10:36"
                  },
                  "nodeType": "YulIf",
                  "src": "1079:36:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1124:17:36",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1138:2:36",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "1134:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1134:7:36"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "1128:2:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1150:23:36",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1170:2:36",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1164:5:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1164:9:36"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "1154:6:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1182:71:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1204:6:36"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1228:2:36"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1232:4:36",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1224:3:36"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1224:13:36"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "1239:2:36"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1220:3:36"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1220:22:36"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1244:2:36",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1216:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1216:31:36"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "1249:2:36"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1212:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1212:40:36"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1200:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1200:53:36"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "1186:10:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1312:22:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1314:16:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1314:18:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1314:18:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1271:10:36"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1283:2:36"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1268:2:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1268:18:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1291:10:36"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1303:6:36"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1288:2:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1288:22:36"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1265:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1265:46:36"
                  },
                  "nodeType": "YulIf",
                  "src": "1262:72:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1350:2:36",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1354:10:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1343:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1343:22:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1343:22:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1381:6:36"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1389:2:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1374:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1374:18:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1374:18:36"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1440:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1449:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1452:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1442:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1442:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1442:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1415:6:36"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1423:2:36"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1411:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1411:15:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1428:4:36",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1407:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1407:26:36"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "1435:3:36"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1404:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1404:35:36"
                  },
                  "nodeType": "YulIf",
                  "src": "1401:55:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1482:6:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1490:4:36",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1478:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1478:17:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1501:6:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1509:4:36",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1497:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1497:17:36"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1516:2:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "1465:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1465:54:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1465:54:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1543:6:36"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1551:2:36"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1539:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1539:15:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1556:4:36",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1535:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1535:26:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1563:1:36",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1528:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1528:37:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1528:37:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1574:15:36",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1583:6:36"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "1574:5:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_bytes",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "903:6:36",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "911:3:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "919:5:36",
                "type": ""
              }
            ],
            "src": "877:718:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1672:87:36",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1682:22:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1697:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1691:5:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1691:13:36"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1682:5:36"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1737:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1746:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1749:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1739:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1739:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1739:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1726:5:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1733:1:36",
                            "type": "",
                            "value": "7"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1723:2:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1723:12:36"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1716:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1716:20:36"
                  },
                  "nodeType": "YulIf",
                  "src": "1713:40:36"
                }
              ]
            },
            "name": "abi_decode_enum_HoldStatusCode_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1651:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1662:5:36",
                "type": ""
              }
            ],
            "src": "1600:159:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1834:177:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1880:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1889:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1892:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1882:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1882:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1882:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1855:7:36"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1864:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1851:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1851:23:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1876:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1847:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1847:32:36"
                  },
                  "nodeType": "YulIf",
                  "src": "1844:52:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1905:36:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1931:9:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1918:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1918:23:36"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1909:5:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1975:5:36"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1950:24:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1950:31:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1950:31:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1990:15:36",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2000:5:36"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1990:6:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1800:9:36",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1811:7:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1823:6:36",
                "type": ""
              }
            ],
            "src": "1764:247:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2097:170:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2143:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2152:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2155:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2145:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2145:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2145:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2118:7:36"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2127:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2114:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2114:23:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2139:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2110:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2110:32:36"
                  },
                  "nodeType": "YulIf",
                  "src": "2107:52:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2168:29:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2187:9:36"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2181:5:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2181:16:36"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2172:5:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2231:5:36"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2206:24:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2206:31:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2206:31:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2246:15:36",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2256:5:36"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2246:6:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2063:9:36",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2074:7:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2086:6:36",
                "type": ""
              }
            ],
            "src": "2016:251:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2359:301:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2405:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2414:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2417:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2407:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2407:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2407:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2380:7:36"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2389:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2376:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2376:23:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2401:2:36",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2372:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2372:32:36"
                  },
                  "nodeType": "YulIf",
                  "src": "2369:52:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2430:36:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2456:9:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2443:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2443:23:36"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2434:5:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2500:5:36"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2475:24:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2475:31:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2475:31:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2515:15:36",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2525:5:36"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2515:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2539:47:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2571:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2582:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2567:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2567:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2554:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2554:32:36"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "2543:7:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "2620:7:36"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2595:24:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2595:33:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2595:33:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2637:17:36",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "2647:7:36"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2637:6:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2317:9:36",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2328:7:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2340:6:36",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2348:6:36",
                "type": ""
              }
            ],
            "src": "2272:388:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2766:422:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2812:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2821:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2824:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2814:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2814:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2814:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2787:7:36"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2796:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2783:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2783:23:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2808:2:36",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2779:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2779:32:36"
                  },
                  "nodeType": "YulIf",
                  "src": "2776:52:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2837:36:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2863:9:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2850:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2850:23:36"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2841:5:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2907:5:36"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2882:24:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2882:31:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2882:31:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2922:15:36",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2932:5:36"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2922:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2946:47:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2978:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2989:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2974:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2974:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2961:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2961:32:36"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "2950:7:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "3027:7:36"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3002:24:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3002:33:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3002:33:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3044:17:36",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "3054:7:36"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3044:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3070:47:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3102:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3113:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3098:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3098:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3085:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3085:32:36"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "3074:7:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "3148:7:36"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "3126:21:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3126:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3126:30:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3165:17:36",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "3175:7:36"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3165:6:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2716:9:36",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2727:7:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2739:6:36",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2747:6:36",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2755:6:36",
                "type": ""
              }
            ],
            "src": "2665:523:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3314:404:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3361:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3370:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3373:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3363:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3363:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3363:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3335:7:36"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3344:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3331:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3331:23:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3356:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3327:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3327:33:36"
                  },
                  "nodeType": "YulIf",
                  "src": "3324:53:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3386:36:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3412:9:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3399:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3399:23:36"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3390:5:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3456:5:36"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3431:24:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3431:31:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3431:31:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3471:15:36",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3481:5:36"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3471:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3495:47:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3527:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3538:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3523:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3523:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3510:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3510:32:36"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "3499:7:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "3576:7:36"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3551:24:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3551:33:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3551:33:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3593:17:36",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "3603:7:36"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3593:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3619:42:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3646:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3657:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3642:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3642:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3629:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3629:32:36"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3619:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3670:42:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3697:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3708:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3693:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3693:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3680:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3680:32:36"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "3670:6:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_bytes32t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3256:9:36",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3267:7:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3279:6:36",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3287:6:36",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3295:6:36",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3303:6:36",
                "type": ""
              }
            ],
            "src": "3193:525:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3861:456:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3908:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3917:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3920:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3910:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3910:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3910:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3882:7:36"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3891:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3878:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3878:23:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3903:3:36",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3874:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3874:33:36"
                  },
                  "nodeType": "YulIf",
                  "src": "3871:53:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3933:36:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3959:9:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3946:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3946:23:36"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3937:5:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4003:5:36"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3978:24:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3978:31:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3978:31:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4018:15:36",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4028:5:36"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4018:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4042:47:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4074:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4085:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4070:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4070:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4057:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4057:32:36"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "4046:7:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "4123:7:36"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "4098:24:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4098:33:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4098:33:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4140:17:36",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "4150:7:36"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4140:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4166:42:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4193:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4204:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4189:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4189:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4176:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4176:32:36"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "4166:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4217:42:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4244:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4255:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4240:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4240:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4227:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4227:32:36"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "4217:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4268:43:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4295:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4306:3:36",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4291:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4291:19:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4278:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4278:33:36"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "4268:6:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_bytes32t_bytes32t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3795:9:36",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3806:7:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3818:6:36",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3826:6:36",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3834:6:36",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3842:6:36",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "3850:6:36",
                "type": ""
              }
            ],
            "src": "3723:594:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4444:450:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4490:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4499:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4502:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4492:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4492:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4492:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4465:7:36"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4474:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4461:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4461:23:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4486:2:36",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4457:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4457:32:36"
                  },
                  "nodeType": "YulIf",
                  "src": "4454:52:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4515:36:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4541:9:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4528:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4528:23:36"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4519:5:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4585:5:36"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "4560:24:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4560:31:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4560:31:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4600:15:36",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4610:5:36"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4600:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4624:46:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4655:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4666:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4651:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4651:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4638:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4638:32:36"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "4628:6:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4713:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4722:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4725:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4715:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4715:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4715:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4685:6:36"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4701:2:36",
                                "type": "",
                                "value": "64"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4705:1:36",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "4697:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4697:10:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4709:1:36",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4693:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4693:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4682:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4682:30:36"
                  },
                  "nodeType": "YulIf",
                  "src": "4679:50:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4738:96:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4806:9:36"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "4817:6:36"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4802:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4802:22:36"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "4826:7:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_array_address_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "4764:37:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4764:70:36"
                  },
                  "variables": [
                    {
                      "name": "value1_1",
                      "nodeType": "YulTypedName",
                      "src": "4742:8:36",
                      "type": ""
                    },
                    {
                      "name": "value2_1",
                      "nodeType": "YulTypedName",
                      "src": "4752:8:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4843:18:36",
                  "value": {
                    "name": "value1_1",
                    "nodeType": "YulIdentifier",
                    "src": "4853:8:36"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4843:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4870:18:36",
                  "value": {
                    "name": "value2_1",
                    "nodeType": "YulIdentifier",
                    "src": "4880:8:36"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "4870:6:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_array$_t_address_$dyn_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4394:9:36",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4405:7:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4417:6:36",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4425:6:36",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4433:6:36",
                "type": ""
              }
            ],
            "src": "4322:572:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4986:228:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5032:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5041:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5044:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5034:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5034:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5034:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5007:7:36"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5016:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5003:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5003:23:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5028:2:36",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4999:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4999:32:36"
                  },
                  "nodeType": "YulIf",
                  "src": "4996:52:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5057:36:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5083:9:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5070:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5070:23:36"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "5061:5:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5127:5:36"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "5102:24:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5102:31:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5102:31:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5142:15:36",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5152:5:36"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5142:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5166:42:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5193:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5204:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5189:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5189:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5176:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5176:32:36"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "5166:6:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4944:9:36",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4955:7:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4967:6:36",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4975:6:36",
                "type": ""
              }
            ],
            "src": "4899:315:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5324:332:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5370:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5379:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5382:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5372:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5372:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5372:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5345:7:36"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5354:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5341:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5341:23:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5366:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5337:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5337:32:36"
                  },
                  "nodeType": "YulIf",
                  "src": "5334:52:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5395:37:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5422:9:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5409:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5409:23:36"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "5399:6:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5475:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5484:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5487:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5477:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5477:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5477:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "5447:6:36"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5463:2:36",
                                "type": "",
                                "value": "64"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5467:1:36",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "5459:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5459:10:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5471:1:36",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5455:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5455:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5444:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5444:30:36"
                  },
                  "nodeType": "YulIf",
                  "src": "5441:50:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5500:96:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5568:9:36"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "5579:6:36"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5564:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5564:22:36"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "5588:7:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_array_address_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "5526:37:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5526:70:36"
                  },
                  "variables": [
                    {
                      "name": "value0_1",
                      "nodeType": "YulTypedName",
                      "src": "5504:8:36",
                      "type": ""
                    },
                    {
                      "name": "value1_1",
                      "nodeType": "YulTypedName",
                      "src": "5514:8:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5605:18:36",
                  "value": {
                    "name": "value0_1",
                    "nodeType": "YulIdentifier",
                    "src": "5615:8:36"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5605:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5632:18:36",
                  "value": {
                    "name": "value1_1",
                    "nodeType": "YulIdentifier",
                    "src": "5642:8:36"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "5632:6:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5282:9:36",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5293:7:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5305:6:36",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5313:6:36",
                "type": ""
              }
            ],
            "src": "5219:437:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5739:167:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5785:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5794:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5797:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5787:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5787:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5787:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5760:7:36"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5769:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5756:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5756:23:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5781:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5752:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5752:32:36"
                  },
                  "nodeType": "YulIf",
                  "src": "5749:52:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5810:29:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5829:9:36"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5823:5:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5823:16:36"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "5814:5:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5870:5:36"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "5848:21:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5848:28:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5848:28:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5885:15:36",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5895:5:36"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5885:6:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5705:9:36",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5716:7:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5728:6:36",
                "type": ""
              }
            ],
            "src": "5661:245:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5992:103:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6038:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6047:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6050:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6040:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6040:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6040:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6013:7:36"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6022:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6009:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6009:23:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6034:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6005:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6005:32:36"
                  },
                  "nodeType": "YulIf",
                  "src": "6002:52:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6063:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6079:9:36"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6073:5:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6073:16:36"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6063:6:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5958:9:36",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5969:7:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5981:6:36",
                "type": ""
              }
            ],
            "src": "5911:184:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6187:228:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6233:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6242:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6245:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6235:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6235:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6235:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6208:7:36"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6217:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6204:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6204:23:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6229:2:36",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6200:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6200:32:36"
                  },
                  "nodeType": "YulIf",
                  "src": "6197:52:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6258:33:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6281:9:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6268:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6268:23:36"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6258:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6300:45:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6330:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6341:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6326:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6326:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6313:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6313:32:36"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "6304:5:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6379:5:36"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "6354:24:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6354:31:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6354:31:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6394:15:36",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6404:5:36"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "6394:6:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6145:9:36",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6156:7:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6168:6:36",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6176:6:36",
                "type": ""
              }
            ],
            "src": "6100:315:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6656:710:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6703:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6712:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6715:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6705:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6705:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6705:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6677:7:36"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6686:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6673:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6673:23:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6698:3:36",
                        "type": "",
                        "value": "288"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6669:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6669:33:36"
                  },
                  "nodeType": "YulIf",
                  "src": "6666:53:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6728:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6744:9:36"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6738:5:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6738:16:36"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6728:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6763:38:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6786:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6797:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6782:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6782:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6776:5:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6776:25:36"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "6767:5:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6835:5:36"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "6810:24:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6810:31:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6810:31:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6850:15:36",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6860:5:36"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "6850:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6874:40:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6899:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6910:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6895:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6895:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6889:5:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6889:25:36"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "6878:7:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "6948:7:36"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "6923:24:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6923:33:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6923:33:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6965:17:36",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "6975:7:36"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "6965:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6991:40:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7016:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7027:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7012:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7012:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7006:5:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7006:25:36"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "6995:7:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "7065:7:36"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "7040:24:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7040:33:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7040:33:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7082:17:36",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "7092:7:36"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "7082:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7108:36:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7128:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7139:3:36",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7124:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7124:19:36"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7118:5:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7118:26:36"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "7108:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7153:36:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7173:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7184:3:36",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7169:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7169:19:36"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7163:5:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7163:26:36"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "7153:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7198:36:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7218:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7229:3:36",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7214:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7214:19:36"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7208:5:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7208:26:36"
                  },
                  "variableNames": [
                    {
                      "name": "value6",
                      "nodeType": "YulIdentifier",
                      "src": "7198:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7243:36:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7263:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7274:3:36",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7259:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7259:19:36"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7253:5:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7253:26:36"
                  },
                  "variableNames": [
                    {
                      "name": "value7",
                      "nodeType": "YulIdentifier",
                      "src": "7243:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7288:72:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7344:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7355:3:36",
                            "type": "",
                            "value": "256"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7340:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7340:19:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_enum_HoldStatusCode_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "7298:41:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7298:62:36"
                  },
                  "variableNames": [
                    {
                      "name": "value8",
                      "nodeType": "YulIdentifier",
                      "src": "7288:6:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_addresst_addresst_addresst_uint256t_uint256t_bytes32t_bytes32t_enum$_HoldStatusCode_$5396_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6558:9:36",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6569:7:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6581:6:36",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6589:6:36",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6597:6:36",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "6605:6:36",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "6613:6:36",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "6621:6:36",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "6629:6:36",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "6637:6:36",
                "type": ""
              },
              {
                "name": "value8",
                "nodeType": "YulTypedName",
                "src": "6645:6:36",
                "type": ""
              }
            ],
            "src": "6420:946:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7618:1096:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7665:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7674:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7677:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7667:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7667:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7667:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7639:7:36"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7648:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7635:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7635:23:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7660:3:36",
                        "type": "",
                        "value": "256"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7631:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7631:33:36"
                  },
                  "nodeType": "YulIf",
                  "src": "7628:53:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7690:28:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7708:2:36",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7712:1:36",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "7704:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7704:10:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7716:1:36",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "7700:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7700:18:36"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "7694:2:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7762:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7771:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7774:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7764:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7764:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7764:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7746:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "7733:12:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7733:23:36"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "7758:2:36"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7730:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7730:31:36"
                  },
                  "nodeType": "YulIf",
                  "src": "7727:51:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7787:101:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7843:9:36"
                          },
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7867:9:36"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "7854:12:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7854:23:36"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7839:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7839:39:36"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "7880:7:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bytes_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "7813:25:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7813:75:36"
                  },
                  "variables": [
                    {
                      "name": "value0_1",
                      "nodeType": "YulTypedName",
                      "src": "7791:8:36",
                      "type": ""
                    },
                    {
                      "name": "value1_1",
                      "nodeType": "YulTypedName",
                      "src": "7801:8:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7897:18:36",
                  "value": {
                    "name": "value0_1",
                    "nodeType": "YulIdentifier",
                    "src": "7907:8:36"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7897:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7924:18:36",
                  "value": {
                    "name": "value1_1",
                    "nodeType": "YulIdentifier",
                    "src": "7934:8:36"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "7924:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7951:42:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7978:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7989:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7974:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7974:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7961:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7961:32:36"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "7951:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8002:48:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8035:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8046:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8031:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8031:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "8012:18:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8012:38:36"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "8002:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8059:48:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8092:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8103:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8088:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8088:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "8069:18:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8069:38:36"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "8059:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8116:49:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8149:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8160:3:36",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8145:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8145:19:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "8126:18:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8126:39:36"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "8116:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8174:43:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8201:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8212:3:36",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8197:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8197:19:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "8184:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8184:33:36"
                  },
                  "variableNames": [
                    {
                      "name": "value6",
                      "nodeType": "YulIdentifier",
                      "src": "8174:6:36"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8271:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8280:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8283:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8273:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8273:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8273:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8249:9:36"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8260:3:36",
                                "type": "",
                                "value": "192"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8245:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8245:19:36"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "8232:12:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8232:33:36"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "8267:2:36"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8229:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8229:41:36"
                  },
                  "nodeType": "YulIf",
                  "src": "8226:61:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8296:111:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8352:9:36"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8380:9:36"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8391:3:36",
                                    "type": "",
                                    "value": "192"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8376:3:36"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8376:19:36"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "8363:12:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8363:33:36"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8348:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8348:49:36"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "8399:7:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bytes_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "8322:25:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8322:85:36"
                  },
                  "variables": [
                    {
                      "name": "value7_1",
                      "nodeType": "YulTypedName",
                      "src": "8300:8:36",
                      "type": ""
                    },
                    {
                      "name": "value8_1",
                      "nodeType": "YulTypedName",
                      "src": "8310:8:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8416:18:36",
                  "value": {
                    "name": "value7_1",
                    "nodeType": "YulIdentifier",
                    "src": "8426:8:36"
                  },
                  "variableNames": [
                    {
                      "name": "value7",
                      "nodeType": "YulIdentifier",
                      "src": "8416:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8443:18:36",
                  "value": {
                    "name": "value8_1",
                    "nodeType": "YulIdentifier",
                    "src": "8453:8:36"
                  },
                  "variableNames": [
                    {
                      "name": "value8",
                      "nodeType": "YulIdentifier",
                      "src": "8443:6:36"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8515:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8524:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8527:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8517:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8517:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8517:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8493:9:36"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8504:3:36",
                                "type": "",
                                "value": "224"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8489:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8489:19:36"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "8476:12:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8476:33:36"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "8511:2:36"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8473:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8473:41:36"
                  },
                  "nodeType": "YulIf",
                  "src": "8470:61:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8540:112:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8597:9:36"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8625:9:36"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8636:3:36",
                                    "type": "",
                                    "value": "224"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8621:3:36"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8621:19:36"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "8608:12:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8608:33:36"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8593:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8593:49:36"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "8644:7:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bytes_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "8567:25:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8567:85:36"
                  },
                  "variables": [
                    {
                      "name": "value9_1",
                      "nodeType": "YulTypedName",
                      "src": "8544:8:36",
                      "type": ""
                    },
                    {
                      "name": "value10_1",
                      "nodeType": "YulTypedName",
                      "src": "8554:9:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8661:18:36",
                  "value": {
                    "name": "value9_1",
                    "nodeType": "YulIdentifier",
                    "src": "8671:8:36"
                  },
                  "variableNames": [
                    {
                      "name": "value9",
                      "nodeType": "YulIdentifier",
                      "src": "8661:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8688:20:36",
                  "value": {
                    "name": "value10_1",
                    "nodeType": "YulIdentifier",
                    "src": "8699:9:36"
                  },
                  "variableNames": [
                    {
                      "name": "value10",
                      "nodeType": "YulIdentifier",
                      "src": "8688:7:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes_calldata_ptrt_bytes32t_addresst_addresst_addresst_uint256t_bytes_calldata_ptrt_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7503:9:36",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7514:7:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7526:6:36",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7534:6:36",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7542:6:36",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "7550:6:36",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "7558:6:36",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "7566:6:36",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "7574:6:36",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "7582:6:36",
                "type": ""
              },
              {
                "name": "value8",
                "nodeType": "YulTypedName",
                "src": "7590:6:36",
                "type": ""
              },
              {
                "name": "value9",
                "nodeType": "YulTypedName",
                "src": "7598:6:36",
                "type": ""
              },
              {
                "name": "value10",
                "nodeType": "YulTypedName",
                "src": "7606:7:36",
                "type": ""
              }
            ],
            "src": "7371:1343:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8955:1042:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9002:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9011:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9014:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9004:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9004:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9004:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8976:7:36"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8985:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8972:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8972:23:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8997:3:36",
                        "type": "",
                        "value": "256"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8968:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8968:33:36"
                  },
                  "nodeType": "YulIf",
                  "src": "8965:53:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9027:37:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9054:9:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9041:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9041:23:36"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "9031:6:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9073:28:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9091:2:36",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9095:1:36",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "9087:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9087:10:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9099:1:36",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "9083:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9083:18:36"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "9077:2:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9128:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9137:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9140:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9130:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9130:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9130:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "9116:6:36"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "9124:2:36"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9113:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9113:14:36"
                  },
                  "nodeType": "YulIf",
                  "src": "9110:34:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9153:84:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9209:9:36"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "9220:6:36"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9205:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9205:22:36"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "9229:7:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bytes_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "9179:25:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9179:58:36"
                  },
                  "variables": [
                    {
                      "name": "value0_1",
                      "nodeType": "YulTypedName",
                      "src": "9157:8:36",
                      "type": ""
                    },
                    {
                      "name": "value1_1",
                      "nodeType": "YulTypedName",
                      "src": "9167:8:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9246:18:36",
                  "value": {
                    "name": "value0_1",
                    "nodeType": "YulIdentifier",
                    "src": "9256:8:36"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "9246:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9273:18:36",
                  "value": {
                    "name": "value1_1",
                    "nodeType": "YulIdentifier",
                    "src": "9283:8:36"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "9273:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9300:42:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9327:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9338:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9323:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9323:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9310:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9310:32:36"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "9300:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9351:48:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9384:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9395:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9380:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9380:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "9361:18:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9361:38:36"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "9351:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9408:48:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9441:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9452:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9437:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9437:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "9418:18:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9418:38:36"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "9408:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9465:49:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9498:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9509:3:36",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9494:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9494:19:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "9475:18:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9475:39:36"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "9465:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9523:43:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9550:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9561:3:36",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9546:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9546:19:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9533:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9533:33:36"
                  },
                  "variableNames": [
                    {
                      "name": "value6",
                      "nodeType": "YulIdentifier",
                      "src": "9523:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9575:49:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9608:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9619:3:36",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9604:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9604:19:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9591:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9591:33:36"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "9579:8:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9653:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9662:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9665:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9655:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9655:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9655:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "9639:8:36"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "9649:2:36"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9636:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9636:16:36"
                  },
                  "nodeType": "YulIf",
                  "src": "9633:36:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9678:61:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9709:9:36"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "9720:8:36"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9705:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9705:24:36"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "9731:7:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "9688:16:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9688:51:36"
                  },
                  "variableNames": [
                    {
                      "name": "value7",
                      "nodeType": "YulIdentifier",
                      "src": "9678:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9748:49:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9781:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9792:3:36",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9777:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9777:19:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9764:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9764:33:36"
                  },
                  "variables": [
                    {
                      "name": "offset_2",
                      "nodeType": "YulTypedName",
                      "src": "9752:8:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9826:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9835:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9838:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9828:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9828:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9828:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_2",
                        "nodeType": "YulIdentifier",
                        "src": "9812:8:36"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "9822:2:36"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9809:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9809:16:36"
                  },
                  "nodeType": "YulIf",
                  "src": "9806:36:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9851:86:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9907:9:36"
                          },
                          {
                            "name": "offset_2",
                            "nodeType": "YulIdentifier",
                            "src": "9918:8:36"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9903:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9903:24:36"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "9929:7:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bytes_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "9877:25:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9877:60:36"
                  },
                  "variables": [
                    {
                      "name": "value8_1",
                      "nodeType": "YulTypedName",
                      "src": "9855:8:36",
                      "type": ""
                    },
                    {
                      "name": "value9_1",
                      "nodeType": "YulTypedName",
                      "src": "9865:8:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9946:18:36",
                  "value": {
                    "name": "value8_1",
                    "nodeType": "YulIdentifier",
                    "src": "9956:8:36"
                  },
                  "variableNames": [
                    {
                      "name": "value8",
                      "nodeType": "YulIdentifier",
                      "src": "9946:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9973:18:36",
                  "value": {
                    "name": "value9_1",
                    "nodeType": "YulIdentifier",
                    "src": "9983:8:36"
                  },
                  "variableNames": [
                    {
                      "name": "value9",
                      "nodeType": "YulIdentifier",
                      "src": "9973:6:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes_calldata_ptrt_bytes32t_addresst_addresst_addresst_uint256t_bytes_memory_ptrt_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8849:9:36",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8860:7:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8872:6:36",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8880:6:36",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8888:6:36",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "8896:6:36",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "8904:6:36",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "8912:6:36",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "8920:6:36",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "8928:6:36",
                "type": ""
              },
              {
                "name": "value8",
                "nodeType": "YulTypedName",
                "src": "8936:6:36",
                "type": ""
              },
              {
                "name": "value9",
                "nodeType": "YulTypedName",
                "src": "8944:6:36",
                "type": ""
              }
            ],
            "src": "8719:1278:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10085:186:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10131:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10140:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10143:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10133:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10133:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10133:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10106:7:36"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10115:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10102:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10102:23:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10127:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "10098:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10098:32:36"
                  },
                  "nodeType": "YulIf",
                  "src": "10095:52:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10156:36:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10182:9:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "10169:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10169:23:36"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "10160:5:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10225:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10234:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10237:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10227:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10227:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10227:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10214:5:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10221:1:36",
                            "type": "",
                            "value": "5"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "10211:2:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10211:12:36"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10204:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10204:20:36"
                  },
                  "nodeType": "YulIf",
                  "src": "10201:40:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10250:15:36",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "10260:5:36"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "10250:6:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_enum$_Standard_$8036",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10051:9:36",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "10062:7:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10074:6:36",
                "type": ""
              }
            ],
            "src": "10002:269:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10360:186:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10406:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10415:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10418:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10408:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10408:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10408:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10381:7:36"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10390:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10377:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10377:23:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10402:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "10373:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10373:32:36"
                  },
                  "nodeType": "YulIf",
                  "src": "10370:52:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10431:36:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10457:9:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "10444:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10444:23:36"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "10435:5:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10500:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10509:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10512:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10502:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10502:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10502:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10489:5:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10496:1:36",
                            "type": "",
                            "value": "3"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "10486:2:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10486:12:36"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10479:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10479:20:36"
                  },
                  "nodeType": "YulIf",
                  "src": "10476:40:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10525:15:36",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "10535:5:36"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "10525:6:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_enum$_TradeType_$8046",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10326:9:36",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "10337:7:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10349:6:36",
                "type": ""
              }
            ],
            "src": "10276:270:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10663:947:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10710:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10719:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10722:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10712:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10712:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10712:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10684:7:36"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10693:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10680:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10680:23:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10705:3:36",
                        "type": "",
                        "value": "224"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "10676:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10676:33:36"
                  },
                  "nodeType": "YulIf",
                  "src": "10673:53:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10735:23:36",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10755:2:36",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10749:5:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10749:9:36"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "10739:6:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10767:34:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "10789:6:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10797:3:36",
                        "type": "",
                        "value": "224"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10785:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10785:16:36"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "10771:10:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10876:22:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "10878:16:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10878:18:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10878:18:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "10819:10:36"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10839:2:36",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10843:1:36",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "10835:3:36"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10835:10:36"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10847:1:36",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "10831:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10831:18:36"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "10816:2:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10816:34:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "10855:10:36"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10867:6:36"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "10852:2:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10852:22:36"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "10813:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10813:62:36"
                  },
                  "nodeType": "YulIf",
                  "src": "10810:88:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10914:2:36",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "10918:10:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10907:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10907:22:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10907:22:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10938:29:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10957:9:36"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10951:5:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10951:16:36"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "10942:5:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11001:5:36"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "10976:24:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10976:31:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10976:31:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "11023:6:36"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11031:5:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11016:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11016:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11016:21:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11046:40:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11071:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11082:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11067:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11067:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "11061:5:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11061:25:36"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "11050:7:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "11120:7:36"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "11095:24:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11095:33:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11095:33:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11148:6:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11156:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11144:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11144:15:36"
                      },
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "11161:7:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11137:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11137:32:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11137:32:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11178:40:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11203:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11214:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11199:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11199:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "11193:5:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11193:25:36"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "11182:7:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "11252:7:36"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "11227:24:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11227:33:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11227:33:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11280:6:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11288:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11276:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11276:15:36"
                      },
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "11293:7:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11269:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11269:32:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11269:32:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11321:6:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11329:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11317:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11317:15:36"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11344:9:36"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11355:2:36",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11340:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11340:18:36"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "11334:5:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11334:25:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11310:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11310:50:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11310:50:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11380:6:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11388:3:36",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11376:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11376:16:36"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11404:9:36"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11415:3:36",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11400:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11400:19:36"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "11394:5:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11394:26:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11369:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11369:52:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11369:52:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11441:6:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11449:3:36",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11437:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11437:16:36"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11465:9:36"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11476:3:36",
                                "type": "",
                                "value": "160"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11461:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11461:19:36"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "11455:5:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11455:26:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11430:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11430:52:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11430:52:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11502:6:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11510:3:36",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11498:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11498:16:36"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11562:9:36"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11573:3:36",
                                "type": "",
                                "value": "192"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11558:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11558:19:36"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_enum_HoldStatusCode_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "11516:41:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11516:62:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11491:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11491:88:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11491:88:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11588:16:36",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "11598:6:36"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "11588:6:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_struct$_ERC20HoldData_$5467_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10629:9:36",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "10640:7:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10652:6:36",
                "type": ""
              }
            ],
            "src": "10551:1059:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11739:231:36",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11749:33:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "11763:7:36"
                      },
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11772:9:36"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "11759:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11759:23:36"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "11753:2:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11807:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11816:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11819:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11809:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11809:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11809:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "11798:2:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11802:3:36",
                        "type": "",
                        "value": "512"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "11794:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11794:12:36"
                  },
                  "nodeType": "YulIf",
                  "src": "11791:32:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11832:13:36",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "11842:3:36",
                    "type": "",
                    "value": "480"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "11836:2:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11869:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11878:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11881:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11871:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11871:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11871:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "11861:2:36"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "11865:2:36"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "11857:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11857:11:36"
                  },
                  "nodeType": "YulIf",
                  "src": "11854:31:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11894:19:36",
                  "value": {
                    "name": "headStart",
                    "nodeType": "YulIdentifier",
                    "src": "11904:9:36"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "11894:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11922:42:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11949:9:36"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "11960:2:36"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11945:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11945:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "11932:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11932:32:36"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "11922:6:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_struct$_TradeRequestInput_$8153_calldata_ptrt_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11697:9:36",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "11708:7:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11720:6:36",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11728:6:36",
                "type": ""
              }
            ],
            "src": "11615:355:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12045:110:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12091:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12100:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12103:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12093:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12093:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12093:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "12066:7:36"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12075:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12062:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12062:23:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12087:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "12058:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12058:32:36"
                  },
                  "nodeType": "YulIf",
                  "src": "12055:52:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12116:33:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12139:9:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "12126:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12126:23:36"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "12116:6:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12011:9:36",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "12022:7:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12034:6:36",
                "type": ""
              }
            ],
            "src": "11975:180:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12241:103:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12287:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12296:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12299:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12289:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12289:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12289:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "12262:7:36"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12271:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12258:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12258:23:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12283:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "12254:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12254:32:36"
                  },
                  "nodeType": "YulIf",
                  "src": "12251:52:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12312:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12328:9:36"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "12322:5:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12322:16:36"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "12312:6:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12207:9:36",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "12218:7:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12230:6:36",
                "type": ""
              }
            ],
            "src": "12160:184:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12433:225:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12479:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12488:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12491:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12481:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12481:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12481:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "12454:7:36"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12463:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12450:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12450:23:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12475:2:36",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "12446:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12446:32:36"
                  },
                  "nodeType": "YulIf",
                  "src": "12443:52:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12504:33:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12527:9:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "12514:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12514:23:36"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "12504:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12546:45:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12576:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12587:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12572:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12572:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "12559:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12559:32:36"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "12550:5:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12622:5:36"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "12600:21:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12600:28:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12600:28:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12637:15:36",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "12647:5:36"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "12637:6:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12391:9:36",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "12402:7:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12414:6:36",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12422:6:36",
                "type": ""
              }
            ],
            "src": "12349:309:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12764:276:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12810:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12819:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12822:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12812:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12812:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12812:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "12785:7:36"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12794:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12781:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12781:23:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12806:2:36",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "12777:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12777:32:36"
                  },
                  "nodeType": "YulIf",
                  "src": "12774:52:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12835:33:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12858:9:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "12845:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12845:23:36"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "12835:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12877:45:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12907:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12918:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12903:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12903:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "12890:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12890:32:36"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "12881:5:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12953:5:36"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "12931:21:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12931:28:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12931:28:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12968:15:36",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "12978:5:36"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "12968:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12992:42:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13019:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13030:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13015:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13015:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "13002:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13002:32:36"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "12992:6:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_boolt_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12714:9:36",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "12725:7:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12737:6:36",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12745:6:36",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "12753:6:36",
                "type": ""
              }
            ],
            "src": "12663:377:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13132:161:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13178:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13187:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13190:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13180:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13180:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13180:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "13153:7:36"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13162:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13149:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13149:23:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13174:2:36",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "13145:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13145:32:36"
                  },
                  "nodeType": "YulIf",
                  "src": "13142:52:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13203:33:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13226:9:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "13213:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13213:23:36"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "13203:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13245:42:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13272:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13283:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13268:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13268:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "13255:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13255:32:36"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "13245:6:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13090:9:36",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "13101:7:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13113:6:36",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "13121:6:36",
                "type": ""
              }
            ],
            "src": "13045:248:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13347:208:36",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13357:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13377:5:36"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "13371:5:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13371:12:36"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "13361:6:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13399:3:36"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "13404:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13392:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13392:19:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13392:19:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "13446:5:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13453:4:36",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13442:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13442:16:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "13464:3:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13469:4:36",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13460:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13460:14:36"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "13476:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "13420:21:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13420:63:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13420:63:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13492:57:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "13507:3:36"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "13520:6:36"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13528:2:36",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13516:3:36"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13516:15:36"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13537:2:36",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "13533:3:36"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13533:7:36"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "13512:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13512:29:36"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13503:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13503:39:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13544:4:36",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13499:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13499:50:36"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "13492:3:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_bytes",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13324:5:36",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13331:3:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "13339:3:36",
                "type": ""
              }
            ],
            "src": "13298:257:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13617:638:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13634:3:36"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "13649:5:36"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "13643:5:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13643:12:36"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13665:3:36",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13670:1:36",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "13661:3:36"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13661:11:36"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13674:1:36",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "13657:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13657:19:36"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "13639:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13639:38:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13627:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13627:51:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13627:51:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "13698:3:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13703:4:36",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13694:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13694:14:36"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "13720:5:36"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13727:4:36",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13716:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13716:16:36"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "13710:5:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13710:23:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13687:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13687:47:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13687:47:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "13754:3:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13759:4:36",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13750:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13750:14:36"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "13776:5:36"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13783:4:36",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13772:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13772:16:36"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "13766:5:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13766:23:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13743:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13743:47:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13743:47:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13799:43:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "13829:5:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13836:4:36",
                            "type": "",
                            "value": "0x60"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13825:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13825:16:36"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "13819:5:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13819:23:36"
                  },
                  "variables": [
                    {
                      "name": "memberValue0",
                      "nodeType": "YulTypedName",
                      "src": "13803:12:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memberValue0",
                        "nodeType": "YulIdentifier",
                        "src": "13882:12:36"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_enum_Standard",
                      "nodeType": "YulIdentifier",
                      "src": "13851:30:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13851:44:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13851:44:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "13915:3:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13920:4:36",
                            "type": "",
                            "value": "0x60"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13911:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13911:14:36"
                      },
                      {
                        "name": "memberValue0",
                        "nodeType": "YulIdentifier",
                        "src": "13927:12:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13904:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13904:36:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13904:36:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "13960:3:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13965:4:36",
                            "type": "",
                            "value": "0x80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13956:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13956:14:36"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "13996:5:36"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14003:4:36",
                                        "type": "",
                                        "value": "0x80"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13992:3:36"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13992:16:36"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "13986:5:36"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13986:23:36"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "13979:6:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13979:31:36"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "13972:6:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13972:39:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13949:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13949:63:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13949:63:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "14032:3:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14037:4:36",
                            "type": "",
                            "value": "0xa0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14028:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14028:14:36"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "14068:5:36"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14075:4:36",
                                        "type": "",
                                        "value": "0xa0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14064:3:36"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14064:16:36"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "14058:5:36"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14058:23:36"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "14051:6:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14051:31:36"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "14044:6:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14044:39:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14021:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14021:63:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14021:63:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "14093:45:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "14125:5:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14132:4:36",
                            "type": "",
                            "value": "0xc0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14121:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14121:16:36"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "14115:5:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14115:23:36"
                  },
                  "variables": [
                    {
                      "name": "memberValue0_1",
                      "nodeType": "YulTypedName",
                      "src": "14097:14:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14180:22:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "14182:16:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14182:18:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14182:18:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memberValue0_1",
                            "nodeType": "YulIdentifier",
                            "src": "14160:14:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14176:1:36",
                            "type": "",
                            "value": "3"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "14157:2:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14157:21:36"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14150:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14150:29:36"
                  },
                  "nodeType": "YulIf",
                  "src": "14147:55:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "14222:3:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14227:4:36",
                            "type": "",
                            "value": "0xc0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14218:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14218:14:36"
                      },
                      {
                        "name": "memberValue0_1",
                        "nodeType": "YulIdentifier",
                        "src": "14234:14:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14211:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14211:38:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14211:38:36"
                }
              ]
            },
            "name": "abi_encode_struct_UserTradeData",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13601:5:36",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13608:3:36",
                "type": ""
              }
            ],
            "src": "13560:695:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14379:63:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14396:3:36"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14401:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14389:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14389:19:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14389:19:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14417:19:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14428:3:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14433:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14424:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14424:12:36"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "14417:3:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "14355:3:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14360:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "14371:3:36",
                "type": ""
              }
            ],
            "src": "14260:182:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14586:137:36",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "14596:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14616:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "14610:5:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14610:13:36"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "14600:6:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "14658:6:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14666:4:36",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14654:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14654:17:36"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14673:3:36"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "14678:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "14632:21:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14632:53:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14632:53:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14694:23:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14705:3:36"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "14710:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14701:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14701:16:36"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "14694:3:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "14562:3:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14567:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "14578:3:36",
                "type": ""
              }
            ],
            "src": "14447:276:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14920:79:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14937:3:36"
                      },
                      {
                        "hexValue": "455243313832305f4143434550545f4d41474943",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14942:22:36",
                        "type": "",
                        "value": "ERC1820_ACCEPT_MAGIC"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14930:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14930:35:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14930:35:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14974:19:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14985:3:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14990:2:36",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14981:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14981:12:36"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "14974:3:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_a2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b4__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "14904:3:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "14912:3:36",
                "type": ""
              }
            ],
            "src": "14728:271:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15105:102:36",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15115:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15127:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15138:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15123:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15123:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15115:4:36"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15157:9:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "15172:6:36"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15188:3:36",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15193:1:36",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "15184:3:36"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15184:11:36"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15197:1:36",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "15180:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15180:19:36"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "15168:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15168:32:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15150:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15150:51:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15150:51:36"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15074:9:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "15085:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15096:4:36",
                "type": ""
              }
            ],
            "src": "15004:203:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15341:175:36",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15351:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15363:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15374:2:36",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15359:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15359:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15351:4:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "15386:29:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15404:3:36",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15409:1:36",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "15400:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15400:11:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15413:1:36",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "15396:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15396:19:36"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "15390:2:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15431:9:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "15446:6:36"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "15454:2:36"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "15442:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15442:15:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15424:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15424:34:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15424:34:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15478:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15489:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15474:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15474:18:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "15498:6:36"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "15506:2:36"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "15494:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15494:15:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15467:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15467:43:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15467:43:36"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15302:9:36",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "15313:6:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "15321:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15332:4:36",
                "type": ""
              }
            ],
            "src": "15212:304:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15678:218:36",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15688:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15700:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15711:2:36",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15696:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15696:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15688:4:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "15723:29:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15741:3:36",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15746:1:36",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "15737:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15737:11:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15750:1:36",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "15733:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15733:19:36"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "15727:2:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15768:9:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "15783:6:36"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "15791:2:36"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "15779:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15779:15:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15761:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15761:34:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15761:34:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15815:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15826:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15811:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15811:18:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "15835:6:36"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "15843:2:36"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "15831:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15831:15:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15804:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15804:43:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15804:43:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15867:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15878:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15863:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15863:18:36"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "15883:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15856:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15856:34:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15856:34:36"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15631:9:36",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "15642:6:36",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "15650:6:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "15658:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15669:4:36",
                "type": ""
              }
            ],
            "src": "15521:375:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16030:145:36",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16040:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16052:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16063:2:36",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16048:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16048:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16040:4:36"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16082:9:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "16097:6:36"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16113:3:36",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16118:1:36",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "16109:3:36"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16109:11:36"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16122:1:36",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "16105:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16105:19:36"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "16093:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16093:32:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16075:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16075:51:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16075:51:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16146:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16157:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16142:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16142:18:36"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "16162:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16135:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16135:34:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16135:34:36"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15991:9:36",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "16002:6:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "16010:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16021:4:36",
                "type": ""
              }
            ],
            "src": "15901:274:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16365:232:36",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16375:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16387:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16398:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16383:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16383:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16375:4:36"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16418:9:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "16433:6:36"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16449:3:36",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16454:1:36",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "16445:3:36"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16445:11:36"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16458:1:36",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "16441:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16441:19:36"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "16429:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16429:32:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16411:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16411:51:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16411:51:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16482:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16493:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16478:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16478:18:36"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "16498:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16471:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16471:34:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16471:34:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16525:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16536:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16521:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16521:18:36"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "16541:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16514:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16514:34:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16514:34:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16568:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16579:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16564:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16564:18:36"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "16584:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16557:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16557:34:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16557:34:36"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_bytes32_t_uint256_t_bytes32__to_t_address_t_bytes32_t_uint256_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16310:9:36",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "16321:6:36",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "16329:6:36",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "16337:6:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "16345:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16356:4:36",
                "type": ""
              }
            ],
            "src": "16180:417:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16731:145:36",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16741:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16753:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16764:2:36",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16749:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16749:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16741:4:36"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16783:9:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "16798:6:36"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16814:3:36",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16819:1:36",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "16810:3:36"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16810:11:36"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16823:1:36",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "16806:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16806:19:36"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "16794:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16794:32:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16776:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16776:51:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16776:51:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16847:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16858:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16843:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16843:18:36"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "16863:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16836:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16836:34:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16836:34:36"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16692:9:36",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "16703:6:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "16711:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16722:4:36",
                "type": ""
              }
            ],
            "src": "16602:274:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17032:507:36",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "17042:12:36",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "17052:2:36",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "17046:2:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "17063:32:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17081:9:36"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "17092:2:36"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17077:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17077:18:36"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "17067:6:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17111:9:36"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "17122:2:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17104:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17104:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17104:21:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "17134:17:36",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "17145:6:36"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "17138:3:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "17160:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "17180:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "17174:5:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17174:13:36"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "17164:6:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "17203:6:36"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "17211:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17196:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17196:22:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17196:22:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17227:25:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17238:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17249:2:36",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17234:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17234:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "17227:3:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "17261:29:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "17279:6:36"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "17287:2:36"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17275:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17275:15:36"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "17265:6:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "17299:10:36",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "17308:1:36",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "17303:1:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17367:146:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "17388:3:36"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "srcPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "17403:6:36"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "17397:5:36"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "17397:13:36"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "17420:3:36",
                                          "type": "",
                                          "value": "160"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "17425:1:36",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "17416:3:36"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "17416:11:36"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "17429:1:36",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "17412:3:36"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "17412:19:36"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "17393:3:36"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "17393:39:36"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "17381:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17381:52:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17381:52:36"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "17446:19:36",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "17457:3:36"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "17462:2:36"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "17453:3:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17453:12:36"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "17446:3:36"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "17478:25:36",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "17492:6:36"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "17500:2:36"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "17488:3:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17488:15:36"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "17478:6:36"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "17329:1:36"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "17332:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "17326:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17326:13:36"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "17340:18:36",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "17342:14:36",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "17351:1:36"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17354:1:36",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "17347:3:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17347:9:36"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "17342:1:36"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "17322:3:36",
                    "statements": []
                  },
                  "src": "17318:195:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17522:11:36",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "17530:3:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17522:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17001:9:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "17012:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17023:4:36",
                "type": ""
              }
            ],
            "src": "16881:658:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17639:92:36",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17649:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17661:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17672:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17657:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17657:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17649:4:36"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17691:9:36"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "17716:6:36"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "17709:6:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17709:14:36"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "17702:6:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17702:22:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17684:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17684:41:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17684:41:36"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17608:9:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "17619:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17630:4:36",
                "type": ""
              }
            ],
            "src": "17544:187:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17837:76:36",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17847:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17859:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17870:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17855:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17855:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17847:4:36"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17889:9:36"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "17900:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17882:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17882:25:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17882:25:36"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17806:9:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "17817:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17828:4:36",
                "type": ""
              }
            ],
            "src": "17736:177:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18047:145:36",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18057:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18069:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18080:2:36",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18065:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18065:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18057:4:36"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18099:9:36"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "18110:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18092:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18092:25:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18092:25:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18137:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18148:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18133:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18133:18:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "18157:6:36"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18173:3:36",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18178:1:36",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "18169:3:36"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18169:11:36"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18182:1:36",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "18165:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18165:19:36"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "18153:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18153:32:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18126:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18126:60:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18126:60:36"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18008:9:36",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "18019:6:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "18027:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18038:4:36",
                "type": ""
              }
            ],
            "src": "17918:274:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18354:218:36",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18364:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18376:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18387:2:36",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18372:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18372:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18364:4:36"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18406:9:36"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "18417:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18399:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18399:25:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18399:25:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "18433:29:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18451:3:36",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18456:1:36",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "18447:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18447:11:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18460:1:36",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "18443:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18443:19:36"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "18437:2:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18482:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18493:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18478:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18478:18:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "18502:6:36"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "18510:2:36"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "18498:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18498:15:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18471:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18471:43:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18471:43:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18534:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18545:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18530:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18530:18:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "18554:6:36"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "18562:2:36"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "18550:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18550:15:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18523:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18523:43:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18523:43:36"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address_t_address__to_t_bytes32_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18307:9:36",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "18318:6:36",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "18326:6:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "18334:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18345:4:36",
                "type": ""
              }
            ],
            "src": "18197:375:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18854:444:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18871:9:36"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "18882:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18864:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18864:25:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18864:25:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "18898:29:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18916:3:36",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18921:1:36",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "18912:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18912:11:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18925:1:36",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "18908:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18908:19:36"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "18902:2:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18947:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18958:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18943:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18943:18:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "18967:6:36"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "18975:2:36"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "18963:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18963:15:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18936:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18936:43:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18936:43:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18999:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19010:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18995:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18995:18:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "19019:6:36"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "19027:2:36"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "19015:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19015:15:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18988:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18988:43:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18988:43:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19051:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19062:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19047:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19047:18:36"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "19067:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19040:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19040:34:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19040:34:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19094:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19105:3:36",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19090:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19090:19:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19111:3:36",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19083:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19083:32:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19083:32:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "19124:59:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "19155:6:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19167:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19178:3:36",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19163:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19163:19:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "19138:16:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19138:45:36"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "19128:6:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19203:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19214:3:36",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19199:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19199:19:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "19224:6:36"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19232:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "19220:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19220:22:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19192:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19192:51:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19192:51:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19252:40:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "19277:6:36"
                      },
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "19285:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "19260:16:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19260:32:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19252:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes32_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18783:9:36",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "18794:6:36",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "18802:6:36",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "18810:6:36",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "18818:6:36",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "18826:6:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "18834:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18845:4:36",
                "type": ""
              }
            ],
            "src": "18577:721:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19688:422:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19705:9:36"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "19716:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19698:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19698:25:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19698:25:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "19732:29:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19750:3:36",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19755:1:36",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "19746:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19746:11:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19759:1:36",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "19742:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19742:19:36"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "19736:2:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19781:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19792:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19777:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19777:18:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "19801:6:36"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "19809:2:36"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "19797:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19797:15:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19770:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19770:43:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19770:43:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19833:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19844:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19829:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19829:18:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "19853:6:36"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "19861:2:36"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "19849:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19849:15:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19822:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19822:43:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19822:43:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19885:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19896:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19881:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19881:18:36"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "19901:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19874:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19874:34:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19874:34:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19928:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19939:3:36",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19924:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19924:19:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19945:3:36",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19917:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19917:32:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19917:32:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19969:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19980:3:36",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19965:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19965:19:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19986:1:36",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19958:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19958:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19958:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20008:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20019:3:36",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20004:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20004:19:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20025:3:36",
                        "type": "",
                        "value": "224"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19997:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19997:32:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19997:32:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20049:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20060:3:36",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20045:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20045:19:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20066:1:36",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20038:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20038:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20038:30:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20077:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20089:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20100:3:36",
                        "type": "",
                        "value": "256"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20085:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20085:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20077:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes32_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19633:9:36",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "19644:6:36",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "19652:6:36",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "19660:6:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "19668:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19679:4:36",
                "type": ""
              }
            ],
            "src": "19303:807:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20244:119:36",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20254:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20266:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20277:2:36",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20262:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20262:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20254:4:36"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20296:9:36"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "20307:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20289:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20289:25:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20289:25:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20334:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20345:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20330:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20330:18:36"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "20350:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20323:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20323:34:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20323:34:36"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20205:9:36",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "20216:6:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "20224:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20235:4:36",
                "type": ""
              }
            ],
            "src": "20115:248:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20542:239:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20559:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20570:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20552:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20552:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20552:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20593:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20604:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20589:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20589:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20609:2:36",
                        "type": "",
                        "value": "49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20582:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20582:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20582:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20632:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20643:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20628:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20628:18:36"
                      },
                      {
                        "hexValue": "53746172742064617465206e6565647320746f20626520736574206174206c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20648:34:36",
                        "type": "",
                        "value": "Start date needs to be set at le"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20621:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20621:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20621:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20703:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20714:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20699:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20699:18:36"
                      },
                      {
                        "hexValue": "6173742061207765656b206265666f7265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20719:19:36",
                        "type": "",
                        "value": "ast a week before"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20692:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20692:47:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20692:47:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20748:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20760:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20771:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20756:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20756:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20748:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_02ebd69188c7db9c3dd01f2aaa1d87221471968f5aa99525c48b99a1505380e0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20519:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20533:4:36",
                "type": ""
              }
            ],
            "src": "20368:413:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20960:254:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20977:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20988:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20970:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20970:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20970:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21011:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21022:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21007:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21007:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21027:2:36",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21000:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21000:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21000:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21050:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21061:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21046:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21046:18:36"
                      },
                      {
                        "hexValue": "54726164652063616e206f6e6c79206265206578656375746564206279206578",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21066:34:36",
                        "type": "",
                        "value": "Trade can only be executed by ex"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21039:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21039:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21039:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21121:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21132:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21117:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21117:18:36"
                      },
                      {
                        "hexValue": "65637574657220646566696e6564206174207472616465206372656174696f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21137:34:36",
                        "type": "",
                        "value": "ecuter defined at trade creation"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21110:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21110:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21110:62:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21181:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21193:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21204:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21189:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21189:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21181:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_05373b993917885459831a325920a48a75caf468c1ee77a796e72e930bff1b08__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20937:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20951:4:36",
                "type": ""
              }
            ],
            "src": "20786:428:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21393:223:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21410:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21421:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21403:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21403:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21403:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21444:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21455:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21440:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21440:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21460:2:36",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21433:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21433:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21433:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21483:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21494:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21479:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21479:18:36"
                      },
                      {
                        "hexValue": "546f6b656e73206f66207468652077726f6e67207374616e646172642073656e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21499:34:36",
                        "type": "",
                        "value": "Tokens of the wrong standard sen"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21472:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21472:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21472:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21554:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21565:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21550:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21550:18:36"
                      },
                      {
                        "hexValue": "74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21570:3:36",
                        "type": "",
                        "value": "t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21543:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21543:31:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21543:31:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21583:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21595:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21606:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21591:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21591:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21583:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0aed4c7d60c28efa628f3b3834329787d344f5899e54ae045c324776c24530d2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21370:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21384:4:36",
                "type": ""
              }
            ],
            "src": "21219:397:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21795:228:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21812:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21823:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21805:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21805:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21805:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21846:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21857:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21842:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21842:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21862:2:36",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21835:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21835:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21835:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21885:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21896:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21881:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21881:18:36"
                      },
                      {
                        "hexValue": "457468657220747261646573206e65656420746f206265206f66207479706520",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21901:34:36",
                        "type": "",
                        "value": "Ether trades need to be of type "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21874:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21874:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21874:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21956:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21967:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21952:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21952:18:36"
                      },
                      {
                        "hexValue": "457363726f77",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21972:8:36",
                        "type": "",
                        "value": "Escrow"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21945:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21945:36:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21945:36:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21990:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22002:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22013:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21998:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21998:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21990:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0b2b516375d20093ba5abecc0cd58e75e4a2fdc1bed15bafb457d94a3ba607a4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21772:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21786:4:36",
                "type": ""
              }
            ],
            "src": "21621:402:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22202:229:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22219:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22230:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22212:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22212:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22212:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22253:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22264:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22249:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22249:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22269:2:36",
                        "type": "",
                        "value": "39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22242:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22242:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22242:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22292:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22303:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22288:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22288:18:36"
                      },
                      {
                        "hexValue": "416d6f756e74206f66204552433134303020746f6b656e73206973206e6f7420",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22308:34:36",
                        "type": "",
                        "value": "Amount of ERC1400 tokens is not "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22281:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22281:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22281:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22363:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22374:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22359:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22359:18:36"
                      },
                      {
                        "hexValue": "636f7272656374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22379:9:36",
                        "type": "",
                        "value": "correct"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22352:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22352:37:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22352:37:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22398:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22410:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22421:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22406:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22406:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22398:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0d4b85b88b80072b90afee0107a9a29103e9d81c09bf5da6eae9a80121a9ce6b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "22179:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22193:4:36",
                "type": ""
              }
            ],
            "src": "22028:403:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22610:165:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22627:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22638:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22620:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22620:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22620:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22661:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22672:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22657:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22657:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22677:2:36",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22650:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22650:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22650:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22700:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22711:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22696:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22696:18:36"
                      },
                      {
                        "hexValue": "486f6c64206d757374206578697374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22716:17:36",
                        "type": "",
                        "value": "Hold must exist"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22689:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22689:45:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22689:45:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22743:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22755:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22766:2:36",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22751:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22751:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22743:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0e67fb1929d4780c273d05979a1e9884927127ac457215fefeddd8d222ee5b83__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "22587:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22601:4:36",
                "type": ""
              }
            ],
            "src": "22436:339:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22954:231:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22971:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22982:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22964:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22964:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22964:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23005:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23016:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23001:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23001:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23021:2:36",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22994:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22994:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22994:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23044:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23055:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23040:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23040:18:36"
                      },
                      {
                        "hexValue": "53656e646572206973206e6f7420616c6c6f77656420746f2063616e63656c20",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23060:34:36",
                        "type": "",
                        "value": "Sender is not allowed to cancel "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23033:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23033:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23033:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23115:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23126:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23111:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23111:18:36"
                      },
                      {
                        "hexValue": "747261646520283129",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23131:11:36",
                        "type": "",
                        "value": "trade (1)"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23104:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23104:39:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23104:39:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23152:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23164:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23175:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23160:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23160:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "23152:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_13a62c55f76587a2dd941a7afaba21d8be7cba385c183c78ab02aae0f038fccf__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "22931:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22945:4:36",
                "type": ""
              }
            ],
            "src": "22780:405:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23364:246:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23381:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23392:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23374:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23374:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23374:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23415:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23426:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23411:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23411:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23431:2:36",
                        "type": "",
                        "value": "56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23404:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23404:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23404:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23454:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23465:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23450:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23450:18:36"
                      },
                      {
                        "hexValue": "547261646520686173206e6f74206265656e20617070726f7665642062792061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23470:34:36",
                        "type": "",
                        "value": "Trade has not been approved by a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23443:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23443:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23443:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23525:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23536:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23521:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23521:18:36"
                      },
                      {
                        "hexValue": "6c6c20746f6b656e20636f6e74726f6c6c65727320796574",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23541:26:36",
                        "type": "",
                        "value": "ll token controllers yet"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23514:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23514:54:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23514:54:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23577:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23589:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23600:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23585:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23585:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "23577:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_20db3929816dba2a8275bb33ef449b4b1729f4b33bc79b910811933ea2508b0c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "23341:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "23355:4:36",
                "type": ""
              }
            ],
            "src": "23190:420:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23789:151:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23806:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23817:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23799:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23799:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23799:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23840:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23851:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23836:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23836:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23856:1:36",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23829:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23829:29:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23829:29:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23878:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23889:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23874:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23874:18:36"
                      },
                      {
                        "hexValue": "3530",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23894:4:36",
                        "type": "",
                        "value": "50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23867:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23867:32:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23867:32:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23908:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23920:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23931:2:36",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23916:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23916:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "23908:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_215d56ac8bbcf4ec574772ebea743ba30ac9d1c5e1b1ff899e5de1045f5df803__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "23766:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "23780:4:36",
                "type": ""
              }
            ],
            "src": "23615:325:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24119:168:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24136:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24147:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24129:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24129:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24129:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24170:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24181:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24166:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24166:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24186:2:36",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24159:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24159:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24159:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24209:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24220:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24205:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24205:18:36"
                      },
                      {
                        "hexValue": "4e6f207072696365206f776e657273686970",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24225:20:36",
                        "type": "",
                        "value": "No price ownership"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24198:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24198:48:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24198:48:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "24255:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24267:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24278:2:36",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24263:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24263:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "24255:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_242e1ec42c4d9d50f39212896afb445568abd9a5227b187111929b57dbb7bf2e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "24096:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "24110:4:36",
                "type": ""
              }
            ],
            "src": "23945:342:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24466:228:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24483:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24494:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24476:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24476:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24476:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24517:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24528:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24513:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24513:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24533:2:36",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24506:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24506:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24506:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24556:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24567:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24552:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24552:18:36"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24572:34:36",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24545:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24545:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24545:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24627:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24638:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24623:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24623:18:36"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24643:8:36",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24616:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24616:36:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24616:36:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "24661:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24673:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24684:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24669:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24669:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "24661:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "24443:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "24457:4:36",
                "type": ""
              }
            ],
            "src": "24292:402:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24873:230:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24890:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24901:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24883:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24883:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24883:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24924:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24935:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24920:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24920:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24940:2:36",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24913:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24913:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24913:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24963:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24974:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24959:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24959:18:36"
                      },
                      {
                        "hexValue": "53656e646572206973206e6f7420616c6c6f77656420746f20666f7263652074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24979:34:36",
                        "type": "",
                        "value": "Sender is not allowed to force t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24952:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24952:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24952:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25034:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25045:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25030:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25030:18:36"
                      },
                      {
                        "hexValue": "7261646520283129",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25050:10:36",
                        "type": "",
                        "value": "rade (1)"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25023:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25023:38:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25023:38:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "25070:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "25082:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25093:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "25078:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25078:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "25070:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_255ed6eb6f30d1485f3dcafc169da0ede71d63ed3f663207dcd881f82aecfb81__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "24850:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "24864:4:36",
                "type": ""
              }
            ],
            "src": "24699:404:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25282:238:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "25299:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25310:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25292:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25292:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25292:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25333:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25344:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25329:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25329:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25349:2:36",
                        "type": "",
                        "value": "48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25322:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25322:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25322:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25372:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25383:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25368:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25368:18:36"
                      },
                      {
                        "hexValue": "507269636520736574746572206973206e6f7420616e206f7261636c6520666f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25388:34:36",
                        "type": "",
                        "value": "Price setter is not an oracle fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25361:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25361:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25361:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25443:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25454:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25439:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25439:18:36"
                      },
                      {
                        "hexValue": "72207468697320746f6b656e20283129",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25459:18:36",
                        "type": "",
                        "value": "r this token (1)"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25432:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25432:46:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25432:46:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "25487:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "25499:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25510:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "25495:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25495:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "25487:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2f0a6c014b93879ada9ab209e5b7a62ef24399af93bf6c00c1529d6e0d627fce__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "25259:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "25273:4:36",
                "type": ""
              }
            ],
            "src": "25108:412:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25699:251:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "25716:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25727:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25709:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25709:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25709:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25750:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25761:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25746:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25746:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25766:2:36",
                        "type": "",
                        "value": "61"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25739:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25739:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25739:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25789:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25800:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25785:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25785:18:36"
                      },
                      {
                        "hexValue": "4f6e6c7920746f6b656e20636f6e74726f6c6c657273206f6620696e766f6c76",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25805:34:36",
                        "type": "",
                        "value": "Only token controllers of involv"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25778:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25778:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25778:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25860:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25871:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25856:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25856:18:36"
                      },
                      {
                        "hexValue": "656420746f6b656e732063616e20617070726f76652061207472616465",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25876:31:36",
                        "type": "",
                        "value": "ed tokens can approve a trade"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25849:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25849:59:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25849:59:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "25917:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "25929:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25940:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "25925:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25925:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "25917:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_373863ced32ac2eb9784d689aa574556050019791cd28b1e2777baf5ec9163da__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "25676:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "25690:4:36",
                "type": ""
              }
            ],
            "src": "25525:425:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26129:299:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "26146:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26157:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26139:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26139:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26139:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26180:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26191:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26176:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26176:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26196:2:36",
                        "type": "",
                        "value": "69"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26169:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26169:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26169:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26219:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26230:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26215:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26215:18:36"
                      },
                      {
                        "hexValue": "5472616465206578656375746572206e6565647320746f2062656c6f6e672074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26235:34:36",
                        "type": "",
                        "value": "Trade executer needs to belong t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26208:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26208:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26208:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26290:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26301:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26286:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26286:18:36"
                      },
                      {
                        "hexValue": "6f20746865206c697374206f6620616c6c6f7765642074726164652065786563",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26306:34:36",
                        "type": "",
                        "value": "o the list of allowed trade exec"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26279:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26279:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26279:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26361:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26372:3:36",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26357:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26357:19:36"
                      },
                      {
                        "hexValue": "7574657273",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26378:7:36",
                        "type": "",
                        "value": "uters"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26350:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26350:36:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26350:36:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "26395:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "26407:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26418:3:36",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "26403:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26403:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "26395:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3a6c5fb48c287bee984928951d89e75c588c9b0df86b8ef015c0ada5e6d8b633__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "26106:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "26120:4:36",
                "type": ""
              }
            ],
            "src": "25955:473:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26607:240:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "26624:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26635:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26617:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26617:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26617:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26658:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26669:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26654:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26654:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26674:2:36",
                        "type": "",
                        "value": "50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26647:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26647:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26647:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26697:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26708:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26693:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26693:18:36"
                      },
                      {
                        "hexValue": "54726164652063616e206e6f7420626520666f7263656420696620746f6b656e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26713:34:36",
                        "type": "",
                        "value": "Trade can not be forced if token"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26686:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26686:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26686:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26768:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26779:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26764:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26764:18:36"
                      },
                      {
                        "hexValue": "73206861766520636f6e74726f6c6c657273",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26784:20:36",
                        "type": "",
                        "value": "s have controllers"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26757:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26757:48:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26757:48:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "26814:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "26826:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26837:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "26822:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26822:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "26814:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3e59e007c4647d712b65f3ed438ec2af5656c5aa20116da30235e14fc2c290a3__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "26584:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "26598:4:36",
                "type": ""
              }
            ],
            "src": "26433:414:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27026:178:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "27043:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27054:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27036:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27036:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27036:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27077:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27088:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27073:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27073:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27093:2:36",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27066:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27066:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27066:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27116:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27127:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27112:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27112:18:36"
                      },
                      {
                        "hexValue": "416d6f756e74206f6620455448206973206e6f7420636f7272656374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "27132:30:36",
                        "type": "",
                        "value": "Amount of ETH is not correct"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27105:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27105:58:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27105:58:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "27172:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "27184:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27195:2:36",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "27180:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27180:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "27172:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3fdd50b576f957d76e864f96b9d0c991bd6b1f33ca019606da09db7f23167ec4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "27003:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "27017:4:36",
                "type": ""
              }
            ],
            "src": "26852:352:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27383:242:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "27400:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27411:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27393:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27393:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27393:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27434:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27445:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27430:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27430:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27450:2:36",
                        "type": "",
                        "value": "52"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27423:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27423:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27423:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27473:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27484:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27469:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27469:18:36"
                      },
                      {
                        "hexValue": "547261646520686173206e6f74206265656e2061636365707465642062792061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "27489:34:36",
                        "type": "",
                        "value": "Trade has not been accepted by a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27462:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27462:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27462:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27544:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27555:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27540:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27540:18:36"
                      },
                      {
                        "hexValue": "6c6c20746f6b656e20686f6c6465727320796574",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "27560:22:36",
                        "type": "",
                        "value": "ll token holders yet"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27533:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27533:50:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27533:50:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "27592:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "27604:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27615:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "27600:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27600:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "27592:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4b556a5d77d5a92d99d2da30cbb6be3fd94832b2e3e5f440b20345d863b04042__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "27360:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "27374:4:36",
                "type": ""
              }
            ],
            "src": "27209:416:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27804:231:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "27821:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27832:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27814:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27814:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27814:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27855:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27866:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27851:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27851:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27871:2:36",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27844:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27844:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27844:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27894:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27905:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27890:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27890:18:36"
                      },
                      {
                        "hexValue": "53656e646572206973206e6f7420616c6c6f77656420746f2063616e63656c20",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "27910:34:36",
                        "type": "",
                        "value": "Sender is not allowed to cancel "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27883:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27883:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27883:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27965:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27976:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27961:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27961:18:36"
                      },
                      {
                        "hexValue": "747261646520283029",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "27981:11:36",
                        "type": "",
                        "value": "trade (0)"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27954:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27954:39:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27954:39:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "28002:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "28014:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28025:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "28010:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28010:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "28002:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5d6836f0c0e087667fc172041236feaf9634db8287593900fb516b3a15e093e3__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "27781:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "27795:4:36",
                "type": ""
              }
            ],
            "src": "27630:405:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28214:231:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "28231:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28242:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28224:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28224:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28224:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28265:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28276:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28261:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28261:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28281:2:36",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28254:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28254:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28254:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28304:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28315:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28300:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28300:18:36"
                      },
                      {
                        "hexValue": "53656e646572206973206e6f7420616c6c6f77656420746f2063616e63656c20",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "28320:34:36",
                        "type": "",
                        "value": "Sender is not allowed to cancel "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28293:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28293:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28293:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28375:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28386:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28371:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28371:18:36"
                      },
                      {
                        "hexValue": "747261646520283329",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "28391:11:36",
                        "type": "",
                        "value": "trade (3)"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28364:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28364:39:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28364:39:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "28412:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "28424:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28435:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "28420:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28420:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "28412:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_62915fc4bdc23f948b008ac5bb93785842503d33f35707b31a531df5ef8b008f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "28191:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "28205:4:36",
                "type": ""
              }
            ],
            "src": "28040:405:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28624:151:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "28641:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28652:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28634:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28634:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28634:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28675:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28686:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28671:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28671:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28691:1:36",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28664:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28664:29:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28664:29:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28713:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28724:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28709:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28709:18:36"
                      },
                      {
                        "hexValue": "3535",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "28729:4:36",
                        "type": "",
                        "value": "55"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28702:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28702:32:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28702:32:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "28743:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "28755:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28766:2:36",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "28751:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28751:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "28743:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6590fa52fa76f967656340b874bc9ca09733c2fddea9886210ebcbbceee04b35__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "28601:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "28615:4:36",
                "type": ""
              }
            ],
            "src": "28450:325:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28954:237:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "28971:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28982:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28964:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28964:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28964:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29005:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29016:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29001:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29001:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29021:2:36",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28994:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28994:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28994:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29044:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29055:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29040:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29040:18:36"
                      },
                      {
                        "hexValue": "507269636520697320686967686572207468616e20616d6f756e742065736372",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "29060:34:36",
                        "type": "",
                        "value": "Price is higher than amount escr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29033:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29033:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29033:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29115:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29126:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29111:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29111:18:36"
                      },
                      {
                        "hexValue": "6f7765642f617574686f72697a6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "29131:17:36",
                        "type": "",
                        "value": "owed/authorized"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29104:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29104:45:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29104:45:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "29158:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "29170:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29181:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "29166:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29166:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "29158:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6cb1a1c99e78d317001cb18e0e43982675e357ca53b7a61f1a60755ef796f773__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "28931:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "28945:4:36",
                "type": ""
              }
            ],
            "src": "28780:411:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "29370:173:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "29387:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29398:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29380:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29380:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29380:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29421:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29432:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29417:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29417:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29437:2:36",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29410:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29410:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29410:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29460:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29471:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29456:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29456:18:36"
                      },
                      {
                        "hexValue": "45787069726174696f6e20646174652069732070617374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "29476:25:36",
                        "type": "",
                        "value": "Expiration date is past"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29449:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29449:53:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29449:53:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "29511:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "29523:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29534:2:36",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "29519:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29519:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "29511:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7ec5e5b6d8986751e9975433d52bdbaec91cf6fa3fa30d8651373347427b1a8b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "29347:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "29361:4:36",
                "type": ""
              }
            ],
            "src": "29196:347:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "29722:250:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "29739:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29750:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29732:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29732:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29732:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29773:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29784:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29769:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29769:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29789:2:36",
                        "type": "",
                        "value": "60"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29762:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29762:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29762:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29812:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29823:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29808:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29808:18:36"
                      },
                      {
                        "hexValue": "416c6c6f77616e6365206e6565647320746f2062652070726f76696465642069",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "29828:34:36",
                        "type": "",
                        "value": "Allowance needs to be provided i"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29801:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29801:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29801:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29883:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29894:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29879:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29879:18:36"
                      },
                      {
                        "hexValue": "6e20746f6b656e20736d61727420636f6e7472616374206669727374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "29899:30:36",
                        "type": "",
                        "value": "n token smart contract first"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29872:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29872:58:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29872:58:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "29939:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "29951:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29962:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "29947:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29947:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "29939:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_89aa5a265da805686932ae094ba24a71109e8058a4d7df537bdb317139a2f40b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "29699:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "29713:4:36",
                "type": ""
              }
            ],
            "src": "29548:424:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "30151:166:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "30168:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30179:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "30161:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30161:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30161:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "30202:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30213:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "30198:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30198:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30218:2:36",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "30191:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30191:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30191:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "30241:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30252:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "30237:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30237:18:36"
                      },
                      {
                        "hexValue": "57726f6e6720746f6b656e2073656e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "30257:18:36",
                        "type": "",
                        "value": "Wrong token sent"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "30230:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30230:46:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30230:46:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "30285:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "30297:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30308:2:36",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "30293:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30293:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "30285:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8ee647a01aa5f1bda643aa6834c1b9128a69a3f433a02ac84adf7f3b27e1e0ee__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "30128:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "30142:4:36",
                "type": ""
              }
            ],
            "src": "29977:340:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "30496:181:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "30513:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30524:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "30506:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30506:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30506:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "30547:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30558:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "30543:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30543:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30563:2:36",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "30536:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30536:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30536:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "30586:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30597:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "30582:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30582:18:36"
                      },
                      {
                        "hexValue": "546f6b656e207374616e64617264206d75737420626520686f6c6461626c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "30602:33:36",
                        "type": "",
                        "value": "Token standard must be holdable"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "30575:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30575:61:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30575:61:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "30645:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "30657:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30668:2:36",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "30653:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30653:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "30645:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8f3fb3eca663334b08617a28f5e55e2698b004ee0a964aa2bc92825ec7c73641__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "30473:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "30487:4:36",
                "type": ""
              }
            ],
            "src": "30322:355:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "30856:182:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "30873:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30884:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "30866:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30866:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30866:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "30907:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30918:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "30903:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30903:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30923:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "30896:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30896:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30896:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "30946:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30957:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "30942:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30942:18:36"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "30962:34:36",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "30935:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30935:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30935:62:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "31006:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "31018:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "31029:2:36",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "31014:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31014:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "31006:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "30833:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "30847:4:36",
                "type": ""
              }
            ],
            "src": "30682:356:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "31217:181:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "31234:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "31245:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "31227:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31227:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "31227:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "31268:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "31279:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "31264:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "31264:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "31284:2:36",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "31257:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31257:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "31257:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "31307:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "31318:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "31303:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "31303:18:36"
                      },
                      {
                        "hexValue": "746f6b656e2063616e206e6f742062652061207a65726f2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "31323:33:36",
                        "type": "",
                        "value": "token can not be a zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "31296:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31296:61:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "31296:61:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "31366:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "31378:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "31389:2:36",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "31374:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31374:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "31366:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9bca14e5cc753f0d9d21c7a81c2e4a61f9edd91f8ff260da709d961518ab2f18__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "31194:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "31208:4:36",
                "type": ""
              }
            ],
            "src": "31043:355:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "31577:180:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "31594:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "31605:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "31587:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31587:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "31587:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "31628:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "31639:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "31624:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "31624:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "31644:2:36",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "31617:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31617:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "31617:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "31667:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "31678:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "31663:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "31663:18:36"
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e206f6e207072696365206f776e657273686970",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "31683:32:36",
                        "type": "",
                        "value": "Competition on price ownership"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "31656:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31656:60:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "31656:60:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "31725:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "31737:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "31748:2:36",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "31733:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31733:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "31725:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9cca473d4699184ddb1b521cc84943981ca1f9ae354f32feb4ed94760c4d4047__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "31554:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "31568:4:36",
                "type": ""
              }
            ],
            "src": "31403:354:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "31936:223:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "31953:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "31964:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "31946:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31946:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "31946:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "31987:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "31998:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "31983:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "31983:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "32003:2:36",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "31976:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31976:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "31976:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "32026:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "32037:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "32022:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32022:18:36"
                      },
                      {
                        "hexValue": "53656e646572206973206e6f74206120746f6b656e20636f6e74726f6c6c6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "32042:34:36",
                        "type": "",
                        "value": "Sender is not a token controller"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "32015:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32015:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "32015:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "32097:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "32108:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "32093:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32093:18:36"
                      },
                      {
                        "hexValue": "2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "32113:3:36",
                        "type": "",
                        "value": "."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "32086:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32086:31:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "32086:31:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "32126:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "32138:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "32149:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "32134:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32134:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "32126:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a20f967af876332f8e5cf464602ff6aaa46bca373759b506dfded8592e2d84c8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "31913:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "31927:4:36",
                "type": ""
              }
            ],
            "src": "31762:397:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "32338:176:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "32355:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "32366:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "32348:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32348:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "32348:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "32389:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "32400:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "32385:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32385:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "32405:2:36",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "32378:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32378:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "32378:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "32428:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "32439:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "32424:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32424:18:36"
                      },
                      {
                        "hexValue": "6578656375746554726164652063616e2062652063616c6c6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "32444:28:36",
                        "type": "",
                        "value": "executeTrade can be called"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "32417:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32417:56:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "32417:56:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "32482:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "32494:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "32505:2:36",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "32490:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32490:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "32482:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a65d6f43237034d44b2b9bea23e2173099b9a2624f45373df43a0b386609eb3c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "32315:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "32329:4:36",
                "type": ""
              }
            ],
            "src": "32164:350:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "32693:238:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "32710:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "32721:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "32703:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32703:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "32703:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "32744:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "32755:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "32740:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32740:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "32760:2:36",
                        "type": "",
                        "value": "48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "32733:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32733:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "32733:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "32783:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "32794:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "32779:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32779:18:36"
                      },
                      {
                        "hexValue": "507269636520736574746572206973206e6f7420616e206f7261636c6520666f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "32799:34:36",
                        "type": "",
                        "value": "Price setter is not an oracle fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "32772:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32772:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "32772:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "32854:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "32865:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "32850:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32850:18:36"
                      },
                      {
                        "hexValue": "72207468697320746f6b656e20283229",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "32870:18:36",
                        "type": "",
                        "value": "r this token (2)"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "32843:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32843:46:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "32843:46:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "32898:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "32910:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "32921:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "32906:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32906:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "32898:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b1178f18a5aa1a32a6e2280a977824c520f59de733c77c9821fa1a6ad0758d01__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "32670:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "32684:4:36",
                "type": ""
              }
            ],
            "src": "32519:412:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "33110:226:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "33127:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "33138:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "33120:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33120:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "33120:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "33161:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "33172:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "33157:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "33157:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "33177:2:36",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "33150:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33150:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "33150:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "33200:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "33211:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "33196:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "33196:18:36"
                      },
                      {
                        "hexValue": "547261646520616c72656164792061636365707465642062792074686520686f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "33216:34:36",
                        "type": "",
                        "value": "Trade already accepted by the ho"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "33189:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33189:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "33189:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "33271:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "33282:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "33267:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "33267:18:36"
                      },
                      {
                        "hexValue": "6c646572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "33287:6:36",
                        "type": "",
                        "value": "lder"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "33260:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33260:34:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "33260:34:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "33303:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "33315:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "33326:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "33311:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33311:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "33303:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b5bb3f67205aac1ef56c0f0d2a8a3721a1e2cbbeeb73b468e67cc7251df85270__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "33087:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "33101:4:36",
                "type": ""
              }
            ],
            "src": "32936:400:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "33515:232:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "33532:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "33543:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "33525:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33525:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "33525:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "33566:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "33577:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "33562:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "33562:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "33582:2:36",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "33555:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33555:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "33555:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "33605:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "33616:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "33601:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "33601:18:36"
                      },
                      {
                        "hexValue": "4f6e6c79207265676973746572656420686f6c646572732063616e2061636365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "33621:34:36",
                        "type": "",
                        "value": "Only registered holders can acce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "33594:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33594:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "33594:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "33676:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "33687:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "33672:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "33672:18:36"
                      },
                      {
                        "hexValue": "70742061207472616465",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "33692:12:36",
                        "type": "",
                        "value": "pt a trade"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "33665:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33665:40:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "33665:40:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "33714:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "33726:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "33737:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "33722:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33722:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "33714:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b87811a9660efbe433e1bf8fc747435558a7cca8d25afc47f3b0721d2694b1dd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "33492:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "33506:4:36",
                "type": ""
              }
            ],
            "src": "33341:406:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "33926:180:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "33943:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "33954:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "33936:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33936:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "33936:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "33977:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "33988:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "33973:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "33973:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "33993:2:36",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "33966:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33966:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "33966:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "34016:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "34027:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "34012:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "34012:18:36"
                      },
                      {
                        "hexValue": "496e76616c696420746f6b656e5374616e646172642070726f7669646564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "34032:32:36",
                        "type": "",
                        "value": "Invalid tokenStandard provided"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "34005:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "34005:60:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "34005:60:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "34074:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "34086:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "34097:2:36",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "34082:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "34082:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "34074:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c877a4103bc121fd41358537bbacb20b7d369de62eb7417357dd35bafcfe9e8b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "33903:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "33917:4:36",
                "type": ""
              }
            ],
            "src": "33752:354:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "34285:177:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "34302:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "34313:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "34295:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "34295:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "34295:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "34336:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "34347:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "34332:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "34332:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "34352:2:36",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "34325:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "34325:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "34325:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "34375:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "34386:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "34371:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "34371:18:36"
                      },
                      {
                        "hexValue": "537761707320636f6e7472616374206973206e6f74206f776e6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "34391:29:36",
                        "type": "",
                        "value": "Swaps contract is not owned"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "34364:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "34364:57:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "34364:57:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "34430:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "34442:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "34453:2:36",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "34438:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "34438:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "34430:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c96902dc6641465bcb47d51e789da6011d4ef6e7cace86feca178d31470e323a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "34262:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "34276:4:36",
                "type": ""
              }
            ],
            "src": "34111:351:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "34641:179:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "34658:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "34669:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "34651:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "34651:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "34651:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "34692:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "34703:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "34688:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "34688:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "34708:2:36",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "34681:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "34681:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "34681:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "34731:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "34742:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "34727:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "34727:18:36"
                      },
                      {
                        "hexValue": "53656e646572206973206e6f742061207072696365206f7261636c652e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "34747:31:36",
                        "type": "",
                        "value": "Sender is not a price oracle."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "34720:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "34720:59:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "34720:59:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "34788:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "34800:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "34811:2:36",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "34796:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "34796:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "34788:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cbcf36d182174f136d2e0dc28ab771dc911d5712b5b9ea7fb39228ecd0c9d185__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "34618:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "34632:4:36",
                "type": ""
              }
            ],
            "src": "34467:353:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "34999:244:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "35016:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "35027:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "35009:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "35009:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "35009:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "35050:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "35061:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "35046:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "35046:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "35066:2:36",
                        "type": "",
                        "value": "54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "35039:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "35039:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "35039:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "35089:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "35100:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "35085:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "35085:18:36"
                      },
                      {
                        "hexValue": "54726164652063616e206f6e6c79206265206578656375746564206f6e206f72",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "35105:34:36",
                        "type": "",
                        "value": "Trade can only be executed on or"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "35078:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "35078:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "35078:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "35160:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "35171:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "35156:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "35156:18:36"
                      },
                      {
                        "hexValue": "20616674657220736574746c656d656e742064617465",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "35176:24:36",
                        "type": "",
                        "value": " after settlement date"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "35149:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "35149:52:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "35149:52:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "35210:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "35222:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "35233:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "35218:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "35218:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "35210:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc7a1d4adabd6d310d870246894e2ed12129fc57e2852560b268c1d1b670f52f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "34976:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "34990:4:36",
                "type": ""
              }
            ],
            "src": "34825:418:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "35422:246:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "35439:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "35450:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "35432:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "35432:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "35432:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "35473:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "35484:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "35469:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "35469:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "35489:2:36",
                        "type": "",
                        "value": "56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "35462:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "35462:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "35462:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "35512:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "35523:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "35508:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "35508:18:36"
                      },
                      {
                        "hexValue": "54726164652063616e277420626520666f7263656420617320746f6b656e7320",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "35528:34:36",
                        "type": "",
                        "value": "Trade can't be forced as tokens "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "35501:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "35501:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "35501:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "35583:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "35594:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "35579:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "35579:18:36"
                      },
                      {
                        "hexValue": "617265206e6f7420617661696c61626c6520736f20666172",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "35599:26:36",
                        "type": "",
                        "value": "are not available so far"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "35572:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "35572:54:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "35572:54:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "35635:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "35647:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "35658:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "35643:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "35643:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "35635:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cfd41566fc83253424c692dd5977dabc40d4800a378b116731c43ead1d396f63__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "35399:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "35413:4:36",
                "type": ""
              }
            ],
            "src": "35248:420:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "35847:232:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "35864:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "35875:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "35857:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "35857:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "35857:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "35898:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "35909:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "35894:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "35894:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "35914:2:36",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "35887:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "35887:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "35887:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "35937:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "35948:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "35933:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "35933:18:36"
                      },
                      {
                        "hexValue": "496e76616c696420746f6b656e207374616e6461726420666f7220686f6c6420",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "35953:34:36",
                        "type": "",
                        "value": "Invalid token standard for hold "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "35926:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "35926:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "35926:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "36008:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "36019:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "36004:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "36004:18:36"
                      },
                      {
                        "hexValue": "74726164652074797065",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "36024:12:36",
                        "type": "",
                        "value": "trade type"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "35997:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "35997:40:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "35997:40:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "36046:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "36058:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "36069:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "36054:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "36054:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "36046:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d2053e1061c836597f4dea813fbe2c6ba0c3d847ab0cb01c7bf3e51a4ada89bb__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "35824:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "35838:4:36",
                "type": ""
              }
            ],
            "src": "35673:406:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "36258:224:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "36275:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "36286:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "36268:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "36268:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "36268:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "36309:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "36320:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "36305:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "36305:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "36325:2:36",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "36298:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "36298:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "36298:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "36348:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "36359:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "36344:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "36344:18:36"
                      },
                      {
                        "hexValue": "546f6b656e73206f66207468652077726f6e6720706172746974696f6e207365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "36364:34:36",
                        "type": "",
                        "value": "Tokens of the wrong partition se"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "36337:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "36337:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "36337:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "36419:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "36430:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "36415:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "36415:18:36"
                      },
                      {
                        "hexValue": "6e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "36435:4:36",
                        "type": "",
                        "value": "nt"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "36408:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "36408:32:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "36408:32:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "36449:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "36461:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "36472:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "36457:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "36457:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "36449:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d2707e93029f7cfd1559052cc8a7011948874a8a768af73b9e30b493e73abe98__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "36235:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "36249:4:36",
                "type": ""
              }
            ],
            "src": "36084:398:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "36661:230:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "36678:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "36689:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "36671:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "36671:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "36671:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "36712:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "36723:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "36708:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "36708:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "36728:2:36",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "36701:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "36701:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "36701:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "36751:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "36762:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "36747:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "36747:18:36"
                      },
                      {
                        "hexValue": "53656e646572206973206e6f7420616c6c6f77656420746f20666f7263652074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "36767:34:36",
                        "type": "",
                        "value": "Sender is not allowed to force t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "36740:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "36740:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "36740:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "36822:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "36833:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "36818:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "36818:18:36"
                      },
                      {
                        "hexValue": "7261646520283029",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "36838:10:36",
                        "type": "",
                        "value": "rade (0)"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "36811:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "36811:38:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "36811:38:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "36858:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "36870:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "36881:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "36866:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "36866:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "36858:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d5872adc53feb1228a23992569f03c41f99efcc8573122308ea2220b7a8481b5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "36638:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "36652:4:36",
                "type": ""
              }
            ],
            "src": "36487:404:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "37070:238:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "37087:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "37098:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "37080:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "37080:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "37080:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "37121:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "37132:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "37117:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "37117:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "37137:2:36",
                        "type": "",
                        "value": "48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "37110:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "37110:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "37110:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "37160:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "37171:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "37156:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "37156:18:36"
                      },
                      {
                        "hexValue": "412074726164652063616e206e6f742062652063726561746564207769746820",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "37176:34:36",
                        "type": "",
                        "value": "A trade can not be created with "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "37149:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "37149:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "37149:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "37231:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "37242:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "37227:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "37227:18:36"
                      },
                      {
                        "hexValue": "746865207a65726f2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "37247:18:36",
                        "type": "",
                        "value": "the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "37220:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "37220:46:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "37220:46:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "37275:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "37287:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "37298:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "37283:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "37283:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "37275:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d7422c5722be9eca0f8e40021c8dfba381e5cf7f3a04965f64b9b68b5a46c4e9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "37047:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "37061:4:36",
                "type": ""
              }
            ],
            "src": "36896:412:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "37487:245:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "37504:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "37515:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "37497:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "37497:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "37497:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "37538:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "37549:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "37534:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "37534:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "37554:2:36",
                        "type": "",
                        "value": "55"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "37527:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "37527:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "37527:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "37577:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "37588:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "37573:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "37573:18:36"
                      },
                      {
                        "hexValue": "486f6c64206e6565647320746f2062652070726f766964656420696e20746f6b",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "37593:34:36",
                        "type": "",
                        "value": "Hold needs to be provided in tok"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "37566:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "37566:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "37566:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "37648:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "37659:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "37644:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "37644:18:36"
                      },
                      {
                        "hexValue": "656e20736d61727420636f6e7472616374206669727374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "37664:25:36",
                        "type": "",
                        "value": "en smart contract first"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "37637:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "37637:53:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "37637:53:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "37699:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "37711:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "37722:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "37707:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "37707:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "37699:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_da45f966b1666be0485ea33966a8cad21440f8e36525938af606e1c834d9b4c8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "37464:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "37478:4:36",
                "type": ""
              }
            ],
            "src": "37313:419:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "37911:231:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "37928:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "37939:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "37921:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "37921:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "37921:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "37962:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "37973:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "37958:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "37958:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "37978:2:36",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "37951:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "37951:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "37951:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "38001:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "38012:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "37997:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "37997:18:36"
                      },
                      {
                        "hexValue": "53656e646572206973206e6f7420616c6c6f77656420746f2063616e63656c20",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "38017:34:36",
                        "type": "",
                        "value": "Sender is not allowed to cancel "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "37990:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "37990:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "37990:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "38072:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "38083:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "38068:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "38068:18:36"
                      },
                      {
                        "hexValue": "747261646520283229",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "38088:11:36",
                        "type": "",
                        "value": "trade (2)"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "38061:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "38061:39:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "38061:39:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "38109:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "38121:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "38132:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "38117:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "38117:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "38109:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ddc0ea0a3c16467f3e90962bae7c77db78af2e3817b9cf66cef0d9bf75e269eb__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "37888:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "37902:4:36",
                "type": ""
              }
            ],
            "src": "37737:405:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "38321:170:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "38338:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "38349:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "38331:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "38331:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "38331:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "38372:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "38383:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "38368:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "38368:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "38388:2:36",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "38361:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "38361:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "38361:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "38411:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "38422:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "38407:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "38407:18:36"
                      },
                      {
                        "hexValue": "5472616465206973206e6f742070656e64696e67",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "38427:22:36",
                        "type": "",
                        "value": "Trade is not pending"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "38400:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "38400:50:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "38400:50:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "38459:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "38471:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "38482:2:36",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "38467:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "38467:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "38459:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e231b6203d554050a3d3199e807f8cbd9f29dd790d2450a81df72ae0c3a2c875__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "38298:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "38312:4:36",
                "type": ""
              }
            ],
            "src": "38147:344:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "38670:151:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "38687:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "38698:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "38680:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "38680:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "38680:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "38721:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "38732:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "38717:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "38717:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "38737:1:36",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "38710:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "38710:29:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "38710:29:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "38759:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "38770:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "38755:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "38755:18:36"
                      },
                      {
                        "hexValue": "3537",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "38775:4:36",
                        "type": "",
                        "value": "57"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "38748:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "38748:32:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "38748:32:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "38789:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "38801:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "38812:2:36",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "38797:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "38797:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "38789:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e921da22f871c25c63f06c1365385cbb26397f64f79055cdbab32187a9377d16__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "38647:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "38661:4:36",
                "type": ""
              }
            ],
            "src": "38496:325:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "39000:227:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "39017:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "39028:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "39010:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "39010:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "39010:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "39051:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "39062:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "39047:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "39047:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "39067:2:36",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "39040:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "39040:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "39040:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "39090:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "39101:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "39086:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "39086:18:36"
                      },
                      {
                        "hexValue": "746f6b656e20686173206e6f20686f6c6461626c6520746f6b656e2065787465",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "39106:34:36",
                        "type": "",
                        "value": "token has no holdable token exte"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "39079:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "39079:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "39079:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "39161:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "39172:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "39157:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "39157:18:36"
                      },
                      {
                        "hexValue": "6e73696f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "39177:7:36",
                        "type": "",
                        "value": "nsion"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "39150:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "39150:35:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "39150:35:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "39194:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "39206:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "39217:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "39202:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "39202:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "39194:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_edd347b7968327b3600dcce7aedea7605cef236b6faa053fefe641b69cc9f073__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "38977:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "38991:4:36",
                "type": ""
              }
            ],
            "src": "38826:401:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "39406:172:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "39423:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "39434:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "39416:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "39416:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "39416:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "39457:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "39468:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "39453:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "39453:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "39473:2:36",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "39446:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "39446:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "39446:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "39496:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "39507:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "39492:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "39492:18:36"
                      },
                      {
                        "hexValue": "696e76616c696420746f6b656e207374616e64617264",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "39512:24:36",
                        "type": "",
                        "value": "invalid token standard"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "39485:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "39485:52:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "39485:52:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "39546:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "39558:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "39569:2:36",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "39554:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "39554:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "39546:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f0620a46efe8affa820fbd852dcc28a8e648b503387395bca694e0a29fc04b28__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "39383:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "39397:4:36",
                "type": ""
              }
            ],
            "src": "39232:346:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "39757:169:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "39774:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "39785:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "39767:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "39767:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "39767:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "39808:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "39819:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "39804:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "39804:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "39824:2:36",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "39797:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "39797:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "39797:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "39847:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "39858:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "39843:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "39843:18:36"
                      },
                      {
                        "hexValue": "4e6f20686f6c64496420737065636966696564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "39863:21:36",
                        "type": "",
                        "value": "No holdId specified"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "39836:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "39836:49:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "39836:49:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "39894:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "39906:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "39917:2:36",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "39902:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "39902:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "39894:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f27e4c6b14f179cc89617a8534b57ab0d5c0d186253e10a2233490cdd2b5d7a4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "39734:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "39748:4:36",
                "type": ""
              }
            ],
            "src": "39583:343:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "40105:230:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "40122:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "40133:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "40115:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "40115:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "40115:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "40156:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "40167:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "40152:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "40152:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "40172:2:36",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "40145:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "40145:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "40145:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "40195:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "40206:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "40191:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "40191:18:36"
                      },
                      {
                        "hexValue": "53656e646572206973206e6f7420616c6c6f77656420746f20666f7263652074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "40211:34:36",
                        "type": "",
                        "value": "Sender is not allowed to force t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "40184:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "40184:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "40184:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "40266:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "40277:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "40262:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "40262:18:36"
                      },
                      {
                        "hexValue": "7261646520283229",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "40282:10:36",
                        "type": "",
                        "value": "rade (2)"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "40255:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "40255:38:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "40255:38:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "40302:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "40314:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "40325:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "40310:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "40310:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "40302:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f3ffbbdcd6ee2ecafc39ed8a1215a00ab98c19e6f204edac1d401983b57656b8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "40082:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "40096:4:36",
                "type": ""
              }
            ],
            "src": "39931:404:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "40487:830:36",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "40497:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "40509:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "40520:3:36",
                        "type": "",
                        "value": "640"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "40505:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "40505:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "40497:4:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "40533:29:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "40551:3:36",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "40556:1:36",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "40547:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "40547:11:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "40560:1:36",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "40543:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "40543:19:36"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "40537:2:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "40578:9:36"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "40599:6:36"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "40593:5:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "40593:13:36"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "40608:2:36"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "40589:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "40589:22:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "40571:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "40571:41:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "40571:41:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "40632:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "40643:4:36",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "40628:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "40628:20:36"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "40664:6:36"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "40672:4:36",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "40660:3:36"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "40660:17:36"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "40654:5:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "40654:24:36"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "40680:2:36"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "40650:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "40650:33:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "40621:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "40621:63:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "40621:63:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "40704:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "40715:4:36",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "40700:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "40700:20:36"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "40736:6:36"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "40744:4:36",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "40732:3:36"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "40732:17:36"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "40726:5:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "40726:24:36"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "40752:2:36"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "40722:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "40722:33:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "40693:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "40693:63:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "40693:63:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "40776:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "40787:4:36",
                            "type": "",
                            "value": "0x60"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "40772:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "40772:20:36"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "40804:6:36"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "40812:4:36",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "40800:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "40800:17:36"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "40794:5:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "40794:24:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "40765:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "40765:54:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "40765:54:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "40839:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "40850:4:36",
                            "type": "",
                            "value": "0x80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "40835:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "40835:20:36"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "40867:6:36"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "40875:4:36",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "40863:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "40863:17:36"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "40857:5:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "40857:24:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "40828:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "40828:54:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "40828:54:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "40891:44:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "40921:6:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "40929:4:36",
                            "type": "",
                            "value": "0xa0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "40917:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "40917:17:36"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "40911:5:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "40911:24:36"
                  },
                  "variables": [
                    {
                      "name": "memberValue0",
                      "nodeType": "YulTypedName",
                      "src": "40895:12:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memberValue0",
                        "nodeType": "YulIdentifier",
                        "src": "40976:12:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "40994:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "41005:4:36",
                            "type": "",
                            "value": "0xa0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "40990:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "40990:20:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_struct_UserTradeData",
                      "nodeType": "YulIdentifier",
                      "src": "40944:31:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "40944:67:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "40944:67:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "41020:46:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "41052:6:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "41060:4:36",
                            "type": "",
                            "value": "0xc0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "41048:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "41048:17:36"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "41042:5:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "41042:24:36"
                  },
                  "variables": [
                    {
                      "name": "memberValue0_1",
                      "nodeType": "YulTypedName",
                      "src": "41024:14:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memberValue0_1",
                        "nodeType": "YulIdentifier",
                        "src": "41107:14:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "41127:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "41138:6:36",
                            "type": "",
                            "value": "0x0180"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "41123:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "41123:22:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_struct_UserTradeData",
                      "nodeType": "YulIdentifier",
                      "src": "41075:31:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "41075:71:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "41075:71:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "41155:46:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "41187:6:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "41195:4:36",
                            "type": "",
                            "value": "0xe0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "41183:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "41183:17:36"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "41177:5:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "41177:24:36"
                  },
                  "variables": [
                    {
                      "name": "memberValue0_2",
                      "nodeType": "YulTypedName",
                      "src": "41159:14:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memberValue0_2",
                        "nodeType": "YulIdentifier",
                        "src": "41241:14:36"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_enum_Standard",
                      "nodeType": "YulIdentifier",
                      "src": "41210:30:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "41210:46:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "41210:46:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "41276:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "41287:6:36",
                            "type": "",
                            "value": "0x0260"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "41272:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "41272:22:36"
                      },
                      {
                        "name": "memberValue0_2",
                        "nodeType": "YulIdentifier",
                        "src": "41296:14:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "41265:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "41265:46:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "41265:46:36"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_Trade_$8173_memory_ptr__to_t_struct$_Trade_$8173_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "40456:9:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "40467:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "40478:4:36",
                "type": ""
              }
            ],
            "src": "40340:977:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "41423:76:36",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "41433:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "41445:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "41456:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "41441:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "41441:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "41433:4:36"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "41475:9:36"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "41486:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "41468:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "41468:25:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "41468:25:36"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "41392:9:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "41403:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "41414:4:36",
                "type": ""
              }
            ],
            "src": "41322:177:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "41552:80:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "41579:22:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "41581:16:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "41581:18:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "41581:18:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "41568:1:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "41575:1:36"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "41571:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "41571:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "41565:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "41565:13:36"
                  },
                  "nodeType": "YulIf",
                  "src": "41562:39:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "41610:16:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "41621:1:36"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "41624:1:36"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "41617:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "41617:9:36"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "41610:3:36"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "41535:1:36",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "41538:1:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "41544:3:36",
                "type": ""
              }
            ],
            "src": "41504:128:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "41683:171:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "41714:111:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "41735:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "41742:3:36",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "41747:10:36",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "41738:3:36"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "41738:20:36"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "41728:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "41728:31:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "41728:31:36"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "41779:1:36",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "41782:4:36",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "41772:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "41772:15:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "41772:15:36"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "41807:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "41810:4:36",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "41800:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "41800:15:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "41800:15:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "41703:1:36"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "41696:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "41696:9:36"
                  },
                  "nodeType": "YulIf",
                  "src": "41693:132:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "41834:14:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "41843:1:36"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "41846:1:36"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "41839:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "41839:9:36"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "41834:1:36"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "41668:1:36",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "41671:1:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "41677:1:36",
                "type": ""
              }
            ],
            "src": "41637:217:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "41911:116:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "41970:22:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "41972:16:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "41972:18:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "41972:18:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "41942:1:36"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "41935:6:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "41935:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "41928:6:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "41928:17:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "41950:1:36"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "41961:1:36",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "41957:3:36"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "41957:6:36"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "41965:1:36"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "41953:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "41953:14:36"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "41947:2:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "41947:21:36"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "41924:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "41924:45:36"
                  },
                  "nodeType": "YulIf",
                  "src": "41921:71:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "42001:20:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "42016:1:36"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "42019:1:36"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "42012:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "42012:9:36"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "42001:7:36"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "41890:1:36",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "41893:1:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "41899:7:36",
                "type": ""
              }
            ],
            "src": "41859:168:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "42081:76:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "42103:22:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "42105:16:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "42105:18:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "42105:18:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "42097:1:36"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "42100:1:36"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "42094:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "42094:8:36"
                  },
                  "nodeType": "YulIf",
                  "src": "42091:34:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "42134:17:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "42146:1:36"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "42149:1:36"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "42142:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "42142:9:36"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "42134:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "42063:1:36",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "42066:1:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "42072:4:36",
                "type": ""
              }
            ],
            "src": "42032:125:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "42215:205:36",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "42225:10:36",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "42234:1:36",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "42229:1:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "42294:63:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "42319:3:36"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "42324:1:36"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "42315:3:36"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "42315:11:36"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "42338:3:36"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "42343:1:36"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "42334:3:36"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "42334:11:36"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "42328:5:36"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "42328:18:36"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "42308:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "42308:39:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "42308:39:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "42255:1:36"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "42258:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "42252:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "42252:13:36"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "42266:19:36",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "42268:15:36",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "42277:1:36"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "42280:2:36",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "42273:3:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "42273:10:36"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "42268:1:36"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "42248:3:36",
                    "statements": []
                  },
                  "src": "42244:113:36"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "42383:31:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "42396:3:36"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "42401:6:36"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "42392:3:36"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "42392:16:36"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "42410:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "42385:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "42385:27:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "42385:27:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "42372:1:36"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "42375:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "42369:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "42369:13:36"
                  },
                  "nodeType": "YulIf",
                  "src": "42366:48:36"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "42193:3:36",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "42198:3:36",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "42203:6:36",
                "type": ""
              }
            ],
            "src": "42162:258:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "42472:88:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "42503:22:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "42505:16:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "42505:18:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "42505:18:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "42488:5:36"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "42499:1:36",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "42495:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "42495:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "42485:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "42485:17:36"
                  },
                  "nodeType": "YulIf",
                  "src": "42482:43:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "42534:20:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "42545:5:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "42552:1:36",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "42541:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "42541:13:36"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "42534:3:36"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "42454:5:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "42464:3:36",
                "type": ""
              }
            ],
            "src": "42425:135:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "42597:95:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "42614:1:36",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "42621:3:36",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "42626:10:36",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "42617:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "42617:20:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "42607:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "42607:31:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "42607:31:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "42654:1:36",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "42657:4:36",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "42647:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "42647:15:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "42647:15:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "42678:1:36",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "42681:4:36",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "42671:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "42671:15:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "42671:15:36"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "42565:127:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "42729:95:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "42746:1:36",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "42753:3:36",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "42758:10:36",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "42749:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "42749:20:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "42739:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "42739:31:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "42739:31:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "42786:1:36",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "42789:4:36",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "42779:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "42779:15:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "42779:15:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "42810:1:36",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "42813:4:36",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "42803:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "42803:15:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "42803:15:36"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "42697:127:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "42861:95:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "42878:1:36",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "42885:3:36",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "42890:10:36",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "42881:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "42881:20:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "42871:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "42871:31:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "42871:31:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "42918:1:36",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "42921:4:36",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "42911:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "42911:15:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "42911:15:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "42942:1:36",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "42945:4:36",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "42935:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "42935:15:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "42935:15:36"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "42829:127:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "42993:95:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "43010:1:36",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "43017:3:36",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "43022:10:36",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "43013:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "43013:20:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "43003:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "43003:31:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "43003:31:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "43050:1:36",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "43053:4:36",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "43043:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "43043:15:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "43043:15:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "43074:1:36",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "43077:4:36",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "43067:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "43067:15:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "43067:15:36"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "42961:127:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "43144:62:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "43178:22:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "43180:16:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "43180:18:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "43180:18:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "43167:5:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "43174:1:36",
                            "type": "",
                            "value": "5"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "43164:2:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "43164:12:36"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "43157:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "43157:20:36"
                  },
                  "nodeType": "YulIf",
                  "src": "43154:46:36"
                }
              ]
            },
            "name": "validator_assert_enum_Standard",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "43133:5:36",
                "type": ""
              }
            ],
            "src": "43093:113:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "43256:86:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "43320:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "43329:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "43332:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "43322:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "43322:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "43322:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "43279:5:36"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "43290:5:36"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "43305:3:36",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "43310:1:36",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "43301:3:36"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "43301:11:36"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "43314:1:36",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "43297:3:36"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "43297:19:36"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "43286:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "43286:31:36"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "43276:2:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "43276:42:36"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "43269:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "43269:50:36"
                  },
                  "nodeType": "YulIf",
                  "src": "43266:70:36"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "43245:5:36",
                "type": ""
              }
            ],
            "src": "43211:131:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "43389:76:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "43443:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "43452:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "43455:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "43445:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "43445:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "43445:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "43412:5:36"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "43433:5:36"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "43426:6:36"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "43426:13:36"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "43419:6:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "43419:21:36"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "43409:2:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "43409:32:36"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "43402:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "43402:40:36"
                  },
                  "nodeType": "YulIf",
                  "src": "43399:60:36"
                }
              ]
            },
            "name": "validator_revert_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "43378:5:36",
                "type": ""
              }
            ],
            "src": "43347:118:36"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_array_address_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, sub(shl(64, 1), 1)) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, sub(shl(64, 1), 1)) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_enum_HoldStatusCode_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(lt(value, 7)) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_bool(value_2)\n        value2 := value_2\n    }\n    function abi_decode_tuple_t_addresst_addresst_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_addresst_addresst_bytes32t_bytes32t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n    }\n    function abi_decode_tuple_t_addresst_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_bytes32t_addresst_addresst_addresst_uint256t_uint256t_bytes32t_bytes32t_enum$_HoldStatusCode_$5396_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8\n    {\n        if slt(sub(dataEnd, headStart), 288) { revert(0, 0) }\n        value0 := mload(headStart)\n        let value := mload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        let value_1 := mload(add(headStart, 64))\n        validator_revert_address(value_1)\n        value2 := value_1\n        let value_2 := mload(add(headStart, 96))\n        validator_revert_address(value_2)\n        value3 := value_2\n        value4 := mload(add(headStart, 128))\n        value5 := mload(add(headStart, 160))\n        value6 := mload(add(headStart, 192))\n        value7 := mload(add(headStart, 224))\n        value8 := abi_decode_enum_HoldStatusCode_fromMemory(add(headStart, 256))\n    }\n    function abi_decode_tuple_t_bytes_calldata_ptrt_bytes32t_addresst_addresst_addresst_uint256t_bytes_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8, value9, value10\n    {\n        if slt(sub(dataEnd, headStart), 256) { revert(0, 0) }\n        let _1 := sub(shl(64, 1), 1)\n        if gt(calldataload(headStart), _1) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_bytes_calldata(add(headStart, calldataload(headStart)), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        value2 := calldataload(add(headStart, 32))\n        value3 := abi_decode_address(add(headStart, 64))\n        value4 := abi_decode_address(add(headStart, 96))\n        value5 := abi_decode_address(add(headStart, 128))\n        value6 := calldataload(add(headStart, 160))\n        if gt(calldataload(add(headStart, 192)), _1) { revert(0, 0) }\n        let value7_1, value8_1 := abi_decode_bytes_calldata(add(headStart, calldataload(add(headStart, 192))), dataEnd)\n        value7 := value7_1\n        value8 := value8_1\n        if gt(calldataload(add(headStart, 224)), _1) { revert(0, 0) }\n        let value9_1, value10_1 := abi_decode_bytes_calldata(add(headStart, calldataload(add(headStart, 224))), dataEnd)\n        value9 := value9_1\n        value10 := value10_1\n    }\n    function abi_decode_tuple_t_bytes_calldata_ptrt_bytes32t_addresst_addresst_addresst_uint256t_bytes_memory_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8, value9\n    {\n        if slt(sub(dataEnd, headStart), 256) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        value2 := calldataload(add(headStart, 32))\n        value3 := abi_decode_address(add(headStart, 64))\n        value4 := abi_decode_address(add(headStart, 96))\n        value5 := abi_decode_address(add(headStart, 128))\n        value6 := calldataload(add(headStart, 160))\n        let offset_1 := calldataload(add(headStart, 192))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value7 := abi_decode_bytes(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 224))\n        if gt(offset_2, _1) { revert(0, 0) }\n        let value8_1, value9_1 := abi_decode_bytes_calldata(add(headStart, offset_2), dataEnd)\n        value8 := value8_1\n        value9 := value9_1\n    }\n    function abi_decode_tuple_t_enum$_Standard_$8036(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(lt(value, 5)) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_enum$_TradeType_$8046(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(lt(value, 3)) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_struct$_ERC20HoldData_$5467_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 224)\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let value := mload(headStart)\n        validator_revert_address(value)\n        mstore(memPtr, value)\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_address(value_1)\n        mstore(add(memPtr, 32), value_1)\n        let value_2 := mload(add(headStart, 64))\n        validator_revert_address(value_2)\n        mstore(add(memPtr, 64), value_2)\n        mstore(add(memPtr, 96), mload(add(headStart, 96)))\n        mstore(add(memPtr, 128), mload(add(headStart, 128)))\n        mstore(add(memPtr, 160), mload(add(headStart, 160)))\n        mstore(add(memPtr, 192), abi_decode_enum_HoldStatusCode_fromMemory(add(headStart, 192)))\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_struct$_TradeRequestInput_$8153_calldata_ptrt_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        let _1 := sub(dataEnd, headStart)\n        if slt(_1, 512) { revert(0, 0) }\n        let _2 := 480\n        if slt(_1, _2) { revert(0, 0) }\n        value0 := headStart\n        value1 := calldataload(add(headStart, _2))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_bool(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_uint256t_boolt_bytes32(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_bool(value)\n        value1 := value\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256t_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_struct_UserTradeData(value, pos)\n    {\n        mstore(pos, and(mload(value), sub(shl(160, 1), 1)))\n        mstore(add(pos, 0x20), mload(add(value, 0x20)))\n        mstore(add(pos, 0x40), mload(add(value, 0x40)))\n        let memberValue0 := mload(add(value, 0x60))\n        validator_assert_enum_Standard(memberValue0)\n        mstore(add(pos, 0x60), memberValue0)\n        mstore(add(pos, 0x80), iszero(iszero(mload(add(value, 0x80)))))\n        mstore(add(pos, 0xa0), iszero(iszero(mload(add(value, 0xa0)))))\n        let memberValue0_1 := mload(add(value, 0xc0))\n        if iszero(lt(memberValue0_1, 3)) { panic_error_0x21() }\n        mstore(add(pos, 0xc0), memberValue0_1)\n    }\n    function abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, value0)\n        end := add(pos, 32)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_a2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b4__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"ERC1820_ACCEPT_MAGIC\")\n        end := add(pos, 20)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_bytes32_t_uint256_t_bytes32__to_t_address_t_bytes32_t_uint256_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address__to_t_bytes32_t_address_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes32_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 192)\n        let tail_1 := abi_encode_bytes(value4, add(headStart, 192))\n        mstore(add(headStart, 160), sub(tail_1, headStart))\n        tail := abi_encode_bytes(value5, tail_1)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes32_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 192)\n        mstore(add(headStart, 192), 0)\n        mstore(add(headStart, 160), 224)\n        mstore(add(headStart, 224), 0)\n        tail := add(headStart, 256)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_02ebd69188c7db9c3dd01f2aaa1d87221471968f5aa99525c48b99a1505380e0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"Start date needs to be set at le\")\n        mstore(add(headStart, 96), \"ast a week before\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_05373b993917885459831a325920a48a75caf468c1ee77a796e72e930bff1b08__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), \"Trade can only be executed by ex\")\n        mstore(add(headStart, 96), \"ecuter defined at trade creation\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0aed4c7d60c28efa628f3b3834329787d344f5899e54ae045c324776c24530d2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Tokens of the wrong standard sen\")\n        mstore(add(headStart, 96), \"t\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0b2b516375d20093ba5abecc0cd58e75e4a2fdc1bed15bafb457d94a3ba607a4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ether trades need to be of type \")\n        mstore(add(headStart, 96), \"Escrow\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0d4b85b88b80072b90afee0107a9a29103e9d81c09bf5da6eae9a80121a9ce6b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Amount of ERC1400 tokens is not \")\n        mstore(add(headStart, 96), \"correct\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0e67fb1929d4780c273d05979a1e9884927127ac457215fefeddd8d222ee5b83__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Hold must exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_13a62c55f76587a2dd941a7afaba21d8be7cba385c183c78ab02aae0f038fccf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Sender is not allowed to cancel \")\n        mstore(add(headStart, 96), \"trade (1)\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_20db3929816dba2a8275bb33ef449b4b1729f4b33bc79b910811933ea2508b0c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"Trade has not been approved by a\")\n        mstore(add(headStart, 96), \"ll token controllers yet\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_215d56ac8bbcf4ec574772ebea743ba30ac9d1c5e1b1ff899e5de1045f5df803__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 2)\n        mstore(add(headStart, 64), \"50\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_242e1ec42c4d9d50f39212896afb445568abd9a5227b187111929b57dbb7bf2e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"No price ownership\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_255ed6eb6f30d1485f3dcafc169da0ede71d63ed3f663207dcd881f82aecfb81__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Sender is not allowed to force t\")\n        mstore(add(headStart, 96), \"rade (1)\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2f0a6c014b93879ada9ab209e5b7a62ef24399af93bf6c00c1529d6e0d627fce__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"Price setter is not an oracle fo\")\n        mstore(add(headStart, 96), \"r this token (1)\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_373863ced32ac2eb9784d689aa574556050019791cd28b1e2777baf5ec9163da__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"Only token controllers of involv\")\n        mstore(add(headStart, 96), \"ed tokens can approve a trade\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3a6c5fb48c287bee984928951d89e75c588c9b0df86b8ef015c0ada5e6d8b633__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 69)\n        mstore(add(headStart, 64), \"Trade executer needs to belong t\")\n        mstore(add(headStart, 96), \"o the list of allowed trade exec\")\n        mstore(add(headStart, 128), \"uters\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_3e59e007c4647d712b65f3ed438ec2af5656c5aa20116da30235e14fc2c290a3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"Trade can not be forced if token\")\n        mstore(add(headStart, 96), \"s have controllers\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3fdd50b576f957d76e864f96b9d0c991bd6b1f33ca019606da09db7f23167ec4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Amount of ETH is not correct\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4b556a5d77d5a92d99d2da30cbb6be3fd94832b2e3e5f440b20345d863b04042__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"Trade has not been accepted by a\")\n        mstore(add(headStart, 96), \"ll token holders yet\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5d6836f0c0e087667fc172041236feaf9634db8287593900fb516b3a15e093e3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Sender is not allowed to cancel \")\n        mstore(add(headStart, 96), \"trade (0)\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_62915fc4bdc23f948b008ac5bb93785842503d33f35707b31a531df5ef8b008f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Sender is not allowed to cancel \")\n        mstore(add(headStart, 96), \"trade (3)\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6590fa52fa76f967656340b874bc9ca09733c2fddea9886210ebcbbceee04b35__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 2)\n        mstore(add(headStart, 64), \"55\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6cb1a1c99e78d317001cb18e0e43982675e357ca53b7a61f1a60755ef796f773__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"Price is higher than amount escr\")\n        mstore(add(headStart, 96), \"owed/authorized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7ec5e5b6d8986751e9975433d52bdbaec91cf6fa3fa30d8651373347427b1a8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Expiration date is past\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_89aa5a265da805686932ae094ba24a71109e8058a4d7df537bdb317139a2f40b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 60)\n        mstore(add(headStart, 64), \"Allowance needs to be provided i\")\n        mstore(add(headStart, 96), \"n token smart contract first\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ee647a01aa5f1bda643aa6834c1b9128a69a3f433a02ac84adf7f3b27e1e0ee__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Wrong token sent\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8f3fb3eca663334b08617a28f5e55e2698b004ee0a964aa2bc92825ec7c73641__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Token standard must be holdable\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9bca14e5cc753f0d9d21c7a81c2e4a61f9edd91f8ff260da709d961518ab2f18__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"token can not be a zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9cca473d4699184ddb1b521cc84943981ca1f9ae354f32feb4ed94760c4d4047__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Competition on price ownership\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a20f967af876332f8e5cf464602ff6aaa46bca373759b506dfded8592e2d84c8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Sender is not a token controller\")\n        mstore(add(headStart, 96), \".\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a65d6f43237034d44b2b9bea23e2173099b9a2624f45373df43a0b386609eb3c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"executeTrade can be called\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b1178f18a5aa1a32a6e2280a977824c520f59de733c77c9821fa1a6ad0758d01__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"Price setter is not an oracle fo\")\n        mstore(add(headStart, 96), \"r this token (2)\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b5bb3f67205aac1ef56c0f0d2a8a3721a1e2cbbeeb73b468e67cc7251df85270__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"Trade already accepted by the ho\")\n        mstore(add(headStart, 96), \"lder\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b87811a9660efbe433e1bf8fc747435558a7cca8d25afc47f3b0721d2694b1dd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Only registered holders can acce\")\n        mstore(add(headStart, 96), \"pt a trade\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c877a4103bc121fd41358537bbacb20b7d369de62eb7417357dd35bafcfe9e8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Invalid tokenStandard provided\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c96902dc6641465bcb47d51e789da6011d4ef6e7cace86feca178d31470e323a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Swaps contract is not owned\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cbcf36d182174f136d2e0dc28ab771dc911d5712b5b9ea7fb39228ecd0c9d185__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Sender is not a price oracle.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cc7a1d4adabd6d310d870246894e2ed12129fc57e2852560b268c1d1b670f52f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"Trade can only be executed on or\")\n        mstore(add(headStart, 96), \" after settlement date\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cfd41566fc83253424c692dd5977dabc40d4800a378b116731c43ead1d396f63__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"Trade can't be forced as tokens \")\n        mstore(add(headStart, 96), \"are not available so far\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d2053e1061c836597f4dea813fbe2c6ba0c3d847ab0cb01c7bf3e51a4ada89bb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Invalid token standard for hold \")\n        mstore(add(headStart, 96), \"trade type\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d2707e93029f7cfd1559052cc8a7011948874a8a768af73b9e30b493e73abe98__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Tokens of the wrong partition se\")\n        mstore(add(headStart, 96), \"nt\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d5872adc53feb1228a23992569f03c41f99efcc8573122308ea2220b7a8481b5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Sender is not allowed to force t\")\n        mstore(add(headStart, 96), \"rade (0)\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d7422c5722be9eca0f8e40021c8dfba381e5cf7f3a04965f64b9b68b5a46c4e9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"A trade can not be created with \")\n        mstore(add(headStart, 96), \"the zero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_da45f966b1666be0485ea33966a8cad21440f8e36525938af606e1c834d9b4c8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 55)\n        mstore(add(headStart, 64), \"Hold needs to be provided in tok\")\n        mstore(add(headStart, 96), \"en smart contract first\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ddc0ea0a3c16467f3e90962bae7c77db78af2e3817b9cf66cef0d9bf75e269eb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Sender is not allowed to cancel \")\n        mstore(add(headStart, 96), \"trade (2)\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e231b6203d554050a3d3199e807f8cbd9f29dd790d2450a81df72ae0c3a2c875__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Trade is not pending\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e921da22f871c25c63f06c1365385cbb26397f64f79055cdbab32187a9377d16__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 2)\n        mstore(add(headStart, 64), \"57\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_edd347b7968327b3600dcce7aedea7605cef236b6faa053fefe641b69cc9f073__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"token has no holdable token exte\")\n        mstore(add(headStart, 96), \"nsion\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f0620a46efe8affa820fbd852dcc28a8e648b503387395bca694e0a29fc04b28__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"invalid token standard\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f27e4c6b14f179cc89617a8534b57ab0d5c0d186253e10a2233490cdd2b5d7a4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"No holdId specified\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f3ffbbdcd6ee2ecafc39ed8a1215a00ab98c19e6f204edac1d401983b57656b8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Sender is not allowed to force t\")\n        mstore(add(headStart, 96), \"rade (2)\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_struct$_Trade_$8173_memory_ptr__to_t_struct$_Trade_$8173_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 640)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(mload(value0), _1))\n        mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), _1))\n        mstore(add(headStart, 0x40), and(mload(add(value0, 0x40)), _1))\n        mstore(add(headStart, 0x60), mload(add(value0, 0x60)))\n        mstore(add(headStart, 0x80), mload(add(value0, 0x80)))\n        let memberValue0 := mload(add(value0, 0xa0))\n        abi_encode_struct_UserTradeData(memberValue0, add(headStart, 0xa0))\n        let memberValue0_1 := mload(add(value0, 0xc0))\n        abi_encode_struct_UserTradeData(memberValue0_1, add(headStart, 0x0180))\n        let memberValue0_2 := mload(add(value0, 0xe0))\n        validator_assert_enum_Standard(memberValue0_2)\n        mstore(add(headStart, 0x0260), memberValue0_2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_assert_enum_Standard(value)\n    {\n        if iszero(lt(value, 5)) { panic_error_0x21() }\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n}",
      "id": 36,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "3595:51804:35:-:0;;;9498:446;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:23:0;665:10:8;867:9:0;:23::i;:::-;9528:53:35;9561:19;;;;;;;;;;;;;-1:-1:-1;;;9561:19:35;;;9528:32;;;;;:53;;:::i;:::-;9587:58;9620:24;;;;;;;;;;;;;;;;;9587:32;;;;;:58;;:::i;:::-;9678:24;;;;;;;;;;;;;;;;;9651:67;;9712:4;9651:26;:67::i;:::-;9725:14;:22;;-1:-1:-1;;9725:22:35;;;;;;;;;;;9757:14;9754:186;;;9822:17;;;9837:1;9822:17;;;;;;;;;9781:38;;9822:17;;;;;;;;;;;-1:-1:-1;9822:17:35;9781:58;;9874:10;9847:21;9869:1;9847:24;;;;;;;;:::i;:::-;-1:-1:-1;;;;;9847:37:35;;;:24;;;;;;;;;;;:37;9892:41;9911:21;9892:18;:41::i;:::-;9773:167;9754:186;9498:446;3595:51804;;2041:169:0;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;676:141:16:-;808:4;744:16;:61;788:14;771:32;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;771:32:16;;;;;;761:43;;771:32;761:43;;;;744:61;;;;;;;;;;-1:-1:-1;744:61:16;:68;;-1:-1:-1;;744:68:16;;;;;;;;;;-1:-1:-1;676:141:16:o;328:282:33:-;439:21;490:15;473:33;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;473:33:33;;;;;;;463:44;;473:33;463:44;;;;-1:-1:-1;;;517:86:33;;565:4;517:86;;;969:34:36;1019:18;;;1012:34;;;-1:-1:-1;;;;;1082:15:36;;1062:18;;;1055:43;463:44:33;-1:-1:-1;278:42:33;;517:39;;904:18:36;;517:86:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;429:181;328:282;;:::o;45668:313:35:-;45745:6;45740:106;45759:15;:22;45757:24;;45740:106;;;45834:5;45795:16;:36;45812:15;45828:1;45812:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;45812:18:35;45795:36;;;;;;;;;;;;:44;;-1:-1:-1;;45795:44:35;;;;;;;;;;45783:3;;;;:::i;:::-;;;;45740:106;;;;45856:6;45851:93;45870:9;:16;45868:1;:18;45851:93;;;45933:4;45900:16;:30;45917:9;45927:1;45917:12;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;45900:30:35;;;;;;;;;;;-1:-1:-1;45900:30:35;:37;;-1:-1:-1;;45900:37:35;;;;;;;;;;45888:3;;;;:::i;:::-;;;;45851:93;;;-1:-1:-1;45949:27:35;;;;:15;;:27;;;;;:::i;:::-;;45668:313;:::o;3595:51804::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3595:51804:35;-1:-1:-1;;;;;3595:51804:35;;;;;;;;;;;-1:-1:-1;3595:51804:35;;;;;;;-1:-1:-1;3595:51804:35;;;-1:-1:-1;3595:51804:35;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:277:36;81:6;134:2;122:9;113:7;109:23;105:32;102:52;;;150:1;147;140:12;102:52;182:9;176:16;235:5;228:13;221:21;214:5;211:32;201:60;;257:1;254;247:12;201:60;280:5;14:277;-1:-1:-1;;;14:277:36:o;296:428::-;427:3;465:6;459:13;490:1;500:129;514:6;511:1;508:13;500:129;;;612:4;596:14;;;592:25;;586:32;573:11;;;566:53;529:12;500:129;;;647:6;644:1;641:13;638:48;;;682:1;673:6;668:3;664:16;657:27;638:48;-1:-1:-1;702:16:36;;;;;296:428;-1:-1:-1;;296:428:36:o;1109:232::-;1148:3;-1:-1:-1;;1169:17:36;;1166:140;;;1228:10;1223:3;1219:20;1216:1;1209:31;1263:4;1260:1;1253:15;1291:4;1288:1;1281:15;1166:140;-1:-1:-1;1333:1:36;1322:13;;1109:232::o;1346:127::-;1407:10;1402:3;1398:20;1395:1;1388:31;1438:4;1435:1;1428:15;1462:4;1459:1;1452:15;1478:127;3595:51804:35;;;;;;",
  "deployedSourceMap": "3595:51804:35:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;47282:130;;;;;;;;;;-1:-1:-1;47282:130:35;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;47562:415;;;;;;;;;;-1:-1:-1;47562:415:35;;;;;:::i;:::-;;:::i;:::-;;25307:91;;;;;;;;;;-1:-1:-1;25307:91:35;;;;;:::i;:::-;;:::i;29707:1830::-;;;;;;;;;;-1:-1:-1;29707:1830:35;;;;;:::i;:::-;;:::i;49005:207::-;;;;;;;;;;-1:-1:-1;49005:207:35;;;;;:::i;:::-;;:::i;48639:164::-;;;;;;;;;;-1:-1:-1;48639:164:35;;;;;:::i;:::-;;:::i;:::-;;;17709:14:36;;17702:22;17684:41;;17672:2;17657:18;48639:164:35;17544:187:36;363:309:16;;;;;;;;;;-1:-1:-1;363:309:16;;;;;:::i;:::-;;:::i;:::-;;;17882:25:36;;;17870:2;17855:18;363:309:16;17736:177:36;23798:836:35;;;;;;;;;;-1:-1:-1;23798:836:35;;;;;:::i;:::-;;:::i;55041:134::-;;;;;;;;;;-1:-1:-1;55041:134:35;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;49393:140::-;;;;;;;;;;-1:-1:-1;49393:140:35;;;;;:::i;:::-;-1:-1:-1;;;;;49491:37:35;49469:7;49491:37;;;:23;:37;;;;;;;49393:140;21447:561;;;;;;;;;;-1:-1:-1;21447:561:35;;;;;:::i;:::-;;:::i;45138:100::-;;;;;;;;;;;;;:::i;16782:137::-;;;;;;:::i;:::-;;:::i;25753:709::-;;;;;;;;;;-1:-1:-1;25753:709:35;;;;;:::i;:::-;;:::i;51207:779::-;;;;;;;;;;-1:-1:-1;51207:779:35;;;;;:::i;:::-;;:::i;27788:87::-;;;;;;;;;;-1:-1:-1;27788:87:35;;;;;:::i;:::-;;:::i;23056:116::-;;;;;;;;;;-1:-1:-1;23056:116:35;;;;;:::i;:::-;;:::i;44866:121::-;;;;;;;;;;;;;:::i;46261:138::-;;;;;;;;;;-1:-1:-1;46261:138:35;;;;;:::i;:::-;;:::i;50542:231::-;;;;;;;;;;-1:-1:-1;50542:231:35;;;;;:::i;:::-;-1:-1:-1;;;;;50691:42:35;;;50669:7;50691:42;;;:27;:42;;;;;;;;:57;;;;;;;;;;;;:67;;;;;;;;;:77;;;;;;;;;50542:231;13465:725;;;;;;:::i;:::-;;:::i;973:85:0:-;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;15168:32:36;;;15150:51;;15138:2;15123:18;973:85:0;15004:203:36;24893:410:35;;;;;;;;;;-1:-1:-1;24893:410:35;;;;;:::i;:::-;;:::i;45365:176::-;;;;;;;;;;-1:-1:-1;45365:176:35;;;;;:::i;:::-;;:::i;49843:308::-;;;;;;;;;;-1:-1:-1;49843:308:35;;;;;:::i;:::-;;:::i;28054:1473::-;;;;;;;;;;-1:-1:-1;28054:1473:35;;;;;:::i;:::-;;:::i;52109:2752::-;;;;;;;;;;-1:-1:-1;52109:2752:35;;;;;:::i;:::-;;:::i;55318:78::-;;;;;;;;;;-1:-1:-1;55385:6:35;;55318:78;;46557:451;;;;;;;;;;-1:-1:-1;46557:451:35;;;;;:::i;:::-;;:::i;1846:189:0:-;;;;;;;;;;-1:-1:-1;1846:189:0;;;;;:::i;:::-;;:::i;11039:2294:35:-;;;;;;;;;;-1:-1:-1;11039:2294:35;;;;;:::i;:::-;;:::i;10350:216::-;;;;;;;;;;-1:-1:-1;10350:216:35;;;;;:::i;:::-;;:::i;47282:130::-;-1:-1:-1;;;;;47380:27:35;;;;;;:13;:27;;;;;;;;;47373:34;;;;;;;;;;;;;;;;;47349:16;;47373:34;;;47380:27;47373:34;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;47373:34:35;;;;;;;;;;;;;;;;;;;;;;;47282:130;;;:::o;47562:415::-;47662:12;9277:43;9295:12;9309:10;9277:17;:43::i;:::-;9269:85;;;;-1:-1:-1;;;9269:85:35;;;;;;;:::i;:::-;;;;;;;;;47687:6:::1;47682:142;-1:-1:-1::0;;;;;47701:27:35;::::1;;::::0;;;:13:::1;:27;::::0;;;;:34;47699:36;::::1;47682:142;;;-1:-1:-1::0;;;;;47749:28:35;::::1;47812:5;47749:28:::0;;;:14:::1;:28;::::0;;;;;;;47778:13:::1;:27:::0;;;;;:30;;47812:5;;47778:27;47806:1;;47778:30;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;;::::1;::::0;-1:-1:-1;;;;;47778:30:35::1;47749:60:::0;;;::::1;::::0;;;;;;;;:68;;-1:-1:-1;;47749:68:35::1;::::0;::::1;;::::0;;;::::1;::::0;;47737:3;::::1;::::0;::::1;:::i;:::-;;;;47682:142;;;;47834:6;47829:101;47846:16:::0;;::::1;47829:101;;;-1:-1:-1::0;;;;;47876:28:35;::::1;;::::0;;;:14:::1;:28;::::0;;;;47919:4:::1;::::0;47905:7;;47913:1;47905:10;;::::1;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;47876:40:35::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;47876:40:35;:47;;-1:-1:-1;;47876:47:35::1;::::0;::::1;;::::0;;;::::1;::::0;;47864:3;::::1;::::0;::::1;:::i;:::-;;;;47829:101;;;-1:-1:-1::0;;;;;;47935:27:35;::::1;;::::0;;;:13:::1;:27;::::0;;;;:37:::1;::::0;47965:7;;47935:37:::1;:::i;:::-;;47562:415:::0;;;;:::o;25307:91::-;25359:34;25384:5;25391:1;25359:24;:34::i;:::-;25307:91;:::o;29707:1830::-;29758:19;29780:14;;;:7;:14;;;;;29823:13;29808:11;;;;;;:28;;;;;;;;:::i;:::-;;29800:61;;;;-1:-1:-1;;;29800:61:35;;;;;;;:::i;:::-;29890:31;;;;29944:29;;;;30002:31;;;;30056:29;;;;29944;;;;;;;;;30056;;;;29944;30095:22;;;;;30108:9;30095:22;30092:1405;;;30149:14;;;;-1:-1:-1;;;;;30149:14:35;30135:10;:28;;:138;;;30187:5;:20;;;30168:15;:39;;:103;;;;-1:-1:-1;30226:13:35;;-1:-1:-1;;;;;30226:13:35;30212:10;:27;;:58;;-1:-1:-1;30257:13:35;;;;-1:-1:-1;;;;;30257:13:35;30243:10;:27;30212:58;30127:192;;;;-1:-1:-1;;;30127:192:35;;27832:2:36;30127:192:35;;;27814:21:36;27871:2;27851:18;;;27844:30;-1:-1:-1;;;;;;;;;;;27890:18:36;;;27883:62;-1:-1:-1;;;27961:18:36;;;27954:39;28010:19;;30127:192:35;27630:405:36;30127:192:35;30364:16;30330:30;;;;;;;;;:50;;;;;;;;:::i;:::-;;30327:148;;;30392:74;30413:5;30420:14;30436:11;30449:4;30420:14;30392:20;:74::i;:::-;30519:16;30485:30;;;;;;;;;:50;;;;;;;;:::i;:::-;;30482:148;;;30547:74;30568:5;30575:14;30591:11;30575:14;30618:1;30547:20;:74::i;:::-;30092:1405;;;30645:9;30642:855;;;30686:14;;;;-1:-1:-1;;;;;30686:14:35;30672:10;:28;;:104;;;30724:5;:20;;;30705:15;:39;;:70;;;;-1:-1:-1;30762:13:35;;-1:-1:-1;;;;;30762:13:35;30748:10;:27;30705:70;30664:158;;;;-1:-1:-1;;;30664:158:35;;22982:2:36;30664:158:35;;;22964:21:36;23021:2;23001:18;;;22994:30;-1:-1:-1;;;;;;;;;;;23040:18:36;;;23033:62;-1:-1:-1;;;23111:18:36;;;23104:39;23160:19;;30664:158:35;22780:405:36;30664:158:35;30867:16;30833:30;;;;;;;;;:50;;;;;;;;:::i;:::-;;30830:148;;;30895:74;30916:5;30923:14;30939:11;30952:4;30923:14;30895:20;:74::i;30642:855::-;30993:9;30990:507;;;31034:14;;;;-1:-1:-1;;;;;31034:14:35;31020:10;:28;;:104;;;31072:5;:20;;;31053:15;:39;;:70;;;;-1:-1:-1;31110:13:35;;;;-1:-1:-1;;;;;31110:13:35;31096:10;:27;31053:70;31012:158;;;;-1:-1:-1;;;31012:158:35;;37939:2:36;31012:158:35;;;37921:21:36;37978:2;37958:18;;;37951:30;-1:-1:-1;;;;;;;;;;;37997:18:36;;;37990:62;-1:-1:-1;;;38068:18:36;;;38061:39;38117:19;;31012:158:35;37737:405:36;30990:507:35;31368:14;;;;-1:-1:-1;;;;;31368:14:35;31354:10;:28;;:59;;-1:-1:-1;31400:13:35;;-1:-1:-1;;;;;31400:13:35;31386:10;:27;31354:59;:90;;;-1:-1:-1;31431:13:35;;;;-1:-1:-1;;;;;31431:13:35;31417:10;:27;31354:90;31346:144;;;;-1:-1:-1;;;31346:144:35;;28242:2:36;31346:144:35;;;28224:21:36;28281:2;28261:18;;;28254:30;-1:-1:-1;;;;;;;;;;;28300:18:36;;;28293:62;-1:-1:-1;;;28371:18:36;;;28364:39;28420:19;;31346:144:35;28040:405:36;31346:144:35;31503:11;;;:29;;31517:15;;31503:11;-1:-1:-1;;31503:29:35;;31517:15;31503:29;;;;;;29752:1785;;;;;29707:1830;:::o;49005:207::-;49124:13;9277:43;9295:12;9309:10;9277:17;:43::i;:::-;9269:85;;;;-1:-1:-1;;;9269:85:35;;;;;;;:::i;:::-;-1:-1:-1;;;;;;49145:30:35;;::::1;;::::0;;;:15:::1;:30;::::0;;;;;;;:45;;;::::1;::::0;;;;;;;;;:62;;-1:-1:-1;;49145:62:35::1;::::0;::::1;;::::0;;;::::1;::::0;;49005:207::o;48639:164::-;-1:-1:-1;;;;;48753:30:35;;;48734:4;48753:30;;;:15;:30;;;;;;;;:45;;;;;;;;;;;;48639:164;;;;;:::o;363:309:16:-;543:7;563:31;;;:16;:31;;;;;;;;560:108;;;262:40;;-1:-1:-1;;;262:40:16;;;14930:35:36;14981:12;;262:40:16;;;;;;;;;;;;252:51;;;;;;604:27;;;;560:108;-1:-1:-1;652:9:16;;;23798:836:35;23893:19;23915:14;;;:7;:14;;;;;23958:13;23943:11;;;;;;:28;;;;;;;;:::i;:::-;;23935:61;;;;-1:-1:-1;;;23935:61:35;;;;;;;:::i;:::-;24030:20;;;:33;-1:-1:-1;;;;;24030:33:35;24011:53;;;;:18;:53;;;;;;;;24065:10;24011:65;;;;;;;;;;;:134;;-1:-1:-1;24099:20:35;;;:33;-1:-1:-1;;;;;24099:33:35;24080:53;;;;:18;:53;;;;;;;;24134:10;24080:65;;;;;;;;;;24011:134;24003:208;;;;-1:-1:-1;;;24003:208:35;;25727:2:36;24003:208:35;;;25709:21:36;25766:2;25746:18;;;25739:30;25805:34;25785:18;;;25778:62;25876:31;25856:18;;;25849:59;25925:19;;24003:208:35;25525:425:36;24003:208:35;24240:20;;;:33;-1:-1:-1;;;;;24240:33:35;24221:53;;;;:18;:53;;;;;;;;24275:10;24221:65;;;;;;;;;;24218:125;;;24296:29;;;:40;;-1:-1:-1;;24296:40:35;;;;;;;;;24218:125;24375:20;;;:33;-1:-1:-1;;;;;24375:33:35;24356:53;;;;:18;:53;;;;;;;;24410:10;24356:65;;;;;;;;;;24353:125;;;24431:29;;;:40;;-1:-1:-1;;24431:40:35;;;;;;;;;24353:125;24487:14;;;;-1:-1:-1;;;;;24487:14:35;:28;:63;;;;;24519:31;24544:5;24519:24;:31::i;:::-;24487:96;;;;;24554:29;24577:5;24554:22;:29::i;:::-;24484:146;;;24593:30;24607:5;24614:8;24593:13;:30::i;:::-;23887:747;23798:836;;;:::o;55041:134::-;55096:12;;:::i;:::-;55116:19;55138:14;;;:7;:14;;;;;;;;;55158:12;;;;;;;;;-1:-1:-1;;;;;55158:12:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;55138:14;;55158:12;;55138:14;;55158:12;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;55158:12:35;;;;;;;;;;;;;;;-1:-1:-1;;;;;55158:12:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;55158:12:35;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;55158:12:35;55041:134;-1:-1:-1;;;55041:134:35:o;21447:561::-;21516:4;21550:14;;;:7;:14;;;;;21589:13;21574:11;;;;;;:28;;;;;;;;:::i;:::-;;21571:356;;;21649:19;21615:30;;;;;;;;;:53;;;;;;;;:::i;:::-;;:115;;;;-1:-1:-1;21694:13:35;;21673:57;;;;;;;;21709:20;;;21673:57;;-1:-1:-1;;;;;21673:57:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21694:13;;;;;21673:57;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;21673:20:35;:57::i;:::-;21672:58;21615:115;21612:151;;;-1:-1:-1;21749:5:35;;21447:561;-1:-1:-1;;21447:561:35:o;21612:151::-;21807:19;21773:30;;;;;;;;;:53;;;;;;;;:::i;:::-;;:115;;;;-1:-1:-1;21852:13:35;;;;21831:57;;;;;;;;21867:20;;;21831:57;;-1:-1:-1;;;;;21831:57:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21852:13;;;;;21831:57;;;;;;;;;;;;;;:::i;:::-;21830:58;21773:115;21770:151;;;-1:-1:-1;21907:5:35;;21447:561;-1:-1:-1;;21447:561:35:o;21770:151::-;21940:29;;;;;;;;;:62;;;;-1:-1:-1;21973:29:35;;;;;;;;;21940:62;21933:70;21447:561;-1:-1:-1;;;21447:561:35:o;45138:100::-;45187:16;45218:15;45211:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;45211:22:35;;;;;;;;;;;;;;;;;;;;;;;45138:100;:::o;16782:137::-;16859:55;16872:5;16879:10;16891:9;16902:1;16905:8;16859:12;:55::i;:::-;16782:137;;:::o;25753:709::-;25833:19;25855:14;;;:7;:14;;;;;25898:13;25883:11;;;;;;:28;;;;;;;;:::i;:::-;;25875:61;;;;-1:-1:-1;;;25875:61:35;;;;;;;:::i;:::-;25946:14;;;;-1:-1:-1;;;;;25946:14:35;:28;25943:153;;26006:14;;;;-1:-1:-1;;;;;26006:14:35;25992:10;:28;25984:105;;;;;-1:-1:-1;;;25984:105:35;;20988:2:36;25984:105:35;;;20970:21:36;21007:18;;;21000:30;;;;21066:34;21046:18;;;21039:62;21137:34;21117:18;;;21110:62;21189:19;;25984:105:35;20786:428:36;25984:105:35;26129:5;:20;;;26110:15;:39;;26102:106;;;;-1:-1:-1;;;26102:106:35;;35027:2:36;26102:106:35;;;35009:21:36;35066:2;35046:18;;;35039:30;35105:34;35085:18;;;35078:62;-1:-1:-1;;;35156:18:36;;;35149:52;35218:19;;26102:106:35;34825:418:36;26102:106:35;26223:31;26248:5;26223:24;:31::i;:::-;26215:96;;;;-1:-1:-1;;;26215:96:35;;27411:2:36;26215:96:35;;;27393:21:36;27450:2;27430:18;;;27423:30;27489:34;27469:18;;;27462:62;-1:-1:-1;;;27540:18:36;;;27533:50;27600:19;;26215:96:35;27209:416:36;26215:96:35;26330:29;26353:5;26330:22;:29::i;:::-;26322:98;;;;-1:-1:-1;;;26322:98:35;;23392:2:36;26322:98:35;;;23374:21:36;23431:2;23411:18;;;23404:30;23470:34;23450:18;;;23443:62;-1:-1:-1;;;23521:18:36;;;23514:54;23585:19;;26322:98:35;23190:420:36;26322:98:35;26427:30;26441:5;26448:8;26427:13;:30::i;:::-;25827:635;25753:709;;:::o;51207:779::-;-1:-1:-1;;;;;51355:30:35;;;;;;;:15;:30;;;;;;;;:45;;;;;;;;;;;;:94;;;;-1:-1:-1;;;;;;51404:30:35;;;;;;;:15;:30;;;;;;;;:45;;;;;;;;;;;;51355:94;51353:97;51345:140;;;;-1:-1:-1;;;51345:140:35;;;;;;;:::i;:::-;-1:-1:-1;;;;;51495:30:35;;;;;;;:15;:30;;;;;;;;:45;;;;;;;;;;;;51492:395;;;51558:44;51576:13;51591:10;51558:17;:44::i;:::-;51550:105;;;;-1:-1:-1;;;51550:105:35;;25310:2:36;51550:105:35;;;25292:21:36;25349:2;25329:18;;;25322:30;-1:-1:-1;;;;;;;;;;;25368:18:36;;;25361:62;-1:-1:-1;;;25439:18:36;;;25432:46;25495:19;;51550:105:35;25108:412:36;51550:105:35;51492:395;;;-1:-1:-1;;;;;51671:30:35;;;;;;;:15;:30;;;;;;;;:45;;;;;;;;;;;;51668:219;;;51734:44;51752:13;51767:10;51734:17;:44::i;:::-;51726:105;;;;-1:-1:-1;;;51726:105:35;;32721:2:36;51726:105:35;;;32703:21:36;32760:2;32740:18;;;32733:30;-1:-1:-1;;;;;;;;;;;32779:18:36;;;32772:62;-1:-1:-1;;;32850:18:36;;;32843:46;32906:19;;51726:105:35;32519:412:36;51668:219:35;51852:28;;-1:-1:-1;;;51852:28:35;;24147:2:36;51852:28:35;;;24129:21:36;24186:2;24166:18;;;24159:30;-1:-1:-1;;;24205:18:36;;;24198:48;24263:18;;51852:28:35;23945:342:36;51668:219:35;-1:-1:-1;;;;;51893:42:35;;;;;;;:27;:42;;;;;;;;:57;;;;;;;;;;;;:67;;;;;;;;;:77;;;;;;;;;:88;51207:779::o;27788:87::-;27838:32;27861:5;27868:1;27838:22;:32::i;23056:116::-;23123:44;23148:5;23155:8;23165:1;23123:24;:44::i;44866:121::-;665:10:8;1185:7:0;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:0;;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;44927:27:35::1;:25;:27::i;:::-;44960:14;:22:::0;;-1:-1:-1;;44960:22:35::1;::::0;;44866:121::o;46261:138::-;-1:-1:-1;;;;;46363:31:35;;;;;;:17;:31;;;;;;;;;46356:38;;;;;;;;;;;;;;;;;46332:16;;46356:38;;;46363:31;46356:38;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;46356:38:35;;;;;;;;;;;;;;;;;;;;;;46261:138;;;:::o;13465:725::-;13576:461;13597:17;;;;:9;:17;:::i;:::-;13622;;;;;;;;:::i;:::-;13647:18;;;;;;;;:::i;:::-;13673:9;:24;;;13705:9;:24;;;13737:143;;;;;;;;13751:9;:23;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;13737:143:35;;;13776:21;;;;13737:143;;;;13799:18;;;;13737:143;;;;;;13819:24;;;;;;;;:::i;:::-;13737:143;;;;;;;;:::i;:::-;;;13845:5;13737:143;;;;;;;;;;;;13859:20;;;;;;;;:::i;:::-;13737:143;;;;;;;;:::i;:::-;;;13888;;;;;;;;;;13902:23;;;;;;;;:::i;:::-;-1:-1:-1;;;;;13888:143:35;;;13927:21;;;;13888:143;;;;13950:18;;;;13888:143;;;;;;13970:24;;;;;;;;:::i;:::-;13888:143;;;;;;;;:::i;:::-;;;13996:5;13888:143;;;;;;;;;;;;14010:20;;;;;;;;:::i;:::-;13888:143;;;;;;;;:::i;:::-;;;13576:13;:461::i;:::-;14061:17;;;;:9;:17;:::i;:::-;-1:-1:-1;;;;;14047:31:35;:10;-1:-1:-1;;;;;14047:31:35;;:66;;;-1:-1:-1;14096:17:35;;;;;;;;:::i;:::-;-1:-1:-1;;;;;14082:31:35;:10;-1:-1:-1;;;;;14082:31:35;;14047:66;14044:142;;;14123:56;14136:6;;14144:10;14156:9;14167:1;14170:8;14123:12;:56::i;973:85:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;;973:85::o;24893:410:35:-;24960:4;24994:14;;;:7;:14;;;;;;;;25036:20;;;:33;-1:-1:-1;;;;;25036:33:35;25018:52;;:17;:52;;;;;:59;:64;;;;:98;;-1:-1:-1;25087:29:35;;;;;;;;;25086:30;25018:98;25015:130;;;-1:-1:-1;25133:5:35;;24893:410;-1:-1:-1;;24893:410:35:o;25015:130::-;25172:20;;;:33;-1:-1:-1;;;;;25172:33:35;25154:52;;;;:17;:52;;;;;:59;:64;;;;:98;;-1:-1:-1;25223:29:35;;;;;;;;;25222:30;25154:98;25151:130;;;-1:-1:-1;25269:5:35;;24893:410;-1:-1:-1;;24893:410:35:o;25151:130::-;-1:-1:-1;25294:4:35;;24893:410;-1:-1:-1;;24893:410:35:o;45365:176::-;665:10:8;1185:7:0;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:0;;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;45455:14:35::1;::::0;::::1;;45447:54;;;::::0;-1:-1:-1;;;45447:54:35;;34313:2:36;45447:54:35::1;::::0;::::1;34295:21:36::0;34352:2;34332:18;;;34325:30;-1:-1:-1;;;34371:18:36;;;34364:57;34438:18;;45447:54:35::1;34111:351:36::0;45447:54:35::1;45507:29;45526:9;;45507:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;45507:18:35::1;::::0;-1:-1:-1;;;45507:29:35:i:1;49843:308::-:0;49944:12;9277:43;9295:12;9309:10;9277:17;:43::i;:::-;9269:85;;;;-1:-1:-1;;;9269:85:35;;;;;;;:::i;:::-;49985:33:::1;3939:9;49985:15;:33;:::i;:::-;49973:9;:45;49972:65;;;-1:-1:-1::0;50023:14:35;;49972:65:::1;49964:127;;;::::0;-1:-1:-1;;;49964:127:35;;20570:2:36;49964:127:35::1;::::0;::::1;20552:21:36::0;20609:2;20589:18;;;20582:30;20648:34;20628:18;;;20621:62;-1:-1:-1;;;20699:18:36;;;20692:47;20756:19;;49964:127:35::1;20368:413:36::0;49964:127:35::1;-1:-1:-1::0;;;;;;50097:37:35;;::::1;;::::0;;;:23:::1;:37;::::0;;;;:49;49843:308::o;28054:1473::-;28132:19;28154:14;;;:7;:14;;;;;28197:13;28182:11;;;;;;:28;;;;;;;;:::i;:::-;;28174:61;;;;-1:-1:-1;;;28174:61:35;;;;;;;:::i;:::-;28270:20;;;:33;28331:31;;;;28385:29;;;;28445:20;;;:33;28506:31;;;;28560:29;;;;-1:-1:-1;;;;;28270:33:35;;;;28385:29;28270:33;28385:29;;;;;;;28445:33;;;;;28560:29;;;;28385;28606:22;;;;;28619:9;28606:22;28604:25;28596:64;;;;-1:-1:-1;;;28596:64:35;;32366:2:36;28596:64:35;;;32348:21:36;32405:2;32385:18;;;32378:30;-1:-1:-1;;;32424:18:36;;;32417:56;32490:18;;28596:64:35;32164:350:36;28596:64:35;-1:-1:-1;;;;;28674:32:35;;;;;;:17;:32;;;;;:39;:44;:92;;;;-1:-1:-1;;;;;;28722:32:35;;;;;;:17;:32;;;;;:39;:44;28674:92;28666:155;;;;-1:-1:-1;;;28666:155:35;;26635:2:36;28666:155:35;;;26617:21:36;26674:2;26654:18;;;26647:30;26713:34;26693:18;;;26686:62;-1:-1:-1;;;26764:18:36;;;26757:48;26822:19;;28666:155:35;26433:414:36;28666:155:35;28831:14;;;;-1:-1:-1;;;;;28831:14:35;:28;28828:446;;28891:14;;;;-1:-1:-1;;;;;28891:14:35;28877:10;:28;28869:81;;;;-1:-1:-1;;;28869:81:35;;36689:2:36;28869:81:35;;;36671:21:36;36728:2;36708:18;;;36701:30;-1:-1:-1;;;;;;;;;;;36747:18:36;;;36740:62;-1:-1:-1;;;36818:18:36;;;36811:38;36866:19;;28869:81:35;36487:404:36;28869:81:35;28828:446;;;28966:9;28963:311;;;29007:13;;-1:-1:-1;;;;;29007:13:35;28993:10;:27;28985:80;;;;-1:-1:-1;;;28985:80:35;;24901:2:36;28985:80:35;;;24883:21:36;24940:2;24920:18;;;24913:30;-1:-1:-1;;;;;;;;;;;24959:18:36;;;24952:62;-1:-1:-1;;;25030:18:36;;;25023:38;25078:19;;28985:80:35;24699:404:36;28963:311:35;29081:9;29078:196;;;29122:13;;;;-1:-1:-1;;;;;29122:13:35;29108:10;:27;29100:80;;;;-1:-1:-1;;;29100:80:35;;40133:2:36;29100:80:35;;;40115:21:36;40172:2;40152:18;;;40145:30;-1:-1:-1;;;;;;;;;;;40191:18:36;;;40184:62;-1:-1:-1;;;40262:18:36;;;40255:38;40310:19;;29100:80:35;39931:404:36;29078:196:35;29201:66;;-1:-1:-1;;;29201:66:35;;35450:2:36;29201:66:35;;;35432:21:36;35489:2;35469:18;;;35462:30;35528:34;35508:18;;;35501:62;-1:-1:-1;;;35579:18:36;;;35572:54;35643:19;;29201:66:35;35248:420:36;29078:196:35;29283:9;29280:102;;;29302:73;29323:5;29330:14;29346:11;29359:5;29366:8;29302:20;:73::i;:::-;29391:9;29388:102;;;29410:73;29431:5;29438:14;29454:11;29467:5;29474:8;29410:20;:73::i;:::-;-1:-1:-1;;;;29496:11:35;;;;;:26;;-1:-1:-1;;29496:26:35;29510:12;29496:26;;;-1:-1:-1;;;;28054:1473:35:o;52109:2752::-;52162:7;52199:14;;;:7;:14;;;;;;;;52244:20;;;:33;52305:31;;;;;52361:28;;;;52420:20;;;:33;52481:31;;;;52537:28;;;;-1:-1:-1;;;;;52244:33:35;;;52582:30;;;;;;;;;52420:33;;;;52582:45;;;;;;;;;;;52199:14;;52244:33;;52305:31;;52361:28;;52420:33;52481:31;52537:28;52582:45;;:94;;;;-1:-1:-1;;;;;;52631:30:35;;;;;;;:15;:30;;;;;;;;:45;;;;;;;;;;;;52582:94;52580:97;52572:140;;;;-1:-1:-1;;;52572:140:35;;;;;;;:::i;:::-;-1:-1:-1;;;;;52722:38:35;;;;;;:23;:38;;;;;;:43;;:103;;-1:-1:-1;;;;;;52787:38:35;;;;;;:23;:38;;;;;;52769:15;:56;52722:103;52719:141;;;-1:-1:-1;52842:11:35;52109:2752;-1:-1:-1;;;;;;;52109:2752:35:o;52719:141::-;-1:-1:-1;;;;;52869:30:35;;;;;;;:15;:30;;;;;;;;:45;;;;;;;;;;;;;:94;;-1:-1:-1;;;;;;52918:30:35;;;;;;;:15;:30;;;;;;;;:45;;;;;;;;;;;;52869:94;52866:1991;;;-1:-1:-1;;;;;52977:42:35;;;;;;;:27;:42;;;;;;;;:57;;;;;;;;;;;:67;;;;;;;;:77;;;;;;;:82;52974:1837;;-1:-1:-1;;;;;53093:42:35;;;;;;;:27;:42;;;;;;;;:57;;;;;;;;;;;:67;;;;;;;;:77;;;;;;;53078:93;;:11;:93;:::i;:::-;53071:100;52109:2752;-1:-1:-1;;;;;;;;;52109:2752:35:o;52974:1837::-;-1:-1:-1;;;;;53190:42:35;;;;;;;:27;:42;;;;;;;;:57;;;;;;;;;;;:67;;;;;;;;:77;;;;;;;:82;53187:1624;;-1:-1:-1;;;;;53306:42:35;;;;;;;:27;:42;;;;;;;;:57;;;;;;;;;;;:67;;;;;;;;:77;;;;;;;53291:93;;:11;:93;:::i;53187:1624::-;-1:-1:-1;;;;;53403:42:35;;;;;;;:27;:42;;;;;;;;:57;;;;;;;;;;;:67;;;;;;;;:83;;;;;;;:88;53400:1411;;-1:-1:-1;;;;;53525:42:35;;;;;;;:27;:42;;;;;;;;:57;;;;;;;;;;;:67;;;;;;;;:83;;;;;;;53510:99;;:11;:99;:::i;53400:1411::-;-1:-1:-1;;;;;53628:42:35;;;;;;;:27;:42;;;;;;;;:57;;;;;;;;;;;:73;;;;;;;;:83;;;;;;;:88;53625:1186;;-1:-1:-1;;;;;53750:42:35;;;;;;;:27;:42;;;;;;;;:57;;;;;;;;;;;:73;;;;;;;;:83;;;;;;;53735:99;;:11;:99;:::i;53625:1186::-;-1:-1:-1;;;;;53853:42:35;;;;;;;:27;:42;;;;;;;;:57;;;;;;;;;;;:73;;;;;;;;:83;;;;;;;:88;53850:961;;-1:-1:-1;;;;;53975:42:35;;;;;;;:27;:42;;;;;;;;:57;;;;;;;;;;;:73;;;;;;;;:83;;;;;;;53960:99;;:11;:99;:::i;53850:961::-;-1:-1:-1;;;;;54078:42:35;;;;;;;:27;:42;;;;;;;;:57;;;;;;;;;;;:67;;;;;;;;:83;;;;;;;:88;54075:736;;-1:-1:-1;;;;;54200:42:35;;;;;;;:27;:42;;;;;;;;:57;;;;;;;;;;;:67;;;;;;;;:83;;;;;;;54185:99;;:11;:99;:::i;54075:736::-;-1:-1:-1;;;;;54303:42:35;;;;;;;:27;:42;;;;;;;;:57;;;;;;;;;;;:73;;;;;;;;:89;;;;:94;54300:511;;-1:-1:-1;;;;;54431:42:35;;;;;;;:27;:42;;;;;;;;:57;;;;;;;;;;;:73;;;;;;;;:89;;;;54416:105;;:11;:105;:::i;54300:511::-;-1:-1:-1;;;;;54540:42:35;;;;;;;:27;:42;;;;;;;;:57;;;;;;;;;;;:73;;;;;;;;:89;;;;:94;54537:274;;-1:-1:-1;;;;;54668:42:35;;;;;;;:27;:42;;;;;;;;:57;;;;;;;;;;;:73;;;;;;;;:89;;;;54653:105;;:11;:105;:::i;54537:274::-;-1:-1:-1;54791:11:35;52109:2752;-1:-1:-1;;;;;;;52109:2752:35:o;46557:451::-;46667:12;9006;-1:-1:-1;;;;;8998:27:35;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;8984:43:35;:10;-1:-1:-1;;;;;8984:43:35;;:97;;;-1:-1:-1;;;;;;9037:32:35;;;;;;:18;:32;;;;;;;;9070:10;9037:44;;;;;;;;;;8984:97;8969:161;;;;-1:-1:-1;;;8969:161:35;;31964:2:36;8969:161:35;;;31946:21:36;32003:2;31983:18;;;31976:30;32042:34;32022:18;;;32015:62;-1:-1:-1;;;32093:18:36;;;32086:31;32134:19;;8969:161:35;31762:397:36;8969:161:35;46692:6:::1;46687:154;-1:-1:-1::0;;;;;46706:31:35;::::1;;::::0;;;:17:::1;:31;::::0;;;;:38;46704:40;::::1;46687:154;;;-1:-1:-1::0;;;;;46758:32:35;::::1;46829:5;46758:32:::0;;;:18:::1;:32;::::0;;;;;;;46791:17:::1;:31:::0;;;;;:34;;46829:5;;46791:31;46823:1;;46791:34;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;;::::1;::::0;-1:-1:-1;;;;;46791:34:35::1;46758:68:::0;;;::::1;::::0;;;;;;;;:76;;-1:-1:-1;;46758:76:35::1;::::0;::::1;;::::0;;;::::1;::::0;;46746:3;::::1;::::0;::::1;:::i;:::-;;;;46687:154;;;;46851:6;46846:109;46863:18:::0;;::::1;46846:109;;;-1:-1:-1::0;;;;;46895:32:35;::::1;;::::0;;;:18:::1;:32;::::0;;;;46944:4:::1;::::0;46928:9;;46938:1;46928:12;;::::1;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;46895:46:35::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;46895:46:35;:53;;-1:-1:-1;;46895:53:35::1;::::0;::::1;;::::0;;;::::1;::::0;;46883:3;::::1;::::0;::::1;:::i;:::-;;;;46846:109;;;-1:-1:-1::0;;;;;;46960:31:35;::::1;;::::0;;;:17:::1;:31;::::0;;;;:43:::1;::::0;46994:9;;46960:43:::1;:::i;1846:189:0:-:0;665:10:8;1185:7:0;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:0;;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:0;;24494:2:36;1926:73:0::1;::::0;::::1;24476:21:36::0;24533:2;24513:18;;;24506:30;24572:34;24552:18;;;24545:62;-1:-1:-1;;;24623:18:36;;;24616:36;24669:19;;1926:73:0::1;24292:402:36::0;1926:73:0::1;2009:19;2019:8;2009:9;:19::i;11039:2294:35:-:0;11270:10;-1:-1:-1;;;;;11225:55:35;:41;11239:10;11225:41;;;;;;;;;;;;;-1:-1:-1;;;11225:41:35;;;:13;:41::i;:::-;-1:-1:-1;;;;;11225:55:35;;11217:70;;;;-1:-1:-1;;;11217:70:35;;28652:2:36;11217:70:35;;;28634:21:36;28691:1;28671:18;;;28664:29;-1:-1:-1;;;28709:18:36;;;28702:32;28751:18;;11217:70:35;28450:325:36;11217:70:35;-1:-1:-1;;;;;11334:19:35;;11348:4;11334:19;11326:34;;;;-1:-1:-1;;;11326:34:35;;23817:2:36;11326:34:35;;;23799:21:36;23856:1;23836:18;;;23829:29;-1:-1:-1;;;23874:18:36;;;23867:32;23916:18;;11326:34:35;23615:325:36;11326:34:35;11399:31;11411:4;11417:12;;11399:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11399:11:35;;-1:-1:-1;;;11399:31:35:i;:::-;11391:46;;;;-1:-1:-1;;;11391:46:35;;38698:2:36;11391:46:35;;;38680:21:36;38737:1;38717:18;;;38710:29;-1:-1:-1;;;38755:18:36;;;38748:32;38797:18;;11391:46:35;38496:325:36;11391:46:35;11469:12;11484:19;11498:4;40621:2;40611:13;40605:20;;40497:138;11484:19;11469:34;-1:-1:-1;;;;;;;;;;;;11512:27:35;;11509:1820;;;11705:2;11695:13;;;11689:20;11745:2;11735:13;;;11729:20;11791:3;11781:14;;11775:21;11838:3;11828:14;;11822:21;12011:92;;;;;;;12025:10;12011:92;;-1:-1:-1;12011:92:35;;;;;;;;;;;11689:20;;11729;;11775:21;;11822;;11549:17;;12011:92;;12055:16;12011:92;;12073:4;12011:92;;;;;;;;;;;12086:16;12011:92;;11976:127;-1:-1:-1;12111:32:35;12146:24;12165:4;12146:18;:24::i;:::-;12111:59;;12179:162;12202:4;12216:9;12235:8;12253:14;12277;12301:11;12322;12179:13;:162::i;:::-;11541:808;;;;;;11509:1820;;;-1:-1:-1;;;;;;;;;;;12359:29:35;;12355:974;;;12499:2;12489:13;;12483:20;12522:11;;12398:13;;12537:2;12522:17;12518:284;;;-1:-1:-1;12780:2:35;12770:13;;12764:20;12518:284;12809:19;12831:14;;;:7;:14;;;;;12908:13;;12831:14;;12809:19;-1:-1:-1;;;;;12900:21:35;;;12908:13;;12900:21;12899:69;;12948:5;:20;;12899:69;;;12925:5;:20;;12899:69;12854:114;;;;;;;;;;-1:-1:-1;;;;;12854:114:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;12998:34:35;;;;-1:-1:-1;;;;;;12984:48:35;:10;:48;12976:77;;;;-1:-1:-1;;;12976:77:35;;30179:2:36;12976:77:35;;;30161:21:36;30218:2;30198:18;;;30191:30;-1:-1:-1;;;30237:18:36;;;30230:46;30293:18;;12976:77:35;29977:340:36;12976:77:35;13082:21;:29;;;13069:9;:42;13061:89;;;;-1:-1:-1;;;13061:89:35;;36286:2:36;13061:89:35;;;36268:21:36;36325:2;36305:18;;;36298:30;36364:34;36344:18;;;36337:62;-1:-1:-1;;;36415:18:36;;;36408:32;36457:19;;13061:89:35;36084:398:36;13061:89:35;13186:21;:35;;;13166:55;;;;;;;;:::i;:::-;:16;:55;13158:101;;;;-1:-1:-1;;;13158:101:35;;21421:2:36;13158:101:35;;;21403:21:36;21460:2;21440:18;;;21433:30;21499:34;21479:18;;;21472:62;-1:-1:-1;;;21550:18:36;;;21543:31;21591:19;;13158:101:35;21219:397:36;13158:101:35;13268:45;13281:5;13288:4;13294:1;13297:5;13304:8;13268:12;:45::i;:::-;12390:939;;;;12355:974;11211:2122;11039:2294;;;;;;;;;;:::o;10350:216::-;10510:4;10529:31;10541:4;;10529:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10529:31:35;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10547:12:35;;-1:-1:-1;10547:12:35;;;;10529:31;;10547:12;;;;10529:31;;;;;;;;;-1:-1:-1;10529:11:35;;-1:-1:-1;;;10529:31:35:i;:::-;10522:39;10350:216;-1:-1:-1;;;;;;;;;;;;10350:216:35:o;676:141:16:-;808:4;744:16;:61;788:14;771:32;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;771:32:16;;;;;;761:43;;771:32;761:43;;;;744:61;;;;;;;;;;-1:-1:-1;744:61:16;:68;;-1:-1:-1;;744:68:16;;;;;;;;;;-1:-1:-1;676:141:16:o;48188:191:35:-;-1:-1:-1;;;;;48294:28:35;;;48275:4;48294:28;;;:14;:28;;;;;;;;:36;;;;;;;;;;;;;;;:79;;;48352:12;-1:-1:-1;;;;;48344:27:35;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;48334:39:35;:6;-1:-1:-1;;;;;48334:39:35;;48287:87;48188:191;-1:-1:-1;;;48188:191:35:o;31541:576::-;31671:19;31693:14;;;:7;:14;;;;;;31671:19;31758:6;:24;;;;;;;;:::i;:::-;;31757:72;;31809:5;:20;;31757:72;;;31786:5;:20;;31757:72;31714:115;;;;;;;;;;-1:-1:-1;;;;;31714:115:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;31863:29:35;;;;31714:115;;-1:-1:-1;31921:14:35;31903;:32;;;;;;;;:::i;:::-;;31899:214;;;31945:73;31971:5;31978:6;31986:5;31993:14;32009:8;31945:25;:73::i;:::-;31899:214;;;32039:67;32069:5;32076:6;32084:5;32091:14;32039:29;:67::i;:::-;31664:453;;;31541:576;;;;;:::o;26653:1131::-;26724:19;26746:14;;;:7;:14;;;;;;26783:15;26754:5;26783:8;:15::i;:::-;26827:31;;;;26886;;;;26767;;-1:-1:-1;26827:31:35;26927:20;;;26924:821;;;26957:73;26978:5;26985:14;27001:11;27014:5;27021:8;26957:20;:73::i;:::-;27038;27059:5;27066:14;27082:11;27095:5;27102:8;27038:20;:73::i;:::-;26924:821;;;27306:11;27297:5;:20;;:72;;;;-1:-1:-1;27355:14:35;27321:30;;;;;;;;;:48;;;;;;;;:::i;:::-;;;27297:72;27289:132;;;;-1:-1:-1;;;27289:132:35;;28982:2:36;27289:132:35;;;28964:21:36;29021:2;29001:18;;;28994:30;29060:34;29040:18;;;29033:62;-1:-1:-1;;;29111:18:36;;;29104:45;29166:19;;27289:132:35;28780:411:36;27289:132:35;27429:73;27450:5;27457:14;27473:11;27486:5;27493:8;27429:20;:73::i;:::-;27510:67;27531:5;27538:14;27554:5;27561;27568:8;27510:20;:67::i;:::-;27622:16;27588:30;;;;;;;;;:50;;;;;;;;:::i;:::-;;27585:154;;;27650:80;27671:5;27678:14;27694:19;27708:5;27694:11;:19;:::i;:::-;27715:4;27721:8;27650:20;:80::i;:::-;27750:11;;;:28;;27764:14;;27750:11;-1:-1:-1;;27750:28:35;;27764:14;27750:28;;22281:771;22420:26;;22473:24;;;;22521:21;;;;22573:27;;;;22385:4;;22420:26;22473:24;22521:21;22627:14;22610:13;:31;;;;;;;;:::i;:::-;;22607:423;;;22666:53;;-1:-1:-1;;;22666:53:35;;-1:-1:-1;;;;;15442:15:36;;;22666:53:35;;;15424:34:36;22713:4:35;15474:18:36;;;15467:43;22723:10:35;;22666:30;;;;;;15359:18:36;;22666:53:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:67;;22659:75;;;;;;;;22607:423;22767:15;22750:13;:32;;;;;;;;:::i;:::-;;22747:283;;;22799:51;;-1:-1:-1;;;22799:51:35;;;;;17882:25:36;;;22862:4:35;;-1:-1:-1;;;;;22799:33:35;;;;;17855:18:36;;22799:51:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;22799:68:35;;22792:76;;;;;;;;22747:283;22901:16;22884:13;:33;;;;;;;;:::i;:::-;;22881:149;;;22933:75;;-1:-1:-1;;;22933:75:35;;;;;18399:25:36;;;-1:-1:-1;;;;;18498:15:36;;;18478:18;;;18471:43;23002:4:35;18530:18:36;;;18523:43;23012:10:35;;22933:43;;;;;;18372:18:36;;22933:75:35;18197:375:36;22881:149:35;-1:-1:-1;23043:4:35;;22281:771;-1:-1:-1;;;;;;22281:771:35:o;17201:4007::-;17332:19;17354:14;;;:7;:14;;;;;17397:13;17382:11;;;;;;:28;;;;;;;;:::i;:::-;;17374:61;;;;-1:-1:-1;;;17374:61:35;;;;;;;:::i;:::-;17484:13;;17442:23;;-1:-1:-1;;;;;17474:23:35;;;17484:13;;17474:23;17471:341;;;-1:-1:-1;17525:13:35;;;;-1:-1:-1;;;;;17525:13:35;17471:341;;;17564:13;;;;-1:-1:-1;;;;;17554:23:35;;;17564:13;;17554:23;17551:261;;;-1:-1:-1;17605:13:35;;-1:-1:-1;;;;;17605:13:35;17551:261;;;17634:13;;;;-1:-1:-1;;;;;17634:13:35;17631:181;;-1:-1:-1;17671:13:35;;;:22;;-1:-1:-1;;;;;;17671:22:35;-1:-1:-1;;;;;17671:22:35;;;;;;;;;;17719:13;;;17631:181;;;17753:52;;-1:-1:-1;;;17753:52:35;;33543:2:36;17753:52:35;;;33525:21:36;33582:2;33562:18;;;33555:30;33621:34;33601:18;;;33594:62;-1:-1:-1;;;33672:18:36;;;33665:40;33722:19;;17753:52:35;33341:406:36;17631:181:35;17874:13;;17818:42;;-1:-1:-1;;;;;17864:23:35;;;17874:13;;17864:23;17863:71;;17914:5;:20;;17863:71;;;17891:5;:20;;17863:71;17818:116;;;;;;;;;;-1:-1:-1;;;;;17818:116:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;17950:21;:30;;;17949:31;17941:80;;;;-1:-1:-1;;;17941:80:35;;33138:2:36;17941:80:35;;;33120:21:36;33177:2;33157:18;;;33150:30;33216:34;33196:18;;;33189:62;-1:-1:-1;;;33267:18:36;;;33260:34;33311:19;;17941:80:35;32936:400:36;17941:80:35;18066:16;18031:21;:31;;;:51;;;;;;;;:::i;:::-;;18028:1595;;;18134:12;18095:21;:35;;;:51;;;;;;;;:::i;:::-;;18092:1131;;;18178:21;:32;;;18166:8;:44;18158:85;;;;-1:-1:-1;;;18158:85:35;;27054:2:36;18158:85:35;;;27036:21:36;27093:2;27073:18;;;27066:30;-1:-1:-1;;;27112:18:36;;;27105:58;27180:18;;18158:85:35;26852:352:36;18158:85:35;18028:1595;;18092:1131;18300:14;18261:21;:35;;;:53;;;;;;;;:::i;:::-;;18258:965;;;18341:34;;18413:32;;;;18334:112;;-1:-1:-1;;;18334:112:35;;-1:-1:-1;;;;;18334:55:35;;;;;;:112;;18390:6;;18406:4;;18334:112;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;18028:1595;;18258:965;18503:15;18464:21;:35;;;:54;;;;;;;;:::i;:::-;;18461:762;;;18538:34;;18618:29;;;;;18530:119;;-1:-1:-1;;;18530:119:35;;-1:-1:-1;;;;;18530:56:35;;;;;;:119;;18587:6;;18603:4;;18530:119;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18028:1595;;18461:762;18707:16;18668:21;:35;;;:55;;;;;;;;:::i;:::-;;18667:83;;;;-1:-1:-1;18728:22:35;;18667:83;18664:559;;;18770:21;:34;;;-1:-1:-1;;;;;18761:72:35;;18834:21;:29;;;18865:6;18881:4;18888:21;:32;;;-1:-1:-1;;;;;;;;;;;18939:18:35;;18922:36;;;;;;14389:19:36;;14433:2;14424:12;;14260:182;18922:36:35;;;;;;;-1:-1:-1;;18922:36:35;;;;;;-1:-1:-1;;;;;;;;;;;18922:36:35;18960;;14389:19:36;18922:36:35;14424:12:36;18960:36:35;;;;;;;;;;;;18761:236;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;18664:559::-;19055:16;19016:21;:35;;;:55;;;;;;;;:::i;:::-;;19015:83;;;;-1:-1:-1;19076:22:35;;;19015:83;19012:211;;;19138:21;:32;;;19117:17;:53;19109:105;;;;-1:-1:-1;;;19109:105:35;;22230:2:36;19109:105:35;;;22212:21:36;22269:2;22249:18;;;22242:30;22308:34;22288:18;;;22281:62;-1:-1:-1;;;22359:18:36;;;22352:37;22406:19;;19109:105:35;22028:403:36;18028:1595:35;19274:14;19239:21;:31;;;:49;;;;;;;;:::i;:::-;;19235:388;;;19308:59;19320:6;19328:15;19345:21;19308:11;:59::i;:::-;19300:127;;;;-1:-1:-1;;;19300:127:35;;37515:2:36;19300:127:35;;;37497:21:36;37554:2;37534:18;;;37527:30;37593:34;37573:18;;;37566:62;-1:-1:-1;;;37644:18:36;;;37637:53;37707:19;;19300:127:35;37313:419:36;19235:388:35;19500:51;19521:6;19529:21;19500:20;:51::i;:::-;19492:124;;;;-1:-1:-1;;;19492:124:35;;29750:2:36;19492:124:35;;;29732:21:36;29789:2;29769:18;;;29762:30;29828:34;29808:18;;;29801:62;-1:-1:-1;;;29879:18:36;;;29872:58;29947:19;;19492:124:35;29548:424:36;19492:124:35;19642:13;;-1:-1:-1;;;;;19632:23:35;;;19642:13;;19632:23;19629:136;;;19665:29;;;:36;;-1:-1:-1;;19665:36:35;;;;;19629:136;;;19722:29;;;:36;;-1:-1:-1;;19722:36:35;;;;;19629:136;19823:20;;;;19804:15;:39;;19776:25;19870:29;19893:5;19870:22;:29::i;:::-;19849:50;;20369:20;:52;;;;-1:-1:-1;20393:14:35;;;;-1:-1:-1;;;;;20393:14:35;:28;20369:52;:104;;;;-1:-1:-1;20459:14:35;20425:30;;;;;;;;;:48;;;;;;;;:::i;:::-;;20369:104;:156;;;;-1:-1:-1;20511:14:35;20477:30;;;;;;;;;:48;;;;;;;;:::i;:::-;;20369:156;:173;;;;;20529:13;20369:173;20365:672;;;20690:13;;20637:39;;-1:-1:-1;;;;;20680:23:35;;;20690:13;;20680:23;20679:71;;20730:5;:20;;20679:71;;;20707:5;:20;;20679:71;20637:113;;;;;;;;;;-1:-1:-1;;;;;20637:113:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;20637:113:35;-1:-1:-1;20762:56:35;20774:15;20791:6;20637:113;20762:11;:56::i;:::-;20758:273;;;20940:29;;;:36;;;-1:-1:-1;;20940:36:35;;;;;;;;20986:29;;;:36;;;;;;;;;;20758:273;20544:493;20365:672;21053:14;;;;-1:-1:-1;;;;;21053:14:35;:28;:63;;;;;21085:31;21110:5;21085:24;:31::i;:::-;21053:80;;;;;21120:13;21053:80;:104;;;;;21137:20;21053:104;21043:161;;;21167:30;21181:5;21188:8;21167:13;:30::i;:::-;17326:3882;;;;;17201:4007;;;;;:::o;1605:92:0:-;665:10:8;1185:7:0;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:0;;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;14738:1913:35:-;15086:12;15054:14;:28;;;:44;;;;;;;;:::i;:::-;;15051:159;;;15144:16;15116:14;:24;;;:44;;;;;;;;:::i;:::-;;15108:95;;;;-1:-1:-1;;;15108:95:35;;;;;;;:::i;:::-;15251:12;15219:14;:28;;;:44;;;;;;;;:::i;:::-;;15216:159;;;15309:16;15281:14;:24;;;:44;;;;;;;;:::i;:::-;;15273:95;;;;-1:-1:-1;;;15273:95:35;;;;;;;:::i;:::-;15413:14;15385;:24;;;:42;;;;;;;;:::i;:::-;;15381:292;;;15477:14;15445;:28;;;:46;;;;;;;;:::i;:::-;;:98;;;-1:-1:-1;15527:16:35;15495:14;:28;;;:48;;;;;;;;:::i;:::-;;15445:98;15437:153;;;;-1:-1:-1;;;15437:153:35;;;;;;;:::i;:::-;15606:22;;;;15598:68;;;;-1:-1:-1;;;15598:68:35;;;;;;;:::i;:::-;15715:14;15687;:24;;;:42;;;;;;;;:::i;:::-;;15683:292;;;15779:14;15747;:28;;;:46;;;;;;;;:::i;:::-;;:98;;;-1:-1:-1;15829:16:35;15797:14;:28;;;:48;;;;;;;;:::i;:::-;;15747:98;15739:153;;;;-1:-1:-1;;;15739:153:35;;;;;;;:::i;:::-;15908:22;;;;15900:68;;;;-1:-1:-1;;;15900:68:35;;;;;;;:::i;:::-;15984:14;;;;15981:142;;;-1:-1:-1;;;;;16016:26:35;;;;;;:16;:26;;;;;;;;16008:108;;;;-1:-1:-1;;;16008:108:35;;26157:2:36;16008:108:35;;;26139:21:36;26196:2;26176:18;;;26169:30;26235:34;26215:18;;;26208:62;26306:34;26286:18;;;26279:62;-1:-1:-1;;;26357:19:36;;;26350:36;26403:19;;16008:108:35;25955:473:36;16008:108:35;-1:-1:-1;;;;;16137:21:35;;16129:82;;;;-1:-1:-1;;;16129:82:35;;37098:2:36;16129:82:35;;;37080:21:36;37137:2;37117:18;;;37110:30;37176:34;37156:18;;;37149:62;-1:-1:-1;;;37227:18:36;;;37220:46;37283:19;;16129:82:35;36896:412:36;16129:82:35;16222:6;:8;;;:6;:8;;;:::i;:::-;;;;;;16237:23;16281:15;16264:14;:32;16263:90;;16318:34;3881:10;16318:15;:34;:::i;:::-;16263:90;;;16300:14;16263:90;16237:116;;16378:268;;;;;;;;16401:7;-1:-1:-1;;;;;16378:268:35;;;;;16425:7;-1:-1:-1;;;;;16378:268:35;;;;;16450:8;-1:-1:-1;;;;;16378:268:35;;;;;16482:15;16378:268;;;;16521:14;16378:268;;;;16559:14;16378:268;;;;16597:14;16378:268;;;;16626:13;16378:268;;;;;;;;:::i;:::-;;;16368:6;;;16360:15;;;;:7;:15;;;;;;;;;:286;;;;-1:-1:-1;;;;;16360:286:35;;;-1:-1:-1;;;;;;16360:286:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:15;;:286;;;;-1:-1:-1;;16360:286:35;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;16360:286:35;;;;;;;;;;;;;;;;;-1:-1:-1;;16360:286:35;;;;;;;;;-1:-1:-1;;16360:286:35;;;;;;;;;;;;;;;;;-1:-1:-1;;16360:286:35;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;16360:286:35;;;;;;;;;;;-1:-1:-1;;;;;;16360:286:35;-1:-1:-1;;;;;16360:286:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16360:286:35;-1:-1:-1;16360:286:35;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;16360:286:35;;;;;;;;;;;;;;;;;-1:-1:-1;;16360:286:35;;;;;;;;;-1:-1:-1;;16360:286:35;;;;;;;;;;;;;;;;;-1:-1:-1;;16360:286:35;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;16360:286:35;;;;;;;;;-1:-1:-1;;16360:286:35;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;;;;;;14738:1913:35:o;45668:313::-;45745:6;45740:106;45759:15;:22;45757:24;;45740:106;;;45834:5;45795:16;:36;45812:15;45828:1;45812:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;45812:18:35;45795:36;;;;;;;;;;;;:44;;-1:-1:-1;;45795:44:35;;;;;;;;;;45783:3;;;;:::i;:::-;;;;45740:106;;;;45856:6;45851:93;45870:9;:16;45868:1;:18;45851:93;;;45933:4;45900:16;:30;45917:9;45927:1;45917:12;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;45900:30:35;;;;;;;;;;;-1:-1:-1;45900:30:35;:37;;-1:-1:-1;;45900:37:35;;;;;;;;;;45888:3;;;;:::i;:::-;;;;45851:93;;;-1:-1:-1;45949:27:35;;;;:15;;:27;;;;;:::i;2041:169:0:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;616:261:33:-;706:7;725:21;776:15;759:33;;;;;;;;:::i;:::-;;;;-1:-1:-1;;759:33:33;;;;;;;;;;749:44;;759:33;749:44;;;;-1:-1:-1;;;810:60:33;;749:44;-1:-1:-1;278:42:33;;810:39;;:60;;850:4;;749:44;;810:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;803:67;616:261;-1:-1:-1;;;;616:261:33:o;39193:613:35:-;39282:4;39297:12;:19;39320:1;39297:24;39294:149;;;-1:-1:-1;39431:5:35;39424:12;;39294:149;39453:12;39468:19;39482:4;40621:2;40611:13;40605:20;;40497:138;39468:19;39453:34;;39496:4;:11;39511:3;39496:18;:49;;;;-1:-1:-1;;;;;;;;;;;;39518:27:35;;39496:49;39493:309;;;39562:4;39555:11;;;;;39493:309;39584:4;:11;39599:2;39584:17;:38;;;;39605:4;:11;39620:2;39605:17;39584:38;39583:73;;;;-1:-1:-1;;;;;;;;;;;;39627:29:35;;39583:73;39579:223;;;39673:4;39666:11;;;;;39579:223;39694:4;:11;39709:2;39694:17;:47;;;;-1:-1:-1;;;;;;;;;;;;39715:26:35;;39694:47;39690:112;;;39758:4;39751:11;;;;;39690:112;39790:5;39783:12;;;;;43370:614;43439:30;;:::i;:::-;43650:3;43640:14;;43634:21;43692:3;43682:14;;;43676:21;43730:3;43720:14;;43714:21;43774:3;43764:14;;43758:21;43814:3;43804:14;;43798:21;43842:137;;;;;;;;-1:-1:-1;;;;;43842:137:35;;;;;;;;;;;;;;;43676:21;;43714;;43758;;43842:137;;;43758:21;43842:137;;;;;;;;:::i;:::-;;;43938:5;43842:137;;;;;;;;;;;;43964:9;43842:137;;;;;;;;:::i;:::-;;;43830:149;43370:614;-1:-1:-1;;;;;;;43370:614:35:o;32121:984::-;32235:19;32257:14;;;:7;:14;;;;;;32235:19;32296:6;:24;;;;;;;;:::i;:::-;;32295:58;;32340:13;;;;-1:-1:-1;;;;;32340:13:35;32295:58;;;32324:13;;-1:-1:-1;;;;;32324:13:35;32295:58;32278:75;-1:-1:-1;32359:17:35;;32380:6;:24;;;;;;;;:::i;:::-;;32379:58;;32424:13;;-1:-1:-1;;;;;32424:13:35;32379:58;;;32408:13;;;;-1:-1:-1;;;;;32408:13:35;32379:58;32359:78;-1:-1:-1;32443:40:35;;32487:6;:24;;;;;;;;:::i;:::-;;32486:72;;32538:5;:20;;32486:72;;;32515:5;:20;;32486:72;32443:115;;;;;;;;;;-1:-1:-1;;;;;32443:115:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;32592:5;:20;;;32573:15;:39;;32565:75;;;;-1:-1:-1;;;32565:75:35;;;;;;;:::i;:::-;32670:32;;32726:27;;;;32784:33;;;;32849:14;32832:13;:31;;;;;;;;:::i;:::-;;:68;;;-1:-1:-1;32884:16:35;32867:13;:33;;;;;;;;:::i;:::-;;32832:68;32824:112;;;;-1:-1:-1;;;32824:112:35;;30524:2:36;32824:112:35;;;30506:21:36;30563:2;30543:18;;;30536:30;30602:33;30582:18;;;30575:61;30653:18;;32824:112:35;30322:355:36;32824:112:35;32951:51;32963:6;32971:9;32982:19;32951:11;:51::i;:::-;32943:79;;;;-1:-1:-1;;;32943:79:35;;22638:2:36;32943:79:35;;;22620:21:36;22677:2;22657:18;;;22650:30;-1:-1:-1;;;22696:18:36;;;22689:45;22751:18;;32943:79:35;22436:339:36;32943:79:35;33029:71;33042:12;33056:7;33065:13;33080:8;33090:9;33029:12;:71::i;:::-;32228:877;;;;;;;32121:984;;;;;:::o;33581:1612::-;33701:19;33723:14;;;:7;:14;;;;;;33701:19;33762:6;:24;;;;;;;;:::i;:::-;;33761:58;;33806:13;;;;-1:-1:-1;;;;;33806:13:35;33761:58;;;33790:13;;-1:-1:-1;;;;;33790:13:35;33761:58;33744:75;-1:-1:-1;33825:17:35;;33846:6;:24;;;;;;;;:::i;:::-;;33845:58;;33890:13;;-1:-1:-1;;;;;33890:13:35;33845:58;;;33874:13;;;;-1:-1:-1;;;;;33874:13:35;33845:58;33825:78;-1:-1:-1;33909:41:35;;33954:6;:24;;;;;;;;:::i;:::-;;33953:72;;34005:5;:20;;33953:72;;;33982:5;:20;;33953:72;34055:32;;34111:27;;;;;34169:33;;;;33909:116;;-1:-1:-1;;;;;;34055:32:35;;;;34169:33;;;34233:6;;34248:29;;;;;;;;;:49;;;;;;;;:::i;:::-;;34245:98;;;-1:-1:-1;34331:4:35;34245:98;34352:14;34349:148;;;34388:6;34376:18;;34349:148;;;34442:5;:20;;;34423:15;:39;;34415:75;;;;-1:-1:-1;;;34415:75:35;;;;;;;:::i;:::-;34523:12;34506:13;:29;;;;;;;;:::i;:::-;;34503:685;;;34606:32;;34588:9;;-1:-1:-1;;;;;34606:25:35;;;:32;;;;;34632:5;;34545:32;34606;34545;34606;34632:5;34606:25;:32;;;;;;;;;;;;;;;;;;;;;34537:108;34503:685;;;34671:14;34654:13;:31;;;;;;;;:::i;:::-;;34651:537;;;-1:-1:-1;;;;;34698:30:35;;34723:4;34698:30;34695:192;;;34740:47;;-1:-1:-1;;;34740:47:35;;-1:-1:-1;;;;;34740:29:35;;;;;:47;;34770:9;;34781:5;;34740:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;34651:537;;34695:192;34812:66;;-1:-1:-1;;;34812:66:35;;-1:-1:-1;;;;;34812:33:35;;;;;:66;;34846:13;;34861:9;;34872:5;;34812:66;;;:::i;34651:537::-;34919:15;34902:13;:32;;;;;;;;:::i;:::-;;34899:289;;;34944:78;;-1:-1:-1;;;34944:78:35;;-1:-1:-1;;;;;34944:34:35;;;;;:78;;34979:13;;34994:9;;35013:7;;34944:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34899:289;;;35055:16;35038:13;:33;;;;;;;;:::i;:::-;;35035:153;;;35081:100;;-1:-1:-1;;;35081:100:35;;;;;19698:25:36;;;-1:-1:-1;;;;;19797:15:36;;;19777:18;;;19770:43;19849:15;;;19829:18;;;19822:43;19881:18;;;19874:34;;;19945:3;19924:19;;;19917:32;-1:-1:-1;19965:19:36;;;19958:30;;;35081:100:35;20004:19:36;;;19997:32;20045:19;;;20038:30;35081:50:35;;;;;20085:19:36;;35081:100:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;33695:1498;;;;;;;;33581:1612;;;;:::o;36343:1550::-;36492:26;;36541:21;;;;36593:27;;;;36457:4;;36492:26;36541:21;36651:16;36634:13;:33;;;;;;;;:::i;:::-;;36631:1258;;;36677:22;36702:53;36716:12;36730:24;;;;;;;;;;;;;-1:-1:-1;;;36730:24:35;;;36702:13;:53::i;:::-;36677:78;-1:-1:-1;;;;;;36782:28:35;;36763:106;;;;-1:-1:-1;;;36763:106:35;;;;;;;:::i;:::-;36878:25;36911:18;36937:21;36966:17;36991:14;37013:18;37141:14;-1:-1:-1;;;;;37110:63:35;;37174:12;37188:6;37110:85;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;37039:156;-1:-1:-1;37039:156:35;;-1:-1:-1;37039:156:35;;-1:-1:-1;37039:156:35;;-1:-1:-1;37039:156:35;;-1:-1:-1;37039:156:35;;-1:-1:-1;37224:22:35;;-1:-1:-1;37210:36:35;;-1:-1:-1;;37210:36:35;;:10;:36;;;;;;;;:::i;:::-;;:77;;;;;37263:13;:24;;;37250:9;:37;37210:77;:131;;;;;37306:6;-1:-1:-1;;;;;37292:20:35;:10;-1:-1:-1;;;;;37292:20:35;;:48;;;-1:-1:-1;;;;;;37316:24:35;;;37292:48;37210:161;;;;;37362:9;-1:-1:-1;;;;;37345:26:35;:13;-1:-1:-1;;;;;37345:26:35;;37210:161;:218;;;;-1:-1:-1;37376:24:35;;;;:51;;-1:-1:-1;;;;;;37404:23:35;;37422:4;37404:23;37376:51;37203:225;;;;;;;;;;;;;;36631:1258;37462:14;37445:13;:31;;;;;;;;:::i;:::-;;37441:448;;;37514:58;;-1:-1:-1;;;37514:58:35;;;;;17882:25:36;;;37486::35;;-1:-1:-1;;;;;37514:50:35;;;;;17855:18:36;;37514:58:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;37486:86;;37603:6;-1:-1:-1;;;;;37588:21:35;:4;:11;;;-1:-1:-1;;;;;37588:21:35;;:50;;;-1:-1:-1;37613:11:35;;-1:-1:-1;;;;;37613:25:35;;37588:50;37587:83;;;;;37661:9;-1:-1:-1;;;;;37643:27:35;:4;:14;;;-1:-1:-1;;;;;37643:27:35;;37587:83;:126;;;;;37689:13;:24;;;37674:4;:11;;;:39;37587:126;:167;;;;-1:-1:-1;37732:22:35;37717:4;:11;;;:37;;;;;;;;:::i;:::-;;37587:167;:234;;;;-1:-1:-1;37759:15:35;;;;:29;;;:61;;-1:-1:-1;37792:11:35;;;;-1:-1:-1;;;;;37792:28:35;37815:4;37792:28;37759:61;37580:241;;;;;;;;37441:448;37842:40;;-1:-1:-1;;;37842:40:35;;33954:2:36;37842:40:35;;;33936:21:36;33993:2;33973:18;;;33966:30;34032:32;34012:18;;;34005:60;34082:18;;37842:40:35;33752:354:36;35197:1142:35;35396:14;35379:13;:31;;;;;;;;:::i;:::-;;35375:852;;;-1:-1:-1;;;;;35428:19:35;;35420:63;;;;-1:-1:-1;;;35420:63:35;;;;;;;:::i;:::-;35492:61;;-1:-1:-1;;;35492:61:35;;;;;20289:25:36;;;20330:18;;;20323:34;;;-1:-1:-1;;;;;35492:38:35;;;;;20262:18:36;;35492:61:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35375:852;;;35587:16;35570:13;:33;;;;;;;;:::i;:::-;;35566:661;;;-1:-1:-1;;;;;35621:19:35;;35613:63;;;;-1:-1:-1;;;35613:63:35;;;;;;;:::i;:::-;35685:22;35710:46;35724:5;35731:24;;;;;;;;;;;;;-1:-1:-1;;;35731:24:35;;;35710:13;:46::i;:::-;35685:71;-1:-1:-1;;;;;;35783:28:35;;35764:106;;;;-1:-1:-1;;;35764:106:35;;;;;;;:::i;:::-;35926:83;;-1:-1:-1;;;35926:83:35;;35879:17;;-1:-1:-1;;;;;35926:63:35;;;;;:83;;35990:5;;35997:11;;35926:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;36018:147:35;;-1:-1:-1;;;36018:147:35;;-1:-1:-1;;;;;16429:32:36;;;36018:147:35;;;16411:51:36;16478:18;;;16471:34;;;16521:18;;;16514:34;;;16564:18;;;16557:34;;;35904:105:35;;-1:-1:-1;36018:58:35;;;;-1:-1:-1;36018:58:35;;-1:-1:-1;;16383:19:36;;;;;-1:-1:-1;36018:147:35;;-1:-1:-1;;16180:417:36;36018:147:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35605:567;;35566:661;;;36188:32;;-1:-1:-1;;;36188:32:35;;39434:2:36;36188:32:35;;;39416:21:36;39473:2;39453:18;;;39446:30;-1:-1:-1;;;39492:18:36;;;39485:52;39554:18;;36188:32:35;39232:346:36;35566:661:35;36238:96;;;18092:25:36;;;-1:-1:-1;;;;;18153:32:36;;;18148:2;18133:18;;18126:60;36275:11:35;;36238:96;;;;;;18065:18:36;36238:96:35;;;;;;;35197:1142;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;14:134:36;82:20;;111:31;82:20;111:31;:::i;:::-;14:134;;;:::o;153:367::-;216:8;226:6;280:3;273:4;265:6;261:17;257:27;247:55;;298:1;295;288:12;247:55;-1:-1:-1;321:20:36;;-1:-1:-1;;;;;353:30:36;;350:50;;;396:1;393;386:12;350:50;433:4;425:6;421:17;409:29;;493:3;486:4;476:6;473:1;469:14;461:6;457:27;453:38;450:47;447:67;;;510:1;507;500:12;447:67;153:367;;;;;:::o;525:347::-;576:8;586:6;640:3;633:4;625:6;621:17;617:27;607:55;;658:1;655;648:12;607:55;-1:-1:-1;681:20:36;;-1:-1:-1;;;;;713:30:36;;710:50;;;756:1;753;746:12;710:50;793:4;785:6;781:17;769:29;;845:3;838:4;829:6;821;817:19;813:30;810:39;807:59;;;862:1;859;852:12;877:718;919:5;972:3;965:4;957:6;953:17;949:27;939:55;;990:1;987;980:12;939:55;1013:20;;-1:-1:-1;;;;;1082:10:36;;;1079:36;;;1095:18;;:::i;:::-;1170:2;1164:9;1138:2;1224:13;;-1:-1:-1;;1220:22:36;;;1244:2;1216:31;1212:40;1200:53;;;1268:18;;;1288:22;;;1265:46;1262:72;;;1314:18;;:::i;:::-;1354:10;1350:2;1343:22;1389:2;1381:6;1374:18;1435:3;1428:4;1423:2;1415:6;1411:15;1407:26;1404:35;1401:55;;;1452:1;1449;1442:12;1401:55;1516:2;1509:4;1501:6;1497:17;1490:4;1482:6;1478:17;1465:54;1563:1;1556:4;1551:2;1543:6;1539:15;1535:26;1528:37;1583:6;1574:15;;;;;;877:718;;;;:::o;1600:159::-;1691:13;;1733:1;1723:12;;1713:40;;1749:1;1746;1739:12;1764:247;1823:6;1876:2;1864:9;1855:7;1851:23;1847:32;1844:52;;;1892:1;1889;1882:12;1844:52;1931:9;1918:23;1950:31;1975:5;1950:31;:::i;2016:251::-;2086:6;2139:2;2127:9;2118:7;2114:23;2110:32;2107:52;;;2155:1;2152;2145:12;2107:52;2187:9;2181:16;2206:31;2231:5;2206:31;:::i;2272:388::-;2340:6;2348;2401:2;2389:9;2380:7;2376:23;2372:32;2369:52;;;2417:1;2414;2407:12;2369:52;2456:9;2443:23;2475:31;2500:5;2475:31;:::i;:::-;2525:5;-1:-1:-1;2582:2:36;2567:18;;2554:32;2595:33;2554:32;2595:33;:::i;:::-;2647:7;2637:17;;;2272:388;;;;;:::o;2665:523::-;2739:6;2747;2755;2808:2;2796:9;2787:7;2783:23;2779:32;2776:52;;;2824:1;2821;2814:12;2776:52;2863:9;2850:23;2882:31;2907:5;2882:31;:::i;:::-;2932:5;-1:-1:-1;2989:2:36;2974:18;;2961:32;3002:33;2961:32;3002:33;:::i;:::-;3054:7;-1:-1:-1;3113:2:36;3098:18;;3085:32;3126:30;3085:32;3126:30;:::i;:::-;3175:7;3165:17;;;2665:523;;;;;:::o;3193:525::-;3279:6;3287;3295;3303;3356:3;3344:9;3335:7;3331:23;3327:33;3324:53;;;3373:1;3370;3363:12;3324:53;3412:9;3399:23;3431:31;3456:5;3431:31;:::i;:::-;3481:5;-1:-1:-1;3538:2:36;3523:18;;3510:32;3551:33;3510:32;3551:33;:::i;:::-;3193:525;;3603:7;;-1:-1:-1;;;;3657:2:36;3642:18;;3629:32;;3708:2;3693:18;3680:32;;3193:525::o;3723:594::-;3818:6;3826;3834;3842;3850;3903:3;3891:9;3882:7;3878:23;3874:33;3871:53;;;3920:1;3917;3910:12;3871:53;3959:9;3946:23;3978:31;4003:5;3978:31;:::i;:::-;4028:5;-1:-1:-1;4085:2:36;4070:18;;4057:32;4098:33;4057:32;4098:33;:::i;:::-;3723:594;;4150:7;;-1:-1:-1;;;;4204:2:36;4189:18;;4176:32;;4255:2;4240:18;;4227:32;;4306:3;4291:19;;;4278:33;;-1:-1:-1;3723:594:36:o;4322:572::-;4417:6;4425;4433;4486:2;4474:9;4465:7;4461:23;4457:32;4454:52;;;4502:1;4499;4492:12;4454:52;4541:9;4528:23;4560:31;4585:5;4560:31;:::i;:::-;4610:5;-1:-1:-1;4666:2:36;4651:18;;4638:32;-1:-1:-1;;;;;4682:30:36;;4679:50;;;4725:1;4722;4715:12;4679:50;4764:70;4826:7;4817:6;4806:9;4802:22;4764:70;:::i;:::-;4322:572;;4853:8;;-1:-1:-1;4738:96:36;;-1:-1:-1;;;;4322:572:36:o;4899:315::-;4967:6;4975;5028:2;5016:9;5007:7;5003:23;4999:32;4996:52;;;5044:1;5041;5034:12;4996:52;5083:9;5070:23;5102:31;5127:5;5102:31;:::i;:::-;5152:5;5204:2;5189:18;;;;5176:32;;-1:-1:-1;;;4899:315:36:o;5219:437::-;5305:6;5313;5366:2;5354:9;5345:7;5341:23;5337:32;5334:52;;;5382:1;5379;5372:12;5334:52;5409:23;;-1:-1:-1;;;;;5444:30:36;;5441:50;;;5487:1;5484;5477:12;5441:50;5526:70;5588:7;5579:6;5568:9;5564:22;5526:70;:::i;:::-;5615:8;;5500:96;;-1:-1:-1;5219:437:36;-1:-1:-1;;;;5219:437:36:o;5661:245::-;5728:6;5781:2;5769:9;5760:7;5756:23;5752:32;5749:52;;;5797:1;5794;5787:12;5749:52;5829:9;5823:16;5848:28;5870:5;5848:28;:::i;5911:184::-;5981:6;6034:2;6022:9;6013:7;6009:23;6005:32;6002:52;;;6050:1;6047;6040:12;6002:52;-1:-1:-1;6073:16:36;;5911:184;-1:-1:-1;5911:184:36:o;6100:315::-;6168:6;6176;6229:2;6217:9;6208:7;6204:23;6200:32;6197:52;;;6245:1;6242;6235:12;6197:52;6281:9;6268:23;6258:33;;6341:2;6330:9;6326:18;6313:32;6354:31;6379:5;6354:31;:::i;6420:946::-;6581:6;6589;6597;6605;6613;6621;6629;6637;6645;6698:3;6686:9;6677:7;6673:23;6669:33;6666:53;;;6715:1;6712;6705:12;6666:53;6744:9;6738:16;6728:26;;6797:2;6786:9;6782:18;6776:25;6810:31;6835:5;6810:31;:::i;:::-;6910:2;6895:18;;6889:25;6860:5;;-1:-1:-1;6923:33:36;6889:25;6923:33;:::i;:::-;7027:2;7012:18;;7006:25;6975:7;;-1:-1:-1;7040:33:36;7006:25;7040:33;:::i;:::-;7092:7;7082:17;;;7139:3;7128:9;7124:19;7118:26;7108:36;;7184:3;7173:9;7169:19;7163:26;7153:36;;7229:3;7218:9;7214:19;7208:26;7198:36;;7274:3;7263:9;7259:19;7253:26;7243:36;;7298:62;7355:3;7344:9;7340:19;7298:62;:::i;:::-;7288:72;;6420:946;;;;;;;;;;;:::o;7371:1343::-;7526:6;7534;7542;7550;7558;7566;7574;7582;7590;7598;7606:7;7660:3;7648:9;7639:7;7635:23;7631:33;7628:53;;;7677:1;7674;7667:12;7628:53;-1:-1:-1;;;;;7733:23:36;;7730:31;-1:-1:-1;7727:51:36;;;7774:1;7771;7764:12;7727:51;7813:75;7880:7;7867:9;7854:23;7843:9;7839:39;7813:75;:::i;:::-;7907:8;;-1:-1:-1;7934:8:36;-1:-1:-1;7989:2:36;7974:18;;7961:32;;-1:-1:-1;8012:38:36;8046:2;8031:18;;8012:38;:::i;:::-;8002:48;;8069:38;8103:2;8092:9;8088:18;8069:38;:::i;:::-;8059:48;;8126:39;8160:3;8149:9;8145:19;8126:39;:::i;:::-;8116:49;;8212:3;8201:9;8197:19;8184:33;8174:43;;8267:2;8260:3;8249:9;8245:19;8232:33;8229:41;8226:61;;;8283:1;8280;8273:12;8226:61;8322:85;8399:7;8391:3;8380:9;8376:19;8363:33;8352:9;8348:49;8322:85;:::i;:::-;8426:8;;-1:-1:-1;8453:8:36;-1:-1:-1;8504:3:36;8489:19;;8476:33;8473:41;-1:-1:-1;8470:61:36;;;8527:1;8524;8517:12;8470:61;;8567:85;8644:7;8636:3;8625:9;8621:19;8608:33;8597:9;8593:49;8567:85;:::i;:::-;8671:8;8661:18;;8699:9;8688:20;;;;7371:1343;;;;;;;;;;;;;;:::o;8719:1278::-;8872:6;8880;8888;8896;8904;8912;8920;8928;8936;8944;8997:3;8985:9;8976:7;8972:23;8968:33;8965:53;;;9014:1;9011;9004:12;8965:53;9041:23;;-1:-1:-1;;;;;9113:14:36;;;9110:34;;;9140:1;9137;9130:12;9110:34;9179:58;9229:7;9220:6;9209:9;9205:22;9179:58;:::i;:::-;9256:8;;-1:-1:-1;9153:84:36;-1:-1:-1;9338:2:36;9323:18;;9310:32;;-1:-1:-1;9153:84:36;;-1:-1:-1;9361:38:36;9395:2;9380:18;;9361:38;:::i;:::-;9351:48;;9418:38;9452:2;9441:9;9437:18;9418:38;:::i;:::-;9408:48;;9475:39;9509:3;9498:9;9494:19;9475:39;:::i;:::-;9465:49;;9561:3;9550:9;9546:19;9533:33;9523:43;;9619:3;9608:9;9604:19;9591:33;9575:49;;9649:2;9639:8;9636:16;9633:36;;;9665:1;9662;9655:12;9633:36;9688:51;9731:7;9720:8;9709:9;9705:24;9688:51;:::i;:::-;9678:61;;9792:3;9781:9;9777:19;9764:33;9748:49;;9822:2;9812:8;9809:16;9806:36;;;9838:1;9835;9828:12;9806:36;;9877:60;9929:7;9918:8;9907:9;9903:24;9877:60;:::i;:::-;9851:86;;9956:8;9946:18;;;9983:8;9973:18;;;8719:1278;;;;;;;;;;;;;:::o;10002:269::-;10074:6;10127:2;10115:9;10106:7;10102:23;10098:32;10095:52;;;10143:1;10140;10133:12;10095:52;10182:9;10169:23;10221:1;10214:5;10211:12;10201:40;;10237:1;10234;10227:12;10276:270;10349:6;10402:2;10390:9;10381:7;10377:23;10373:32;10370:52;;;10418:1;10415;10408:12;10370:52;10457:9;10444:23;10496:1;10489:5;10486:12;10476:40;;10512:1;10509;10502:12;10551:1059;10652:6;10705:3;10693:9;10684:7;10680:23;10676:33;10673:53;;;10722:1;10719;10712:12;10673:53;10755:2;10749:9;10797:3;10785:16;;-1:-1:-1;;;;;10816:34:36;;10852:22;;;10813:62;10810:88;;;10878:18;;:::i;:::-;10914:2;10907:22;10951:16;;10976:31;10951:16;10976:31;:::i;:::-;11016:21;;11082:2;11067:18;;11061:25;11095:33;11061:25;11095:33;:::i;:::-;11156:2;11144:15;;11137:32;11214:2;11199:18;;11193:25;11227:33;11193:25;11227:33;:::i;:::-;11293:7;11288:2;11280:6;11276:15;11269:32;;11355:2;11344:9;11340:18;11334:25;11329:2;11321:6;11317:15;11310:50;11415:3;11404:9;11400:19;11394:26;11388:3;11380:6;11376:16;11369:52;11476:3;11465:9;11461:19;11455:26;11449:3;11441:6;11437:16;11430:52;11516:62;11573:3;11562:9;11558:19;11516:62;:::i;:::-;11510:3;11498:16;;11491:88;11502:6;10551:1059;-1:-1:-1;;;10551:1059:36:o;11615:355::-;11720:6;11728;11772:9;11763:7;11759:23;11802:3;11798:2;11794:12;11791:32;;;11819:1;11816;11809:12;11791:32;11842:3;11865:2;11861;11857:11;11854:31;;;11881:1;11878;11871:12;11854:31;11904:9;;11945:18;;;11932:32;;-1:-1:-1;;;;11615:355:36:o;11975:180::-;12034:6;12087:2;12075:9;12066:7;12062:23;12058:32;12055:52;;;12103:1;12100;12093:12;12055:52;-1:-1:-1;12126:23:36;;11975:180;-1:-1:-1;11975:180:36:o;12349:309::-;12414:6;12422;12475:2;12463:9;12454:7;12450:23;12446:32;12443:52;;;12491:1;12488;12481:12;12443:52;12527:9;12514:23;12504:33;;12587:2;12576:9;12572:18;12559:32;12600:28;12622:5;12600:28;:::i;12663:377::-;12737:6;12745;12753;12806:2;12794:9;12785:7;12781:23;12777:32;12774:52;;;12822:1;12819;12812:12;12774:52;12858:9;12845:23;12835:33;;12918:2;12907:9;12903:18;12890:32;12931:28;12953:5;12931:28;:::i;:::-;12663:377;;12978:5;;-1:-1:-1;;;13030:2:36;13015:18;;;;13002:32;;12663:377::o;13045:248::-;13113:6;13121;13174:2;13162:9;13153:7;13149:23;13145:32;13142:52;;;13190:1;13187;13180:12;13142:52;-1:-1:-1;;13213:23:36;;;13283:2;13268:18;;;13255:32;;-1:-1:-1;13045:248:36:o;13298:257::-;13339:3;13377:5;13371:12;13404:6;13399:3;13392:19;13420:63;13476:6;13469:4;13464:3;13460:14;13453:4;13446:5;13442:16;13420:63;:::i;:::-;13537:2;13516:15;-1:-1:-1;;13512:29:36;13503:39;;;;13544:4;13499:50;;13298:257;-1:-1:-1;;13298:257:36:o;13560:695::-;13643:12;;-1:-1:-1;;;;;13639:38:36;13627:51;;13727:4;13716:16;;;13710:23;13694:14;;;13687:47;13783:4;13772:16;;;13766:23;13750:14;;;13743:47;13836:4;13825:16;;13819:23;13851:44;13819:23;13851:44;:::i;:::-;13927:12;13920:4;13915:3;13911:14;13904:36;;14003:4;13996:5;13992:16;13986:23;13979:31;13972:39;13965:4;13960:3;13956:14;13949:63;14075:4;14068:5;14064:16;14058:23;14051:31;14044:39;14037:4;14032:3;14028:14;14021:63;14132:4;14125:5;14121:16;14115:23;14176:1;14160:14;14157:21;14147:55;;14182:18;;:::i;:::-;14234:14;14227:4;14222:3;14218:14;14211:38;;13560:695;;:::o;14447:276::-;14578:3;14616:6;14610:13;14632:53;14678:6;14673:3;14666:4;14658:6;14654:17;14632:53;:::i;:::-;14701:16;;;;;14447:276;-1:-1:-1;;14447:276:36:o;15521:375::-;-1:-1:-1;;;;;15779:15:36;;;15761:34;;15831:15;;;;15826:2;15811:18;;15804:43;15878:2;15863:18;;15856:34;;;;15711:2;15696:18;;15521:375::o;15901:274::-;-1:-1:-1;;;;;16093:32:36;;;;16075:51;;16157:2;16142:18;;16135:34;16063:2;16048:18;;15901:274::o;16881:658::-;17052:2;17104:21;;;17174:13;;17077:18;;;17196:22;;;17023:4;;17052:2;17275:15;;;;17249:2;17234:18;;;17023:4;17318:195;17332:6;17329:1;17326:13;17318:195;;;17397:13;;-1:-1:-1;;;;;17393:39:36;17381:52;;17488:15;;;;17453:12;;;;17429:1;17347:9;17318:195;;;-1:-1:-1;17530:3:36;;16881:658;-1:-1:-1;;;;;;16881:658:36:o;18577:721::-;18864:25;;;-1:-1:-1;;;;;18963:15:36;;;18958:2;18943:18;;18936:43;19015:15;;19010:2;18995:18;;18988:43;19062:2;19047:18;;19040:34;;;19111:3;19105;19090:19;;19083:32;;;18845:4;;19138:45;;19163:19;;19155:6;19138:45;:::i;:::-;19232:9;19224:6;19220:22;19214:3;19203:9;19199:19;19192:51;19260:32;19285:6;19277;19260:32;:::i;21621:402::-;21823:2;21805:21;;;21862:2;21842:18;;;21835:30;21901:34;21896:2;21881:18;;21874:62;-1:-1:-1;;;21967:2:36;21952:18;;21945:36;22013:3;21998:19;;21621:402::o;29196:347::-;29398:2;29380:21;;;29437:2;29417:18;;;29410:30;-1:-1:-1;;;29471:2:36;29456:18;;29449:53;29534:2;29519:18;;29196:347::o;30682:356::-;30884:2;30866:21;;;30903:18;;;30896:30;30962:34;30957:2;30942:18;;30935:62;31029:2;31014:18;;30682:356::o;31043:355::-;31245:2;31227:21;;;31284:2;31264:18;;;31257:30;31323:33;31318:2;31303:18;;31296:61;31389:2;31374:18;;31043:355::o;31403:354::-;31605:2;31587:21;;;31644:2;31624:18;;;31617:30;31683:32;31678:2;31663:18;;31656:60;31748:2;31733:18;;31403:354::o;34467:353::-;34669:2;34651:21;;;34708:2;34688:18;;;34681:30;34747:31;34742:2;34727:18;;34720:59;34811:2;34796:18;;34467:353::o;35673:406::-;35875:2;35857:21;;;35914:2;35894:18;;;35887:30;35953:34;35948:2;35933:18;;35926:62;-1:-1:-1;;;36019:2:36;36004:18;;35997:40;36069:3;36054:19;;35673:406::o;38147:344::-;38349:2;38331:21;;;38388:2;38368:18;;;38361:30;-1:-1:-1;;;38422:2:36;38407:18;;38400:50;38482:2;38467:18;;38147:344::o;38826:401::-;39028:2;39010:21;;;39067:2;39047:18;;;39040:30;39106:34;39101:2;39086:18;;39079:62;-1:-1:-1;;;39172:2:36;39157:18;;39150:35;39217:3;39202:19;;38826:401::o;39583:343::-;39785:2;39767:21;;;39824:2;39804:18;;;39797:30;-1:-1:-1;;;39858:2:36;39843:18;;39836:49;39917:2;39902:18;;39583:343::o;40340:977::-;40478:4;40520:3;40509:9;40505:19;40497:27;;40560:1;40556;40551:3;40547:11;40543:19;40608:2;40599:6;40593:13;40589:22;40578:9;40571:41;40680:2;40672:4;40664:6;40660:17;40654:24;40650:33;40643:4;40632:9;40628:20;40621:63;40752:2;40744:4;40736:6;40732:17;40726:24;40722:33;40715:4;40704:9;40700:20;40693:63;;40812:4;40804:6;40800:17;40794:24;40787:4;40776:9;40772:20;40765:54;40875:4;40867:6;40863:17;40857:24;40850:4;40839:9;40835:20;40828:54;40929:4;40921:6;40917:17;40911:24;40944:67;41005:4;40994:9;40990:20;40976:12;40944:67;:::i;:::-;;41060:4;41052:6;41048:17;41042:24;41075:71;41138:6;41127:9;41123:22;41107:14;41075:71;:::i;:::-;;41195:4;41187:6;41183:17;41177:24;41210:46;41241:14;41210:46;:::i;:::-;41296:14;41287:6;41276:9;41272:22;41265:46;;40340:977;;;;:::o;41504:128::-;41544:3;41575:1;41571:6;41568:1;41565:13;41562:39;;;41581:18;;:::i;:::-;-1:-1:-1;41617:9:36;;41504:128::o;41637:217::-;41677:1;41703;41693:132;;41747:10;41742:3;41738:20;41735:1;41728:31;41782:4;41779:1;41772:15;41810:4;41807:1;41800:15;41693:132;-1:-1:-1;41839:9:36;;41637:217::o;41859:168::-;41899:7;41965:1;41961;41957:6;41953:14;41950:1;41947:21;41942:1;41935:9;41928:17;41924:45;41921:71;;;41972:18;;:::i;:::-;-1:-1:-1;42012:9:36;;41859:168::o;42032:125::-;42072:4;42100:1;42097;42094:8;42091:34;;;42105:18;;:::i;:::-;-1:-1:-1;42142:9:36;;42032:125::o;42162:258::-;42234:1;42244:113;42258:6;42255:1;42252:13;42244:113;;;42334:11;;;42328:18;42315:11;;;42308:39;42280:2;42273:10;42244:113;;;42375:6;42372:1;42369:13;42366:48;;;-1:-1:-1;;42410:1:36;42392:16;;42385:27;42162:258::o;42425:135::-;42464:3;-1:-1:-1;;42485:17:36;;42482:43;;;42505:18;;:::i;:::-;-1:-1:-1;42552:1:36;42541:13;;42425:135::o;42565:127::-;42626:10;42621:3;42617:20;42614:1;42607:31;42657:4;42654:1;42647:15;42681:4;42678:1;42671:15;42697:127;42758:10;42753:3;42749:20;42746:1;42739:31;42789:4;42786:1;42779:15;42813:4;42810:1;42803:15;42829:127;42890:10;42885:3;42881:20;42878:1;42871:31;42921:4;42918:1;42911:15;42945:4;42942:1;42935:15;42961:127;43022:10;43017:3;43013:20;43010:1;43003:31;43053:4;43050:1;43043:15;43077:4;43074:1;43067:15;43093:113;43174:1;43167:5;43164:12;43154:46;;43180:18;;:::i;43211:131::-;-1:-1:-1;;;;;43286:31:36;;43276:42;;43266:70;;43332:1;43329;43322:12;43347:118;43433:5;43426:13;43419:21;43412:5;43409:32;43399:60;;43455:1;43452;43445:12",
  "source": "// SPDX-License-Identifier: Apache-2.0\n/*\n * This code has not been reviewed.\n * Do not use or deploy this code before reviewing it personally first.\n */\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\n\nimport \"./ERC1820Client.sol\";\nimport \"../interface/ERC1820Implementer.sol\";\n\nimport \"../extensions/userExtensions/IERC1400TokensRecipient.sol\";\nimport \"../interface/IERC20HoldableToken.sol\";\nimport \"../interface/IHoldableERC1400TokenExtension.sol\";\n\nimport \"../IERC1400.sol\";\n\n\n/**\n * @title Swaps\n * @dev Delivery-Vs-Payment contract for investor-to-investor token trades.\n * @dev Intended usage:\n * The purpose of the contract is to allow secure token transfers/exchanges between 2 stakeholders (called holder1 and holder2).\n * From now on, an operation in the Swaps smart contract (transfer/exchange) is called a trade.\n * Depending on the type of trade, one/multiple token transfers will be executed.\n *\n * The simplified workflow is the following:\n * 1) A trade request is created in the Swaps smart contract, it specifies:\n *  - The token holder(s) involved in the trade\n *  - The trade executer (optional)\n *  - An expiration date\n *  - Details on the first token (address, requested amount, standard)\n *  - Details on the second token (address, requested amount, standard)\n *  - Whether the tokens need to be escrowed in the Swaps contract or not\n *  - The current status of the trade (pending / executed / forced / cancelled)\n * 2) The trade is accepted by both token holders\n * 3) [OPTIONAL] The trade is approved by token controllers (only if requested by tokens controllers)\n * 4) The trade is executed (either by the executer in case the executer is specified, or by anyone)\n *\n * STANDARD-AGNOSTIC:\n * The Swaps smart contract is standard-agnostic, it supports ETH, ERC20, ERC721, ERC1400.\n * The advantage of using an ERC1400 token is to leverages its hook property, thus requiring ONE single\n * transaction (operatorTransferByPartition()) to send tokens to the Swaps smart contract instead of TWO\n * with the ERC20 token standard (approve() + transferFrom()).\n *\n * OFF-CHAIN PAYMENT:\n * The contract can be used as escrow contract while waiting for an off-chain payment.\n * Once payment is received off-chain, the token sender realeases the tokens escrowed in\n * the Swaps contract to deliver them to the recipient.\n *\n * ESCROW VS SWAP MODE:\n * In case escrow mode is selected, tokens need to be escrowed in Swaps smart contract\n * before the trade can occur.\n * In case swap mode is selected, tokens are not escrowed in the Swaps. Instead, the Swaps\n * contract is only allowed to transfer tokens ON BEHALF of their owners. When trade is\n * executed, an atomic token swap occurs.\n *\n * EXPIRATION DATE:\n * The trade can be cancelled by both parties in case expiration date is passed.\n *\n * CLAIMS:\n * The executer has the ability to force or cancel the trade.\n * In case of disagreement/missing payment, both parties can contact the \"executer\"\n * of the trade to deposit a claim and solve the issue.\n *\n * MARKETPLACE:\n * The contract can be used as a token marketplace. Indeed, when trades are created\n * without specifying the recipient address, anyone can purchase them by sending\n * the requested payment in exchange.\n *\n * PRICE ORACLES:\n * When price oracles are defined, those can define the price at which trades need to be executed.\n * This feature is particularly useful for assets with NAV (net asset value).\n *\n */\ncontract Swaps is Ownable, ERC1820Client, IERC1400TokensRecipient, ERC1820Implementer {\n  string constant internal DELIVERY_VS_PAYMENT = \"DeliveryVsPayment\";\n  string constant internal ERC1400_TOKENS_RECIPIENT = \"ERC1400TokensRecipient\";\n\n  uint256 constant internal SECONDS_IN_MONTH = 86400 * 30;\n  uint256 constant internal SECONDS_IN_WEEK = 86400 * 7;\n\n  bytes32 constant internal TRADE_PROPOSAL_FLAG = 0xcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc;\n  bytes32 constant internal TRADE_ACCEPTANCE_FLAG = 0xdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd;\n\n  bytes32 constant internal BYPASS_ACTION_FLAG = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa;\n\n  bytes32 constant internal ALL_PARTITIONS = 0x0000000000000000000000000000000000000000000000000000000000000000;\n\n  enum Standard {OffChain, ETH, ERC20, ERC721, ERC1400}\n\n  enum State {Undefined, Pending, Executed, Forced, Cancelled}\n\n  enum TradeType {Allowance, Hold, Escrow}\n\n  enum Holder {Holder1, Holder2}\n    \n  string internal constant ERC1400_TOKENS_VALIDATOR = \"ERC1400TokensValidator\";\n\n  /**\n  @dev Include token events so they can be parsed by Ethereum clients from the settlement transactions.\n    */\n  // Holdable\n  event ExecutedHold(\n      address indexed token,\n      bytes32 indexed holdId,\n      bytes32 lockPreimage,\n      address recipient\n  );\n  // ERC20\n  event Transfer(address indexed from, address indexed to, uint256 tokens);\n  // ERC1400\n  event TransferByPartition(\n      bytes32 indexed fromPartition,\n      address operator,\n      address indexed from,\n      address indexed to,\n      uint256 value,\n      bytes data,\n      bytes operatorData\n  );\n  event CreateNote(\n      address indexed owner,\n      bytes32 indexed noteHash,\n      bytes metadata\n  );\n  event DestroyNote(address indexed owner, bytes32 indexed noteHash);\n\n  struct UserTradeData {\n    address tokenAddress;\n    uint256 tokenValue;\n    bytes32 tokenId;\n    Standard tokenStandard;\n    bool accepted;\n    bool approved;\n    TradeType tradeType;\n  }\n  \n  /**\n   * @dev Input data for the requestTrade function\n   * @param holder1 Address of the first token holder.\n   * @param holder2 Address of the second token holder.\n   * @param executer Executer of the trade.\n   * @param expirationDate Expiration date of the trade.\n   * @param tokenAddress1 Address of the first token smart contract.\n   * @param tokenValue1 Amount of tokens to send for the first token.\n   * @param tokenId1 ERC721ID/holdId/partition of the first token.\n   * @param tokenStandard1 Standard of the first token (ETH | ERC20 | ERC721 | ERC1400).\n   * @param tokenAddress2 Address of the second token smart contract.\n   * @param tokenValue2 Amount of tokens to send for the second token.\n   * @param tokenId2 ERC721ID/holdId/partition of the second token.\n   * @param tokenStandard2 Standard of the second token (ETH | ERC20 | ERC721 | ERC1400).\n   * @param tradeType Indicates whether or not tokens shall be escrowed in the Swaps contract before the trade.\n   */\n  struct TradeRequestInput {\n    address holder1;\n    address holder2;\n    address executer; // Set to address(0) if no executer is required for the trade\n    uint256 expirationDate;\n    address tokenAddress1;\n    uint256 tokenValue1;\n    bytes32 tokenId1;\n    Standard tokenStandard1;\n    address tokenAddress2; // Set to address(0) if no token is expected in return (for example in case of an off-chain payment)\n    uint256 tokenValue2;\n    bytes32 tokenId2;\n    Standard tokenStandard2;\n    TradeType tradeType1;\n    TradeType tradeType2;\n    uint256 settlementDate;\n  }\n\n  struct Trade {\n    address holder1;\n    address holder2;\n    address executer;\n    uint256 expirationDate;\n    uint256 settlementDate;\n    UserTradeData userTradeData1;\n    UserTradeData userTradeData2;\n    State state;\n  }\n\n  // Index of most recent trade request.\n  uint256 internal _index;\n\n  // Mapping from index to trade requests.\n  mapping(uint256 => Trade) internal _trades;\n\n  // Mapping from token to price oracles.\n  mapping(address => address[]) internal _priceOracles;\n\n  // Mapping from (token, operator) to price oracle status.\n  mapping(address => mapping(address => bool)) internal _isPriceOracle;\n\n  // Mapping from (token1, token2) to price ownership.\n  mapping(address => mapping(address => bool)) internal _priceOwnership;\n\n  // Mapping from (token1, token2, tokenId1, tokenId2) to price.\n  mapping(address => mapping (address => mapping (bytes32 =>  mapping (bytes32 => uint256)))) internal _tokenUnitPricesByPartition;\n\n  // Indicate whether Swaps smart contract is owned or not (for instance by an exchange, etc.).\n  bool internal _ownedContract;\n\n  // Array of trade execcuters.\n  address[] internal _tradeExecuters;\n\n  // Mapping from operator to trade executer status.\n  mapping(address => bool) internal _isTradeExecuter;\n\n  // Mapping from token to token controllers.\n  mapping(address => address[]) internal _tokenControllers;\n\n  // Mapping from (token, operator) to token controller status.\n  mapping(address => mapping(address => bool)) internal _isTokenController;\n\n  // Mapping from token to variable price start date.\n  mapping(address => uint256) internal _variablePriceStartDate;\n\n  /**\n   * @dev Modifier to verify if sender is a token controller.\n   */\n  modifier onlyTokenController(address tokenAddress) {\n    require(\n      msg.sender == Ownable(tokenAddress).owner() ||\n      _isTokenController[tokenAddress][msg.sender],\n      \"Sender is not a token controller.\"\n    );\n    _;\n  }\n\n  /**\n   * @dev Modifier to verify if sender is a price oracle.\n   */\n  modifier onlyPriceOracle(address tokenAddress) {\n    require(_checkPriceOracle(tokenAddress, msg.sender), \"Sender is not a price oracle.\");\n    _;\n  }\n\n  /**\n   * [Swaps CONSTRUCTOR]\n   * @dev Initialize Swaps + register\n   * the contract implementation in ERC1820Registry.\n   */\n  constructor(bool owned) {\n    ERC1820Implementer._setInterface(DELIVERY_VS_PAYMENT);\n    ERC1820Implementer._setInterface(ERC1400_TOKENS_RECIPIENT);\n    setInterfaceImplementation(ERC1400_TOKENS_RECIPIENT, address(this));\n\n    _ownedContract = owned;\n\n    if(_ownedContract) {\n      address[] memory initialTradeExecuters = new address[] (1);\n      initialTradeExecuters[0] = msg.sender;\n      _setTradeExecuters(initialTradeExecuters);\n    }\n  }\n\n  /**\n   * [ERC1400TokensRecipient INTERFACE (1/2)]\n   * @dev Indicate whether or not the Swaps contract can receive the tokens or not. [USED FOR ERC1400 TOKENS ONLY]\n   * @param data Information attached to the token transfer.\n   * @param operatorData Information attached to the Swaps transfer, by the operator.\n   * @return 'true' if the Swaps contract can receive the tokens, 'false' if not.\n   */\n  function canReceive(bytes calldata, bytes32, address, address, address, uint, bytes calldata  data, bytes calldata operatorData) external override pure returns(bool) {\n    return(_canReceive(data, operatorData));\n  }\n\n  /**\n   * [ERC1400TokensRecipient INTERFACE (2/2)]\n   * @dev Hook function executed when tokens are sent to the Swaps contract. [USED FOR ERC1400 TOKENS ONLY]\n   * @param partition Name of the partition.\n   * @param from Token holder.\n   * @param to Token recipient.\n   * @param value Number of tokens to transfer.\n   * @param data Information attached to the token transfer.\n   * @param operatorData Information attached to the Swaps transfer, by the operator.\n   */\n  function tokensReceived(bytes calldata, bytes32 partition, address, address from, address to, uint value, bytes memory data, bytes calldata operatorData) external override {\n    require(interfaceAddr(msg.sender, \"ERC1400Token\") == msg.sender, \"55\"); // funds locked (lockup period)\n\n    require(to == address(this), \"50\"); // 0x50\ttransfer failure\n    require(_canReceive(data, operatorData), \"57\"); // 0x57\tinvalid receiver\n\n    bytes32 flag = _getTradeFlag(data);\n    if(flag == TRADE_PROPOSAL_FLAG) {\n      address recipient;\n      address executor;\n      uint256 expirationDate;\n      uint256 settlementDate;\n      assembly {\n        recipient:= mload(add(data, 64))\n        executor:= mload(add(data, 96))\n        expirationDate:= mload(add(data, 128))\n        settlementDate:= mload(add(data, 160))\n      }\n      // Token data: < 1: address > < 2: amount > < 3: id/partition > < 4: standard > < 5: accepted > < 6: approved >\n      UserTradeData memory _tradeData1 = UserTradeData(msg.sender, value, partition, Standard.ERC1400, true, false, TradeType.Escrow);\n      UserTradeData memory _tokenData2 = _getTradeTokenData(data);\n\n      _requestTrade(\n        from,\n        recipient,\n        executor,\n        expirationDate,\n        settlementDate,\n        _tradeData1,\n        _tokenData2\n      );\n\n    } else if (flag == TRADE_ACCEPTANCE_FLAG) {\n      uint256 index;\n      bytes32 preimage = bytes32(0);\n      assembly {\n        index:= mload(add(data, 64))\n      }\n      if (data.length == 96) {\n        //This field is optional\n        //If the data's length does not include the preimage\n        //then return an empty preimage\n        //canReceive accepts both data lengths\n        assembly {\n          preimage:= mload(add(data, 96))\n        }\n      }\n      Trade storage trade = _trades[index];\n\n      UserTradeData memory selectedUserTradeData = (from == trade.holder1) ? trade.userTradeData1 : trade.userTradeData2;\n      require(msg.sender == selectedUserTradeData.tokenAddress, \"Wrong token sent\");\n      require(partition == selectedUserTradeData.tokenId, \"Tokens of the wrong partition sent\");\n      require(Standard.ERC1400 == selectedUserTradeData.tokenStandard, \"Tokens of the wrong standard sent\");\n\n      _acceptTrade(index, from, 0, value, preimage);         \n    }\n  }\n\n  /**\n   * @dev Create a new trade request in the Swaps smart contract.\n   * @param inputData The input for this function\n   */\n  function requestTrade(TradeRequestInput calldata inputData, bytes32 preimage)\n    external\n    payable\n  {\n    _requestTrade(\n      inputData.holder1,\n      inputData.holder2,\n      inputData.executer,\n      inputData.expirationDate,\n      inputData.settlementDate,\n      UserTradeData(inputData.tokenAddress1, inputData.tokenValue1, inputData.tokenId1, inputData.tokenStandard1, false, false, inputData.tradeType1),\n      UserTradeData(inputData.tokenAddress2, inputData.tokenValue2, inputData.tokenId2, inputData.tokenStandard2, false, false, inputData.tradeType2)\n    );\n\n    if(msg.sender == inputData.holder1 || msg.sender == inputData.holder2) {\n      _acceptTrade(_index, msg.sender, msg.value, 0, preimage);\n    }\n  }\n\n  /**\n   * @dev Create a new trade request in the Swaps smart contract.\n   * @param holder1 Address of the first token holder.\n   * @param holder2 Address of the second token holder.\n   * @param executer Executer of the trade.\n   * @param expirationDate Expiration date of the trade.\n   * @param userTradeData1 Encoded pack of variables for token1 (address, amount, id/partition, standard, accepted, approved).\n   * @param userTradeData2 Encoded pack of variables for token2 (address, amount, id/partition, standard, accepted, approved).\n   */\n  function _requestTrade(\n    address holder1,\n    address holder2,\n    address executer, // Set to address(0) if no executer is required for the trade\n    uint256 expirationDate,\n    uint256 settlementDate,\n    UserTradeData memory userTradeData1,\n    UserTradeData memory userTradeData2\n  ) \n    internal\n  {\n    if(userTradeData1.tokenStandard == Standard.ETH) {\n      require(userTradeData1.tradeType == TradeType.Escrow, \"Ether trades need to be of type Escrow\");\n    }\n\n    if(userTradeData2.tokenStandard == Standard.ETH) {\n      require(userTradeData2.tradeType == TradeType.Escrow, \"Ether trades need to be of type Escrow\");\n    }\n\n    if (userTradeData1.tradeType == TradeType.Hold) {\n      require(userTradeData1.tokenStandard == Standard.ERC20 || userTradeData1.tokenStandard == Standard.ERC1400, \"Invalid token standard for hold trade type\");\n      require(userTradeData1.tokenId != bytes32(0), \"No holdId specified\");\n    }\n    \n    if (userTradeData2.tradeType == TradeType.Hold) {\n      require(userTradeData2.tokenStandard == Standard.ERC20 || userTradeData2.tokenStandard == Standard.ERC1400, \"Invalid token standard for hold trade type\");\n      require(userTradeData2.tokenId != bytes32(0), \"No holdId specified\");\n    }\n\n    if(_ownedContract) {\n      require(_isTradeExecuter[executer], \"Trade executer needs to belong to the list of allowed trade executers\");\n    }\n\n    require(holder1 != address(0), \"A trade can not be created with the zero address\");\n    \n    _index++;\n\n    uint256 _expirationDate = (expirationDate > block.timestamp) ? expirationDate : (block.timestamp + SECONDS_IN_MONTH);\n\n    _trades[_index] = Trade({\n      holder1: holder1,\n      holder2: holder2,\n      executer: executer,\n      expirationDate: _expirationDate,\n      settlementDate: settlementDate,\n      userTradeData1: userTradeData1,\n      userTradeData2: userTradeData2,\n      state: State.Pending\n    });\n  }\n\n  /**\n   * @dev Accept a given trade (+ potentially escrow tokens).\n   * @param index Index of the trade to be accepted.\n   */\n  function acceptTrade(uint256 index, bytes32 preimage) external payable {\n    _acceptTrade(index, msg.sender, msg.value, 0, preimage);\n  }\n\n  /**\n   * @dev Accept a given trade (+ potentially escrow tokens).\n   * @param index Index of the trade to be accepted.\n   * @param sender Message sender\n   * @param ethValue Value sent (only used for ETH)\n   * @param erc1400TokenValue Value sent (only used for ERC1400)\n   */\n  function _acceptTrade(uint256 index, address sender, uint256 ethValue, uint256 erc1400TokenValue, bytes32 preimage) internal {\n    Trade storage trade = _trades[index];\n    require(trade.state == State.Pending, \"Trade is not pending\");\n\n    address recipientHolder;\n    if(sender == trade.holder1) {\n      recipientHolder = trade.holder2;\n    } else if(sender == trade.holder2) {\n      recipientHolder = trade.holder1;\n    } else if(trade.holder2 == address(0)) {\n      trade.holder2 = sender;\n      recipientHolder = trade.holder1;\n    } else {\n      revert(\"Only registered holders can accept a trade\");\n    }\n\n    UserTradeData memory selectedUserTradeData = (sender == trade.holder1) ? trade.userTradeData1 : trade.userTradeData2;\n\n    require(!selectedUserTradeData.accepted, \"Trade already accepted by the holder\");\n\n    if(selectedUserTradeData.tradeType == TradeType.Escrow) {\n      if(selectedUserTradeData.tokenStandard == Standard.ETH) {\n        require(ethValue == selectedUserTradeData.tokenValue, \"Amount of ETH is not correct\");\n      } else if(selectedUserTradeData.tokenStandard == Standard.ERC20) {        \n        IERC20(selectedUserTradeData.tokenAddress).transferFrom(sender, address(this), selectedUserTradeData.tokenValue);\n      } else if(selectedUserTradeData.tokenStandard == Standard.ERC721) {\n        IERC721(selectedUserTradeData.tokenAddress).transferFrom(sender, address(this), uint256(selectedUserTradeData.tokenId));\n      } else if((selectedUserTradeData.tokenStandard == Standard.ERC1400) && erc1400TokenValue == 0){\n        IERC1400(selectedUserTradeData.tokenAddress).operatorTransferByPartition(selectedUserTradeData.tokenId, sender, address(this), selectedUserTradeData.tokenValue, abi.encodePacked(BYPASS_ACTION_FLAG), abi.encodePacked(BYPASS_ACTION_FLAG));\n      } else if((selectedUserTradeData.tokenStandard == Standard.ERC1400) && erc1400TokenValue != 0){\n        require(erc1400TokenValue == selectedUserTradeData.tokenValue, \"Amount of ERC1400 tokens is not correct\");\n      }\n    } else if (selectedUserTradeData.tradeType == TradeType.Hold) {\n        require(_holdExists(sender, recipientHolder, selectedUserTradeData), \"Hold needs to be provided in token smart contract first\");\n    } else { // trade.tradeType == TradeType.Allowance\n        require(_allowanceIsProvided(sender, selectedUserTradeData), \"Allowance needs to be provided in token smart contract first\");\n    }\n\n    if(sender == trade.holder1) {\n      trade.userTradeData1.accepted = true;\n    } else {\n      trade.userTradeData2.accepted = true;\n    }\n\n    \n    bool settlementDatePassed = block.timestamp >= trade.settlementDate;\n    bool tradeApproved = getTradeApprovalStatus(index);\n    //Execute both holds of a trade if the following conditions are met\n    //* There is no executer set. Only the executer should execute transactions if one is defined\n    //* Both trade types are holds\n    //* The trade is approved. Token controllers must pre-approve this trade. This is also true if the token has no token controllers\n    //* If both holds exist according to _holdExists\n    //* If the current block timestamp is after the settlement date\n    if (settlementDatePassed && trade.executer == address(0) && trade.userTradeData1.tradeType == TradeType.Hold && trade.userTradeData2.tradeType == TradeType.Hold && tradeApproved) {\n      //we know selectedUserTradeData has a hold that exists, so check the other one\n      UserTradeData memory otherUserTradeData = (sender == trade.holder1) ? trade.userTradeData2 : trade.userTradeData1;\n      if (_holdExists(recipientHolder, sender, otherUserTradeData)) {\n        //If both holds exist, then mark both sides of trade as accepted\n        //Next if will execute trade\n        trade.userTradeData1.accepted = true;\n        trade.userTradeData2.accepted = true;\n      }\n    }\n\n    if(\n      trade.executer == address(0) && getTradeAcceptanceStatus(index) && tradeApproved && settlementDatePassed) {\n      _executeTrade(index, preimage);\n    }\n  }\n  /**\n   * @dev Verify if a trade has been accepted by the token holders.\n   *\n   * The trade needs to be accepted by both parties (token holders) before it gets executed.\n   *\n   * @param index Index of the trade to be accepted.\n   */\n  function getTradeAcceptanceStatus(uint256 index) public view returns(bool) {\n    Trade storage trade = _trades[index];\n\n    if(trade.state == State.Pending) {\n      if(trade.userTradeData1.tradeType == TradeType.Allowance && !_allowanceIsProvided(trade.holder1, trade.userTradeData1)) {\n        return false;\n      }\n      if(trade.userTradeData2.tradeType == TradeType.Allowance && !_allowanceIsProvided(trade.holder2, trade.userTradeData2)) {\n        return false;\n      }\n    }\n\n    return(trade.userTradeData1.accepted && trade.userTradeData2.accepted);\n  }\n\n  /**\n   * @dev Verify if a token allowance has been provided in token smart contract.\n   *\n   * @param sender Address of the sender.\n   * @param userTradeData Encoded pack of variables for the token (address, amount, id/partition, standard, accepted, approved).\n   */\n  function _allowanceIsProvided(address sender, UserTradeData memory userTradeData) internal view returns(bool) {\n    address tokenAddress = userTradeData.tokenAddress;\n    uint256 tokenValue = userTradeData.tokenValue;\n    bytes32 tokenId = userTradeData.tokenId;\n    Standard tokenStandard = userTradeData.tokenStandard;\n\n    if(tokenStandard == Standard.ERC20) {        \n      return(IERC20(tokenAddress).allowance(sender, address(this)) >= tokenValue);\n    } else if(tokenStandard == Standard.ERC721) {\n      return(IERC721(tokenAddress).getApproved(uint256(tokenId)) == address(this));\n    } else if(tokenStandard == Standard.ERC1400){\n      return(IERC1400(tokenAddress).allowanceByPartition(tokenId, sender, address(this)) >= tokenValue);\n    }\n\n    return true;\n  }\n\n  function approveTrade(uint256 index, bool approved) external {\n    approveTradeWithPreimage(index, approved, 0);\n  }\n\n  /**\n   * @dev Approve a trade (if the tokens involved in the trade are controlled)\n   *\n   * This function can only be called by a token controller of one of the tokens involved in the trade.\n   *\n   * Indeed, when a token smart contract is controlled by an owner, the owner can decide to open the\n   * secondary market by:\n   *  - Allowlisting the Swaps smart contract\n   *  - Setting \"token controllers\" in the Swaps smart contract, in order to approve all the trades made with his token\n   *\n   * @param index Index of the trade to be executed.\n   * @param approved 'true' if trade is approved, 'false' if not.\n   */\n  function approveTradeWithPreimage(uint256 index, bool approved, bytes32 preimage) public {\n    Trade storage trade = _trades[index];\n    require(trade.state == State.Pending, \"Trade is not pending\");\n\n    require(_isTokenController[trade.userTradeData1.tokenAddress][msg.sender] || _isTokenController[trade.userTradeData2.tokenAddress][msg.sender], \"Only token controllers of involved tokens can approve a trade\");\n\n    if(_isTokenController[trade.userTradeData1.tokenAddress][msg.sender]) {\n      trade.userTradeData1.approved = approved;\n    }\n    \n    if(_isTokenController[trade.userTradeData2.tokenAddress][msg.sender]) {\n      trade.userTradeData2.approved = approved;\n    }\n\n    if(trade.executer == address(0) && getTradeAcceptanceStatus(index) && getTradeApprovalStatus(index)) {\n      _executeTrade(index, preimage);\n    }\n  }\n\n  /**\n   * @dev Verify if a trade has been approved by the token controllers.\n   *\n   * In case a given token has token controllers, those need to validate the trade before it gets executed.\n   *\n   * @param index Index of the trade to be approved.\n   */\n  function getTradeApprovalStatus(uint256 index) public view returns(bool) {\n    Trade storage trade = _trades[index];\n\n    if(_tokenControllers[trade.userTradeData1.tokenAddress].length != 0 && !trade.userTradeData1.approved) {\n      return false;\n    }\n\n    if(_tokenControllers[trade.userTradeData2.tokenAddress].length != 0 && !trade.userTradeData2.approved) {\n      return false;\n    }\n\n    return true;\n  }\n\n  function executeTrade(uint256 index) external {\n    executeTradeWithPreimage(index, 0);\n  }\n\n  /**\n   * @dev Execute a trade in the Swaps contract if possible (e.g. if tokens have been esccrowed, in case it is required).\n   *\n   * This function can only be called by the executer specified at trade creation.\n   * If no executer is specified, the trade can be launched by anyone.\n   *\n   * @param index Index of the trade to be executed.\n   */\n  function executeTradeWithPreimage(uint256 index, bytes32 preimage) public {\n    Trade storage trade = _trades[index];\n    require(trade.state == State.Pending, \"Trade is not pending\");\n\n    if(trade.executer != address(0)) {\n      require(msg.sender == trade.executer, \"Trade can only be executed by executer defined at trade creation\");\n    }\n\n    require(block.timestamp >= trade.settlementDate, \"Trade can only be executed on or after settlement date\");\n\n    require(getTradeAcceptanceStatus(index), \"Trade has not been accepted by all token holders yet\");\n    \n    require(getTradeApprovalStatus(index), \"Trade has not been approved by all token controllers yet\");\n\n    _executeTrade(index, preimage);\n  }\n\n  /**\n   * @dev Execute a trade in the Swaps contract if possible (e.g. if tokens have been esccrowed, in case it is required).\n   * @param index Index of the trade to be executed.\n   */\n  function _executeTrade(uint256 index, bytes32 preimage) internal {\n    Trade storage trade = _trades[index];\n\n    uint256 price = getPrice(index);\n\n    uint256 tokenValue1 = trade.userTradeData1.tokenValue;\n    uint256 tokenValue2 = trade.userTradeData2.tokenValue;\n\n    if(price == tokenValue2) {\n      _transferUsersTokens(index, Holder.Holder1, tokenValue1, false, preimage);\n      _transferUsersTokens(index, Holder.Holder2, tokenValue2, false, preimage);\n    } else {\n      //Holds cannot move a specific amount of tokens\n      //So require that if the price is less than the value\n      //that the trade is not a hold trade\n      require(price <= tokenValue2 && trade.userTradeData2.tradeType != TradeType.Hold, \"Price is higher than amount escrowed/authorized\");\n      _transferUsersTokens(index, Holder.Holder1, tokenValue1, false, preimage);\n      _transferUsersTokens(index, Holder.Holder2, price, false, preimage);\n      if(trade.userTradeData2.tradeType == TradeType.Escrow) {\n        _transferUsersTokens(index, Holder.Holder2, tokenValue2 - price, true, preimage);\n      }\n    }\n    trade.state = State.Executed;\n\n  }\n\n  function forceTrade(uint256 index) external {\n    forceTradeWithPreimage(index, 0);\n  }\n\n  /**\n   * @dev Force a trade execution in the Swaps contract by transferring tokens back to their target recipients.\n   * @param index Index of the trade to be forced.\n   */\n  function forceTradeWithPreimage(uint256 index, bytes32 preimage) public {\n    Trade storage trade = _trades[index];\n    require(trade.state == State.Pending, \"Trade is not pending\");\n    \n    address tokenAddress1 = trade.userTradeData1.tokenAddress;\n    uint256 tokenValue1 = trade.userTradeData1.tokenValue;\n    bool accepted1 = trade.userTradeData1.accepted;\n\n    address tokenAddress2 = trade.userTradeData2.tokenAddress;\n    uint256 tokenValue2 = trade.userTradeData2.tokenValue;\n    bool accepted2 = trade.userTradeData2.accepted;\n\n    require(!(accepted1 && accepted2), \"executeTrade can be called\");\n    require(_tokenControllers[tokenAddress1].length == 0 && _tokenControllers[tokenAddress2].length == 0, \"Trade can not be forced if tokens have controllers\");\n\n    if(trade.executer != address(0)) {\n      require(msg.sender == trade.executer, \"Sender is not allowed to force trade (0)\");\n    } else if(accepted1) {\n      require(msg.sender == trade.holder1, \"Sender is not allowed to force trade (1)\");\n    } else if(accepted2) {\n      require(msg.sender == trade.holder2, \"Sender is not allowed to force trade (2)\");\n    } else {\n      revert(\"Trade can't be forced as tokens are not available so far\");\n    }\n\n    if(accepted1) {\n      _transferUsersTokens(index, Holder.Holder1, tokenValue1, false, preimage);\n    }\n\n    if(accepted2) {\n      _transferUsersTokens(index, Holder.Holder2, tokenValue2, false, preimage);\n    }\n\n    trade.state = State.Forced;\n  }\n\n  /**\n   * @dev Cancel a trade execution in the Swaps contract by transferring tokens back to their initial owners.\n   * @param index Index of the trade to be cancelled.\n   */\n  function cancelTrade(uint256 index) external {\n    Trade storage trade = _trades[index];\n    require(trade.state == State.Pending, \"Trade is not pending\");\n\n    uint256 tokenValue1 = trade.userTradeData1.tokenValue;\n    bool accepted1 = trade.userTradeData1.accepted;\n\n    uint256 tokenValue2 = trade.userTradeData2.tokenValue;\n    bool accepted2 = trade.userTradeData2.accepted;\n\n    if(accepted1 && accepted2) {\n      require(msg.sender == trade.executer || (block.timestamp >= trade.expirationDate && (msg.sender == trade.holder1 || msg.sender == trade.holder2) ), \"Sender is not allowed to cancel trade (0)\");\n      if(trade.userTradeData1.tradeType == TradeType.Escrow) {\n        _transferUsersTokens(index, Holder.Holder1, tokenValue1, true, bytes32(0));\n      }\n      if(trade.userTradeData2.tradeType == TradeType.Escrow) {\n        _transferUsersTokens(index, Holder.Holder2, tokenValue2, true, bytes32(0));\n      }\n    } else if(accepted1) {\n      require(msg.sender == trade.executer || (block.timestamp >= trade.expirationDate && msg.sender == trade.holder1), \"Sender is not allowed to cancel trade (1)\");\n      if(trade.userTradeData1.tradeType == TradeType.Escrow) {\n        _transferUsersTokens(index, Holder.Holder1, tokenValue1, true, bytes32(0));\n      }\n    } else if(accepted2) {\n      require(msg.sender == trade.executer || (block.timestamp >= trade.expirationDate && msg.sender == trade.holder2), \"Sender is not allowed to cancel trade (2)\");\n      if(trade.userTradeData2.tradeType == TradeType.Escrow) {\n        _transferUsersTokens(index, Holder.Holder2, tokenValue2, true, bytes32(0));\n      }\n    } else {\n      require(msg.sender == trade.executer || msg.sender == trade.holder1 || msg.sender == trade.holder2, \"Sender is not allowed to cancel trade (3)\");\n    }\n\n    trade.state = State.Cancelled;\n  }\n\n  function _transferUsersTokens(uint256 index, Holder holder, uint256 value, bool revertTransfer, bytes32 preimage) internal { \n    Trade storage trade = _trades[index];\n\n    UserTradeData memory senderUserTradeData = (holder == Holder.Holder1) ? trade.userTradeData1 : trade.userTradeData2;\n\n    TradeType tokenTradeType = senderUserTradeData.tradeType;\n\n    if (tokenTradeType == TradeType.Hold) {\n      _executeHoldOnUsersTokens(index, holder, value, revertTransfer, preimage);\n    } else {\n      _executeTransferOnUsersTokens(index, holder, value, revertTransfer);\n    }\n  }\n\n  function _executeHoldOnUsersTokens(uint256 index, Holder holder, uint256, bool, bytes32 preimage) internal { \n    Trade storage trade = _trades[index];\n\n    address sender = (holder == Holder.Holder1) ? trade.holder1 : trade.holder2;\n    address recipient = (holder == Holder.Holder1) ? trade.holder2 : trade.holder1;\n    UserTradeData memory senderUserTradeData = (holder == Holder.Holder1) ? trade.userTradeData1 : trade.userTradeData2;\n\n    require(block.timestamp <= trade.expirationDate, \"Expiration date is past\");\n\n    address tokenAddress = senderUserTradeData.tokenAddress;\n    bytes32 tokenId = senderUserTradeData.tokenId;\n    Standard tokenStandard = senderUserTradeData.tokenStandard;\n\n    require(tokenStandard == Standard.ERC20 || tokenStandard == Standard.ERC1400, \"Token standard must be holdable\");\n\n    require(_holdExists(sender, recipient, senderUserTradeData), \"Hold must exist\");\n\n    _executeHold(tokenAddress, tokenId, tokenStandard, preimage, recipient);\n  }\n\n  /**\n   * @dev Internal function to transfer tokens to their recipient by taking the token standard into account.\n   * @param index Index of the trade the token transfer is execcuted for.\n   * @param holder Sender of the tokens (currently owning the tokens).\n   * @param value Amount of tokens to send.\n   * @param revertTransfer If set to true + trade has been accepted, tokens need to be sent back to their initial owners instead of sent to the target recipient.\n   */\n  function _executeTransferOnUsersTokens(uint256 index, Holder holder, uint256 value, bool revertTransfer) internal {\n    Trade storage trade = _trades[index];\n\n    address sender = (holder == Holder.Holder1) ? trade.holder1 : trade.holder2;\n    address recipient = (holder == Holder.Holder1) ? trade.holder2 : trade.holder1;\n    UserTradeData storage senderUserTradeData = (holder == Holder.Holder1) ? trade.userTradeData1 : trade.userTradeData2;\n\n    address tokenAddress = senderUserTradeData.tokenAddress;\n    bytes32 tokenId = senderUserTradeData.tokenId;\n    Standard tokenStandard = senderUserTradeData.tokenStandard;\n\n    address currentHolder = sender;\n    if(senderUserTradeData.tradeType == TradeType.Escrow) {\n      currentHolder = address(this);\n    }\n\n    if(revertTransfer) {\n      recipient = sender;\n    } else {\n      require(block.timestamp <= trade.expirationDate, \"Expiration date is past\");\n    }\n\n    if(tokenStandard == Standard.ETH) {\n      address payable payableRecipient = payable(recipient);\n      payableRecipient.transfer(value);\n    } else if(tokenStandard == Standard.ERC20) {\n      if(currentHolder == address(this)) {\n        IERC20(tokenAddress).transfer(recipient, value);\n      } else {\n        IERC20(tokenAddress).transferFrom(currentHolder, recipient, value);\n      }\n    } else if(tokenStandard == Standard.ERC721) {\n      IERC721(tokenAddress).transferFrom(currentHolder, recipient, uint256(tokenId));\n    } else if(tokenStandard == Standard.ERC1400) {\n      IERC1400(tokenAddress).operatorTransferByPartition(tokenId, currentHolder, recipient, value, \"\", \"\");\n    }\n\n  }\n\n  function _executeHold(\n    address token,\n    bytes32 tokenHoldId,\n    Standard tokenStandard,\n    bytes32 preimage,\n    address tokenRecipient\n  ) internal {\n    // Token 1\n    if (tokenStandard == Standard.ERC20) {\n      require(token != address(0), \"token can not be a zero address\");\n\n      IERC20HoldableToken(token).executeHold(tokenHoldId, preimage);\n    } else if (tokenStandard == Standard.ERC1400) {\n      require(token != address(0), \"token can not be a zero address\");\n\n      address tokenExtension = interfaceAddr(token, ERC1400_TOKENS_VALIDATOR);\n      require(\n          tokenExtension != address(0),\n          \"token has no holdable token extension\"\n      );\n\n      uint256 holdValue;\n      (,,,,holdValue,,,,) = IHoldableERC1400TokenExtension(tokenExtension).retrieveHoldData(token, tokenHoldId);\n\n      IHoldableERC1400TokenExtension(tokenExtension).executeHold(\n          token,\n          tokenHoldId,\n          holdValue,\n          preimage\n      );\n    } else {\n        revert(\"invalid token standard\");\n    }\n\n    emit ExecutedHold(\n        token,\n        tokenHoldId,\n        preimage,\n        tokenRecipient\n    );\n  }\n\n  function _holdExists(address sender, address recipient, UserTradeData memory userTradeData) internal view returns(bool) {\n    address tokenAddress = userTradeData.tokenAddress;\n    bytes32 holdId = userTradeData.tokenId;\n    Standard tokenStandard = userTradeData.tokenStandard;\n    \n    if(tokenStandard == Standard.ERC1400) {\n      address tokenExtension = interfaceAddr(tokenAddress, ERC1400_TOKENS_VALIDATOR);\n      require(\n          tokenExtension != address(0),\n          \"token has no holdable token extension\"\n      );\n\n      HoldStatusCode holdStatus;\n      address holdSender;\n      address holdRecipient;\n      uint256 holdValue;\n      address notary;\n      bytes32 secretHash;\n      (,holdSender,holdRecipient,notary,holdValue,,secretHash,,holdStatus) = IHoldableERC1400TokenExtension(tokenExtension).retrieveHoldData(tokenAddress, holdId);\n      return holdStatus == HoldStatusCode.Ordered && holdValue == userTradeData.tokenValue && (holdSender == sender || holdSender == address(0)) && holdRecipient == recipient && (secretHash != bytes32(0) || notary == address(this));\n    } else if (tokenStandard == Standard.ERC20) {\n      ERC20HoldData memory data = IERC20HoldableToken(tokenAddress).retrieveHoldData(holdId);\n      return (data.sender == sender || data.sender == address(0)) && data.recipient == recipient && data.amount == userTradeData.tokenValue && data.status == HoldStatusCode.Ordered && (data.secretHash != bytes32(0) || data.notary == address(this));\n    } else {\n      revert(\"Invalid tokenStandard provided\");\n    }\n  }\n\n  /**\n   * @dev Indicate whether or not the Swaps contract can receive the tokens or not.\n   *\n   * By convention, the 32 first bytes of a token transfer to the Swaps smart contract contain a flag.\n   *\n   *  - When tokens are transferred to Swaps contract to propose a new trade. The 'data' field starts with the\n   *  following flag: 0xcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc\n   *  In this case the data structure is the the following:\n   *  <tradeFlag (32 bytes)><recipient address (32 bytes)><executer address (32 bytes)><expiration date (32 bytes)><requested token data (4 * 32 bytes)>\n   *\n   *  - When tokens are transferred to Swaps contract to accept an existing trade. The 'data' field starts with the\n   *  following flag: 0xdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd\n   *  In this case the data structure is the the following:\n   *  <tradeFlag (32 bytes)><request index (32 bytes)>\n   *\n   * If the 'data' doesn't start with one of those flags, the Swaps contract won't accept the token transfer.\n   *\n   * @param data Information attached to the Swaps transfer.\n   * @param operatorData Information attached to the Swaps transfer, by the operator.\n   * @return 'true' if the Swaps contract can receive the tokens, 'false' if not.\n   */\n  function _canReceive(bytes memory data, bytes memory operatorData) internal pure returns(bool) {\n    if(operatorData.length == 0) { // The reason for this check is to avoid a certificate gets interpreted as a flag by mistake\n      return false;\n    }\n    \n    bytes32 flag = _getTradeFlag(data);\n    if(data.length == 320 && flag == TRADE_PROPOSAL_FLAG) {\n      return true;\n    } else if ((data.length == 64 || data.length == 96) && flag == TRADE_ACCEPTANCE_FLAG) {\n      return true;\n    } else if (data.length == 32 && flag == BYPASS_ACTION_FLAG) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n    /**\n   * @dev Retrieve the trade flag from the 'data' field.\n   *\n   * By convention, the 32 first bytes of a token transfer to the Swaps smart contract contain a flag.\n   *  - When tokens are transferred to Swaps contract to propose a new trade. The 'data' field starts with the\n   *  following flag: 0xcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc\n   *  - When tokens are transferred to Swaps contract to accept an existing trade. The 'data' field starts with the\n   *  following flag: 0xdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd\n   *\n   * @param data Concatenated information about the trade proposal.\n   * @return flag Trade flag.\n   */\n  function _getTradeFlag(bytes memory data) internal pure returns(bytes32 flag) {\n    assembly {\n      flag:= mload(add(data, 32))\n    }\n  }\n\n  /**\n   * By convention, when tokens are transferred to Swaps contract to propose a new trade, the 'data' of a token transfer has the following structure:\n   *  <tradeFlag (32 bytes)><recipient address (32 bytes)><executer address (32 bytes)><expiration date (32 bytes)><requested token data (5 * 32 bytes)>\n   *\n   * The first 32 bytes are the flag 0xcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc\n   *\n   * The next 32 bytes contain the trade recipient address (or the zero address if the recipient is not chosen).\n   *\n   * The next 32 bytes contain the trade executer address (or zero if the executer is not chosen).\n   *\n   * The next 32 bytes contain the trade expiration date (or zero if the expiration date is not chosen).\n   *\n   * The next 32 bytes contain the trade requested token address (or the zero address if the recipient is not chosen).\n   * The next 32 bytes contain the trade requested token amount.\n   * The next 32 bytes contain the trade requested token id/partition (used when token standard is ERC721 or ERC1400).\n   * The next 32 bytes contain the trade requested token standard (OffChain, ERC20, ERC721, ERC1400, ETH).\n   * The next 32 bytes contain a boolean precising wether trade has been accepted by token holder or not.\n   * The next 32 bytes contain a boolean precising wether trade has been approved by token controller or not.\n   *\n   * Example input for recipient address '0xb5747835141b46f7C472393B31F8F5A57F74A44f', expiration date '1576348418',\n   * trade executer address '0x32F54098916ceb5f57a117dA9554175Fe25611bA', requested token address '0xC6F0410A667a5BEA528d6bc9efBe10270089Bb11',\n   * requested token amount '5', requested token id/partition '37252', and requested token type 'ERC1400', accepted and approved:\n   * 0xcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc000000000000000000000000b5747835141b46f7C472393B31F8F5A57F74A44f\n   * 000000000000000000000000000000000000000000000000000000157634841800000000000000000000000032F54098916ceb5f57a117dA9554175Fe25611bA\n   * 000000000000000000000000C6F0410A667a5BEA528d6bc9efBe10270089Bb110000000000000000000000000000000000000000000000000000000000000005\n   * 000000000000000000000000000000000000000000000000000000000037252000000000000000000000000000000000000000000000000000000000000002\n   * 000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000001\n   */\n\n  /**\n   * @dev Retrieve the tokenData from the 'data' field.\n   *\n   * @param data Concatenated information about the trade proposal.\n   * @return tokenData Trade token data < 1: address > < 2: amount > < 3: id/partition > < 4: standard > < 5: accepted > < 6: approved >.\n   */\n  function _getTradeTokenData(bytes memory data) internal pure returns(UserTradeData memory tokenData) {\n    address tokenAddress;\n    uint256 tokenAmount;\n    bytes32 tokenId;\n    Standard tokenStandard;\n    TradeType tradeType;\n    assembly {\n      tokenAddress:= mload(add(data, 192))\n      tokenAmount:= mload(add(data, 224))\n      tokenId:= mload(add(data, 256))\n      tokenStandard:= mload(add(data, 288))\n      tradeType:= mload(add(data, 320))\n    }\n    tokenData = UserTradeData(\n      tokenAddress,\n      tokenAmount,\n      tokenId,\n      tokenStandard,\n      false,\n      false,\n      tradeType\n    );\n  }\n\n  /**\n   * @dev Retrieve the trade index from the 'data' field.\n   *\n   * By convention, when tokens are transferred to Swaps contract to accept an existing trade, the 'data' of a token transfer has the following structure:\n   *  <tradeFlag (32 bytes)><index uint256 (32 bytes)>\n   *\n   * The first 32 bytes are the flag 0xdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd\n   *\n   * The next 32 bytes contain the trade index.\n   *\n   * Example input for trade index #2985:\n   * 0xdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd0000000000000000000000000000000000000000000000000000000000002985\n   *\n   * @param data Concatenated information about the trade validation.\n   * @return index Trade index.\n   */\n\n  /**************************** TRADE EXECUTERS *******************************/\n\n  /**\n   * @dev Renounce ownership of the contract.\n   */\n  function renounceOwnership() public override onlyOwner {\n    Ownable.renounceOwnership();\n    _ownedContract = false;\n  }\n\n  /**\n   * @dev Get the list of trade executers as defined by the Swaps contract.\n   * @return List of addresses of all the trade executers.\n   */\n  function tradeExecuters() external view returns (address[] memory) {\n    return _tradeExecuters;\n  }\n\n  /**\n   * @dev Set list of trade executers for the Swaps contract.\n   * @param operators Trade executers addresses.\n   */\n  function setTradeExecuters(address[] calldata operators) external onlyOwner {\n    require(_ownedContract, \"Swaps contract is not owned\");\n    _setTradeExecuters(operators);\n  }\n\n  /**\n   * @dev Set list of trade executers for the Swaps contract.\n   * @param operators Trade executers addresses.\n   */\n  function _setTradeExecuters(address[] memory operators) internal {\n\n    for (uint i = 0; i<_tradeExecuters.length; i++){\n      _isTradeExecuter[_tradeExecuters[i]] = false;\n    }\n    for (uint j = 0; j<operators.length; j++){\n      _isTradeExecuter[operators[j]] = true;\n    }\n    _tradeExecuters = operators;\n  }\n\n  /************************** TOKEN CONTROLLERS *******************************/\n\n  /**\n   * @dev Get the list of token controllers for a given token.\n   * @param tokenAddress Token address.\n   * @return List of addresses of all the token controllers for a given token.\n   */\n  function tokenControllers(address tokenAddress) external view returns (address[] memory) {\n    return _tokenControllers[tokenAddress];\n  }\n\n  /**\n   * @dev Set list of token controllers for a given token.\n   * @param tokenAddress Token address.\n   * @param operators Operators addresses.\n   */\n  function setTokenControllers(address tokenAddress, address[] calldata operators) external onlyTokenController(tokenAddress) {\n    for (uint i = 0; i<_tokenControllers[tokenAddress].length; i++){\n      _isTokenController[tokenAddress][_tokenControllers[tokenAddress][i]] = false;\n    }\n    for (uint j = 0; j<operators.length; j++){\n      _isTokenController[tokenAddress][operators[j]] = true;\n    }\n    _tokenControllers[tokenAddress] = operators;\n  }\n\n  /************************** TOKEN PRICE ORACLES *******************************/\n\n  /**\n   * @dev Get the list of price oracles for a given token.\n   * @param tokenAddress Token address.\n   * @return List of addresses of all the price oracles for a given token.\n   */\n  function priceOracles(address tokenAddress) external view returns (address[] memory) {\n    return _priceOracles[tokenAddress];\n  }\n\n  /**\n   * @dev Set list of price oracles for a given token.\n   * @param tokenAddress Token address.\n   * @param oracles Oracles addresses.\n   */\n  function setPriceOracles(address tokenAddress, address[] calldata oracles) external onlyPriceOracle(tokenAddress) {\n    for (uint i = 0; i<_priceOracles[tokenAddress].length; i++){\n      _isPriceOracle[tokenAddress][_priceOracles[tokenAddress][i]] = false;\n    }\n    for (uint j = 0; j<oracles.length; j++){\n      _isPriceOracle[tokenAddress][oracles[j]] = true;\n    }\n    _priceOracles[tokenAddress] = oracles;\n  }\n\n  /**\n   * @dev Check if address is oracle of a given token.\n   * @param tokenAddress Token address.\n   * @param oracle Oracle address.\n   * @return 'true' if the address is oracle of the given token.\n   */\n  function _checkPriceOracle(address tokenAddress, address oracle) internal view returns(bool) {\n    return(_isPriceOracle[tokenAddress][oracle] || oracle == Ownable(tokenAddress).owner());\n  }\n\n  /****************************** Swaps PRICES *********************************/\n\n  /**\n   * @dev Get price of the token.\n   * @param tokenAddress1 Address of the token to be priced.\n   * @param tokenAddress2 Address of the token to pay for token1.\n   */\n  function getPriceOwnership(address tokenAddress1, address tokenAddress2) external view returns(bool) {\n    return _priceOwnership[tokenAddress1][tokenAddress2];\n  }\n\n  /**\n   * @dev Take ownership for setting the price of a token.\n   * @param tokenAddress1 Address of the token to be priced.\n   * @param tokenAddress2 Address of the token to pay for token1.\n   */\n  function setPriceOwnership(address tokenAddress1, address tokenAddress2, bool priceOwnership) external onlyPriceOracle(tokenAddress1) {\n    _priceOwnership[tokenAddress1][tokenAddress2] = priceOwnership;\n  }\n\n  /**\n   * @dev Get date after which the token price can potentially be set by an oracle (0 if price can not be set by an oracle).\n   * @param tokenAddress Token address.\n   */\n  function variablePriceStartDate(address tokenAddress) external view returns(uint256) {\n    return _variablePriceStartDate[tokenAddress];\n  }\n\n  /**\n   * @dev Set date after which the token price can potentially be set by an oracle (0 if price can not be set by an oracle).\n   * @param tokenAddress Token address.\n   * @param startDate Date after which token price can potentially be set by an oracle (0 if price can not be set by an oracle).\n   */\n  function setVariablePriceStartDate(address tokenAddress, uint256 startDate) external onlyPriceOracle(tokenAddress) {\n    require((startDate > block.timestamp + SECONDS_IN_WEEK) || startDate == 0, \"Start date needs to be set at least a week before\");\n    _variablePriceStartDate[tokenAddress] = startDate;\n  }\n\n  /**\n   * @dev Get price of the token.\n   * @param tokenAddress1 Address of the token to be priced.\n   * @param tokenAddress2 Address of the token to pay for token1.\n   * @param tokenId1 ID/partition of the token1 (set to 0 bytes32 if price is set for all IDs/partitions).\n   * @param tokenId1 ID/partition of the token2 (set to 0 bytes32 if price is set for all IDs/partitions).\n   */\n  function getTokenPrice(address tokenAddress1, address tokenAddress2, bytes32 tokenId1, bytes32 tokenId2) external view returns(uint256) {\n    return _tokenUnitPricesByPartition[tokenAddress1][tokenAddress2][tokenId1][tokenId2];\n  }\n\n  /**\n   * @dev Set price of a token.\n   * @param tokenAddress1 Address of the token to be priced.\n   * @param tokenAddress2 Address of the token to pay for token1.\n   * @param tokenId1 ID/partition of the token1 (set to 0 bytes32 if price is set for all IDs/partitions).\n   * @param tokenId2 ID/partition of the token2 (set to 0 bytes32 if price is set for all IDs/partitions).\n   * @param newPrice New price of the token.\n   */\n  function setTokenPrice(address tokenAddress1, address tokenAddress2, bytes32 tokenId1, bytes32 tokenId2, uint256 newPrice) external {\n    require(!(_priceOwnership[tokenAddress1][tokenAddress2] && _priceOwnership[tokenAddress2][tokenAddress1]), \"Competition on price ownership\");\n\n    if(_priceOwnership[tokenAddress1][tokenAddress2]) {\n      require(_checkPriceOracle(tokenAddress1, msg.sender), \"Price setter is not an oracle for this token (1)\");\n    } else if(_priceOwnership[tokenAddress2][tokenAddress1]) {\n      require(_checkPriceOracle(tokenAddress2, msg.sender), \"Price setter is not an oracle for this token (2)\");\n    } else {\n      revert(\"No price ownership\");\n    }\n\n    _tokenUnitPricesByPartition[tokenAddress1][tokenAddress2][tokenId1][tokenId2] = newPrice;\n  }\n\n  /**\n   * @dev Get amount of token2 to pay to acquire the token1.\n   * @param index Index of the Swaps request.\n   */\n  function getPrice(uint256 index) public view returns(uint256) {\n    Trade storage trade = _trades[index];\n\n    address tokenAddress1 = trade.userTradeData1.tokenAddress;\n    uint256 tokenValue1 = trade.userTradeData1.tokenValue;\n    bytes32 tokenId1 = trade.userTradeData1.tokenId;\n\n    address tokenAddress2 = trade.userTradeData2.tokenAddress;\n    uint256 tokenValue2 = trade.userTradeData2.tokenValue;\n    bytes32 tokenId2 = trade.userTradeData2.tokenId;\n\n    require(!(_priceOwnership[tokenAddress1][tokenAddress2] && _priceOwnership[tokenAddress2][tokenAddress1]), \"Competition on price ownership\");\n\n    if(_variablePriceStartDate[tokenAddress1] == 0 || block.timestamp < _variablePriceStartDate[tokenAddress1]) {\n      return tokenValue2;\n    }\n\n    if(_priceOwnership[tokenAddress1][tokenAddress2] || _priceOwnership[tokenAddress2][tokenAddress1]) {\n\n      if(_tokenUnitPricesByPartition[tokenAddress1][tokenAddress2][tokenId1][tokenId2] != 0) {\n        return tokenValue1 * (_tokenUnitPricesByPartition[tokenAddress1][tokenAddress2][tokenId1][tokenId2]);\n\n      } else if(_tokenUnitPricesByPartition[tokenAddress2][tokenAddress1][tokenId2][tokenId1] != 0) {\n        return tokenValue1 / (_tokenUnitPricesByPartition[tokenAddress2][tokenAddress1][tokenId2][tokenId1]);\n\n      } else if(_tokenUnitPricesByPartition[tokenAddress1][tokenAddress2][tokenId1][ALL_PARTITIONS] != 0) {\n        return tokenValue1 * (_tokenUnitPricesByPartition[tokenAddress1][tokenAddress2][tokenId1][ALL_PARTITIONS]);\n\n      } else if(_tokenUnitPricesByPartition[tokenAddress2][tokenAddress1][ALL_PARTITIONS][tokenId1] != 0) {\n        return tokenValue1 / (_tokenUnitPricesByPartition[tokenAddress2][tokenAddress1][ALL_PARTITIONS][tokenId1]);\n\n      } else if(_tokenUnitPricesByPartition[tokenAddress1][tokenAddress2][ALL_PARTITIONS][tokenId2] != 0) {\n        return tokenValue1 * (_tokenUnitPricesByPartition[tokenAddress1][tokenAddress2][ALL_PARTITIONS][tokenId2]);\n\n      } else if(_tokenUnitPricesByPartition[tokenAddress2][tokenAddress1][tokenId2][ALL_PARTITIONS] != 0) {\n        return tokenValue1 / (_tokenUnitPricesByPartition[tokenAddress2][tokenAddress1][tokenId2][ALL_PARTITIONS]);\n\n      } else if(_tokenUnitPricesByPartition[tokenAddress1][tokenAddress2][ALL_PARTITIONS][ALL_PARTITIONS] != 0) {\n        return tokenValue1 * (_tokenUnitPricesByPartition[tokenAddress1][tokenAddress2][ALL_PARTITIONS][ALL_PARTITIONS]);\n\n      } else if(_tokenUnitPricesByPartition[tokenAddress2][tokenAddress1][ALL_PARTITIONS][ALL_PARTITIONS] != 0) {\n        return tokenValue1 / (_tokenUnitPricesByPartition[tokenAddress2][tokenAddress1][ALL_PARTITIONS][ALL_PARTITIONS]);\n\n      } else {\n        return tokenValue2;\n      }\n\n    } else {\n      return tokenValue2;\n    }\n  }\n\n  /**************************** VIEW FUNCTIONS *******************************/\n\n  /**\n   * @dev Get the trade.\n   * @param index Index of the trade.\n   * @return Trade.\n   */\n  function getTrade(uint256 index) external view returns(Trade memory) {\n    Trade storage trade = _trades[index];\n    return trade;\n  }\n\n  /**\n   * @dev Get the total number of requests in the Swaps contract.\n   * @return Total number of requests in the Swaps contract.\n   */\n  function getNbTrades() external view returns(uint256) {\n    return _index;\n  }\n }\n",
  "sourcePath": "/Users/sergio/Downloads/UniversalToken-master/contracts/tools/Swaps.sol",
  "ast": {
    "absolutePath": "project:/contracts/tools/Swaps.sol",
    "exportedSymbols": {
      "Context": [
        1080
      ],
      "ERC1820Client": [
        7869
      ],
      "ERC1820Implementer": [
        5386
      ],
      "ERC20HoldData": [
        5467
      ],
      "HoldStatusCode": [
        5396
      ],
      "IERC1400": [
        1790
      ],
      "IERC1400TokensRecipient": [
        5334
      ],
      "IERC1643": [
        5447
      ],
      "IERC165": [
        1092
      ],
      "IERC1820Registry": [
        1182
      ],
      "IERC20": [
        819
      ],
      "IERC20HoldableToken": [
        5583
      ],
      "IERC721": [
        1059
      ],
      "IHoldableERC1400TokenExtension": [
        5624
      ],
      "Ownable": [
        103
      ],
      "Swaps": [
        11766
      ]
    },
    "id": 11767,
    "license": "Apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7984,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "154:23:35"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 7985,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11767,
        "sourceUnit": 104,
        "src": "179:52:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 7986,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11767,
        "sourceUnit": 820,
        "src": "232:56:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 7987,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11767,
        "sourceUnit": 1060,
        "src": "289:58:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/tools/ERC1820Client.sol",
        "file": "./ERC1820Client.sol",
        "id": 7988,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11767,
        "sourceUnit": 7870,
        "src": "349:29:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interface/ERC1820Implementer.sol",
        "file": "../interface/ERC1820Implementer.sol",
        "id": 7989,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11767,
        "sourceUnit": 5387,
        "src": "379:45:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/extensions/userExtensions/IERC1400TokensRecipient.sol",
        "file": "../extensions/userExtensions/IERC1400TokensRecipient.sol",
        "id": 7990,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11767,
        "sourceUnit": 5335,
        "src": "426:66:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interface/IERC20HoldableToken.sol",
        "file": "../interface/IERC20HoldableToken.sol",
        "id": 7991,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11767,
        "sourceUnit": 5584,
        "src": "493:46:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interface/IHoldableERC1400TokenExtension.sol",
        "file": "../interface/IHoldableERC1400TokenExtension.sol",
        "id": 7992,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11767,
        "sourceUnit": 5625,
        "src": "540:57:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/IERC1400.sol",
        "file": "../IERC1400.sol",
        "id": 7993,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11767,
        "sourceUnit": 1791,
        "src": "599:25:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7995,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 103,
              "src": "3613:7:35"
            },
            "id": 7996,
            "nodeType": "InheritanceSpecifier",
            "src": "3613:7:35"
          },
          {
            "baseName": {
              "id": 7997,
              "name": "ERC1820Client",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7869,
              "src": "3622:13:35"
            },
            "id": 7998,
            "nodeType": "InheritanceSpecifier",
            "src": "3622:13:35"
          },
          {
            "baseName": {
              "id": 7999,
              "name": "IERC1400TokensRecipient",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5334,
              "src": "3637:23:35"
            },
            "id": 8000,
            "nodeType": "InheritanceSpecifier",
            "src": "3637:23:35"
          },
          {
            "baseName": {
              "id": 8001,
              "name": "ERC1820Implementer",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5386,
              "src": "3662:18:35"
            },
            "id": 8002,
            "nodeType": "InheritanceSpecifier",
            "src": "3662:18:35"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 7994,
          "nodeType": "StructuredDocumentation",
          "src": "627:2967:35",
          "text": " @title Swaps\n @dev Delivery-Vs-Payment contract for investor-to-investor token trades.\n @dev Intended usage:\n The purpose of the contract is to allow secure token transfers/exchanges between 2 stakeholders (called holder1 and holder2).\n From now on, an operation in the Swaps smart contract (transfer/exchange) is called a trade.\n Depending on the type of trade, one/multiple token transfers will be executed.\n The simplified workflow is the following:\n 1) A trade request is created in the Swaps smart contract, it specifies:\n  - The token holder(s) involved in the trade\n  - The trade executer (optional)\n  - An expiration date\n  - Details on the first token (address, requested amount, standard)\n  - Details on the second token (address, requested amount, standard)\n  - Whether the tokens need to be escrowed in the Swaps contract or not\n  - The current status of the trade (pending / executed / forced / cancelled)\n 2) The trade is accepted by both token holders\n 3) [OPTIONAL] The trade is approved by token controllers (only if requested by tokens controllers)\n 4) The trade is executed (either by the executer in case the executer is specified, or by anyone)\n STANDARD-AGNOSTIC:\n The Swaps smart contract is standard-agnostic, it supports ETH, ERC20, ERC721, ERC1400.\n The advantage of using an ERC1400 token is to leverages its hook property, thus requiring ONE single\n transaction (operatorTransferByPartition()) to send tokens to the Swaps smart contract instead of TWO\n with the ERC20 token standard (approve() + transferFrom()).\n OFF-CHAIN PAYMENT:\n The contract can be used as escrow contract while waiting for an off-chain payment.\n Once payment is received off-chain, the token sender realeases the tokens escrowed in\n the Swaps contract to deliver them to the recipient.\n ESCROW VS SWAP MODE:\n In case escrow mode is selected, tokens need to be escrowed in Swaps smart contract\n before the trade can occur.\n In case swap mode is selected, tokens are not escrowed in the Swaps. Instead, the Swaps\n contract is only allowed to transfer tokens ON BEHALF of their owners. When trade is\n executed, an atomic token swap occurs.\n EXPIRATION DATE:\n The trade can be cancelled by both parties in case expiration date is passed.\n CLAIMS:\n The executer has the ability to force or cancel the trade.\n In case of disagreement/missing payment, both parties can contact the \"executer\"\n of the trade to deposit a claim and solve the issue.\n MARKETPLACE:\n The contract can be used as a token marketplace. Indeed, when trades are created\n without specifying the recipient address, anyone can purchase them by sending\n the requested payment in exchange.\n PRICE ORACLES:\n When price oracles are defined, those can define the price at which trades need to be executed.\n This feature is particularly useful for assets with NAV (net asset value)."
        },
        "fullyImplemented": true,
        "id": 11766,
        "linearizedBaseContracts": [
          11766,
          5386,
          5334,
          7869,
          103,
          1080
        ],
        "name": "Swaps",
        "nameLocation": "3604:5:35",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 8005,
            "mutability": "constant",
            "name": "DELIVERY_VS_PAYMENT",
            "nameLocation": "3710:19:35",
            "nodeType": "VariableDeclaration",
            "scope": 11766,
            "src": "3685:66:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 8003,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "3685:6:35",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "44656c697665727956735061796d656e74",
              "id": 8004,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3732:19:35",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_e8e336559fc1e6282be5a43d52f68f49566aba335aa0a6444efb7b7a35445572",
                "typeString": "literal_string \"DeliveryVsPayment\""
              },
              "value": "DeliveryVsPayment"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 8008,
            "mutability": "constant",
            "name": "ERC1400_TOKENS_RECIPIENT",
            "nameLocation": "3780:24:35",
            "nodeType": "VariableDeclaration",
            "scope": 11766,
            "src": "3755:76:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 8006,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "3755:6:35",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "45524331343030546f6b656e73526563697069656e74",
              "id": 8007,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3807:24:35",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_2c93a7aca686281a8c69c278068a355318b4c196f673d0b4a4407212b40df37a",
                "typeString": "literal_string \"ERC1400TokensRecipient\""
              },
              "value": "ERC1400TokensRecipient"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 8013,
            "mutability": "constant",
            "name": "SECONDS_IN_MONTH",
            "nameLocation": "3862:16:35",
            "nodeType": "VariableDeclaration",
            "scope": 11766,
            "src": "3836:55:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8009,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3836:7:35",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_2592000_by_1",
                "typeString": "int_const 2592000"
              },
              "id": 8012,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3836343030",
                "id": 8010,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3881:5:35",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_86400_by_1",
                  "typeString": "int_const 86400"
                },
                "value": "86400"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "3330",
                "id": 8011,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3889:2:35",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_30_by_1",
                  "typeString": "int_const 30"
                },
                "value": "30"
              },
              "src": "3881:10:35",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2592000_by_1",
                "typeString": "int_const 2592000"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 8018,
            "mutability": "constant",
            "name": "SECONDS_IN_WEEK",
            "nameLocation": "3921:15:35",
            "nodeType": "VariableDeclaration",
            "scope": 11766,
            "src": "3895:53:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8014,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3895:7:35",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_604800_by_1",
                "typeString": "int_const 604800"
              },
              "id": 8017,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3836343030",
                "id": 8015,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3939:5:35",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_86400_by_1",
                  "typeString": "int_const 86400"
                },
                "value": "86400"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "37",
                "id": 8016,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3947:1:35",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_7_by_1",
                  "typeString": "int_const 7"
                },
                "value": "7"
              },
              "src": "3939:9:35",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_604800_by_1",
                "typeString": "int_const 604800"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 8021,
            "mutability": "constant",
            "name": "TRADE_PROPOSAL_FLAG",
            "nameLocation": "3979:19:35",
            "nodeType": "VariableDeclaration",
            "scope": 11766,
            "src": "3953:114:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 8019,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "3953:7:35",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307863636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363",
              "id": 8020,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4001:66:35",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_92633671389852956338856788006950326282615987732512451231566067206330503711948_by_1",
                "typeString": "int_const 9263...(69 digits omitted)...1948"
              },
              "value": "0xcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 8024,
            "mutability": "constant",
            "name": "TRADE_ACCEPTANCE_FLAG",
            "nameLocation": "4097:21:35",
            "nodeType": "VariableDeclaration",
            "scope": 11766,
            "src": "4071:116:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 8022,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "4071:7:35",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307864646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464",
              "id": 8023,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4121:66:35",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100353144005674036033761520340862853472833986710221822167529906140191379021277_by_1",
                "typeString": "int_const 1003...(70 digits omitted)...1277"
              },
              "value": "0xdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 8027,
            "mutability": "constant",
            "name": "BYPASS_ACTION_FLAG",
            "nameLocation": "4218:18:35",
            "nodeType": "VariableDeclaration",
            "scope": 11766,
            "src": "4192:113:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 8025,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "4192:7:35",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307861616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161",
              "id": 8026,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4239:66:35",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_77194726158210796949047323339125271902179989777093709359638389338608753093290_by_1",
                "typeString": "int_const 7719...(69 digits omitted)...3290"
              },
              "value": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 8030,
            "mutability": "constant",
            "name": "ALL_PARTITIONS",
            "nameLocation": "4336:14:35",
            "nodeType": "VariableDeclaration",
            "scope": 11766,
            "src": "4310:109:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 8028,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "4310:7:35",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
              "id": 8029,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4353:66:35",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0x0000000000000000000000000000000000000000000000000000000000000000"
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "Swaps.Standard",
            "id": 8036,
            "members": [
              {
                "id": 8031,
                "name": "OffChain",
                "nameLocation": "4439:8:35",
                "nodeType": "EnumValue",
                "src": "4439:8:35"
              },
              {
                "id": 8032,
                "name": "ETH",
                "nameLocation": "4449:3:35",
                "nodeType": "EnumValue",
                "src": "4449:3:35"
              },
              {
                "id": 8033,
                "name": "ERC20",
                "nameLocation": "4454:5:35",
                "nodeType": "EnumValue",
                "src": "4454:5:35"
              },
              {
                "id": 8034,
                "name": "ERC721",
                "nameLocation": "4461:6:35",
                "nodeType": "EnumValue",
                "src": "4461:6:35"
              },
              {
                "id": 8035,
                "name": "ERC1400",
                "nameLocation": "4469:7:35",
                "nodeType": "EnumValue",
                "src": "4469:7:35"
              }
            ],
            "name": "Standard",
            "nameLocation": "4429:8:35",
            "nodeType": "EnumDefinition",
            "src": "4424:53:35"
          },
          {
            "canonicalName": "Swaps.State",
            "id": 8042,
            "members": [
              {
                "id": 8037,
                "name": "Undefined",
                "nameLocation": "4493:9:35",
                "nodeType": "EnumValue",
                "src": "4493:9:35"
              },
              {
                "id": 8038,
                "name": "Pending",
                "nameLocation": "4504:7:35",
                "nodeType": "EnumValue",
                "src": "4504:7:35"
              },
              {
                "id": 8039,
                "name": "Executed",
                "nameLocation": "4513:8:35",
                "nodeType": "EnumValue",
                "src": "4513:8:35"
              },
              {
                "id": 8040,
                "name": "Forced",
                "nameLocation": "4523:6:35",
                "nodeType": "EnumValue",
                "src": "4523:6:35"
              },
              {
                "id": 8041,
                "name": "Cancelled",
                "nameLocation": "4531:9:35",
                "nodeType": "EnumValue",
                "src": "4531:9:35"
              }
            ],
            "name": "State",
            "nameLocation": "4486:5:35",
            "nodeType": "EnumDefinition",
            "src": "4481:60:35"
          },
          {
            "canonicalName": "Swaps.TradeType",
            "id": 8046,
            "members": [
              {
                "id": 8043,
                "name": "Allowance",
                "nameLocation": "4561:9:35",
                "nodeType": "EnumValue",
                "src": "4561:9:35"
              },
              {
                "id": 8044,
                "name": "Hold",
                "nameLocation": "4572:4:35",
                "nodeType": "EnumValue",
                "src": "4572:4:35"
              },
              {
                "id": 8045,
                "name": "Escrow",
                "nameLocation": "4578:6:35",
                "nodeType": "EnumValue",
                "src": "4578:6:35"
              }
            ],
            "name": "TradeType",
            "nameLocation": "4550:9:35",
            "nodeType": "EnumDefinition",
            "src": "4545:40:35"
          },
          {
            "canonicalName": "Swaps.Holder",
            "id": 8049,
            "members": [
              {
                "id": 8047,
                "name": "Holder1",
                "nameLocation": "4602:7:35",
                "nodeType": "EnumValue",
                "src": "4602:7:35"
              },
              {
                "id": 8048,
                "name": "Holder2",
                "nameLocation": "4611:7:35",
                "nodeType": "EnumValue",
                "src": "4611:7:35"
              }
            ],
            "name": "Holder",
            "nameLocation": "4594:6:35",
            "nodeType": "EnumDefinition",
            "src": "4589:30:35"
          },
          {
            "constant": true,
            "id": 8052,
            "mutability": "constant",
            "name": "ERC1400_TOKENS_VALIDATOR",
            "nameLocation": "4652:24:35",
            "nodeType": "VariableDeclaration",
            "scope": 11766,
            "src": "4627:76:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 8050,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "4627:6:35",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "45524331343030546f6b656e7356616c696461746f72",
              "id": 8051,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4679:24:35",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_595db897d6dbdcb800524f62aac721a55f3203c7bf80bd14e6e90920e184a21d",
                "typeString": "literal_string \"ERC1400TokensValidator\""
              },
              "value": "ERC1400TokensValidator"
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 8053,
              "nodeType": "StructuredDocumentation",
              "src": "4708:114:35",
              "text": "@dev Include token events so they can be parsed by Ethereum clients from the settlement transactions."
            },
            "id": 8063,
            "name": "ExecutedHold",
            "nameLocation": "4845:12:35",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8062,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8055,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "4881:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8063,
                  "src": "4865:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8054,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4865:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8057,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "holdId",
                  "nameLocation": "4910:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8063,
                  "src": "4894:22:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8056,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4894:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8059,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "lockPreimage",
                  "nameLocation": "4932:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8063,
                  "src": "4924:20:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8058,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4924:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8061,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4960:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8063,
                  "src": "4952:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8060,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4952:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4857:116:35"
            },
            "src": "4839:135:35"
          },
          {
            "anonymous": false,
            "id": 8071,
            "name": "Transfer",
            "nameLocation": "4994:8:35",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8070,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8065,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5019:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8071,
                  "src": "5003:20:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8064,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5003:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8067,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5041:2:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8071,
                  "src": "5025:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8066,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5025:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8069,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "5053:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8071,
                  "src": "5045:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8068,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5045:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5002:58:35"
            },
            "src": "4988:73:35"
          },
          {
            "anonymous": false,
            "id": 8087,
            "name": "TransferByPartition",
            "nameLocation": "5083:19:35",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8086,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8073,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "fromPartition",
                  "nameLocation": "5126:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8087,
                  "src": "5110:29:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8072,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5110:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8075,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "5155:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8087,
                  "src": "5147:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8074,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5147:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8077,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5187:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8087,
                  "src": "5171:20:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8076,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5171:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8079,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5215:2:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8087,
                  "src": "5199:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8078,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5199:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8081,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "5233:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8087,
                  "src": "5225:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8080,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5225:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8083,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "5252:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8087,
                  "src": "5246:10:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8082,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5246:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8085,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "5270:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8087,
                  "src": "5264:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8084,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5264:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5102:184:35"
            },
            "src": "5077:210:35"
          },
          {
            "anonymous": false,
            "id": 8095,
            "name": "CreateNote",
            "nameLocation": "5296:10:35",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8094,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8089,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "5330:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8095,
                  "src": "5314:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8088,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5314:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8091,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "noteHash",
                  "nameLocation": "5359:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8095,
                  "src": "5343:24:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8090,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5343:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8093,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "metadata",
                  "nameLocation": "5381:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8095,
                  "src": "5375:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8092,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5375:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5306:87:35"
            },
            "src": "5290:104:35"
          },
          {
            "anonymous": false,
            "id": 8101,
            "name": "DestroyNote",
            "nameLocation": "5403:11:35",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8097,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "5431:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8101,
                  "src": "5415:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8096,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5415:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8099,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "noteHash",
                  "nameLocation": "5454:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8101,
                  "src": "5438:24:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8098,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5438:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5414:49:35"
            },
            "src": "5397:67:35"
          },
          {
            "canonicalName": "Swaps.UserTradeData",
            "id": 8118,
            "members": [
              {
                "constant": false,
                "id": 8103,
                "mutability": "mutable",
                "name": "tokenAddress",
                "nameLocation": "5503:12:35",
                "nodeType": "VariableDeclaration",
                "scope": 8118,
                "src": "5495:20:35",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 8102,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "5495:7:35",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8105,
                "mutability": "mutable",
                "name": "tokenValue",
                "nameLocation": "5529:10:35",
                "nodeType": "VariableDeclaration",
                "scope": 8118,
                "src": "5521:18:35",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 8104,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "5521:7:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8107,
                "mutability": "mutable",
                "name": "tokenId",
                "nameLocation": "5553:7:35",
                "nodeType": "VariableDeclaration",
                "scope": 8118,
                "src": "5545:15:35",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 8106,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "5545:7:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8110,
                "mutability": "mutable",
                "name": "tokenStandard",
                "nameLocation": "5575:13:35",
                "nodeType": "VariableDeclaration",
                "scope": 8118,
                "src": "5566:22:35",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Standard_$8036",
                  "typeString": "enum Swaps.Standard"
                },
                "typeName": {
                  "id": 8109,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 8108,
                    "name": "Standard",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 8036,
                    "src": "5566:8:35"
                  },
                  "referencedDeclaration": 8036,
                  "src": "5566:8:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Standard_$8036",
                    "typeString": "enum Swaps.Standard"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8112,
                "mutability": "mutable",
                "name": "accepted",
                "nameLocation": "5599:8:35",
                "nodeType": "VariableDeclaration",
                "scope": 8118,
                "src": "5594:13:35",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 8111,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "5594:4:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8114,
                "mutability": "mutable",
                "name": "approved",
                "nameLocation": "5618:8:35",
                "nodeType": "VariableDeclaration",
                "scope": 8118,
                "src": "5613:13:35",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 8113,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "5613:4:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8117,
                "mutability": "mutable",
                "name": "tradeType",
                "nameLocation": "5642:9:35",
                "nodeType": "VariableDeclaration",
                "scope": 8118,
                "src": "5632:19:35",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_TradeType_$8046",
                  "typeString": "enum Swaps.TradeType"
                },
                "typeName": {
                  "id": 8116,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 8115,
                    "name": "TradeType",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 8046,
                    "src": "5632:9:35"
                  },
                  "referencedDeclaration": 8046,
                  "src": "5632:9:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_TradeType_$8046",
                    "typeString": "enum Swaps.TradeType"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "UserTradeData",
            "nameLocation": "5475:13:35",
            "nodeType": "StructDefinition",
            "scope": 11766,
            "src": "5468:188:35",
            "visibility": "public"
          },
          {
            "canonicalName": "Swaps.TradeRequestInput",
            "id": 8153,
            "members": [
              {
                "constant": false,
                "id": 8120,
                "mutability": "mutable",
                "name": "holder1",
                "nameLocation": "6682:7:35",
                "nodeType": "VariableDeclaration",
                "scope": 8153,
                "src": "6674:15:35",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 8119,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "6674:7:35",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8122,
                "mutability": "mutable",
                "name": "holder2",
                "nameLocation": "6703:7:35",
                "nodeType": "VariableDeclaration",
                "scope": 8153,
                "src": "6695:15:35",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 8121,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "6695:7:35",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8124,
                "mutability": "mutable",
                "name": "executer",
                "nameLocation": "6724:8:35",
                "nodeType": "VariableDeclaration",
                "scope": 8153,
                "src": "6716:16:35",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 8123,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "6716:7:35",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8126,
                "mutability": "mutable",
                "name": "expirationDate",
                "nameLocation": "6808:14:35",
                "nodeType": "VariableDeclaration",
                "scope": 8153,
                "src": "6800:22:35",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 8125,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "6800:7:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8128,
                "mutability": "mutable",
                "name": "tokenAddress1",
                "nameLocation": "6836:13:35",
                "nodeType": "VariableDeclaration",
                "scope": 8153,
                "src": "6828:21:35",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 8127,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "6828:7:35",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8130,
                "mutability": "mutable",
                "name": "tokenValue1",
                "nameLocation": "6863:11:35",
                "nodeType": "VariableDeclaration",
                "scope": 8153,
                "src": "6855:19:35",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 8129,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "6855:7:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8132,
                "mutability": "mutable",
                "name": "tokenId1",
                "nameLocation": "6888:8:35",
                "nodeType": "VariableDeclaration",
                "scope": 8153,
                "src": "6880:16:35",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 8131,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "6880:7:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8135,
                "mutability": "mutable",
                "name": "tokenStandard1",
                "nameLocation": "6911:14:35",
                "nodeType": "VariableDeclaration",
                "scope": 8153,
                "src": "6902:23:35",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Standard_$8036",
                  "typeString": "enum Swaps.Standard"
                },
                "typeName": {
                  "id": 8134,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 8133,
                    "name": "Standard",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 8036,
                    "src": "6902:8:35"
                  },
                  "referencedDeclaration": 8036,
                  "src": "6902:8:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Standard_$8036",
                    "typeString": "enum Swaps.Standard"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8137,
                "mutability": "mutable",
                "name": "tokenAddress2",
                "nameLocation": "6939:13:35",
                "nodeType": "VariableDeclaration",
                "scope": 8153,
                "src": "6931:21:35",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 8136,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "6931:7:35",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8139,
                "mutability": "mutable",
                "name": "tokenValue2",
                "nameLocation": "7067:11:35",
                "nodeType": "VariableDeclaration",
                "scope": 8153,
                "src": "7059:19:35",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 8138,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "7059:7:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8141,
                "mutability": "mutable",
                "name": "tokenId2",
                "nameLocation": "7092:8:35",
                "nodeType": "VariableDeclaration",
                "scope": 8153,
                "src": "7084:16:35",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 8140,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "7084:7:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8144,
                "mutability": "mutable",
                "name": "tokenStandard2",
                "nameLocation": "7115:14:35",
                "nodeType": "VariableDeclaration",
                "scope": 8153,
                "src": "7106:23:35",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Standard_$8036",
                  "typeString": "enum Swaps.Standard"
                },
                "typeName": {
                  "id": 8143,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 8142,
                    "name": "Standard",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 8036,
                    "src": "7106:8:35"
                  },
                  "referencedDeclaration": 8036,
                  "src": "7106:8:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Standard_$8036",
                    "typeString": "enum Swaps.Standard"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8147,
                "mutability": "mutable",
                "name": "tradeType1",
                "nameLocation": "7145:10:35",
                "nodeType": "VariableDeclaration",
                "scope": 8153,
                "src": "7135:20:35",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_TradeType_$8046",
                  "typeString": "enum Swaps.TradeType"
                },
                "typeName": {
                  "id": 8146,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 8145,
                    "name": "TradeType",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 8046,
                    "src": "7135:9:35"
                  },
                  "referencedDeclaration": 8046,
                  "src": "7135:9:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_TradeType_$8046",
                    "typeString": "enum Swaps.TradeType"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8150,
                "mutability": "mutable",
                "name": "tradeType2",
                "nameLocation": "7171:10:35",
                "nodeType": "VariableDeclaration",
                "scope": 8153,
                "src": "7161:20:35",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_TradeType_$8046",
                  "typeString": "enum Swaps.TradeType"
                },
                "typeName": {
                  "id": 8149,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 8148,
                    "name": "TradeType",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 8046,
                    "src": "7161:9:35"
                  },
                  "referencedDeclaration": 8046,
                  "src": "7161:9:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_TradeType_$8046",
                    "typeString": "enum Swaps.TradeType"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8152,
                "mutability": "mutable",
                "name": "settlementDate",
                "nameLocation": "7195:14:35",
                "nodeType": "VariableDeclaration",
                "scope": 8153,
                "src": "7187:22:35",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 8151,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "7187:7:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TradeRequestInput",
            "nameLocation": "6650:17:35",
            "nodeType": "StructDefinition",
            "scope": 11766,
            "src": "6643:571:35",
            "visibility": "public"
          },
          {
            "canonicalName": "Swaps.Trade",
            "id": 8173,
            "members": [
              {
                "constant": false,
                "id": 8155,
                "mutability": "mutable",
                "name": "holder1",
                "nameLocation": "7245:7:35",
                "nodeType": "VariableDeclaration",
                "scope": 8173,
                "src": "7237:15:35",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 8154,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "7237:7:35",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8157,
                "mutability": "mutable",
                "name": "holder2",
                "nameLocation": "7266:7:35",
                "nodeType": "VariableDeclaration",
                "scope": 8173,
                "src": "7258:15:35",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 8156,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "7258:7:35",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8159,
                "mutability": "mutable",
                "name": "executer",
                "nameLocation": "7287:8:35",
                "nodeType": "VariableDeclaration",
                "scope": 8173,
                "src": "7279:16:35",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 8158,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "7279:7:35",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8161,
                "mutability": "mutable",
                "name": "expirationDate",
                "nameLocation": "7309:14:35",
                "nodeType": "VariableDeclaration",
                "scope": 8173,
                "src": "7301:22:35",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 8160,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "7301:7:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8163,
                "mutability": "mutable",
                "name": "settlementDate",
                "nameLocation": "7337:14:35",
                "nodeType": "VariableDeclaration",
                "scope": 8173,
                "src": "7329:22:35",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 8162,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "7329:7:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8166,
                "mutability": "mutable",
                "name": "userTradeData1",
                "nameLocation": "7371:14:35",
                "nodeType": "VariableDeclaration",
                "scope": 8173,
                "src": "7357:28:35",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_UserTradeData_$8118_storage_ptr",
                  "typeString": "struct Swaps.UserTradeData"
                },
                "typeName": {
                  "id": 8165,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 8164,
                    "name": "UserTradeData",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 8118,
                    "src": "7357:13:35"
                  },
                  "referencedDeclaration": 8118,
                  "src": "7357:13:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserTradeData_$8118_storage_ptr",
                    "typeString": "struct Swaps.UserTradeData"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8169,
                "mutability": "mutable",
                "name": "userTradeData2",
                "nameLocation": "7405:14:35",
                "nodeType": "VariableDeclaration",
                "scope": 8173,
                "src": "7391:28:35",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_UserTradeData_$8118_storage_ptr",
                  "typeString": "struct Swaps.UserTradeData"
                },
                "typeName": {
                  "id": 8168,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 8167,
                    "name": "UserTradeData",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 8118,
                    "src": "7391:13:35"
                  },
                  "referencedDeclaration": 8118,
                  "src": "7391:13:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserTradeData_$8118_storage_ptr",
                    "typeString": "struct Swaps.UserTradeData"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8172,
                "mutability": "mutable",
                "name": "state",
                "nameLocation": "7431:5:35",
                "nodeType": "VariableDeclaration",
                "scope": 8173,
                "src": "7425:11:35",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_State_$8042",
                  "typeString": "enum Swaps.State"
                },
                "typeName": {
                  "id": 8171,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 8170,
                    "name": "State",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 8042,
                    "src": "7425:5:35"
                  },
                  "referencedDeclaration": 8042,
                  "src": "7425:5:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$8042",
                    "typeString": "enum Swaps.State"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Trade",
            "nameLocation": "7225:5:35",
            "nodeType": "StructDefinition",
            "scope": 11766,
            "src": "7218:223:35",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 8175,
            "mutability": "mutable",
            "name": "_index",
            "nameLocation": "7503:6:35",
            "nodeType": "VariableDeclaration",
            "scope": 11766,
            "src": "7486:23:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8174,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "7486:7:35",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 8180,
            "mutability": "mutable",
            "name": "_trades",
            "nameLocation": "7592:7:35",
            "nodeType": "VariableDeclaration",
            "scope": 11766,
            "src": "7557:42:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$8173_storage_$",
              "typeString": "mapping(uint256 => struct Swaps.Trade)"
            },
            "typeName": {
              "id": 8179,
              "keyType": {
                "id": 8176,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "7565:7:35",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "7557:25:35",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$8173_storage_$",
                "typeString": "mapping(uint256 => struct Swaps.Trade)"
              },
              "valueType": {
                "id": 8178,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 8177,
                  "name": "Trade",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8173,
                  "src": "7576:5:35"
                },
                "referencedDeclaration": 8173,
                "src": "7576:5:35",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                  "typeString": "struct Swaps.Trade"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 8185,
            "mutability": "mutable",
            "name": "_priceOracles",
            "nameLocation": "7685:13:35",
            "nodeType": "VariableDeclaration",
            "scope": 11766,
            "src": "7646:52:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(address => address[])"
            },
            "typeName": {
              "id": 8184,
              "keyType": {
                "id": 8181,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "7654:7:35",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "7646:29:35",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(address => address[])"
              },
              "valueType": {
                "baseType": {
                  "id": 8182,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "7665:7:35",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 8183,
                "nodeType": "ArrayTypeName",
                "src": "7665:9:35",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 8191,
            "mutability": "mutable",
            "name": "_isPriceOracle",
            "nameLocation": "7817:14:35",
            "nodeType": "VariableDeclaration",
            "scope": 11766,
            "src": "7763:68:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 8190,
              "keyType": {
                "id": 8186,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "7771:7:35",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "7763:44:35",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 8189,
                "keyType": {
                  "id": 8187,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "7790:7:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "7782:24:35",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 8188,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "7801:4:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 8197,
            "mutability": "mutable",
            "name": "_priceOwnership",
            "nameLocation": "7945:15:35",
            "nodeType": "VariableDeclaration",
            "scope": 11766,
            "src": "7891:69:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 8196,
              "keyType": {
                "id": 8192,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "7899:7:35",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "7891:44:35",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 8195,
                "keyType": {
                  "id": 8193,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "7918:7:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "7910:24:35",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 8194,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "7929:4:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 8207,
            "mutability": "mutable",
            "name": "_tokenUnitPricesByPartition",
            "nameLocation": "8131:27:35",
            "nodeType": "VariableDeclaration",
            "scope": 11766,
            "src": "8030:128:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$_$",
              "typeString": "mapping(address => mapping(address => mapping(bytes32 => mapping(bytes32 => uint256))))"
            },
            "typeName": {
              "id": 8206,
              "keyType": {
                "id": 8198,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "8038:7:35",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "8030:91:35",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$_$",
                "typeString": "mapping(address => mapping(address => mapping(bytes32 => mapping(bytes32 => uint256))))"
              },
              "valueType": {
                "id": 8205,
                "keyType": {
                  "id": 8199,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "8058:7:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "8049:71:35",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$",
                  "typeString": "mapping(address => mapping(bytes32 => mapping(bytes32 => uint256)))"
                },
                "valueType": {
                  "id": 8204,
                  "keyType": {
                    "id": 8200,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8078:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "8069:50:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                    "typeString": "mapping(bytes32 => mapping(bytes32 => uint256))"
                  },
                  "valueType": {
                    "id": 8203,
                    "keyType": {
                      "id": 8201,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "8099:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "8090:28:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                      "typeString": "mapping(bytes32 => uint256)"
                    },
                    "valueType": {
                      "id": 8202,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8110:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 8209,
            "mutability": "mutable",
            "name": "_ownedContract",
            "nameLocation": "8273:14:35",
            "nodeType": "VariableDeclaration",
            "scope": 11766,
            "src": "8259:28:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 8208,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "8259:4:35",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 8212,
            "mutability": "mutable",
            "name": "_tradeExecuters",
            "nameLocation": "8343:15:35",
            "nodeType": "VariableDeclaration",
            "scope": 11766,
            "src": "8324:34:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 8210,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "8324:7:35",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 8211,
              "nodeType": "ArrayTypeName",
              "src": "8324:9:35",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 8216,
            "mutability": "mutable",
            "name": "_isTradeExecuter",
            "nameLocation": "8450:16:35",
            "nodeType": "VariableDeclaration",
            "scope": 11766,
            "src": "8416:50:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 8215,
              "keyType": {
                "id": 8213,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "8424:7:35",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "8416:24:35",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 8214,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "8435:4:35",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 8221,
            "mutability": "mutable",
            "name": "_tokenControllers",
            "nameLocation": "8556:17:35",
            "nodeType": "VariableDeclaration",
            "scope": 11766,
            "src": "8517:56:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(address => address[])"
            },
            "typeName": {
              "id": 8220,
              "keyType": {
                "id": 8217,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "8525:7:35",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "8517:29:35",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(address => address[])"
              },
              "valueType": {
                "baseType": {
                  "id": 8218,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "8536:7:35",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 8219,
                "nodeType": "ArrayTypeName",
                "src": "8536:9:35",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 8227,
            "mutability": "mutable",
            "name": "_isTokenController",
            "nameLocation": "8696:18:35",
            "nodeType": "VariableDeclaration",
            "scope": 11766,
            "src": "8642:72:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 8226,
              "keyType": {
                "id": 8222,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "8650:7:35",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "8642:44:35",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 8225,
                "keyType": {
                  "id": 8223,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "8669:7:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "8661:24:35",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 8224,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "8680:4:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 8231,
            "mutability": "mutable",
            "name": "_variablePriceStartDate",
            "nameLocation": "8810:23:35",
            "nodeType": "VariableDeclaration",
            "scope": 11766,
            "src": "8773:60:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 8230,
              "keyType": {
                "id": 8228,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "8781:7:35",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "8773:27:35",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 8229,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "8792:7:35",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8256,
              "nodeType": "Block",
              "src": "8963:179:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 8251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 8244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 8237,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "8984:3:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 8238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8984:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 8240,
                                    "name": "tokenAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8234,
                                    "src": "9006:12:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 8239,
                                  "name": "Ownable",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 103,
                                  "src": "8998:7:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Ownable_$103_$",
                                    "typeString": "type(contract Ownable)"
                                  }
                                },
                                "id": 8241,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8998:21:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Ownable_$103",
                                  "typeString": "contract Ownable"
                                }
                              },
                              "id": 8242,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "owner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 32,
                              "src": "8998:27:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 8243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8998:29:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8984:43:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 8245,
                              "name": "_isTokenController",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8227,
                              "src": "9037:18:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                "typeString": "mapping(address => mapping(address => bool))"
                              }
                            },
                            "id": 8247,
                            "indexExpression": {
                              "id": 8246,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8234,
                              "src": "9056:12:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9037:32:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 8250,
                          "indexExpression": {
                            "expression": {
                              "id": 8248,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "9070:3:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 8249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9070:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9037:44:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8984:97:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656e646572206973206e6f74206120746f6b656e20636f6e74726f6c6c65722e",
                        "id": 8252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9089:35:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a20f967af876332f8e5cf464602ff6aaa46bca373759b506dfded8592e2d84c8",
                          "typeString": "literal_string \"Sender is not a token controller.\""
                        },
                        "value": "Sender is not a token controller."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a20f967af876332f8e5cf464602ff6aaa46bca373759b506dfded8592e2d84c8",
                          "typeString": "literal_string \"Sender is not a token controller.\""
                        }
                      ],
                      "id": 8236,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8969:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8969:161:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8254,
                  "nodeType": "ExpressionStatement",
                  "src": "8969:161:35"
                },
                {
                  "id": 8255,
                  "nodeType": "PlaceholderStatement",
                  "src": "9136:1:35"
                }
              ]
            },
            "documentation": {
              "id": 8232,
              "nodeType": "StructuredDocumentation",
              "src": "8838:71:35",
              "text": " @dev Modifier to verify if sender is a token controller."
            },
            "id": 8257,
            "name": "onlyTokenController",
            "nameLocation": "8921:19:35",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 8235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8234,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "8949:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8257,
                  "src": "8941:20:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8233,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8941:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8940:22:35"
            },
            "src": "8912:230:35",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8272,
              "nodeType": "Block",
              "src": "9263:103:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 8264,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8260,
                            "src": "9295:12:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 8265,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "9309:3:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 8266,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9309:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8263,
                          "name": "_checkPriceOracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11234,
                          "src": "9277:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view returns (bool)"
                          }
                        },
                        "id": 8267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9277:43:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656e646572206973206e6f742061207072696365206f7261636c652e",
                        "id": 8268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9322:31:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cbcf36d182174f136d2e0dc28ab771dc911d5712b5b9ea7fb39228ecd0c9d185",
                          "typeString": "literal_string \"Sender is not a price oracle.\""
                        },
                        "value": "Sender is not a price oracle."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cbcf36d182174f136d2e0dc28ab771dc911d5712b5b9ea7fb39228ecd0c9d185",
                          "typeString": "literal_string \"Sender is not a price oracle.\""
                        }
                      ],
                      "id": 8262,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9269:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9269:85:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8270,
                  "nodeType": "ExpressionStatement",
                  "src": "9269:85:35"
                },
                {
                  "id": 8271,
                  "nodeType": "PlaceholderStatement",
                  "src": "9360:1:35"
                }
              ]
            },
            "documentation": {
              "id": 8258,
              "nodeType": "StructuredDocumentation",
              "src": "9146:67:35",
              "text": " @dev Modifier to verify if sender is a price oracle."
            },
            "id": 8273,
            "name": "onlyPriceOracle",
            "nameLocation": "9225:15:35",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 8261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8260,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "9249:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8273,
                  "src": "9241:20:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8259,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9241:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9240:22:35"
            },
            "src": "9216:150:35",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8328,
              "nodeType": "Block",
              "src": "9522:422:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8282,
                        "name": "DELIVERY_VS_PAYMENT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8005,
                        "src": "9561:19:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 8279,
                        "name": "ERC1820Implementer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5386,
                        "src": "9528:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC1820Implementer_$5386_$",
                          "typeString": "type(contract ERC1820Implementer)"
                        }
                      },
                      "id": 8281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5385,
                      "src": "9528:32:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 8283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9528:53:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8284,
                  "nodeType": "ExpressionStatement",
                  "src": "9528:53:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8288,
                        "name": "ERC1400_TOKENS_RECIPIENT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8008,
                        "src": "9620:24:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 8285,
                        "name": "ERC1820Implementer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5386,
                        "src": "9587:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC1820Implementer_$5386_$",
                          "typeString": "type(contract ERC1820Implementer)"
                        }
                      },
                      "id": 8287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5385,
                      "src": "9587:32:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 8289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9587:58:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8290,
                  "nodeType": "ExpressionStatement",
                  "src": "9587:58:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8292,
                        "name": "ERC1400_TOKENS_RECIPIENT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8008,
                        "src": "9678:24:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 8295,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "9712:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Swaps_$11766",
                              "typeString": "contract Swaps"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Swaps_$11766",
                              "typeString": "contract Swaps"
                            }
                          ],
                          "id": 8294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9704:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8293,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9704:7:35",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 8296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9704:13:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8291,
                      "name": "setInterfaceImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7827,
                      "src": "9651:26:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 8297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9651:67:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8298,
                  "nodeType": "ExpressionStatement",
                  "src": "9651:67:35"
                },
                {
                  "expression": {
                    "id": 8301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8299,
                      "name": "_ownedContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8209,
                      "src": "9725:14:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8300,
                      "name": "owned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8276,
                      "src": "9742:5:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "9725:22:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8302,
                  "nodeType": "ExpressionStatement",
                  "src": "9725:22:35"
                },
                {
                  "condition": {
                    "id": 8303,
                    "name": "_ownedContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8209,
                    "src": "9757:14:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8327,
                  "nodeType": "IfStatement",
                  "src": "9754:186:35",
                  "trueBody": {
                    "id": 8326,
                    "nodeType": "Block",
                    "src": "9773:167:35",
                    "statements": [
                      {
                        "assignments": [
                          8308
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8308,
                            "mutability": "mutable",
                            "name": "initialTradeExecuters",
                            "nameLocation": "9798:21:35",
                            "nodeType": "VariableDeclaration",
                            "scope": 8326,
                            "src": "9781:38:35",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 8306,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9781:7:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 8307,
                              "nodeType": "ArrayTypeName",
                              "src": "9781:9:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 8314,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 8312,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9837:1:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 8311,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "9822:13:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (address[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 8309,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9826:7:35",
                                "stateMutability": "nonpayable",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 8310,
                              "nodeType": "ArrayTypeName",
                              "src": "9826:9:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            }
                          },
                          "id": 8313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9822:17:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9781:58:35"
                      },
                      {
                        "expression": {
                          "id": 8320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 8315,
                              "name": "initialTradeExecuters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8308,
                              "src": "9847:21:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 8317,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 8316,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9869:1:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9847:24:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 8318,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "9874:3:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 8319,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9874:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9847:37:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 8321,
                        "nodeType": "ExpressionStatement",
                        "src": "9847:37:35"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8323,
                              "name": "initialTradeExecuters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8308,
                              "src": "9911:21:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            ],
                            "id": 8322,
                            "name": "_setTradeExecuters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11042,
                            "src": "9892:18:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (address[] memory)"
                            }
                          },
                          "id": 8324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9892:41:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8325,
                        "nodeType": "ExpressionStatement",
                        "src": "9892:41:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 8274,
              "nodeType": "StructuredDocumentation",
              "src": "9370:125:35",
              "text": " [Swaps CONSTRUCTOR]\n @dev Initialize Swaps + register\n the contract implementation in ERC1820Registry."
            },
            "id": 8329,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8277,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8276,
                  "mutability": "mutable",
                  "name": "owned",
                  "nameLocation": "9515:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8329,
                  "src": "9510:10:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8275,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9510:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9509:12:35"
            },
            "returnParameters": {
              "id": 8278,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9522:0:35"
            },
            "scope": 11766,
            "src": "9498:446:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5314
            ],
            "body": {
              "id": 8358,
              "nodeType": "Block",
              "src": "10516:50:35",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "id": 8353,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8344,
                            "src": "10541:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          {
                            "id": 8354,
                            "name": "operatorData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8346,
                            "src": "10547:12:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          ],
                          "id": 8352,
                          "name": "_canReceive",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10892,
                          "src": "10529:11:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (bytes memory,bytes memory) pure returns (bool)"
                          }
                        },
                        "id": 8355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10529:31:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 8356,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "10528:33:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 8351,
                  "id": 8357,
                  "nodeType": "Return",
                  "src": "10522:39:35"
                }
              ]
            },
            "documentation": {
              "id": 8330,
              "nodeType": "StructuredDocumentation",
              "src": "9948:399:35",
              "text": " [ERC1400TokensRecipient INTERFACE (1/2)]\n @dev Indicate whether or not the Swaps contract can receive the tokens or not. [USED FOR ERC1400 TOKENS ONLY]\n @param data Information attached to the token transfer.\n @param operatorData Information attached to the Swaps transfer, by the operator.\n @return 'true' if the Swaps contract can receive the tokens, 'false' if not."
            },
            "functionSelector": "f55886df",
            "id": 8359,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "canReceive",
            "nameLocation": "10359:10:35",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8348,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10488:8:35"
            },
            "parameters": {
              "id": 8347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8332,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8359,
                  "src": "10370:14:35",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8331,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10370:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8334,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8359,
                  "src": "10386:7:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8333,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10386:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8336,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8359,
                  "src": "10395:7:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8335,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10395:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8338,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8359,
                  "src": "10404:7:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8337,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10404:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8340,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8359,
                  "src": "10413:7:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8339,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10413:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8342,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8359,
                  "src": "10422:4:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8341,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10422:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8344,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "10444:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8359,
                  "src": "10428:20:35",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8343,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10428:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8346,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "10465:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8359,
                  "src": "10450:27:35",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8345,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10450:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10369:109:35"
            },
            "returnParameters": {
              "id": 8351,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8350,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8359,
                  "src": "10510:4:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8349,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10510:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10509:6:35"
            },
            "scope": 11766,
            "src": "10350:216:35",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5333
            ],
            "body": {
              "id": 8545,
              "nodeType": "Block",
              "src": "11211:2122:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 8382,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "11239:3:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 8383,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "11239:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "45524331343030546f6b656e",
                              "id": 8384,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11251:14:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f9924936296af2a5ccae1dd57fa11f492d390f57f49220c78a81bed0241f0d1c",
                                "typeString": "literal_string \"ERC1400Token\""
                              },
                              "value": "ERC1400Token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f9924936296af2a5ccae1dd57fa11f492d390f57f49220c78a81bed0241f0d1c",
                                "typeString": "literal_string \"ERC1400Token\""
                              }
                            ],
                            "id": 8381,
                            "name": "interfaceAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7852,
                            "src": "11225:13:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_string_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (address,string memory) view returns (address)"
                            }
                          },
                          "id": 8385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11225:41:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 8386,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "11270:3:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "11270:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11225:55:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "3535",
                        "id": 8389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11282:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6590fa52fa76f967656340b874bc9ca09733c2fddea9886210ebcbbceee04b35",
                          "typeString": "literal_string \"55\""
                        },
                        "value": "55"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6590fa52fa76f967656340b874bc9ca09733c2fddea9886210ebcbbceee04b35",
                          "typeString": "literal_string \"55\""
                        }
                      ],
                      "id": 8380,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11217:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11217:70:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8391,
                  "nodeType": "ExpressionStatement",
                  "src": "11217:70:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8393,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8370,
                          "src": "11334:2:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 8396,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "11348:4:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Swaps_$11766",
                                "typeString": "contract Swaps"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Swaps_$11766",
                                "typeString": "contract Swaps"
                              }
                            ],
                            "id": 8395,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11340:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 8394,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11340:7:35",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 8397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11340:13:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11334:19:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "3530",
                        "id": 8399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11355:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_215d56ac8bbcf4ec574772ebea743ba30ac9d1c5e1b1ff899e5de1045f5df803",
                          "typeString": "literal_string \"50\""
                        },
                        "value": "50"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_215d56ac8bbcf4ec574772ebea743ba30ac9d1c5e1b1ff899e5de1045f5df803",
                          "typeString": "literal_string \"50\""
                        }
                      ],
                      "id": 8392,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11326:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11326:34:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8401,
                  "nodeType": "ExpressionStatement",
                  "src": "11326:34:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 8404,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8374,
                            "src": "11411:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "id": 8405,
                            "name": "operatorData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8376,
                            "src": "11417:12:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          ],
                          "id": 8403,
                          "name": "_canReceive",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10892,
                          "src": "11399:11:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (bytes memory,bytes memory) pure returns (bool)"
                          }
                        },
                        "id": 8406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11399:31:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "3537",
                        "id": 8407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11432:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e921da22f871c25c63f06c1365385cbb26397f64f79055cdbab32187a9377d16",
                          "typeString": "literal_string \"57\""
                        },
                        "value": "57"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e921da22f871c25c63f06c1365385cbb26397f64f79055cdbab32187a9377d16",
                          "typeString": "literal_string \"57\""
                        }
                      ],
                      "id": 8402,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11391:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11391:46:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8409,
                  "nodeType": "ExpressionStatement",
                  "src": "11391:46:35"
                },
                {
                  "assignments": [
                    8411
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8411,
                      "mutability": "mutable",
                      "name": "flag",
                      "nameLocation": "11477:4:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8545,
                      "src": "11469:12:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 8410,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "11469:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8415,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 8413,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8374,
                        "src": "11498:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 8412,
                      "name": "_getTradeFlag",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10902,
                      "src": "11484:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 8414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11484:19:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11469:34:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 8418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8416,
                      "name": "flag",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8411,
                      "src": "11512:4:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 8417,
                      "name": "TRADE_PROPOSAL_FLAG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8021,
                      "src": "11520:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "11512:27:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "id": 8468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 8466,
                        "name": "flag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8411,
                        "src": "12359:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 8467,
                        "name": "TRADE_ACCEPTANCE_FLAG",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8024,
                        "src": "12367:21:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "src": "12359:29:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 8543,
                    "nodeType": "IfStatement",
                    "src": "12355:974:35",
                    "trueBody": {
                      "id": 8542,
                      "nodeType": "Block",
                      "src": "12390:939:35",
                      "statements": [
                        {
                          "assignments": [
                            8470
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 8470,
                              "mutability": "mutable",
                              "name": "index",
                              "nameLocation": "12406:5:35",
                              "nodeType": "VariableDeclaration",
                              "scope": 8542,
                              "src": "12398:13:35",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 8469,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "12398:7:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 8471,
                          "nodeType": "VariableDeclarationStatement",
                          "src": "12398:13:35"
                        },
                        {
                          "assignments": [
                            8473
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 8473,
                              "mutability": "mutable",
                              "name": "preimage",
                              "nameLocation": "12427:8:35",
                              "nodeType": "VariableDeclaration",
                              "scope": 8542,
                              "src": "12419:16:35",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "typeName": {
                                "id": 8472,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "12419:7:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 8478,
                          "initialValue": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 8476,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12446:1:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 8475,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12438:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes32_$",
                                "typeString": "type(bytes32)"
                              },
                              "typeName": {
                                "id": 8474,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "12438:7:35",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 8477,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12438:10:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "12419:29:35"
                        },
                        {
                          "AST": {
                            "nodeType": "YulBlock",
                            "src": "12465:46:35",
                            "statements": [
                              {
                                "nodeType": "YulAssignment",
                                "src": "12475:28:35",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "data",
                                          "nodeType": "YulIdentifier",
                                          "src": "12493:4:35"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "12499:2:35",
                                          "type": "",
                                          "value": "64"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "12489:3:35"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12489:13:35"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "12483:5:35"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "12483:20:35"
                                },
                                "variableNames": [
                                  {
                                    "name": "index",
                                    "nodeType": "YulIdentifier",
                                    "src": "12475:5:35"
                                  }
                                ]
                              }
                            ]
                          },
                          "evmVersion": "london",
                          "externalReferences": [
                            {
                              "declaration": 8374,
                              "isOffset": false,
                              "isSlot": false,
                              "src": "12493:4:35",
                              "valueSize": 1
                            },
                            {
                              "declaration": 8470,
                              "isOffset": false,
                              "isSlot": false,
                              "src": "12475:5:35",
                              "valueSize": 1
                            }
                          ],
                          "id": 8479,
                          "nodeType": "InlineAssembly",
                          "src": "12456:55:35"
                        },
                        {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 8483,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 8480,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8374,
                                "src": "12522:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 8481,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "12522:11:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "3936",
                              "id": 8482,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12537:2:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_96_by_1",
                                "typeString": "int_const 96"
                              },
                              "value": "96"
                            },
                            "src": "12522:17:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 8486,
                          "nodeType": "IfStatement",
                          "src": "12518:284:35",
                          "trueBody": {
                            "id": 8485,
                            "nodeType": "Block",
                            "src": "12541:261:35",
                            "statements": [
                              {
                                "AST": {
                                  "nodeType": "YulBlock",
                                  "src": "12741:53:35",
                                  "statements": [
                                    {
                                      "nodeType": "YulAssignment",
                                      "src": "12753:31:35",
                                      "value": {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "data",
                                                "nodeType": "YulIdentifier",
                                                "src": "12774:4:35"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "12780:2:35",
                                                "type": "",
                                                "value": "96"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "12770:3:35"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "12770:13:35"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mload",
                                          "nodeType": "YulIdentifier",
                                          "src": "12764:5:35"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "12764:20:35"
                                      },
                                      "variableNames": [
                                        {
                                          "name": "preimage",
                                          "nodeType": "YulIdentifier",
                                          "src": "12753:8:35"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "evmVersion": "london",
                                "externalReferences": [
                                  {
                                    "declaration": 8374,
                                    "isOffset": false,
                                    "isSlot": false,
                                    "src": "12774:4:35",
                                    "valueSize": 1
                                  },
                                  {
                                    "declaration": 8473,
                                    "isOffset": false,
                                    "isSlot": false,
                                    "src": "12753:8:35",
                                    "valueSize": 1
                                  }
                                ],
                                "id": 8484,
                                "nodeType": "InlineAssembly",
                                "src": "12732:62:35"
                              }
                            ]
                          }
                        },
                        {
                          "assignments": [
                            8489
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 8489,
                              "mutability": "mutable",
                              "name": "trade",
                              "nameLocation": "12823:5:35",
                              "nodeType": "VariableDeclaration",
                              "scope": 8542,
                              "src": "12809:19:35",
                              "stateVariable": false,
                              "storageLocation": "storage",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                "typeString": "struct Swaps.Trade"
                              },
                              "typeName": {
                                "id": 8488,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 8487,
                                  "name": "Trade",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 8173,
                                  "src": "12809:5:35"
                                },
                                "referencedDeclaration": 8173,
                                "src": "12809:5:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                  "typeString": "struct Swaps.Trade"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 8493,
                          "initialValue": {
                            "baseExpression": {
                              "id": 8490,
                              "name": "_trades",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8180,
                              "src": "12831:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$8173_storage_$",
                                "typeString": "mapping(uint256 => struct Swaps.Trade storage ref)"
                              }
                            },
                            "id": 8492,
                            "indexExpression": {
                              "id": 8491,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8470,
                              "src": "12839:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12831:14:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$8173_storage",
                              "typeString": "struct Swaps.Trade storage ref"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "12809:36:35"
                        },
                        {
                          "assignments": [
                            8496
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 8496,
                              "mutability": "mutable",
                              "name": "selectedUserTradeData",
                              "nameLocation": "12875:21:35",
                              "nodeType": "VariableDeclaration",
                              "scope": 8542,
                              "src": "12854:42:35",
                              "stateVariable": false,
                              "storageLocation": "memory",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                                "typeString": "struct Swaps.UserTradeData"
                              },
                              "typeName": {
                                "id": 8495,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 8494,
                                  "name": "UserTradeData",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 8118,
                                  "src": "12854:13:35"
                                },
                                "referencedDeclaration": 8118,
                                "src": "12854:13:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserTradeData_$8118_storage_ptr",
                                  "typeString": "struct Swaps.UserTradeData"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 8507,
                          "initialValue": {
                            "condition": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 8500,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 8497,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8368,
                                    "src": "12900:4:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 8498,
                                      "name": "trade",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8489,
                                      "src": "12908:5:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                        "typeString": "struct Swaps.Trade storage pointer"
                                      }
                                    },
                                    "id": 8499,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "holder1",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 8155,
                                    "src": "12908:13:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "12900:21:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "id": 8501,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "12899:23:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseExpression": {
                              "expression": {
                                "id": 8504,
                                "name": "trade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8489,
                                "src": "12948:5:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                  "typeString": "struct Swaps.Trade storage pointer"
                                }
                              },
                              "id": 8505,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "userTradeData2",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8169,
                              "src": "12948:20:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                                "typeString": "struct Swaps.UserTradeData storage ref"
                              }
                            },
                            "id": 8506,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "Conditional",
                            "src": "12899:69:35",
                            "trueExpression": {
                              "expression": {
                                "id": 8502,
                                "name": "trade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8489,
                                "src": "12925:5:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                  "typeString": "struct Swaps.Trade storage pointer"
                                }
                              },
                              "id": 8503,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "userTradeData1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8166,
                              "src": "12925:20:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                                "typeString": "struct Swaps.UserTradeData storage ref"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserTradeData_$8118_storage_ptr",
                              "typeString": "struct Swaps.UserTradeData storage pointer"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "12854:114:35"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 8513,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 8509,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "12984:3:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 8510,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "12984:10:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 8511,
                                    "name": "selectedUserTradeData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8496,
                                    "src": "12998:21:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                                      "typeString": "struct Swaps.UserTradeData memory"
                                    }
                                  },
                                  "id": 8512,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tokenAddress",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8103,
                                  "src": "12998:34:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "12984:48:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "57726f6e6720746f6b656e2073656e74",
                                "id": 8514,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13034:18:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_8ee647a01aa5f1bda643aa6834c1b9128a69a3f433a02ac84adf7f3b27e1e0ee",
                                  "typeString": "literal_string \"Wrong token sent\""
                                },
                                "value": "Wrong token sent"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_8ee647a01aa5f1bda643aa6834c1b9128a69a3f433a02ac84adf7f3b27e1e0ee",
                                  "typeString": "literal_string \"Wrong token sent\""
                                }
                              ],
                              "id": 8508,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "src": "12976:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 8515,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12976:77:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 8516,
                          "nodeType": "ExpressionStatement",
                          "src": "12976:77:35"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "id": 8521,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 8518,
                                  "name": "partition",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8364,
                                  "src": "13069:9:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 8519,
                                    "name": "selectedUserTradeData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8496,
                                    "src": "13082:21:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                                      "typeString": "struct Swaps.UserTradeData memory"
                                    }
                                  },
                                  "id": 8520,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tokenId",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8107,
                                  "src": "13082:29:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "13069:42:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "546f6b656e73206f66207468652077726f6e6720706172746974696f6e2073656e74",
                                "id": 8522,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13113:36:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_d2707e93029f7cfd1559052cc8a7011948874a8a768af73b9e30b493e73abe98",
                                  "typeString": "literal_string \"Tokens of the wrong partition sent\""
                                },
                                "value": "Tokens of the wrong partition sent"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_d2707e93029f7cfd1559052cc8a7011948874a8a768af73b9e30b493e73abe98",
                                  "typeString": "literal_string \"Tokens of the wrong partition sent\""
                                }
                              ],
                              "id": 8517,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "src": "13061:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 8523,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13061:89:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 8524,
                          "nodeType": "ExpressionStatement",
                          "src": "13061:89:35"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_Standard_$8036",
                                  "typeString": "enum Swaps.Standard"
                                },
                                "id": 8530,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 8526,
                                    "name": "Standard",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8036,
                                    "src": "13166:8:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_Standard_$8036_$",
                                      "typeString": "type(enum Swaps.Standard)"
                                    }
                                  },
                                  "id": 8527,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "ERC1400",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8035,
                                  "src": "13166:16:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Standard_$8036",
                                    "typeString": "enum Swaps.Standard"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 8528,
                                    "name": "selectedUserTradeData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8496,
                                    "src": "13186:21:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                                      "typeString": "struct Swaps.UserTradeData memory"
                                    }
                                  },
                                  "id": 8529,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tokenStandard",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8110,
                                  "src": "13186:35:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Standard_$8036",
                                    "typeString": "enum Swaps.Standard"
                                  }
                                },
                                "src": "13166:55:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "546f6b656e73206f66207468652077726f6e67207374616e646172642073656e74",
                                "id": 8531,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13223:35:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_0aed4c7d60c28efa628f3b3834329787d344f5899e54ae045c324776c24530d2",
                                  "typeString": "literal_string \"Tokens of the wrong standard sent\""
                                },
                                "value": "Tokens of the wrong standard sent"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_0aed4c7d60c28efa628f3b3834329787d344f5899e54ae045c324776c24530d2",
                                  "typeString": "literal_string \"Tokens of the wrong standard sent\""
                                }
                              ],
                              "id": 8525,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "src": "13158:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 8532,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13158:101:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 8533,
                          "nodeType": "ExpressionStatement",
                          "src": "13158:101:35"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 8535,
                                "name": "index",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8470,
                                "src": "13281:5:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 8536,
                                "name": "from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8368,
                                "src": "13288:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 8537,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13294:1:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "id": 8538,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8372,
                                "src": "13297:5:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 8539,
                                "name": "preimage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8473,
                                "src": "13304:8:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 8534,
                              "name": "_acceptTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9185,
                              "src": "13268:12:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                                "typeString": "function (uint256,address,uint256,uint256,bytes32)"
                              }
                            },
                            "id": 8540,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13268:45:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 8541,
                          "nodeType": "ExpressionStatement",
                          "src": "13268:45:35"
                        }
                      ]
                    }
                  },
                  "id": 8544,
                  "nodeType": "IfStatement",
                  "src": "11509:1820:35",
                  "trueBody": {
                    "id": 8465,
                    "nodeType": "Block",
                    "src": "11541:808:35",
                    "statements": [
                      {
                        "assignments": [
                          8420
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8420,
                            "mutability": "mutable",
                            "name": "recipient",
                            "nameLocation": "11557:9:35",
                            "nodeType": "VariableDeclaration",
                            "scope": 8465,
                            "src": "11549:17:35",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 8419,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11549:7:35",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 8421,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11549:17:35"
                      },
                      {
                        "assignments": [
                          8423
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8423,
                            "mutability": "mutable",
                            "name": "executor",
                            "nameLocation": "11582:8:35",
                            "nodeType": "VariableDeclaration",
                            "scope": 8465,
                            "src": "11574:16:35",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 8422,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11574:7:35",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 8424,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11574:16:35"
                      },
                      {
                        "assignments": [
                          8426
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8426,
                            "mutability": "mutable",
                            "name": "expirationDate",
                            "nameLocation": "11606:14:35",
                            "nodeType": "VariableDeclaration",
                            "scope": 8465,
                            "src": "11598:22:35",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 8425,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11598:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 8427,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11598:22:35"
                      },
                      {
                        "assignments": [
                          8429
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8429,
                            "mutability": "mutable",
                            "name": "settlementDate",
                            "nameLocation": "11636:14:35",
                            "nodeType": "VariableDeclaration",
                            "scope": 8465,
                            "src": "11628:22:35",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 8428,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11628:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 8430,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11628:22:35"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "11667:184:35",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11677:32:35",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nodeType": "YulIdentifier",
                                        "src": "11699:4:35"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11705:2:35",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11695:3:35"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11695:13:35"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "11689:5:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11689:20:35"
                              },
                              "variableNames": [
                                {
                                  "name": "recipient",
                                  "nodeType": "YulIdentifier",
                                  "src": "11677:9:35"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11718:31:35",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nodeType": "YulIdentifier",
                                        "src": "11739:4:35"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11745:2:35",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11735:3:35"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11735:13:35"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "11729:5:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11729:20:35"
                              },
                              "variableNames": [
                                {
                                  "name": "executor",
                                  "nodeType": "YulIdentifier",
                                  "src": "11718:8:35"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11758:38:35",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nodeType": "YulIdentifier",
                                        "src": "11785:4:35"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11791:3:35",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11781:3:35"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11781:14:35"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "11775:5:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11775:21:35"
                              },
                              "variableNames": [
                                {
                                  "name": "expirationDate",
                                  "nodeType": "YulIdentifier",
                                  "src": "11758:14:35"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11805:38:35",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nodeType": "YulIdentifier",
                                        "src": "11832:4:35"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11838:3:35",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11828:3:35"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11828:14:35"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "11822:5:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11822:21:35"
                              },
                              "variableNames": [
                                {
                                  "name": "settlementDate",
                                  "nodeType": "YulIdentifier",
                                  "src": "11805:14:35"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 8374,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "11699:4:35",
                            "valueSize": 1
                          },
                          {
                            "declaration": 8374,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "11739:4:35",
                            "valueSize": 1
                          },
                          {
                            "declaration": 8374,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "11785:4:35",
                            "valueSize": 1
                          },
                          {
                            "declaration": 8374,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "11832:4:35",
                            "valueSize": 1
                          },
                          {
                            "declaration": 8423,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "11718:8:35",
                            "valueSize": 1
                          },
                          {
                            "declaration": 8426,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "11758:14:35",
                            "valueSize": 1
                          },
                          {
                            "declaration": 8420,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "11677:9:35",
                            "valueSize": 1
                          },
                          {
                            "declaration": 8429,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "11805:14:35",
                            "valueSize": 1
                          }
                        ],
                        "id": 8431,
                        "nodeType": "InlineAssembly",
                        "src": "11658:193:35"
                      },
                      {
                        "assignments": [
                          8434
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8434,
                            "mutability": "mutable",
                            "name": "_tradeData1",
                            "nameLocation": "11997:11:35",
                            "nodeType": "VariableDeclaration",
                            "scope": 8465,
                            "src": "11976:32:35",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                              "typeString": "struct Swaps.UserTradeData"
                            },
                            "typeName": {
                              "id": 8433,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 8432,
                                "name": "UserTradeData",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 8118,
                                "src": "11976:13:35"
                              },
                              "referencedDeclaration": 8118,
                              "src": "11976:13:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserTradeData_$8118_storage_ptr",
                                "typeString": "struct Swaps.UserTradeData"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 8447,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 8436,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "12025:3:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 8437,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "12025:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8438,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8372,
                              "src": "12037:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 8439,
                              "name": "partition",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8364,
                              "src": "12044:9:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 8440,
                                "name": "Standard",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8036,
                                "src": "12055:8:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Standard_$8036_$",
                                  "typeString": "type(enum Swaps.Standard)"
                                }
                              },
                              "id": 8441,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "ERC1400",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8035,
                              "src": "12055:16:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Standard_$8036",
                                "typeString": "enum Swaps.Standard"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 8442,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12073:4:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 8443,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12079:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "expression": {
                                "id": 8444,
                                "name": "TradeType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8046,
                                "src": "12086:9:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_TradeType_$8046_$",
                                  "typeString": "type(enum Swaps.TradeType)"
                                }
                              },
                              "id": 8445,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Escrow",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8045,
                              "src": "12086:16:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_TradeType_$8046",
                                "typeString": "enum Swaps.TradeType"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_enum$_Standard_$8036",
                                "typeString": "enum Swaps.Standard"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_enum$_TradeType_$8046",
                                "typeString": "enum Swaps.TradeType"
                              }
                            ],
                            "id": 8435,
                            "name": "UserTradeData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8118,
                            "src": "12011:13:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_UserTradeData_$8118_storage_ptr_$",
                              "typeString": "type(struct Swaps.UserTradeData storage pointer)"
                            }
                          },
                          "id": 8446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12011:92:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                            "typeString": "struct Swaps.UserTradeData memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11976:127:35"
                      },
                      {
                        "assignments": [
                          8450
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8450,
                            "mutability": "mutable",
                            "name": "_tokenData2",
                            "nameLocation": "12132:11:35",
                            "nodeType": "VariableDeclaration",
                            "scope": 8465,
                            "src": "12111:32:35",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                              "typeString": "struct Swaps.UserTradeData"
                            },
                            "typeName": {
                              "id": 8449,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 8448,
                                "name": "UserTradeData",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 8118,
                                "src": "12111:13:35"
                              },
                              "referencedDeclaration": 8118,
                              "src": "12111:13:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserTradeData_$8118_storage_ptr",
                                "typeString": "struct Swaps.UserTradeData"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 8454,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 8452,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8374,
                              "src": "12165:4:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 8451,
                            "name": "_getTradeTokenData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10942,
                            "src": "12146:18:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_UserTradeData_$8118_memory_ptr_$",
                              "typeString": "function (bytes memory) pure returns (struct Swaps.UserTradeData memory)"
                            }
                          },
                          "id": 8453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12146:24:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                            "typeString": "struct Swaps.UserTradeData memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12111:59:35"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8456,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8368,
                              "src": "12202:4:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8457,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8420,
                              "src": "12216:9:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8458,
                              "name": "executor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8423,
                              "src": "12235:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8459,
                              "name": "expirationDate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8426,
                              "src": "12253:14:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 8460,
                              "name": "settlementDate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8429,
                              "src": "12277:14:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 8461,
                              "name": "_tradeData1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8434,
                              "src": "12301:11:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                                "typeString": "struct Swaps.UserTradeData memory"
                              }
                            },
                            {
                              "id": 8462,
                              "name": "_tokenData2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8450,
                              "src": "12322:11:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                                "typeString": "struct Swaps.UserTradeData memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                                "typeString": "struct Swaps.UserTradeData memory"
                              },
                              {
                                "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                                "typeString": "struct Swaps.UserTradeData memory"
                              }
                            ],
                            "id": 8455,
                            "name": "_requestTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8793,
                            "src": "12179:13:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_struct$_UserTradeData_$8118_memory_ptr_$_t_struct$_UserTradeData_$8118_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,address,uint256,uint256,struct Swaps.UserTradeData memory,struct Swaps.UserTradeData memory)"
                            }
                          },
                          "id": 8463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12179:162:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8464,
                        "nodeType": "ExpressionStatement",
                        "src": "12179:162:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 8360,
              "nodeType": "StructuredDocumentation",
              "src": "10570:466:35",
              "text": " [ERC1400TokensRecipient INTERFACE (2/2)]\n @dev Hook function executed when tokens are sent to the Swaps contract. [USED FOR ERC1400 TOKENS ONLY]\n @param partition Name of the partition.\n @param from Token holder.\n @param to Token recipient.\n @param value Number of tokens to transfer.\n @param data Information attached to the token transfer.\n @param operatorData Information attached to the Swaps transfer, by the operator."
            },
            "functionSelector": "f464b576",
            "id": 8546,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokensReceived",
            "nameLocation": "11048:14:35",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8378,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11202:8:35"
            },
            "parameters": {
              "id": 8377,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8362,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8546,
                  "src": "11063:14:35",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8361,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11063:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8364,
                  "mutability": "mutable",
                  "name": "partition",
                  "nameLocation": "11087:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8546,
                  "src": "11079:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8363,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11079:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8366,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8546,
                  "src": "11098:7:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8365,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11098:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8368,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "11115:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8546,
                  "src": "11107:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8367,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11107:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8370,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11129:2:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8546,
                  "src": "11121:10:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8369,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11121:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8372,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "11138:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8546,
                  "src": "11133:10:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8371,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "11133:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8374,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "11158:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8546,
                  "src": "11145:17:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8373,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11145:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8376,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "11179:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8546,
                  "src": "11164:27:35",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8375,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11164:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11062:130:35"
            },
            "returnParameters": {
              "id": 8379,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11211:0:35"
            },
            "scope": 11766,
            "src": "11039:2294:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8619,
              "nodeType": "Block",
              "src": "13570:620:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8556,
                          "name": "inputData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8550,
                          "src": "13597:9:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeRequestInput_$8153_calldata_ptr",
                            "typeString": "struct Swaps.TradeRequestInput calldata"
                          }
                        },
                        "id": 8557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "holder1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8120,
                        "src": "13597:17:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 8558,
                          "name": "inputData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8550,
                          "src": "13622:9:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeRequestInput_$8153_calldata_ptr",
                            "typeString": "struct Swaps.TradeRequestInput calldata"
                          }
                        },
                        "id": 8559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "holder2",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8122,
                        "src": "13622:17:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 8560,
                          "name": "inputData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8550,
                          "src": "13647:9:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeRequestInput_$8153_calldata_ptr",
                            "typeString": "struct Swaps.TradeRequestInput calldata"
                          }
                        },
                        "id": 8561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "executer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8124,
                        "src": "13647:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 8562,
                          "name": "inputData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8550,
                          "src": "13673:9:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeRequestInput_$8153_calldata_ptr",
                            "typeString": "struct Swaps.TradeRequestInput calldata"
                          }
                        },
                        "id": 8563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "expirationDate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8126,
                        "src": "13673:24:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 8564,
                          "name": "inputData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8550,
                          "src": "13705:9:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeRequestInput_$8153_calldata_ptr",
                            "typeString": "struct Swaps.TradeRequestInput calldata"
                          }
                        },
                        "id": 8565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "settlementDate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8152,
                        "src": "13705:24:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 8567,
                              "name": "inputData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8550,
                              "src": "13751:9:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeRequestInput_$8153_calldata_ptr",
                                "typeString": "struct Swaps.TradeRequestInput calldata"
                              }
                            },
                            "id": 8568,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenAddress1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8128,
                            "src": "13751:23:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 8569,
                              "name": "inputData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8550,
                              "src": "13776:9:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeRequestInput_$8153_calldata_ptr",
                                "typeString": "struct Swaps.TradeRequestInput calldata"
                              }
                            },
                            "id": 8570,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenValue1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8130,
                            "src": "13776:21:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 8571,
                              "name": "inputData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8550,
                              "src": "13799:9:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeRequestInput_$8153_calldata_ptr",
                                "typeString": "struct Swaps.TradeRequestInput calldata"
                              }
                            },
                            "id": 8572,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenId1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8132,
                            "src": "13799:18:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 8573,
                              "name": "inputData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8550,
                              "src": "13819:9:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeRequestInput_$8153_calldata_ptr",
                                "typeString": "struct Swaps.TradeRequestInput calldata"
                              }
                            },
                            "id": 8574,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenStandard1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8135,
                            "src": "13819:24:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Standard_$8036",
                              "typeString": "enum Swaps.Standard"
                            }
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 8575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13845:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 8576,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13852:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "expression": {
                              "id": 8577,
                              "name": "inputData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8550,
                              "src": "13859:9:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeRequestInput_$8153_calldata_ptr",
                                "typeString": "struct Swaps.TradeRequestInput calldata"
                              }
                            },
                            "id": 8578,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tradeType1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8147,
                            "src": "13859:20:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_TradeType_$8046",
                              "typeString": "enum Swaps.TradeType"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_enum$_Standard_$8036",
                              "typeString": "enum Swaps.Standard"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_enum$_TradeType_$8046",
                              "typeString": "enum Swaps.TradeType"
                            }
                          ],
                          "id": 8566,
                          "name": "UserTradeData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8118,
                          "src": "13737:13:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_UserTradeData_$8118_storage_ptr_$",
                            "typeString": "type(struct Swaps.UserTradeData storage pointer)"
                          }
                        },
                        "id": 8579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13737:143:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                          "typeString": "struct Swaps.UserTradeData memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 8581,
                              "name": "inputData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8550,
                              "src": "13902:9:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeRequestInput_$8153_calldata_ptr",
                                "typeString": "struct Swaps.TradeRequestInput calldata"
                              }
                            },
                            "id": 8582,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenAddress2",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8137,
                            "src": "13902:23:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 8583,
                              "name": "inputData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8550,
                              "src": "13927:9:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeRequestInput_$8153_calldata_ptr",
                                "typeString": "struct Swaps.TradeRequestInput calldata"
                              }
                            },
                            "id": 8584,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenValue2",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8139,
                            "src": "13927:21:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 8585,
                              "name": "inputData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8550,
                              "src": "13950:9:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeRequestInput_$8153_calldata_ptr",
                                "typeString": "struct Swaps.TradeRequestInput calldata"
                              }
                            },
                            "id": 8586,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenId2",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8141,
                            "src": "13950:18:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 8587,
                              "name": "inputData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8550,
                              "src": "13970:9:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeRequestInput_$8153_calldata_ptr",
                                "typeString": "struct Swaps.TradeRequestInput calldata"
                              }
                            },
                            "id": 8588,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenStandard2",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8144,
                            "src": "13970:24:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Standard_$8036",
                              "typeString": "enum Swaps.Standard"
                            }
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 8589,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13996:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 8590,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14003:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "expression": {
                              "id": 8591,
                              "name": "inputData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8550,
                              "src": "14010:9:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeRequestInput_$8153_calldata_ptr",
                                "typeString": "struct Swaps.TradeRequestInput calldata"
                              }
                            },
                            "id": 8592,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tradeType2",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8150,
                            "src": "14010:20:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_TradeType_$8046",
                              "typeString": "enum Swaps.TradeType"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_enum$_Standard_$8036",
                              "typeString": "enum Swaps.Standard"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_enum$_TradeType_$8046",
                              "typeString": "enum Swaps.TradeType"
                            }
                          ],
                          "id": 8580,
                          "name": "UserTradeData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8118,
                          "src": "13888:13:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_UserTradeData_$8118_storage_ptr_$",
                            "typeString": "type(struct Swaps.UserTradeData storage pointer)"
                          }
                        },
                        "id": 8593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13888:143:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                          "typeString": "struct Swaps.UserTradeData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                          "typeString": "struct Swaps.UserTradeData memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                          "typeString": "struct Swaps.UserTradeData memory"
                        }
                      ],
                      "id": 8555,
                      "name": "_requestTrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8793,
                      "src": "13576:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_struct$_UserTradeData_$8118_memory_ptr_$_t_struct$_UserTradeData_$8118_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,struct Swaps.UserTradeData memory,struct Swaps.UserTradeData memory)"
                      }
                    },
                    "id": 8594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13576:461:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8595,
                  "nodeType": "ExpressionStatement",
                  "src": "13576:461:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 8606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 8600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 8596,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "14047:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "14047:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 8598,
                          "name": "inputData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8550,
                          "src": "14061:9:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeRequestInput_$8153_calldata_ptr",
                            "typeString": "struct Swaps.TradeRequestInput calldata"
                          }
                        },
                        "id": 8599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "holder1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8120,
                        "src": "14061:17:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "14047:31:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 8605,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 8601,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "14082:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "14082:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 8603,
                          "name": "inputData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8550,
                          "src": "14096:9:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeRequestInput_$8153_calldata_ptr",
                            "typeString": "struct Swaps.TradeRequestInput calldata"
                          }
                        },
                        "id": 8604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "holder2",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8122,
                        "src": "14096:17:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "14082:31:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "14047:66:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8618,
                  "nodeType": "IfStatement",
                  "src": "14044:142:35",
                  "trueBody": {
                    "id": 8617,
                    "nodeType": "Block",
                    "src": "14115:71:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8608,
                              "name": "_index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8175,
                              "src": "14136:6:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 8609,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "14144:3:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 8610,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "14144:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 8611,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "14156:3:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 8612,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "14156:9:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 8613,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14167:1:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "id": 8614,
                              "name": "preimage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8552,
                              "src": "14170:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 8607,
                            "name": "_acceptTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9185,
                            "src": "14123:12:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                              "typeString": "function (uint256,address,uint256,uint256,bytes32)"
                            }
                          },
                          "id": 8615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14123:56:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8616,
                        "nodeType": "ExpressionStatement",
                        "src": "14123:56:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 8547,
              "nodeType": "StructuredDocumentation",
              "src": "13337:125:35",
              "text": " @dev Create a new trade request in the Swaps smart contract.\n @param inputData The input for this function"
            },
            "functionSelector": "89a0c9e7",
            "id": 8620,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestTrade",
            "nameLocation": "13474:12:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8550,
                  "mutability": "mutable",
                  "name": "inputData",
                  "nameLocation": "13514:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8620,
                  "src": "13487:36:35",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradeRequestInput_$8153_calldata_ptr",
                    "typeString": "struct Swaps.TradeRequestInput"
                  },
                  "typeName": {
                    "id": 8549,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8548,
                      "name": "TradeRequestInput",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8153,
                      "src": "13487:17:35"
                    },
                    "referencedDeclaration": 8153,
                    "src": "13487:17:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeRequestInput_$8153_storage_ptr",
                      "typeString": "struct Swaps.TradeRequestInput"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8552,
                  "mutability": "mutable",
                  "name": "preimage",
                  "nameLocation": "13533:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8620,
                  "src": "13525:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8551,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13525:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13486:56:35"
            },
            "returnParameters": {
              "id": 8554,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13570:0:35"
            },
            "scope": 11766,
            "src": "13465:725:35",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8792,
              "nodeType": "Block",
              "src": "15045:1606:35",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Standard_$8036",
                      "typeString": "enum Swaps.Standard"
                    },
                    "id": 8644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 8640,
                        "name": "userTradeData1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8634,
                        "src": "15054:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                          "typeString": "struct Swaps.UserTradeData memory"
                        }
                      },
                      "id": 8641,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenStandard",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8110,
                      "src": "15054:28:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Standard_$8036",
                        "typeString": "enum Swaps.Standard"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 8642,
                        "name": "Standard",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8036,
                        "src": "15086:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Standard_$8036_$",
                          "typeString": "type(enum Swaps.Standard)"
                        }
                      },
                      "id": 8643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8032,
                      "src": "15086:12:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Standard_$8036",
                        "typeString": "enum Swaps.Standard"
                      }
                    },
                    "src": "15054:44:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8655,
                  "nodeType": "IfStatement",
                  "src": "15051:159:35",
                  "trueBody": {
                    "id": 8654,
                    "nodeType": "Block",
                    "src": "15100:110:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_TradeType_$8046",
                                "typeString": "enum Swaps.TradeType"
                              },
                              "id": 8650,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 8646,
                                  "name": "userTradeData1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8634,
                                  "src": "15116:14:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                                    "typeString": "struct Swaps.UserTradeData memory"
                                  }
                                },
                                "id": 8647,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tradeType",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 8117,
                                "src": "15116:24:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_TradeType_$8046",
                                  "typeString": "enum Swaps.TradeType"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 8648,
                                  "name": "TradeType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8046,
                                  "src": "15144:9:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_TradeType_$8046_$",
                                    "typeString": "type(enum Swaps.TradeType)"
                                  }
                                },
                                "id": 8649,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "Escrow",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 8045,
                                "src": "15144:16:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_TradeType_$8046",
                                  "typeString": "enum Swaps.TradeType"
                                }
                              },
                              "src": "15116:44:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "457468657220747261646573206e65656420746f206265206f66207479706520457363726f77",
                              "id": 8651,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15162:40:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0b2b516375d20093ba5abecc0cd58e75e4a2fdc1bed15bafb457d94a3ba607a4",
                                "typeString": "literal_string \"Ether trades need to be of type Escrow\""
                              },
                              "value": "Ether trades need to be of type Escrow"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0b2b516375d20093ba5abecc0cd58e75e4a2fdc1bed15bafb457d94a3ba607a4",
                                "typeString": "literal_string \"Ether trades need to be of type Escrow\""
                              }
                            ],
                            "id": 8645,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "15108:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 8652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15108:95:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8653,
                        "nodeType": "ExpressionStatement",
                        "src": "15108:95:35"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Standard_$8036",
                      "typeString": "enum Swaps.Standard"
                    },
                    "id": 8660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 8656,
                        "name": "userTradeData2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8637,
                        "src": "15219:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                          "typeString": "struct Swaps.UserTradeData memory"
                        }
                      },
                      "id": 8657,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenStandard",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8110,
                      "src": "15219:28:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Standard_$8036",
                        "typeString": "enum Swaps.Standard"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 8658,
                        "name": "Standard",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8036,
                        "src": "15251:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Standard_$8036_$",
                          "typeString": "type(enum Swaps.Standard)"
                        }
                      },
                      "id": 8659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8032,
                      "src": "15251:12:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Standard_$8036",
                        "typeString": "enum Swaps.Standard"
                      }
                    },
                    "src": "15219:44:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8671,
                  "nodeType": "IfStatement",
                  "src": "15216:159:35",
                  "trueBody": {
                    "id": 8670,
                    "nodeType": "Block",
                    "src": "15265:110:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_TradeType_$8046",
                                "typeString": "enum Swaps.TradeType"
                              },
                              "id": 8666,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 8662,
                                  "name": "userTradeData2",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8637,
                                  "src": "15281:14:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                                    "typeString": "struct Swaps.UserTradeData memory"
                                  }
                                },
                                "id": 8663,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tradeType",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 8117,
                                "src": "15281:24:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_TradeType_$8046",
                                  "typeString": "enum Swaps.TradeType"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 8664,
                                  "name": "TradeType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8046,
                                  "src": "15309:9:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_TradeType_$8046_$",
                                    "typeString": "type(enum Swaps.TradeType)"
                                  }
                                },
                                "id": 8665,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "Escrow",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 8045,
                                "src": "15309:16:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_TradeType_$8046",
                                  "typeString": "enum Swaps.TradeType"
                                }
                              },
                              "src": "15281:44:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "457468657220747261646573206e65656420746f206265206f66207479706520457363726f77",
                              "id": 8667,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15327:40:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0b2b516375d20093ba5abecc0cd58e75e4a2fdc1bed15bafb457d94a3ba607a4",
                                "typeString": "literal_string \"Ether trades need to be of type Escrow\""
                              },
                              "value": "Ether trades need to be of type Escrow"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0b2b516375d20093ba5abecc0cd58e75e4a2fdc1bed15bafb457d94a3ba607a4",
                                "typeString": "literal_string \"Ether trades need to be of type Escrow\""
                              }
                            ],
                            "id": 8661,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "15273:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 8668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15273:95:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8669,
                        "nodeType": "ExpressionStatement",
                        "src": "15273:95:35"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_TradeType_$8046",
                      "typeString": "enum Swaps.TradeType"
                    },
                    "id": 8676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 8672,
                        "name": "userTradeData1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8634,
                        "src": "15385:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                          "typeString": "struct Swaps.UserTradeData memory"
                        }
                      },
                      "id": 8673,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tradeType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8117,
                      "src": "15385:24:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_TradeType_$8046",
                        "typeString": "enum Swaps.TradeType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 8674,
                        "name": "TradeType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8046,
                        "src": "15413:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_TradeType_$8046_$",
                          "typeString": "type(enum Swaps.TradeType)"
                        }
                      },
                      "id": 8675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Hold",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8044,
                      "src": "15413:14:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_TradeType_$8046",
                        "typeString": "enum Swaps.TradeType"
                      }
                    },
                    "src": "15385:42:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8704,
                  "nodeType": "IfStatement",
                  "src": "15381:292:35",
                  "trueBody": {
                    "id": 8703,
                    "nodeType": "Block",
                    "src": "15429:244:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 8688,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_Standard_$8036",
                                  "typeString": "enum Swaps.Standard"
                                },
                                "id": 8682,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 8678,
                                    "name": "userTradeData1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8634,
                                    "src": "15445:14:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                                      "typeString": "struct Swaps.UserTradeData memory"
                                    }
                                  },
                                  "id": 8679,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tokenStandard",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8110,
                                  "src": "15445:28:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Standard_$8036",
                                    "typeString": "enum Swaps.Standard"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 8680,
                                    "name": "Standard",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8036,
                                    "src": "15477:8:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_Standard_$8036_$",
                                      "typeString": "type(enum Swaps.Standard)"
                                    }
                                  },
                                  "id": 8681,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "ERC20",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8033,
                                  "src": "15477:14:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Standard_$8036",
                                    "typeString": "enum Swaps.Standard"
                                  }
                                },
                                "src": "15445:46:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_Standard_$8036",
                                  "typeString": "enum Swaps.Standard"
                                },
                                "id": 8687,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 8683,
                                    "name": "userTradeData1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8634,
                                    "src": "15495:14:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                                      "typeString": "struct Swaps.UserTradeData memory"
                                    }
                                  },
                                  "id": 8684,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tokenStandard",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8110,
                                  "src": "15495:28:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Standard_$8036",
                                    "typeString": "enum Swaps.Standard"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 8685,
                                    "name": "Standard",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8036,
                                    "src": "15527:8:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_Standard_$8036_$",
                                      "typeString": "type(enum Swaps.Standard)"
                                    }
                                  },
                                  "id": 8686,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "ERC1400",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8035,
                                  "src": "15527:16:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Standard_$8036",
                                    "typeString": "enum Swaps.Standard"
                                  }
                                },
                                "src": "15495:48:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "15445:98:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420746f6b656e207374616e6461726420666f7220686f6c642074726164652074797065",
                              "id": 8689,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15545:44:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d2053e1061c836597f4dea813fbe2c6ba0c3d847ab0cb01c7bf3e51a4ada89bb",
                                "typeString": "literal_string \"Invalid token standard for hold trade type\""
                              },
                              "value": "Invalid token standard for hold trade type"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d2053e1061c836597f4dea813fbe2c6ba0c3d847ab0cb01c7bf3e51a4ada89bb",
                                "typeString": "literal_string \"Invalid token standard for hold trade type\""
                              }
                            ],
                            "id": 8677,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "15437:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 8690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15437:153:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8691,
                        "nodeType": "ExpressionStatement",
                        "src": "15437:153:35"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 8699,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 8693,
                                  "name": "userTradeData1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8634,
                                  "src": "15606:14:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                                    "typeString": "struct Swaps.UserTradeData memory"
                                  }
                                },
                                "id": 8694,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tokenId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 8107,
                                "src": "15606:22:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 8697,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "15640:1:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 8696,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "15632:7:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes32_$",
                                    "typeString": "type(bytes32)"
                                  },
                                  "typeName": {
                                    "id": 8695,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "15632:7:35",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 8698,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15632:10:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "15606:36:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f20686f6c64496420737065636966696564",
                              "id": 8700,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15644:21:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f27e4c6b14f179cc89617a8534b57ab0d5c0d186253e10a2233490cdd2b5d7a4",
                                "typeString": "literal_string \"No holdId specified\""
                              },
                              "value": "No holdId specified"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f27e4c6b14f179cc89617a8534b57ab0d5c0d186253e10a2233490cdd2b5d7a4",
                                "typeString": "literal_string \"No holdId specified\""
                              }
                            ],
                            "id": 8692,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "15598:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 8701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15598:68:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8702,
                        "nodeType": "ExpressionStatement",
                        "src": "15598:68:35"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_TradeType_$8046",
                      "typeString": "enum Swaps.TradeType"
                    },
                    "id": 8709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 8705,
                        "name": "userTradeData2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8637,
                        "src": "15687:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                          "typeString": "struct Swaps.UserTradeData memory"
                        }
                      },
                      "id": 8706,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tradeType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8117,
                      "src": "15687:24:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_TradeType_$8046",
                        "typeString": "enum Swaps.TradeType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 8707,
                        "name": "TradeType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8046,
                        "src": "15715:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_TradeType_$8046_$",
                          "typeString": "type(enum Swaps.TradeType)"
                        }
                      },
                      "id": 8708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Hold",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8044,
                      "src": "15715:14:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_TradeType_$8046",
                        "typeString": "enum Swaps.TradeType"
                      }
                    },
                    "src": "15687:42:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8737,
                  "nodeType": "IfStatement",
                  "src": "15683:292:35",
                  "trueBody": {
                    "id": 8736,
                    "nodeType": "Block",
                    "src": "15731:244:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 8721,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_Standard_$8036",
                                  "typeString": "enum Swaps.Standard"
                                },
                                "id": 8715,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 8711,
                                    "name": "userTradeData2",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8637,
                                    "src": "15747:14:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                                      "typeString": "struct Swaps.UserTradeData memory"
                                    }
                                  },
                                  "id": 8712,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tokenStandard",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8110,
                                  "src": "15747:28:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Standard_$8036",
                                    "typeString": "enum Swaps.Standard"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 8713,
                                    "name": "Standard",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8036,
                                    "src": "15779:8:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_Standard_$8036_$",
                                      "typeString": "type(enum Swaps.Standard)"
                                    }
                                  },
                                  "id": 8714,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "ERC20",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8033,
                                  "src": "15779:14:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Standard_$8036",
                                    "typeString": "enum Swaps.Standard"
                                  }
                                },
                                "src": "15747:46:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_Standard_$8036",
                                  "typeString": "enum Swaps.Standard"
                                },
                                "id": 8720,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 8716,
                                    "name": "userTradeData2",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8637,
                                    "src": "15797:14:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                                      "typeString": "struct Swaps.UserTradeData memory"
                                    }
                                  },
                                  "id": 8717,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tokenStandard",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8110,
                                  "src": "15797:28:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Standard_$8036",
                                    "typeString": "enum Swaps.Standard"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 8718,
                                    "name": "Standard",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8036,
                                    "src": "15829:8:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_Standard_$8036_$",
                                      "typeString": "type(enum Swaps.Standard)"
                                    }
                                  },
                                  "id": 8719,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "ERC1400",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8035,
                                  "src": "15829:16:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Standard_$8036",
                                    "typeString": "enum Swaps.Standard"
                                  }
                                },
                                "src": "15797:48:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "15747:98:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420746f6b656e207374616e6461726420666f7220686f6c642074726164652074797065",
                              "id": 8722,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15847:44:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d2053e1061c836597f4dea813fbe2c6ba0c3d847ab0cb01c7bf3e51a4ada89bb",
                                "typeString": "literal_string \"Invalid token standard for hold trade type\""
                              },
                              "value": "Invalid token standard for hold trade type"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d2053e1061c836597f4dea813fbe2c6ba0c3d847ab0cb01c7bf3e51a4ada89bb",
                                "typeString": "literal_string \"Invalid token standard for hold trade type\""
                              }
                            ],
                            "id": 8710,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "15739:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 8723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15739:153:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8724,
                        "nodeType": "ExpressionStatement",
                        "src": "15739:153:35"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 8732,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 8726,
                                  "name": "userTradeData2",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8637,
                                  "src": "15908:14:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                                    "typeString": "struct Swaps.UserTradeData memory"
                                  }
                                },
                                "id": 8727,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tokenId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 8107,
                                "src": "15908:22:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 8730,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "15942:1:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 8729,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "15934:7:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes32_$",
                                    "typeString": "type(bytes32)"
                                  },
                                  "typeName": {
                                    "id": 8728,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "15934:7:35",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 8731,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15934:10:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "15908:36:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f20686f6c64496420737065636966696564",
                              "id": 8733,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15946:21:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f27e4c6b14f179cc89617a8534b57ab0d5c0d186253e10a2233490cdd2b5d7a4",
                                "typeString": "literal_string \"No holdId specified\""
                              },
                              "value": "No holdId specified"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f27e4c6b14f179cc89617a8534b57ab0d5c0d186253e10a2233490cdd2b5d7a4",
                                "typeString": "literal_string \"No holdId specified\""
                              }
                            ],
                            "id": 8725,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "15900:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 8734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15900:68:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8735,
                        "nodeType": "ExpressionStatement",
                        "src": "15900:68:35"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 8738,
                    "name": "_ownedContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8209,
                    "src": "15984:14:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8747,
                  "nodeType": "IfStatement",
                  "src": "15981:142:35",
                  "trueBody": {
                    "id": 8746,
                    "nodeType": "Block",
                    "src": "16000:123:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 8740,
                                "name": "_isTradeExecuter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8216,
                                "src": "16016:16:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 8742,
                              "indexExpression": {
                                "id": 8741,
                                "name": "executer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8627,
                                "src": "16033:8:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "16016:26:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5472616465206578656375746572206e6565647320746f2062656c6f6e6720746f20746865206c697374206f6620616c6c6f77656420747261646520657865637574657273",
                              "id": 8743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16044:71:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3a6c5fb48c287bee984928951d89e75c588c9b0df86b8ef015c0ada5e6d8b633",
                                "typeString": "literal_string \"Trade executer needs to belong to the list of allowed trade executers\""
                              },
                              "value": "Trade executer needs to belong to the list of allowed trade executers"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3a6c5fb48c287bee984928951d89e75c588c9b0df86b8ef015c0ada5e6d8b633",
                                "typeString": "literal_string \"Trade executer needs to belong to the list of allowed trade executers\""
                              }
                            ],
                            "id": 8739,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "16008:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 8744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16008:108:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8745,
                        "nodeType": "ExpressionStatement",
                        "src": "16008:108:35"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8749,
                          "name": "holder1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8623,
                          "src": "16137:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 8752,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16156:1:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8751,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "16148:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 8750,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "16148:7:35",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 8753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16148:10:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "16137:21:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "412074726164652063616e206e6f742062652063726561746564207769746820746865207a65726f2061646472657373",
                        "id": 8755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16160:50:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7422c5722be9eca0f8e40021c8dfba381e5cf7f3a04965f64b9b68b5a46c4e9",
                          "typeString": "literal_string \"A trade can not be created with the zero address\""
                        },
                        "value": "A trade can not be created with the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7422c5722be9eca0f8e40021c8dfba381e5cf7f3a04965f64b9b68b5a46c4e9",
                          "typeString": "literal_string \"A trade can not be created with the zero address\""
                        }
                      ],
                      "id": 8748,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "16129:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16129:82:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8757,
                  "nodeType": "ExpressionStatement",
                  "src": "16129:82:35"
                },
                {
                  "expression": {
                    "id": 8759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "16222:8:35",
                    "subExpression": {
                      "id": 8758,
                      "name": "_index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8175,
                      "src": "16222:6:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8760,
                  "nodeType": "ExpressionStatement",
                  "src": "16222:8:35"
                },
                {
                  "assignments": [
                    8762
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8762,
                      "mutability": "mutable",
                      "name": "_expirationDate",
                      "nameLocation": "16245:15:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8792,
                      "src": "16237:23:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8761,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16237:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8775,
                  "initialValue": {
                    "condition": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 8766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 8763,
                            "name": "expirationDate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8629,
                            "src": "16264:14:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "expression": {
                              "id": 8764,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "16281:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 8765,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "16281:15:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16264:32:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 8767,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "16263:34:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 8772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 8769,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "16318:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 8770,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "16318:15:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 8771,
                            "name": "SECONDS_IN_MONTH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8013,
                            "src": "16336:16:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16318:34:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 8773,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "16317:36:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "16263:90:35",
                    "trueExpression": {
                      "id": 8768,
                      "name": "expirationDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8629,
                      "src": "16300:14:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16237:116:35"
                },
                {
                  "expression": {
                    "id": 8790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 8776,
                        "name": "_trades",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8180,
                        "src": "16360:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$8173_storage_$",
                          "typeString": "mapping(uint256 => struct Swaps.Trade storage ref)"
                        }
                      },
                      "id": 8778,
                      "indexExpression": {
                        "id": 8777,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8175,
                        "src": "16368:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "16360:15:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$8173_storage",
                        "typeString": "struct Swaps.Trade storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 8780,
                          "name": "holder1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8623,
                          "src": "16401:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 8781,
                          "name": "holder2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8625,
                          "src": "16425:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 8782,
                          "name": "executer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8627,
                          "src": "16450:8:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 8783,
                          "name": "_expirationDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8762,
                          "src": "16482:15:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 8784,
                          "name": "settlementDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8631,
                          "src": "16521:14:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 8785,
                          "name": "userTradeData1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8634,
                          "src": "16559:14:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                            "typeString": "struct Swaps.UserTradeData memory"
                          }
                        },
                        {
                          "id": 8786,
                          "name": "userTradeData2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8637,
                          "src": "16597:14:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                            "typeString": "struct Swaps.UserTradeData memory"
                          }
                        },
                        {
                          "expression": {
                            "id": 8787,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8042,
                            "src": "16626:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$8042_$",
                              "typeString": "type(enum Swaps.State)"
                            }
                          },
                          "id": 8788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Pending",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8038,
                          "src": "16626:13:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$8042",
                            "typeString": "enum Swaps.State"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                            "typeString": "struct Swaps.UserTradeData memory"
                          },
                          {
                            "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                            "typeString": "struct Swaps.UserTradeData memory"
                          },
                          {
                            "typeIdentifier": "t_enum$_State_$8042",
                            "typeString": "enum Swaps.State"
                          }
                        ],
                        "id": 8779,
                        "name": "Trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8173,
                        "src": "16378:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Trade_$8173_storage_ptr_$",
                          "typeString": "type(struct Swaps.Trade storage pointer)"
                        }
                      },
                      "id": 8789,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "holder1",
                        "holder2",
                        "executer",
                        "expirationDate",
                        "settlementDate",
                        "userTradeData1",
                        "userTradeData2",
                        "state"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "16378:268:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$8173_memory_ptr",
                        "typeString": "struct Swaps.Trade memory"
                      }
                    },
                    "src": "16360:286:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$8173_storage",
                      "typeString": "struct Swaps.Trade storage ref"
                    }
                  },
                  "id": 8791,
                  "nodeType": "ExpressionStatement",
                  "src": "16360:286:35"
                }
              ]
            },
            "documentation": {
              "id": 8621,
              "nodeType": "StructuredDocumentation",
              "src": "14194:541:35",
              "text": " @dev Create a new trade request in the Swaps smart contract.\n @param holder1 Address of the first token holder.\n @param holder2 Address of the second token holder.\n @param executer Executer of the trade.\n @param expirationDate Expiration date of the trade.\n @param userTradeData1 Encoded pack of variables for token1 (address, amount, id/partition, standard, accepted, approved).\n @param userTradeData2 Encoded pack of variables for token2 (address, amount, id/partition, standard, accepted, approved)."
            },
            "id": 8793,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requestTrade",
            "nameLocation": "14747:13:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8638,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8623,
                  "mutability": "mutable",
                  "name": "holder1",
                  "nameLocation": "14774:7:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8793,
                  "src": "14766:15:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8622,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14766:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8625,
                  "mutability": "mutable",
                  "name": "holder2",
                  "nameLocation": "14795:7:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8793,
                  "src": "14787:15:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8624,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14787:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8627,
                  "mutability": "mutable",
                  "name": "executer",
                  "nameLocation": "14816:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8793,
                  "src": "14808:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8626,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14808:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8629,
                  "mutability": "mutable",
                  "name": "expirationDate",
                  "nameLocation": "14900:14:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8793,
                  "src": "14892:22:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8628,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14892:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8631,
                  "mutability": "mutable",
                  "name": "settlementDate",
                  "nameLocation": "14928:14:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8793,
                  "src": "14920:22:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8630,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14920:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8634,
                  "mutability": "mutable",
                  "name": "userTradeData1",
                  "nameLocation": "14969:14:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8793,
                  "src": "14948:35:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                    "typeString": "struct Swaps.UserTradeData"
                  },
                  "typeName": {
                    "id": 8633,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8632,
                      "name": "UserTradeData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8118,
                      "src": "14948:13:35"
                    },
                    "referencedDeclaration": 8118,
                    "src": "14948:13:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserTradeData_$8118_storage_ptr",
                      "typeString": "struct Swaps.UserTradeData"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8637,
                  "mutability": "mutable",
                  "name": "userTradeData2",
                  "nameLocation": "15010:14:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8793,
                  "src": "14989:35:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                    "typeString": "struct Swaps.UserTradeData"
                  },
                  "typeName": {
                    "id": 8636,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8635,
                      "name": "UserTradeData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8118,
                      "src": "14989:13:35"
                    },
                    "referencedDeclaration": 8118,
                    "src": "14989:13:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserTradeData_$8118_storage_ptr",
                      "typeString": "struct Swaps.UserTradeData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14760:268:35"
            },
            "returnParameters": {
              "id": 8639,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15045:0:35"
            },
            "scope": 11766,
            "src": "14738:1913:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8811,
              "nodeType": "Block",
              "src": "16853:66:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8802,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8796,
                        "src": "16872:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 8803,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "16879:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "16879:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 8805,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "16891:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "16891:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 8807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16902:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 8808,
                        "name": "preimage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8798,
                        "src": "16905:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 8801,
                      "name": "_acceptTrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9185,
                      "src": "16859:12:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,address,uint256,uint256,bytes32)"
                      }
                    },
                    "id": 8809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16859:55:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8810,
                  "nodeType": "ExpressionStatement",
                  "src": "16859:55:35"
                }
              ]
            },
            "documentation": {
              "id": 8794,
              "nodeType": "StructuredDocumentation",
              "src": "16655:124:35",
              "text": " @dev Accept a given trade (+ potentially escrow tokens).\n @param index Index of the trade to be accepted."
            },
            "functionSelector": "51965a83",
            "id": 8812,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "acceptTrade",
            "nameLocation": "16791:11:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8796,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "16811:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8812,
                  "src": "16803:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8795,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16803:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8798,
                  "mutability": "mutable",
                  "name": "preimage",
                  "nameLocation": "16826:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8812,
                  "src": "16818:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8797,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16818:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16802:33:35"
            },
            "returnParameters": {
              "id": 8800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16853:0:35"
            },
            "scope": 11766,
            "src": "16782:137:35",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9184,
              "nodeType": "Block",
              "src": "17326:3882:35",
              "statements": [
                {
                  "assignments": [
                    8828
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8828,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "17346:5:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 9184,
                      "src": "17332:19:35",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                        "typeString": "struct Swaps.Trade"
                      },
                      "typeName": {
                        "id": 8827,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 8826,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8173,
                          "src": "17332:5:35"
                        },
                        "referencedDeclaration": 8173,
                        "src": "17332:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8832,
                  "initialValue": {
                    "baseExpression": {
                      "id": 8829,
                      "name": "_trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8180,
                      "src": "17354:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$8173_storage_$",
                        "typeString": "mapping(uint256 => struct Swaps.Trade storage ref)"
                      }
                    },
                    "id": 8831,
                    "indexExpression": {
                      "id": 8830,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8815,
                      "src": "17362:5:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "17354:14:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$8173_storage",
                      "typeString": "struct Swaps.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17332:36:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$8042",
                          "typeString": "enum Swaps.State"
                        },
                        "id": 8838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 8834,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8828,
                            "src": "17382:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                              "typeString": "struct Swaps.Trade storage pointer"
                            }
                          },
                          "id": 8835,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8172,
                          "src": "17382:11:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$8042",
                            "typeString": "enum Swaps.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 8836,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8042,
                            "src": "17397:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$8042_$",
                              "typeString": "type(enum Swaps.State)"
                            }
                          },
                          "id": 8837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Pending",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8038,
                          "src": "17397:13:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$8042",
                            "typeString": "enum Swaps.State"
                          }
                        },
                        "src": "17382:28:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616465206973206e6f742070656e64696e67",
                        "id": 8839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17412:22:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e231b6203d554050a3d3199e807f8cbd9f29dd790d2450a81df72ae0c3a2c875",
                          "typeString": "literal_string \"Trade is not pending\""
                        },
                        "value": "Trade is not pending"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e231b6203d554050a3d3199e807f8cbd9f29dd790d2450a81df72ae0c3a2c875",
                          "typeString": "literal_string \"Trade is not pending\""
                        }
                      ],
                      "id": 8833,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "17374:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17374:61:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8841,
                  "nodeType": "ExpressionStatement",
                  "src": "17374:61:35"
                },
                {
                  "assignments": [
                    8843
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8843,
                      "mutability": "mutable",
                      "name": "recipientHolder",
                      "nameLocation": "17450:15:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 9184,
                      "src": "17442:23:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 8842,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "17442:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8844,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17442:23:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 8848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8845,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8817,
                      "src": "17474:6:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 8846,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8828,
                        "src": "17484:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 8847,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "holder1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8155,
                      "src": "17484:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "17474:23:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 8858,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 8855,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8817,
                        "src": "17554:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 8856,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8828,
                          "src": "17564:5:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                            "typeString": "struct Swaps.Trade storage pointer"
                          }
                        },
                        "id": 8857,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "holder2",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8157,
                        "src": "17564:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "17554:23:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 8865,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8828,
                            "src": "17634:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                              "typeString": "struct Swaps.Trade storage pointer"
                            }
                          },
                          "id": 8866,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "holder2",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8157,
                          "src": "17634:13:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 8869,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17659:1:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8868,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "17651:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 8867,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "17651:7:35",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 8870,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17651:10:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "17634:27:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 8888,
                        "nodeType": "Block",
                        "src": "17745:67:35",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "4f6e6c79207265676973746572656420686f6c646572732063616e206163636570742061207472616465",
                                  "id": 8885,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "17760:44:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_b87811a9660efbe433e1bf8fc747435558a7cca8d25afc47f3b0721d2694b1dd",
                                    "typeString": "literal_string \"Only registered holders can accept a trade\""
                                  },
                                  "value": "Only registered holders can accept a trade"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_b87811a9660efbe433e1bf8fc747435558a7cca8d25afc47f3b0721d2694b1dd",
                                    "typeString": "literal_string \"Only registered holders can accept a trade\""
                                  }
                                ],
                                "id": 8884,
                                "name": "revert",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  4294967277,
                                  4294967277
                                ],
                                "referencedDeclaration": 4294967277,
                                "src": "17753:6:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (string memory) pure"
                                }
                              },
                              "id": 8886,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17753:52:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 8887,
                            "nodeType": "ExpressionStatement",
                            "src": "17753:52:35"
                          }
                        ]
                      },
                      "id": 8889,
                      "nodeType": "IfStatement",
                      "src": "17631:181:35",
                      "trueBody": {
                        "id": 8883,
                        "nodeType": "Block",
                        "src": "17663:76:35",
                        "statements": [
                          {
                            "expression": {
                              "id": 8876,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "id": 8872,
                                  "name": "trade",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8828,
                                  "src": "17671:5:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                    "typeString": "struct Swaps.Trade storage pointer"
                                  }
                                },
                                "id": 8874,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "holder2",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 8157,
                                "src": "17671:13:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "id": 8875,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8817,
                                "src": "17687:6:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "17671:22:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 8877,
                            "nodeType": "ExpressionStatement",
                            "src": "17671:22:35"
                          },
                          {
                            "expression": {
                              "id": 8881,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 8878,
                                "name": "recipientHolder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8843,
                                "src": "17701:15:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "expression": {
                                  "id": 8879,
                                  "name": "trade",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8828,
                                  "src": "17719:5:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                    "typeString": "struct Swaps.Trade storage pointer"
                                  }
                                },
                                "id": 8880,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "holder1",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 8155,
                                "src": "17719:13:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "17701:31:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 8882,
                            "nodeType": "ExpressionStatement",
                            "src": "17701:31:35"
                          }
                        ]
                      }
                    },
                    "id": 8890,
                    "nodeType": "IfStatement",
                    "src": "17551:261:35",
                    "trueBody": {
                      "id": 8864,
                      "nodeType": "Block",
                      "src": "17579:46:35",
                      "statements": [
                        {
                          "expression": {
                            "id": 8862,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 8859,
                              "name": "recipientHolder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8843,
                              "src": "17587:15:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "expression": {
                                "id": 8860,
                                "name": "trade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8828,
                                "src": "17605:5:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                  "typeString": "struct Swaps.Trade storage pointer"
                                }
                              },
                              "id": 8861,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "holder1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8155,
                              "src": "17605:13:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "17587:31:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 8863,
                          "nodeType": "ExpressionStatement",
                          "src": "17587:31:35"
                        }
                      ]
                    }
                  },
                  "id": 8891,
                  "nodeType": "IfStatement",
                  "src": "17471:341:35",
                  "trueBody": {
                    "id": 8854,
                    "nodeType": "Block",
                    "src": "17499:46:35",
                    "statements": [
                      {
                        "expression": {
                          "id": 8852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 8849,
                            "name": "recipientHolder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8843,
                            "src": "17507:15:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 8850,
                              "name": "trade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8828,
                              "src": "17525:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                "typeString": "struct Swaps.Trade storage pointer"
                              }
                            },
                            "id": 8851,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "holder2",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8157,
                            "src": "17525:13:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "17507:31:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 8853,
                        "nodeType": "ExpressionStatement",
                        "src": "17507:31:35"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    8894
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8894,
                      "mutability": "mutable",
                      "name": "selectedUserTradeData",
                      "nameLocation": "17839:21:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 9184,
                      "src": "17818:42:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                        "typeString": "struct Swaps.UserTradeData"
                      },
                      "typeName": {
                        "id": 8893,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 8892,
                          "name": "UserTradeData",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8118,
                          "src": "17818:13:35"
                        },
                        "referencedDeclaration": 8118,
                        "src": "17818:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserTradeData_$8118_storage_ptr",
                          "typeString": "struct Swaps.UserTradeData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8905,
                  "initialValue": {
                    "condition": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 8898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 8895,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8817,
                            "src": "17864:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 8896,
                              "name": "trade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8828,
                              "src": "17874:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                "typeString": "struct Swaps.Trade storage pointer"
                              }
                            },
                            "id": 8897,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "holder1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8155,
                            "src": "17874:13:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "17864:23:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 8899,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "17863:25:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "expression": {
                        "id": 8902,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8828,
                        "src": "17914:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 8903,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8169,
                      "src": "17914:20:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "id": 8904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "17863:71:35",
                    "trueExpression": {
                      "expression": {
                        "id": 8900,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8828,
                        "src": "17891:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 8901,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8166,
                      "src": "17891:20:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserTradeData_$8118_storage_ptr",
                      "typeString": "struct Swaps.UserTradeData storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17818:116:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "17949:31:35",
                        "subExpression": {
                          "expression": {
                            "id": 8907,
                            "name": "selectedUserTradeData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8894,
                            "src": "17950:21:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                              "typeString": "struct Swaps.UserTradeData memory"
                            }
                          },
                          "id": 8908,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "accepted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8112,
                          "src": "17950:30:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "547261646520616c72656164792061636365707465642062792074686520686f6c646572",
                        "id": 8910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17982:38:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b5bb3f67205aac1ef56c0f0d2a8a3721a1e2cbbeeb73b468e67cc7251df85270",
                          "typeString": "literal_string \"Trade already accepted by the holder\""
                        },
                        "value": "Trade already accepted by the holder"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b5bb3f67205aac1ef56c0f0d2a8a3721a1e2cbbeeb73b468e67cc7251df85270",
                          "typeString": "literal_string \"Trade already accepted by the holder\""
                        }
                      ],
                      "id": 8906,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "17941:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17941:80:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8912,
                  "nodeType": "ExpressionStatement",
                  "src": "17941:80:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_TradeType_$8046",
                      "typeString": "enum Swaps.TradeType"
                    },
                    "id": 8917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 8913,
                        "name": "selectedUserTradeData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8894,
                        "src": "18031:21:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                          "typeString": "struct Swaps.UserTradeData memory"
                        }
                      },
                      "id": 8914,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tradeType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8117,
                      "src": "18031:31:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_TradeType_$8046",
                        "typeString": "enum Swaps.TradeType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 8915,
                        "name": "TradeType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8046,
                        "src": "18066:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_TradeType_$8046_$",
                          "typeString": "type(enum Swaps.TradeType)"
                        }
                      },
                      "id": 8916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Escrow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8045,
                      "src": "18066:16:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_TradeType_$8046",
                        "typeString": "enum Swaps.TradeType"
                      }
                    },
                    "src": "18031:51:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_TradeType_$8046",
                        "typeString": "enum Swaps.TradeType"
                      },
                      "id": 9039,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 9035,
                          "name": "selectedUserTradeData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8894,
                          "src": "19239:21:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                            "typeString": "struct Swaps.UserTradeData memory"
                          }
                        },
                        "id": 9036,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tradeType",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8117,
                        "src": "19239:31:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_TradeType_$8046",
                          "typeString": "enum Swaps.TradeType"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 9037,
                          "name": "TradeType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8046,
                          "src": "19274:9:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_TradeType_$8046_$",
                            "typeString": "type(enum Swaps.TradeType)"
                          }
                        },
                        "id": 9038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Hold",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8044,
                        "src": "19274:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_TradeType_$8046",
                          "typeString": "enum Swaps.TradeType"
                        }
                      },
                      "src": "19239:49:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 9058,
                      "nodeType": "Block",
                      "src": "19440:183:35",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 9052,
                                    "name": "sender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8817,
                                    "src": "19521:6:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 9053,
                                    "name": "selectedUserTradeData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8894,
                                    "src": "19529:21:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                                      "typeString": "struct Swaps.UserTradeData memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                                      "typeString": "struct Swaps.UserTradeData memory"
                                    }
                                  ],
                                  "id": 9051,
                                  "name": "_allowanceIsProvided",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9351,
                                  "src": "19500:20:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$_t_struct$_UserTradeData_$8118_memory_ptr_$returns$_t_bool_$",
                                    "typeString": "function (address,struct Swaps.UserTradeData memory) view returns (bool)"
                                  }
                                },
                                "id": 9054,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "19500:51:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "416c6c6f77616e6365206e6565647320746f2062652070726f766964656420696e20746f6b656e20736d61727420636f6e7472616374206669727374",
                                "id": 9055,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "19553:62:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_89aa5a265da805686932ae094ba24a71109e8058a4d7df537bdb317139a2f40b",
                                  "typeString": "literal_string \"Allowance needs to be provided in token smart contract first\""
                                },
                                "value": "Allowance needs to be provided in token smart contract first"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_89aa5a265da805686932ae094ba24a71109e8058a4d7df537bdb317139a2f40b",
                                  "typeString": "literal_string \"Allowance needs to be provided in token smart contract first\""
                                }
                              ],
                              "id": 9050,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "src": "19492:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 9056,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19492:124:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 9057,
                          "nodeType": "ExpressionStatement",
                          "src": "19492:124:35"
                        }
                      ]
                    },
                    "id": 9059,
                    "nodeType": "IfStatement",
                    "src": "19235:388:35",
                    "trueBody": {
                      "id": 9049,
                      "nodeType": "Block",
                      "src": "19290:144:35",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 9042,
                                    "name": "sender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8817,
                                    "src": "19320:6:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 9043,
                                    "name": "recipientHolder",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8843,
                                    "src": "19328:15:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 9044,
                                    "name": "selectedUserTradeData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8894,
                                    "src": "19345:21:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                                      "typeString": "struct Swaps.UserTradeData memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                                      "typeString": "struct Swaps.UserTradeData memory"
                                    }
                                  ],
                                  "id": 9041,
                                  "name": "_holdExists",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10822,
                                  "src": "19308:11:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_struct$_UserTradeData_$8118_memory_ptr_$returns$_t_bool_$",
                                    "typeString": "function (address,address,struct Swaps.UserTradeData memory) view returns (bool)"
                                  }
                                },
                                "id": 9045,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "19308:59:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "486f6c64206e6565647320746f2062652070726f766964656420696e20746f6b656e20736d61727420636f6e7472616374206669727374",
                                "id": 9046,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "19369:57:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_da45f966b1666be0485ea33966a8cad21440f8e36525938af606e1c834d9b4c8",
                                  "typeString": "literal_string \"Hold needs to be provided in token smart contract first\""
                                },
                                "value": "Hold needs to be provided in token smart contract first"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_da45f966b1666be0485ea33966a8cad21440f8e36525938af606e1c834d9b4c8",
                                  "typeString": "literal_string \"Hold needs to be provided in token smart contract first\""
                                }
                              ],
                              "id": 9040,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "src": "19300:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 9047,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19300:127:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 9048,
                          "nodeType": "ExpressionStatement",
                          "src": "19300:127:35"
                        }
                      ]
                    }
                  },
                  "id": 9060,
                  "nodeType": "IfStatement",
                  "src": "18028:1595:35",
                  "trueBody": {
                    "id": 9034,
                    "nodeType": "Block",
                    "src": "18084:1145:35",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_Standard_$8036",
                            "typeString": "enum Swaps.Standard"
                          },
                          "id": 8922,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 8918,
                              "name": "selectedUserTradeData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8894,
                              "src": "18095:21:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                                "typeString": "struct Swaps.UserTradeData memory"
                              }
                            },
                            "id": 8919,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenStandard",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8110,
                            "src": "18095:35:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Standard_$8036",
                              "typeString": "enum Swaps.Standard"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 8920,
                              "name": "Standard",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8036,
                              "src": "18134:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Standard_$8036_$",
                                "typeString": "type(enum Swaps.Standard)"
                              }
                            },
                            "id": 8921,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ETH",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8032,
                            "src": "18134:12:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Standard_$8036",
                              "typeString": "enum Swaps.Standard"
                            }
                          },
                          "src": "18095:51:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_Standard_$8036",
                              "typeString": "enum Swaps.Standard"
                            },
                            "id": 8936,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 8932,
                                "name": "selectedUserTradeData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8894,
                                "src": "18261:21:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                                  "typeString": "struct Swaps.UserTradeData memory"
                                }
                              },
                              "id": 8933,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tokenStandard",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8110,
                              "src": "18261:35:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Standard_$8036",
                                "typeString": "enum Swaps.Standard"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 8934,
                                "name": "Standard",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8036,
                                "src": "18300:8:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Standard_$8036_$",
                                  "typeString": "type(enum Swaps.Standard)"
                                }
                              },
                              "id": 8935,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "ERC20",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8033,
                              "src": "18300:14:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Standard_$8036",
                                "typeString": "enum Swaps.Standard"
                              }
                            },
                            "src": "18261:53:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_Standard_$8036",
                                "typeString": "enum Swaps.Standard"
                              },
                              "id": 8956,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 8952,
                                  "name": "selectedUserTradeData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8894,
                                  "src": "18464:21:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                                    "typeString": "struct Swaps.UserTradeData memory"
                                  }
                                },
                                "id": 8953,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tokenStandard",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 8110,
                                "src": "18464:35:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Standard_$8036",
                                  "typeString": "enum Swaps.Standard"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 8954,
                                  "name": "Standard",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8036,
                                  "src": "18503:8:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_Standard_$8036_$",
                                    "typeString": "type(enum Swaps.Standard)"
                                  }
                                },
                                "id": 8955,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "ERC721",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 8034,
                                "src": "18503:15:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Standard_$8036",
                                  "typeString": "enum Swaps.Standard"
                                }
                              },
                              "src": "18464:54:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 8984,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_enum$_Standard_$8036",
                                        "typeString": "enum Swaps.Standard"
                                      },
                                      "id": 8979,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 8975,
                                          "name": "selectedUserTradeData",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 8894,
                                          "src": "18668:21:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                                            "typeString": "struct Swaps.UserTradeData memory"
                                          }
                                        },
                                        "id": 8976,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "tokenStandard",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 8110,
                                        "src": "18668:35:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_Standard_$8036",
                                          "typeString": "enum Swaps.Standard"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "expression": {
                                          "id": 8977,
                                          "name": "Standard",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 8036,
                                          "src": "18707:8:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_enum$_Standard_$8036_$",
                                            "typeString": "type(enum Swaps.Standard)"
                                          }
                                        },
                                        "id": 8978,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "ERC1400",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 8035,
                                        "src": "18707:16:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_Standard_$8036",
                                          "typeString": "enum Swaps.Standard"
                                        }
                                      },
                                      "src": "18668:55:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    }
                                  ],
                                  "id": 8980,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "18667:57:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 8983,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 8981,
                                    "name": "erc1400TokenValue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8821,
                                    "src": "18728:17:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 8982,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "18749:1:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "18728:22:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "18667:83:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 9019,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_enum$_Standard_$8036",
                                          "typeString": "enum Swaps.Standard"
                                        },
                                        "id": 9014,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 9010,
                                            "name": "selectedUserTradeData",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 8894,
                                            "src": "19016:21:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                                              "typeString": "struct Swaps.UserTradeData memory"
                                            }
                                          },
                                          "id": 9011,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "tokenStandard",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 8110,
                                          "src": "19016:35:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_Standard_$8036",
                                            "typeString": "enum Swaps.Standard"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "expression": {
                                            "id": 9012,
                                            "name": "Standard",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 8036,
                                            "src": "19055:8:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_enum$_Standard_$8036_$",
                                              "typeString": "type(enum Swaps.Standard)"
                                            }
                                          },
                                          "id": 9013,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "ERC1400",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 8035,
                                          "src": "19055:16:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_Standard_$8036",
                                            "typeString": "enum Swaps.Standard"
                                          }
                                        },
                                        "src": "19016:55:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      }
                                    ],
                                    "id": 9015,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "19015:57:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "&&",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 9018,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 9016,
                                      "name": "erc1400TokenValue",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8821,
                                      "src": "19076:17:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 9017,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "19097:1:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "19076:22:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "19015:83:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 9029,
                                "nodeType": "IfStatement",
                                "src": "19012:211:35",
                                "trueBody": {
                                  "id": 9028,
                                  "nodeType": "Block",
                                  "src": "19099:124:35",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 9024,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 9021,
                                              "name": "erc1400TokenValue",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 8821,
                                              "src": "19117:17:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "expression": {
                                                "id": 9022,
                                                "name": "selectedUserTradeData",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 8894,
                                                "src": "19138:21:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                                                  "typeString": "struct Swaps.UserTradeData memory"
                                                }
                                              },
                                              "id": 9023,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "tokenValue",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 8105,
                                              "src": "19138:32:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "19117:53:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          {
                                            "hexValue": "416d6f756e74206f66204552433134303020746f6b656e73206973206e6f7420636f7272656374",
                                            "id": 9025,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "string",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "19172:41:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_stringliteral_0d4b85b88b80072b90afee0107a9a29103e9d81c09bf5da6eae9a80121a9ce6b",
                                              "typeString": "literal_string \"Amount of ERC1400 tokens is not correct\""
                                            },
                                            "value": "Amount of ERC1400 tokens is not correct"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            },
                                            {
                                              "typeIdentifier": "t_stringliteral_0d4b85b88b80072b90afee0107a9a29103e9d81c09bf5da6eae9a80121a9ce6b",
                                              "typeString": "literal_string \"Amount of ERC1400 tokens is not correct\""
                                            }
                                          ],
                                          "id": 9020,
                                          "name": "require",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [
                                            4294967278,
                                            4294967278
                                          ],
                                          "referencedDeclaration": 4294967278,
                                          "src": "19109:7:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                            "typeString": "function (bool,string memory) pure"
                                          }
                                        },
                                        "id": 9026,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "19109:105:35",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                        }
                                      },
                                      "id": 9027,
                                      "nodeType": "ExpressionStatement",
                                      "src": "19109:105:35"
                                    }
                                  ]
                                }
                              },
                              "id": 9030,
                              "nodeType": "IfStatement",
                              "src": "18664:559:35",
                              "trueBody": {
                                "id": 9009,
                                "nodeType": "Block",
                                "src": "18751:255:35",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 8990,
                                            "name": "selectedUserTradeData",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 8894,
                                            "src": "18834:21:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                                              "typeString": "struct Swaps.UserTradeData memory"
                                            }
                                          },
                                          "id": 8991,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "tokenId",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 8107,
                                          "src": "18834:29:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        },
                                        {
                                          "id": 8992,
                                          "name": "sender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 8817,
                                          "src": "18865:6:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "id": 8995,
                                              "name": "this",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4294967268,
                                              "src": "18881:4:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_Swaps_$11766",
                                                "typeString": "contract Swaps"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_Swaps_$11766",
                                                "typeString": "contract Swaps"
                                              }
                                            ],
                                            "id": 8994,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "18873:7:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 8993,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "18873:7:35",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 8996,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "18873:13:35",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 8997,
                                            "name": "selectedUserTradeData",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 8894,
                                            "src": "18888:21:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                                              "typeString": "struct Swaps.UserTradeData memory"
                                            }
                                          },
                                          "id": 8998,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "tokenValue",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 8105,
                                          "src": "18888:32:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "id": 9001,
                                              "name": "BYPASS_ACTION_FLAG",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 8027,
                                              "src": "18939:18:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            ],
                                            "expression": {
                                              "id": 8999,
                                              "name": "abi",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4294967295,
                                              "src": "18922:3:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_abi",
                                                "typeString": "abi"
                                              }
                                            },
                                            "id": 9000,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "encodePacked",
                                            "nodeType": "MemberAccess",
                                            "src": "18922:16:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                              "typeString": "function () pure returns (bytes memory)"
                                            }
                                          },
                                          "id": 9002,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "18922:36:35",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "id": 9005,
                                              "name": "BYPASS_ACTION_FLAG",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 8027,
                                              "src": "18977:18:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            ],
                                            "expression": {
                                              "id": 9003,
                                              "name": "abi",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4294967295,
                                              "src": "18960:3:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_abi",
                                                "typeString": "abi"
                                              }
                                            },
                                            "id": 9004,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "encodePacked",
                                            "nodeType": "MemberAccess",
                                            "src": "18960:16:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                              "typeString": "function () pure returns (bytes memory)"
                                            }
                                          },
                                          "id": 9006,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "18960:36:35",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          },
                                          {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        ],
                                        "expression": {
                                          "arguments": [
                                            {
                                              "expression": {
                                                "id": 8986,
                                                "name": "selectedUserTradeData",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 8894,
                                                "src": "18770:21:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                                                  "typeString": "struct Swaps.UserTradeData memory"
                                                }
                                              },
                                              "id": 8987,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "tokenAddress",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 8103,
                                              "src": "18770:34:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 8985,
                                            "name": "IERC1400",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1790,
                                            "src": "18761:8:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_IERC1400_$1790_$",
                                              "typeString": "type(contract IERC1400)"
                                            }
                                          },
                                          "id": 8988,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "18761:44:35",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC1400_$1790",
                                            "typeString": "contract IERC1400"
                                          }
                                        },
                                        "id": 8989,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "operatorTransferByPartition",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1570,
                                        "src": "18761:72:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                          "typeString": "function (bytes32,address,address,uint256,bytes memory,bytes memory) external returns (bytes32)"
                                        }
                                      },
                                      "id": 9007,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "18761:236:35",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "id": 9008,
                                    "nodeType": "ExpressionStatement",
                                    "src": "18761:236:35"
                                  }
                                ]
                              }
                            },
                            "id": 9031,
                            "nodeType": "IfStatement",
                            "src": "18461:762:35",
                            "trueBody": {
                              "id": 8974,
                              "nodeType": "Block",
                              "src": "18520:138:35",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 8962,
                                        "name": "sender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 8817,
                                        "src": "18587:6:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "id": 8965,
                                            "name": "this",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967268,
                                            "src": "18603:4:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_Swaps_$11766",
                                              "typeString": "contract Swaps"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_Swaps_$11766",
                                              "typeString": "contract Swaps"
                                            }
                                          ],
                                          "id": 8964,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "18595:7:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 8963,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "18595:7:35",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 8966,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "18595:13:35",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "expression": {
                                              "id": 8969,
                                              "name": "selectedUserTradeData",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 8894,
                                              "src": "18618:21:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                                                "typeString": "struct Swaps.UserTradeData memory"
                                              }
                                            },
                                            "id": 8970,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "tokenId",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 8107,
                                            "src": "18618:29:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          ],
                                          "id": 8968,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "18610:7:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint256_$",
                                            "typeString": "type(uint256)"
                                          },
                                          "typeName": {
                                            "id": 8967,
                                            "name": "uint256",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "18610:7:35",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 8971,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "18610:38:35",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "expression": {
                                              "id": 8958,
                                              "name": "selectedUserTradeData",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 8894,
                                              "src": "18538:21:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                                                "typeString": "struct Swaps.UserTradeData memory"
                                              }
                                            },
                                            "id": 8959,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "tokenAddress",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 8103,
                                            "src": "18538:34:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 8957,
                                          "name": "IERC721",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1059,
                                          "src": "18530:7:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC721_$1059_$",
                                            "typeString": "type(contract IERC721)"
                                          }
                                        },
                                        "id": 8960,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "18530:43:35",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC721_$1059",
                                          "typeString": "contract IERC721"
                                        }
                                      },
                                      "id": 8961,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "transferFrom",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1012,
                                      "src": "18530:56:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                        "typeString": "function (address,address,uint256) external"
                                      }
                                    },
                                    "id": 8972,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "18530:119:35",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 8973,
                                  "nodeType": "ExpressionStatement",
                                  "src": "18530:119:35"
                                }
                              ]
                            }
                          },
                          "id": 9032,
                          "nodeType": "IfStatement",
                          "src": "18258:965:35",
                          "trueBody": {
                            "id": 8951,
                            "nodeType": "Block",
                            "src": "18316:139:35",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 8942,
                                      "name": "sender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8817,
                                      "src": "18390:6:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "id": 8945,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967268,
                                          "src": "18406:4:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Swaps_$11766",
                                            "typeString": "contract Swaps"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_Swaps_$11766",
                                            "typeString": "contract Swaps"
                                          }
                                        ],
                                        "id": 8944,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "18398:7:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 8943,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "18398:7:35",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 8946,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "18398:13:35",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 8947,
                                        "name": "selectedUserTradeData",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 8894,
                                        "src": "18413:21:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                                          "typeString": "struct Swaps.UserTradeData memory"
                                        }
                                      },
                                      "id": 8948,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "tokenValue",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 8105,
                                      "src": "18413:32:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 8938,
                                            "name": "selectedUserTradeData",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 8894,
                                            "src": "18341:21:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                                              "typeString": "struct Swaps.UserTradeData memory"
                                            }
                                          },
                                          "id": 8939,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "tokenAddress",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 8103,
                                          "src": "18341:34:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 8937,
                                        "name": "IERC20",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 819,
                                        "src": "18334:6:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_IERC20_$819_$",
                                          "typeString": "type(contract IERC20)"
                                        }
                                      },
                                      "id": 8940,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "18334:42:35",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$819",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 8941,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "transferFrom",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 800,
                                    "src": "18334:55:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function (address,address,uint256) external returns (bool)"
                                    }
                                  },
                                  "id": 8949,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "18334:112:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 8950,
                                "nodeType": "ExpressionStatement",
                                "src": "18334:112:35"
                              }
                            ]
                          }
                        },
                        "id": 9033,
                        "nodeType": "IfStatement",
                        "src": "18092:1131:35",
                        "trueBody": {
                          "id": 8931,
                          "nodeType": "Block",
                          "src": "18148:104:35",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 8927,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 8924,
                                      "name": "ethValue",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8819,
                                      "src": "18166:8:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 8925,
                                        "name": "selectedUserTradeData",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 8894,
                                        "src": "18178:21:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                                          "typeString": "struct Swaps.UserTradeData memory"
                                        }
                                      },
                                      "id": 8926,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "tokenValue",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 8105,
                                      "src": "18178:32:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "18166:44:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "416d6f756e74206f6620455448206973206e6f7420636f7272656374",
                                    "id": 8928,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "18212:30:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_3fdd50b576f957d76e864f96b9d0c991bd6b1f33ca019606da09db7f23167ec4",
                                      "typeString": "literal_string \"Amount of ETH is not correct\""
                                    },
                                    "value": "Amount of ETH is not correct"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_3fdd50b576f957d76e864f96b9d0c991bd6b1f33ca019606da09db7f23167ec4",
                                      "typeString": "literal_string \"Amount of ETH is not correct\""
                                    }
                                  ],
                                  "id": 8923,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    4294967278,
                                    4294967278
                                  ],
                                  "referencedDeclaration": 4294967278,
                                  "src": "18158:7:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 8929,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18158:85:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 8930,
                              "nodeType": "ExpressionStatement",
                              "src": "18158:85:35"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 9064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 9061,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8817,
                      "src": "19632:6:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 9062,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8828,
                        "src": "19642:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 9063,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "holder1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8155,
                      "src": "19642:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "19632:23:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 9082,
                    "nodeType": "Block",
                    "src": "19714:51:35",
                    "statements": [
                      {
                        "expression": {
                          "id": 9080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "expression": {
                                "id": 9074,
                                "name": "trade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8828,
                                "src": "19722:5:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                  "typeString": "struct Swaps.Trade storage pointer"
                                }
                              },
                              "id": 9077,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "userTradeData2",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8169,
                              "src": "19722:20:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                                "typeString": "struct Swaps.UserTradeData storage ref"
                              }
                            },
                            "id": 9078,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "accepted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8112,
                            "src": "19722:29:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 9079,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19754:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "19722:36:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 9081,
                        "nodeType": "ExpressionStatement",
                        "src": "19722:36:35"
                      }
                    ]
                  },
                  "id": 9083,
                  "nodeType": "IfStatement",
                  "src": "19629:136:35",
                  "trueBody": {
                    "id": 9073,
                    "nodeType": "Block",
                    "src": "19657:51:35",
                    "statements": [
                      {
                        "expression": {
                          "id": 9071,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "expression": {
                                "id": 9065,
                                "name": "trade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8828,
                                "src": "19665:5:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                  "typeString": "struct Swaps.Trade storage pointer"
                                }
                              },
                              "id": 9068,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "userTradeData1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8166,
                              "src": "19665:20:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                                "typeString": "struct Swaps.UserTradeData storage ref"
                              }
                            },
                            "id": 9069,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "accepted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8112,
                            "src": "19665:29:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 9070,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19697:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "19665:36:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 9072,
                        "nodeType": "ExpressionStatement",
                        "src": "19665:36:35"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    9085
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9085,
                      "mutability": "mutable",
                      "name": "settlementDatePassed",
                      "nameLocation": "19781:20:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 9184,
                      "src": "19776:25:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 9084,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "19776:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9091,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 9086,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "19804:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 9087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "19804:15:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "expression": {
                        "id": 9088,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8828,
                        "src": "19823:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 9089,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "settlementDate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8163,
                      "src": "19823:20:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19804:39:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19776:67:35"
                },
                {
                  "assignments": [
                    9093
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9093,
                      "mutability": "mutable",
                      "name": "tradeApproved",
                      "nameLocation": "19854:13:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 9184,
                      "src": "19849:18:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 9092,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "19849:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9097,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 9095,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8815,
                        "src": "19893:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9094,
                      "name": "getTradeApprovalStatus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9523,
                      "src": "19870:22:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 9096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19870:29:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19849:50:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 9122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 9120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 9113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 9106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 9098,
                            "name": "settlementDatePassed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9085,
                            "src": "20369:20:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 9105,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 9099,
                                "name": "trade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8828,
                                "src": "20393:5:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                  "typeString": "struct Swaps.Trade storage pointer"
                                }
                              },
                              "id": 9100,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "executer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8159,
                              "src": "20393:14:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 9103,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "20419:1:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 9102,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "20411:7:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 9101,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "20411:7:35",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 9104,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "20411:10:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "20393:28:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "20369:52:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_TradeType_$8046",
                            "typeString": "enum Swaps.TradeType"
                          },
                          "id": 9112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 9107,
                                "name": "trade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8828,
                                "src": "20425:5:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                  "typeString": "struct Swaps.Trade storage pointer"
                                }
                              },
                              "id": 9108,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "userTradeData1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8166,
                              "src": "20425:20:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                                "typeString": "struct Swaps.UserTradeData storage ref"
                              }
                            },
                            "id": 9109,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tradeType",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8117,
                            "src": "20425:30:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_TradeType_$8046",
                              "typeString": "enum Swaps.TradeType"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 9110,
                              "name": "TradeType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8046,
                              "src": "20459:9:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_TradeType_$8046_$",
                                "typeString": "type(enum Swaps.TradeType)"
                              }
                            },
                            "id": 9111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Hold",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8044,
                            "src": "20459:14:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_TradeType_$8046",
                              "typeString": "enum Swaps.TradeType"
                            }
                          },
                          "src": "20425:48:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "20369:104:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_enum$_TradeType_$8046",
                          "typeString": "enum Swaps.TradeType"
                        },
                        "id": 9119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "expression": {
                              "id": 9114,
                              "name": "trade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8828,
                              "src": "20477:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                "typeString": "struct Swaps.Trade storage pointer"
                              }
                            },
                            "id": 9115,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "userTradeData2",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8169,
                            "src": "20477:20:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                              "typeString": "struct Swaps.UserTradeData storage ref"
                            }
                          },
                          "id": 9116,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tradeType",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8117,
                          "src": "20477:30:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_TradeType_$8046",
                            "typeString": "enum Swaps.TradeType"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 9117,
                            "name": "TradeType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8046,
                            "src": "20511:9:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_TradeType_$8046_$",
                              "typeString": "type(enum Swaps.TradeType)"
                            }
                          },
                          "id": 9118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Hold",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8044,
                          "src": "20511:14:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_TradeType_$8046",
                            "typeString": "enum Swaps.TradeType"
                          }
                        },
                        "src": "20477:48:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "20369:156:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 9121,
                      "name": "tradeApproved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9093,
                      "src": "20529:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "20369:173:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9161,
                  "nodeType": "IfStatement",
                  "src": "20365:672:35",
                  "trueBody": {
                    "id": 9160,
                    "nodeType": "Block",
                    "src": "20544:493:35",
                    "statements": [
                      {
                        "assignments": [
                          9125
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 9125,
                            "mutability": "mutable",
                            "name": "otherUserTradeData",
                            "nameLocation": "20658:18:35",
                            "nodeType": "VariableDeclaration",
                            "scope": 9160,
                            "src": "20637:39:35",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                              "typeString": "struct Swaps.UserTradeData"
                            },
                            "typeName": {
                              "id": 9124,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 9123,
                                "name": "UserTradeData",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 8118,
                                "src": "20637:13:35"
                              },
                              "referencedDeclaration": 8118,
                              "src": "20637:13:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserTradeData_$8118_storage_ptr",
                                "typeString": "struct Swaps.UserTradeData"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 9136,
                        "initialValue": {
                          "condition": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 9129,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 9126,
                                  "name": "sender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8817,
                                  "src": "20680:6:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 9127,
                                    "name": "trade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8828,
                                    "src": "20690:5:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                      "typeString": "struct Swaps.Trade storage pointer"
                                    }
                                  },
                                  "id": 9128,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "holder1",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8155,
                                  "src": "20690:13:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "20680:23:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 9130,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "20679:25:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "expression": {
                              "id": 9133,
                              "name": "trade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8828,
                              "src": "20730:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                "typeString": "struct Swaps.Trade storage pointer"
                              }
                            },
                            "id": 9134,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "userTradeData1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8166,
                            "src": "20730:20:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                              "typeString": "struct Swaps.UserTradeData storage ref"
                            }
                          },
                          "id": 9135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "20679:71:35",
                          "trueExpression": {
                            "expression": {
                              "id": 9131,
                              "name": "trade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8828,
                              "src": "20707:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                "typeString": "struct Swaps.Trade storage pointer"
                              }
                            },
                            "id": 9132,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "userTradeData2",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8169,
                            "src": "20707:20:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                              "typeString": "struct Swaps.UserTradeData storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserTradeData_$8118_storage_ptr",
                            "typeString": "struct Swaps.UserTradeData storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20637:113:35"
                      },
                      {
                        "condition": {
                          "arguments": [
                            {
                              "id": 9138,
                              "name": "recipientHolder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8843,
                              "src": "20774:15:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 9139,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8817,
                              "src": "20791:6:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 9140,
                              "name": "otherUserTradeData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9125,
                              "src": "20799:18:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                                "typeString": "struct Swaps.UserTradeData memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                                "typeString": "struct Swaps.UserTradeData memory"
                              }
                            ],
                            "id": 9137,
                            "name": "_holdExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10822,
                            "src": "20762:11:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_struct$_UserTradeData_$8118_memory_ptr_$returns$_t_bool_$",
                              "typeString": "function (address,address,struct Swaps.UserTradeData memory) view returns (bool)"
                            }
                          },
                          "id": 9141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20762:56:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 9159,
                        "nodeType": "IfStatement",
                        "src": "20758:273:35",
                        "trueBody": {
                          "id": 9158,
                          "nodeType": "Block",
                          "src": "20820:211:35",
                          "statements": [
                            {
                              "expression": {
                                "id": 9148,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "expression": {
                                      "id": 9142,
                                      "name": "trade",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8828,
                                      "src": "20940:5:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                        "typeString": "struct Swaps.Trade storage pointer"
                                      }
                                    },
                                    "id": 9145,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "userTradeData1",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 8166,
                                    "src": "20940:20:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                                      "typeString": "struct Swaps.UserTradeData storage ref"
                                    }
                                  },
                                  "id": 9146,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "accepted",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8112,
                                  "src": "20940:29:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 9147,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "20972:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "20940:36:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 9149,
                              "nodeType": "ExpressionStatement",
                              "src": "20940:36:35"
                            },
                            {
                              "expression": {
                                "id": 9156,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "expression": {
                                      "id": 9150,
                                      "name": "trade",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8828,
                                      "src": "20986:5:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                        "typeString": "struct Swaps.Trade storage pointer"
                                      }
                                    },
                                    "id": 9153,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "userTradeData2",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 8169,
                                    "src": "20986:20:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                                      "typeString": "struct Swaps.UserTradeData storage ref"
                                    }
                                  },
                                  "id": 9154,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "accepted",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8112,
                                  "src": "20986:29:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 9155,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "21018:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "20986:36:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 9157,
                              "nodeType": "ExpressionStatement",
                              "src": "20986:36:35"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 9176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 9174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 9172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 9168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 9162,
                              "name": "trade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8828,
                              "src": "21053:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                "typeString": "struct Swaps.Trade storage pointer"
                              }
                            },
                            "id": 9163,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "executer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8159,
                            "src": "21053:14:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 9166,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "21079:1:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 9165,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "21071:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 9164,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "21071:7:35",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 9167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "21071:10:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "21053:28:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 9170,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8815,
                              "src": "21110:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 9169,
                            "name": "getTradeAcceptanceStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9253,
                            "src": "21085:24:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 9171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21085:31:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "21053:63:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "id": 9173,
                        "name": "tradeApproved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9093,
                        "src": "21120:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "21053:80:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 9175,
                      "name": "settlementDatePassed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9085,
                      "src": "21137:20:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "21053:104:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9183,
                  "nodeType": "IfStatement",
                  "src": "21043:161:35",
                  "trueBody": {
                    "id": 9182,
                    "nodeType": "Block",
                    "src": "21159:45:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 9178,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8815,
                              "src": "21181:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 9179,
                              "name": "preimage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8823,
                              "src": "21188:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 9177,
                            "name": "_executeTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9721,
                            "src": "21167:13:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$returns$__$",
                              "typeString": "function (uint256,bytes32)"
                            }
                          },
                          "id": 9180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21167:30:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9181,
                        "nodeType": "ExpressionStatement",
                        "src": "21167:30:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 8813,
              "nodeType": "StructuredDocumentation",
              "src": "16923:275:35",
              "text": " @dev Accept a given trade (+ potentially escrow tokens).\n @param index Index of the trade to be accepted.\n @param sender Message sender\n @param ethValue Value sent (only used for ETH)\n @param erc1400TokenValue Value sent (only used for ERC1400)"
            },
            "id": 9185,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_acceptTrade",
            "nameLocation": "17210:12:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8815,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "17231:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 9185,
                  "src": "17223:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8814,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17223:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8817,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "17246:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 9185,
                  "src": "17238:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8816,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17238:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8819,
                  "mutability": "mutable",
                  "name": "ethValue",
                  "nameLocation": "17262:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 9185,
                  "src": "17254:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8818,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17254:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8821,
                  "mutability": "mutable",
                  "name": "erc1400TokenValue",
                  "nameLocation": "17280:17:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 9185,
                  "src": "17272:25:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8820,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17272:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8823,
                  "mutability": "mutable",
                  "name": "preimage",
                  "nameLocation": "17307:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 9185,
                  "src": "17299:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8822,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "17299:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17222:94:35"
            },
            "returnParameters": {
              "id": 8825,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17326:0:35"
            },
            "scope": 11766,
            "src": "17201:4007:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9252,
              "nodeType": "Block",
              "src": "21522:486:35",
              "statements": [
                {
                  "assignments": [
                    9195
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9195,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "21542:5:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 9252,
                      "src": "21528:19:35",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                        "typeString": "struct Swaps.Trade"
                      },
                      "typeName": {
                        "id": 9194,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9193,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8173,
                          "src": "21528:5:35"
                        },
                        "referencedDeclaration": 8173,
                        "src": "21528:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9199,
                  "initialValue": {
                    "baseExpression": {
                      "id": 9196,
                      "name": "_trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8180,
                      "src": "21550:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$8173_storage_$",
                        "typeString": "mapping(uint256 => struct Swaps.Trade storage ref)"
                      }
                    },
                    "id": 9198,
                    "indexExpression": {
                      "id": 9197,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9188,
                      "src": "21558:5:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "21550:14:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$8173_storage",
                      "typeString": "struct Swaps.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21528:36:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_State_$8042",
                      "typeString": "enum Swaps.State"
                    },
                    "id": 9204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 9200,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9195,
                        "src": "21574:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 9201,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8172,
                      "src": "21574:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$8042",
                        "typeString": "enum Swaps.State"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 9202,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8042,
                        "src": "21589:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$8042_$",
                          "typeString": "type(enum Swaps.State)"
                        }
                      },
                      "id": 9203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Pending",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8038,
                      "src": "21589:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$8042",
                        "typeString": "enum Swaps.State"
                      }
                    },
                    "src": "21574:28:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9242,
                  "nodeType": "IfStatement",
                  "src": "21571:356:35",
                  "trueBody": {
                    "id": 9241,
                    "nodeType": "Block",
                    "src": "21604:323:35",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 9218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_TradeType_$8046",
                              "typeString": "enum Swaps.TradeType"
                            },
                            "id": 9210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "expression": {
                                  "id": 9205,
                                  "name": "trade",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9195,
                                  "src": "21615:5:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                    "typeString": "struct Swaps.Trade storage pointer"
                                  }
                                },
                                "id": 9206,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "userTradeData1",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 8166,
                                "src": "21615:20:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                                  "typeString": "struct Swaps.UserTradeData storage ref"
                                }
                              },
                              "id": 9207,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tradeType",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8117,
                              "src": "21615:30:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_TradeType_$8046",
                                "typeString": "enum Swaps.TradeType"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 9208,
                                "name": "TradeType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8046,
                                "src": "21649:9:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_TradeType_$8046_$",
                                  "typeString": "type(enum Swaps.TradeType)"
                                }
                              },
                              "id": 9209,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Allowance",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8043,
                              "src": "21649:19:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_TradeType_$8046",
                                "typeString": "enum Swaps.TradeType"
                              }
                            },
                            "src": "21615:53:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 9217,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "21672:58:35",
                            "subExpression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 9212,
                                    "name": "trade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9195,
                                    "src": "21694:5:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                      "typeString": "struct Swaps.Trade storage pointer"
                                    }
                                  },
                                  "id": 9213,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "holder1",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8155,
                                  "src": "21694:13:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 9214,
                                    "name": "trade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9195,
                                    "src": "21709:5:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                      "typeString": "struct Swaps.Trade storage pointer"
                                    }
                                  },
                                  "id": 9215,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "userTradeData1",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8166,
                                  "src": "21709:20:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                                    "typeString": "struct Swaps.UserTradeData storage ref"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                                    "typeString": "struct Swaps.UserTradeData storage ref"
                                  }
                                ],
                                "id": 9211,
                                "name": "_allowanceIsProvided",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9351,
                                "src": "21673:20:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_struct$_UserTradeData_$8118_memory_ptr_$returns$_t_bool_$",
                                  "typeString": "function (address,struct Swaps.UserTradeData memory) view returns (bool)"
                                }
                              },
                              "id": 9216,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "21673:57:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "21615:115:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 9222,
                        "nodeType": "IfStatement",
                        "src": "21612:151:35",
                        "trueBody": {
                          "id": 9221,
                          "nodeType": "Block",
                          "src": "21732:31:35",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 9219,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "21749:5:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 9192,
                              "id": 9220,
                              "nodeType": "Return",
                              "src": "21742:12:35"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 9236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_TradeType_$8046",
                              "typeString": "enum Swaps.TradeType"
                            },
                            "id": 9228,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "expression": {
                                  "id": 9223,
                                  "name": "trade",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9195,
                                  "src": "21773:5:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                    "typeString": "struct Swaps.Trade storage pointer"
                                  }
                                },
                                "id": 9224,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "userTradeData2",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 8169,
                                "src": "21773:20:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                                  "typeString": "struct Swaps.UserTradeData storage ref"
                                }
                              },
                              "id": 9225,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tradeType",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8117,
                              "src": "21773:30:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_TradeType_$8046",
                                "typeString": "enum Swaps.TradeType"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 9226,
                                "name": "TradeType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8046,
                                "src": "21807:9:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_TradeType_$8046_$",
                                  "typeString": "type(enum Swaps.TradeType)"
                                }
                              },
                              "id": 9227,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Allowance",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8043,
                              "src": "21807:19:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_TradeType_$8046",
                                "typeString": "enum Swaps.TradeType"
                              }
                            },
                            "src": "21773:53:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 9235,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "21830:58:35",
                            "subExpression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 9230,
                                    "name": "trade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9195,
                                    "src": "21852:5:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                      "typeString": "struct Swaps.Trade storage pointer"
                                    }
                                  },
                                  "id": 9231,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "holder2",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8157,
                                  "src": "21852:13:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 9232,
                                    "name": "trade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9195,
                                    "src": "21867:5:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                      "typeString": "struct Swaps.Trade storage pointer"
                                    }
                                  },
                                  "id": 9233,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "userTradeData2",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8169,
                                  "src": "21867:20:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                                    "typeString": "struct Swaps.UserTradeData storage ref"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                                    "typeString": "struct Swaps.UserTradeData storage ref"
                                  }
                                ],
                                "id": 9229,
                                "name": "_allowanceIsProvided",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9351,
                                "src": "21831:20:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_struct$_UserTradeData_$8118_memory_ptr_$returns$_t_bool_$",
                                  "typeString": "function (address,struct Swaps.UserTradeData memory) view returns (bool)"
                                }
                              },
                              "id": 9234,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "21831:57:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "21773:115:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 9240,
                        "nodeType": "IfStatement",
                        "src": "21770:151:35",
                        "trueBody": {
                          "id": 9239,
                          "nodeType": "Block",
                          "src": "21890:31:35",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 9237,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "21907:5:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 9192,
                              "id": 9238,
                              "nodeType": "Return",
                              "src": "21900:12:35"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 9249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "expression": {
                              "id": 9243,
                              "name": "trade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9195,
                              "src": "21940:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                "typeString": "struct Swaps.Trade storage pointer"
                              }
                            },
                            "id": 9244,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "userTradeData1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8166,
                            "src": "21940:20:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                              "typeString": "struct Swaps.UserTradeData storage ref"
                            }
                          },
                          "id": 9245,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "accepted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8112,
                          "src": "21940:29:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "id": 9246,
                              "name": "trade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9195,
                              "src": "21973:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                "typeString": "struct Swaps.Trade storage pointer"
                              }
                            },
                            "id": 9247,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "userTradeData2",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8169,
                            "src": "21973:20:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                              "typeString": "struct Swaps.UserTradeData storage ref"
                            }
                          },
                          "id": 9248,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "accepted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8112,
                          "src": "21973:29:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "21940:62:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 9250,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "21939:64:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 9192,
                  "id": 9251,
                  "nodeType": "Return",
                  "src": "21933:70:35"
                }
              ]
            },
            "documentation": {
              "id": 9186,
              "nodeType": "StructuredDocumentation",
              "src": "21211:233:35",
              "text": " @dev Verify if a trade has been accepted by the token holders.\n The trade needs to be accepted by both parties (token holders) before it gets executed.\n @param index Index of the trade to be accepted."
            },
            "functionSelector": "35341464",
            "id": 9253,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTradeAcceptanceStatus",
            "nameLocation": "21456:24:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9188,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "21489:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 9253,
                  "src": "21481:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9187,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21481:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21480:15:35"
            },
            "returnParameters": {
              "id": 9192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9191,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9253,
                  "src": "21516:4:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9190,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "21516:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21515:6:35"
            },
            "scope": 11766,
            "src": "21447:561:35",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9350,
              "nodeType": "Block",
              "src": "22391:661:35",
              "statements": [
                {
                  "assignments": [
                    9265
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9265,
                      "mutability": "mutable",
                      "name": "tokenAddress",
                      "nameLocation": "22405:12:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 9350,
                      "src": "22397:20:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 9264,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "22397:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9268,
                  "initialValue": {
                    "expression": {
                      "id": 9266,
                      "name": "userTradeData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9259,
                      "src": "22420:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                        "typeString": "struct Swaps.UserTradeData memory"
                      }
                    },
                    "id": 9267,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 8103,
                    "src": "22420:26:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22397:49:35"
                },
                {
                  "assignments": [
                    9270
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9270,
                      "mutability": "mutable",
                      "name": "tokenValue",
                      "nameLocation": "22460:10:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 9350,
                      "src": "22452:18:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9269,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "22452:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9273,
                  "initialValue": {
                    "expression": {
                      "id": 9271,
                      "name": "userTradeData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9259,
                      "src": "22473:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                        "typeString": "struct Swaps.UserTradeData memory"
                      }
                    },
                    "id": 9272,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenValue",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 8105,
                    "src": "22473:24:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22452:45:35"
                },
                {
                  "assignments": [
                    9275
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9275,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "22511:7:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 9350,
                      "src": "22503:15:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 9274,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "22503:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9278,
                  "initialValue": {
                    "expression": {
                      "id": 9276,
                      "name": "userTradeData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9259,
                      "src": "22521:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                        "typeString": "struct Swaps.UserTradeData memory"
                      }
                    },
                    "id": 9277,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenId",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 8107,
                    "src": "22521:21:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22503:39:35"
                },
                {
                  "assignments": [
                    9281
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9281,
                      "mutability": "mutable",
                      "name": "tokenStandard",
                      "nameLocation": "22557:13:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 9350,
                      "src": "22548:22:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Standard_$8036",
                        "typeString": "enum Swaps.Standard"
                      },
                      "typeName": {
                        "id": 9280,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9279,
                          "name": "Standard",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8036,
                          "src": "22548:8:35"
                        },
                        "referencedDeclaration": 8036,
                        "src": "22548:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Standard_$8036",
                          "typeString": "enum Swaps.Standard"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9284,
                  "initialValue": {
                    "expression": {
                      "id": 9282,
                      "name": "userTradeData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9259,
                      "src": "22573:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                        "typeString": "struct Swaps.UserTradeData memory"
                      }
                    },
                    "id": 9283,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenStandard",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 8110,
                    "src": "22573:27:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Standard_$8036",
                      "typeString": "enum Swaps.Standard"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22548:52:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Standard_$8036",
                      "typeString": "enum Swaps.Standard"
                    },
                    "id": 9288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 9285,
                      "name": "tokenStandard",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9281,
                      "src": "22610:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Standard_$8036",
                        "typeString": "enum Swaps.Standard"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 9286,
                        "name": "Standard",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8036,
                        "src": "22627:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Standard_$8036_$",
                          "typeString": "type(enum Swaps.Standard)"
                        }
                      },
                      "id": 9287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ERC20",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8033,
                      "src": "22627:14:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Standard_$8036",
                        "typeString": "enum Swaps.Standard"
                      }
                    },
                    "src": "22610:31:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_Standard_$8036",
                        "typeString": "enum Swaps.Standard"
                      },
                      "id": 9307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 9304,
                        "name": "tokenStandard",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9281,
                        "src": "22750:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Standard_$8036",
                          "typeString": "enum Swaps.Standard"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 9305,
                          "name": "Standard",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8036,
                          "src": "22767:8:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Standard_$8036_$",
                            "typeString": "type(enum Swaps.Standard)"
                          }
                        },
                        "id": 9306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "ERC721",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8034,
                        "src": "22767:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Standard_$8036",
                          "typeString": "enum Swaps.Standard"
                        }
                      },
                      "src": "22750:32:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Standard_$8036",
                          "typeString": "enum Swaps.Standard"
                        },
                        "id": 9328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9325,
                          "name": "tokenStandard",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9281,
                          "src": "22884:13:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Standard_$8036",
                            "typeString": "enum Swaps.Standard"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 9326,
                            "name": "Standard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8036,
                            "src": "22901:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Standard_$8036_$",
                              "typeString": "type(enum Swaps.Standard)"
                            }
                          },
                          "id": 9327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "ERC1400",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8035,
                          "src": "22901:16:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Standard_$8036",
                            "typeString": "enum Swaps.Standard"
                          }
                        },
                        "src": "22884:33:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 9345,
                      "nodeType": "IfStatement",
                      "src": "22881:149:35",
                      "trueBody": {
                        "id": 9344,
                        "nodeType": "Block",
                        "src": "22918:112:35",
                        "statements": [
                          {
                            "expression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 9341,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "id": 9333,
                                        "name": "tokenId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 9275,
                                        "src": "22977:7:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      {
                                        "id": 9334,
                                        "name": "sender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 9256,
                                        "src": "22986:6:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "id": 9337,
                                            "name": "this",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967268,
                                            "src": "23002:4:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_Swaps_$11766",
                                              "typeString": "contract Swaps"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_Swaps_$11766",
                                              "typeString": "contract Swaps"
                                            }
                                          ],
                                          "id": 9336,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "22994:7:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 9335,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "22994:7:35",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 9338,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "22994:13:35",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 9330,
                                            "name": "tokenAddress",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 9265,
                                            "src": "22942:12:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 9329,
                                          "name": "IERC1400",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1790,
                                          "src": "22933:8:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC1400_$1790_$",
                                            "typeString": "type(contract IERC1400)"
                                          }
                                        },
                                        "id": 9331,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "22933:22:35",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC1400_$1790",
                                          "typeString": "contract IERC1400"
                                        }
                                      },
                                      "id": 9332,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "allowanceByPartition",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1581,
                                      "src": "22933:43:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_address_$_t_address_$returns$_t_uint256_$",
                                        "typeString": "function (bytes32,address,address) view external returns (uint256)"
                                      }
                                    },
                                    "id": 9339,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "22933:75:35",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">=",
                                  "rightExpression": {
                                    "id": 9340,
                                    "name": "tokenValue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9270,
                                    "src": "23012:10:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "22933:89:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "id": 9342,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "22932:91:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "functionReturnParameters": 9263,
                            "id": 9343,
                            "nodeType": "Return",
                            "src": "22926:97:35"
                          }
                        ]
                      }
                    },
                    "id": 9346,
                    "nodeType": "IfStatement",
                    "src": "22747:283:35",
                    "trueBody": {
                      "id": 9324,
                      "nodeType": "Block",
                      "src": "22784:91:35",
                      "statements": [
                        {
                          "expression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 9321,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 9314,
                                          "name": "tokenId",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 9275,
                                          "src": "22841:7:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "id": 9313,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "22833:7:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": {
                                          "id": 9312,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "22833:7:35",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 9315,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "22833:16:35",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 9309,
                                          "name": "tokenAddress",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 9265,
                                          "src": "22807:12:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 9308,
                                        "name": "IERC721",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1059,
                                        "src": "22799:7:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_IERC721_$1059_$",
                                          "typeString": "type(contract IERC721)"
                                        }
                                      },
                                      "id": 9310,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "22799:21:35",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC721_$1059",
                                        "typeString": "contract IERC721"
                                      }
                                    },
                                    "id": 9311,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "getApproved",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1028,
                                    "src": "22799:33:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                      "typeString": "function (uint256) view external returns (address)"
                                    }
                                  },
                                  "id": 9316,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "22799:51:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "id": 9319,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967268,
                                      "src": "22862:4:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Swaps_$11766",
                                        "typeString": "contract Swaps"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Swaps_$11766",
                                        "typeString": "contract Swaps"
                                      }
                                    ],
                                    "id": 9318,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "22854:7:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 9317,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "22854:7:35",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 9320,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "22854:13:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "22799:68:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 9322,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "22798:70:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "functionReturnParameters": 9263,
                          "id": 9323,
                          "nodeType": "Return",
                          "src": "22792:76:35"
                        }
                      ]
                    }
                  },
                  "id": 9347,
                  "nodeType": "IfStatement",
                  "src": "22607:423:35",
                  "trueBody": {
                    "id": 9303,
                    "nodeType": "Block",
                    "src": "22643:98:35",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 9300,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 9293,
                                    "name": "sender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9256,
                                    "src": "22697:6:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 9296,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967268,
                                        "src": "22713:4:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Swaps_$11766",
                                          "typeString": "contract Swaps"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_Swaps_$11766",
                                          "typeString": "contract Swaps"
                                        }
                                      ],
                                      "id": 9295,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "22705:7:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 9294,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "22705:7:35",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 9297,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "22705:13:35",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 9290,
                                        "name": "tokenAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 9265,
                                        "src": "22673:12:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 9289,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 819,
                                      "src": "22666:6:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$819_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 9291,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "22666:20:35",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$819",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 9292,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "allowance",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 778,
                                  "src": "22666:30:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address,address) view external returns (uint256)"
                                  }
                                },
                                "id": 9298,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "22666:53:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 9299,
                                "name": "tokenValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9270,
                                "src": "22723:10:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "22666:67:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 9301,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "22665:69:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 9263,
                        "id": 9302,
                        "nodeType": "Return",
                        "src": "22659:75:35"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 9348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "23043:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 9263,
                  "id": 9349,
                  "nodeType": "Return",
                  "src": "23036:11:35"
                }
              ]
            },
            "documentation": {
              "id": 9254,
              "nodeType": "StructuredDocumentation",
              "src": "22012:266:35",
              "text": " @dev Verify if a token allowance has been provided in token smart contract.\n @param sender Address of the sender.\n @param userTradeData Encoded pack of variables for the token (address, amount, id/partition, standard, accepted, approved)."
            },
            "id": 9351,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_allowanceIsProvided",
            "nameLocation": "22290:20:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9260,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9256,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "22319:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 9351,
                  "src": "22311:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9255,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22311:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9259,
                  "mutability": "mutable",
                  "name": "userTradeData",
                  "nameLocation": "22348:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 9351,
                  "src": "22327:34:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                    "typeString": "struct Swaps.UserTradeData"
                  },
                  "typeName": {
                    "id": 9258,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9257,
                      "name": "UserTradeData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8118,
                      "src": "22327:13:35"
                    },
                    "referencedDeclaration": 8118,
                    "src": "22327:13:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserTradeData_$8118_storage_ptr",
                      "typeString": "struct Swaps.UserTradeData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22310:52:35"
            },
            "returnParameters": {
              "id": 9263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9262,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9351,
                  "src": "22385:4:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9261,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "22385:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22384:6:35"
            },
            "scope": 11766,
            "src": "22281:771:35",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9364,
              "nodeType": "Block",
              "src": "23117:55:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9359,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9353,
                        "src": "23148:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 9360,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9355,
                        "src": "23155:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 9361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23165:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 9358,
                      "name": "approveTradeWithPreimage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9471,
                      "src": "23123:24:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,bool,bytes32)"
                      }
                    },
                    "id": 9362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23123:44:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9363,
                  "nodeType": "ExpressionStatement",
                  "src": "23123:44:35"
                }
              ]
            },
            "functionSelector": "6775ce04",
            "id": 9365,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approveTrade",
            "nameLocation": "23065:12:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9353,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "23086:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 9365,
                  "src": "23078:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9352,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23078:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9355,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "23098:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 9365,
                  "src": "23093:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9354,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "23093:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23077:30:35"
            },
            "returnParameters": {
              "id": 9357,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23117:0:35"
            },
            "scope": 11766,
            "src": "23056:116:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9470,
              "nodeType": "Block",
              "src": "23887:747:35",
              "statements": [
                {
                  "assignments": [
                    9377
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9377,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "23907:5:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 9470,
                      "src": "23893:19:35",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                        "typeString": "struct Swaps.Trade"
                      },
                      "typeName": {
                        "id": 9376,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9375,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8173,
                          "src": "23893:5:35"
                        },
                        "referencedDeclaration": 8173,
                        "src": "23893:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9381,
                  "initialValue": {
                    "baseExpression": {
                      "id": 9378,
                      "name": "_trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8180,
                      "src": "23915:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$8173_storage_$",
                        "typeString": "mapping(uint256 => struct Swaps.Trade storage ref)"
                      }
                    },
                    "id": 9380,
                    "indexExpression": {
                      "id": 9379,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9368,
                      "src": "23923:5:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "23915:14:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$8173_storage",
                      "typeString": "struct Swaps.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23893:36:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$8042",
                          "typeString": "enum Swaps.State"
                        },
                        "id": 9387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 9383,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9377,
                            "src": "23943:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                              "typeString": "struct Swaps.Trade storage pointer"
                            }
                          },
                          "id": 9384,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8172,
                          "src": "23943:11:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$8042",
                            "typeString": "enum Swaps.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 9385,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8042,
                            "src": "23958:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$8042_$",
                              "typeString": "type(enum Swaps.State)"
                            }
                          },
                          "id": 9386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Pending",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8038,
                          "src": "23958:13:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$8042",
                            "typeString": "enum Swaps.State"
                          }
                        },
                        "src": "23943:28:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616465206973206e6f742070656e64696e67",
                        "id": 9388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23973:22:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e231b6203d554050a3d3199e807f8cbd9f29dd790d2450a81df72ae0c3a2c875",
                          "typeString": "literal_string \"Trade is not pending\""
                        },
                        "value": "Trade is not pending"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e231b6203d554050a3d3199e807f8cbd9f29dd790d2450a81df72ae0c3a2c875",
                          "typeString": "literal_string \"Trade is not pending\""
                        }
                      ],
                      "id": 9382,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "23935:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23935:61:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9390,
                  "nodeType": "ExpressionStatement",
                  "src": "23935:61:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 9408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 9392,
                              "name": "_isTokenController",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8227,
                              "src": "24011:18:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                "typeString": "mapping(address => mapping(address => bool))"
                              }
                            },
                            "id": 9396,
                            "indexExpression": {
                              "expression": {
                                "expression": {
                                  "id": 9393,
                                  "name": "trade",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9377,
                                  "src": "24030:5:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                    "typeString": "struct Swaps.Trade storage pointer"
                                  }
                                },
                                "id": 9394,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "userTradeData1",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 8166,
                                "src": "24030:20:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                                  "typeString": "struct Swaps.UserTradeData storage ref"
                                }
                              },
                              "id": 9395,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tokenAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8103,
                              "src": "24030:33:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "24011:53:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 9399,
                          "indexExpression": {
                            "expression": {
                              "id": 9397,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "24065:3:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 9398,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "24065:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24011:65:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 9400,
                              "name": "_isTokenController",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8227,
                              "src": "24080:18:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                "typeString": "mapping(address => mapping(address => bool))"
                              }
                            },
                            "id": 9404,
                            "indexExpression": {
                              "expression": {
                                "expression": {
                                  "id": 9401,
                                  "name": "trade",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9377,
                                  "src": "24099:5:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                    "typeString": "struct Swaps.Trade storage pointer"
                                  }
                                },
                                "id": 9402,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "userTradeData2",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 8169,
                                "src": "24099:20:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                                  "typeString": "struct Swaps.UserTradeData storage ref"
                                }
                              },
                              "id": 9403,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tokenAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8103,
                              "src": "24099:33:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "24080:53:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 9407,
                          "indexExpression": {
                            "expression": {
                              "id": 9405,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "24134:3:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 9406,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "24134:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24080:65:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "24011:134:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920746f6b656e20636f6e74726f6c6c657273206f6620696e766f6c76656420746f6b656e732063616e20617070726f76652061207472616465",
                        "id": 9409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24147:63:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_373863ced32ac2eb9784d689aa574556050019791cd28b1e2777baf5ec9163da",
                          "typeString": "literal_string \"Only token controllers of involved tokens can approve a trade\""
                        },
                        "value": "Only token controllers of involved tokens can approve a trade"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_373863ced32ac2eb9784d689aa574556050019791cd28b1e2777baf5ec9163da",
                          "typeString": "literal_string \"Only token controllers of involved tokens can approve a trade\""
                        }
                      ],
                      "id": 9391,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "24003:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24003:208:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9411,
                  "nodeType": "ExpressionStatement",
                  "src": "24003:208:35"
                },
                {
                  "condition": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 9412,
                        "name": "_isTokenController",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8227,
                        "src": "24221:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 9416,
                      "indexExpression": {
                        "expression": {
                          "expression": {
                            "id": 9413,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9377,
                            "src": "24240:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                              "typeString": "struct Swaps.Trade storage pointer"
                            }
                          },
                          "id": 9414,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "userTradeData1",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8166,
                          "src": "24240:20:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                            "typeString": "struct Swaps.UserTradeData storage ref"
                          }
                        },
                        "id": 9415,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8103,
                        "src": "24240:33:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "24221:53:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 9419,
                    "indexExpression": {
                      "expression": {
                        "id": 9417,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "24275:3:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 9418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "24275:10:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "24221:65:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9429,
                  "nodeType": "IfStatement",
                  "src": "24218:125:35",
                  "trueBody": {
                    "id": 9428,
                    "nodeType": "Block",
                    "src": "24288:55:35",
                    "statements": [
                      {
                        "expression": {
                          "id": 9426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "expression": {
                                "id": 9420,
                                "name": "trade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9377,
                                "src": "24296:5:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                  "typeString": "struct Swaps.Trade storage pointer"
                                }
                              },
                              "id": 9423,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "userTradeData1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8166,
                              "src": "24296:20:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                                "typeString": "struct Swaps.UserTradeData storage ref"
                              }
                            },
                            "id": 9424,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "approved",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8114,
                            "src": "24296:29:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 9425,
                            "name": "approved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9370,
                            "src": "24328:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "24296:40:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 9427,
                        "nodeType": "ExpressionStatement",
                        "src": "24296:40:35"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 9430,
                        "name": "_isTokenController",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8227,
                        "src": "24356:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 9434,
                      "indexExpression": {
                        "expression": {
                          "expression": {
                            "id": 9431,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9377,
                            "src": "24375:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                              "typeString": "struct Swaps.Trade storage pointer"
                            }
                          },
                          "id": 9432,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "userTradeData2",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8169,
                          "src": "24375:20:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                            "typeString": "struct Swaps.UserTradeData storage ref"
                          }
                        },
                        "id": 9433,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8103,
                        "src": "24375:33:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "24356:53:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 9437,
                    "indexExpression": {
                      "expression": {
                        "id": 9435,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "24410:3:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 9436,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "24410:10:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "24356:65:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9447,
                  "nodeType": "IfStatement",
                  "src": "24353:125:35",
                  "trueBody": {
                    "id": 9446,
                    "nodeType": "Block",
                    "src": "24423:55:35",
                    "statements": [
                      {
                        "expression": {
                          "id": 9444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "expression": {
                                "id": 9438,
                                "name": "trade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9377,
                                "src": "24431:5:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                  "typeString": "struct Swaps.Trade storage pointer"
                                }
                              },
                              "id": 9441,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "userTradeData2",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8169,
                              "src": "24431:20:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                                "typeString": "struct Swaps.UserTradeData storage ref"
                              }
                            },
                            "id": 9442,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "approved",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8114,
                            "src": "24431:29:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 9443,
                            "name": "approved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9370,
                            "src": "24463:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "24431:40:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 9445,
                        "nodeType": "ExpressionStatement",
                        "src": "24431:40:35"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 9462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 9458,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 9448,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9377,
                            "src": "24487:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                              "typeString": "struct Swaps.Trade storage pointer"
                            }
                          },
                          "id": 9449,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8159,
                          "src": "24487:14:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 9452,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "24513:1:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 9451,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "24505:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9450,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "24505:7:35",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24505:10:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "24487:28:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 9456,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9368,
                            "src": "24544:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 9455,
                          "name": "getTradeAcceptanceStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9253,
                          "src": "24519:24:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 9457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24519:31:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "24487:63:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 9460,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9368,
                          "src": "24577:5:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 9459,
                        "name": "getTradeApprovalStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9523,
                        "src": "24554:22:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view returns (bool)"
                        }
                      },
                      "id": 9461,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "24554:29:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "24487:96:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9469,
                  "nodeType": "IfStatement",
                  "src": "24484:146:35",
                  "trueBody": {
                    "id": 9468,
                    "nodeType": "Block",
                    "src": "24585:45:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 9464,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9368,
                              "src": "24607:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 9465,
                              "name": "preimage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9372,
                              "src": "24614:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 9463,
                            "name": "_executeTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9721,
                            "src": "24593:13:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$returns$__$",
                              "typeString": "function (uint256,bytes32)"
                            }
                          },
                          "id": 9466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24593:30:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9467,
                        "nodeType": "ExpressionStatement",
                        "src": "24593:30:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 9366,
              "nodeType": "StructuredDocumentation",
              "src": "23176:619:35",
              "text": " @dev Approve a trade (if the tokens involved in the trade are controlled)\n This function can only be called by a token controller of one of the tokens involved in the trade.\n Indeed, when a token smart contract is controlled by an owner, the owner can decide to open the\n secondary market by:\n  - Allowlisting the Swaps smart contract\n  - Setting \"token controllers\" in the Swaps smart contract, in order to approve all the trades made with his token\n @param index Index of the trade to be executed.\n @param approved 'true' if trade is approved, 'false' if not."
            },
            "functionSelector": "2cb437d8",
            "id": 9471,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approveTradeWithPreimage",
            "nameLocation": "23807:24:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9373,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9368,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "23840:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 9471,
                  "src": "23832:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9367,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23832:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9370,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "23852:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 9471,
                  "src": "23847:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9369,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "23847:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9372,
                  "mutability": "mutable",
                  "name": "preimage",
                  "nameLocation": "23870:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 9471,
                  "src": "23862:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 9371,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "23862:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23831:48:35"
            },
            "returnParameters": {
              "id": 9374,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23887:0:35"
            },
            "scope": 11766,
            "src": "23798:836:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9522,
              "nodeType": "Block",
              "src": "24966:337:35",
              "statements": [
                {
                  "assignments": [
                    9481
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9481,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "24986:5:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 9522,
                      "src": "24972:19:35",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                        "typeString": "struct Swaps.Trade"
                      },
                      "typeName": {
                        "id": 9480,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9479,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8173,
                          "src": "24972:5:35"
                        },
                        "referencedDeclaration": 8173,
                        "src": "24972:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9485,
                  "initialValue": {
                    "baseExpression": {
                      "id": 9482,
                      "name": "_trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8180,
                      "src": "24994:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$8173_storage_$",
                        "typeString": "mapping(uint256 => struct Swaps.Trade storage ref)"
                      }
                    },
                    "id": 9484,
                    "indexExpression": {
                      "id": 9483,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9474,
                      "src": "25002:5:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "24994:14:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$8173_storage",
                      "typeString": "struct Swaps.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24972:36:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 9498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 9493,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 9486,
                            "name": "_tokenControllers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8221,
                            "src": "25018:17:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                              "typeString": "mapping(address => address[] storage ref)"
                            }
                          },
                          "id": 9490,
                          "indexExpression": {
                            "expression": {
                              "expression": {
                                "id": 9487,
                                "name": "trade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9481,
                                "src": "25036:5:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                  "typeString": "struct Swaps.Trade storage pointer"
                                }
                              },
                              "id": 9488,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "userTradeData1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8166,
                              "src": "25036:20:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                                "typeString": "struct Swaps.UserTradeData storage ref"
                              }
                            },
                            "id": 9489,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8103,
                            "src": "25036:33:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25018:52:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 9491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "25018:59:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 9492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25081:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "25018:64:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 9497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "25086:30:35",
                      "subExpression": {
                        "expression": {
                          "expression": {
                            "id": 9494,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9481,
                            "src": "25087:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                              "typeString": "struct Swaps.Trade storage pointer"
                            }
                          },
                          "id": 9495,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "userTradeData1",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8166,
                          "src": "25087:20:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                            "typeString": "struct Swaps.UserTradeData storage ref"
                          }
                        },
                        "id": 9496,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "approved",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8114,
                        "src": "25087:29:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "25018:98:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9502,
                  "nodeType": "IfStatement",
                  "src": "25015:130:35",
                  "trueBody": {
                    "id": 9501,
                    "nodeType": "Block",
                    "src": "25118:27:35",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 9499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25133:5:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 9478,
                        "id": 9500,
                        "nodeType": "Return",
                        "src": "25126:12:35"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 9515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 9510,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 9503,
                            "name": "_tokenControllers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8221,
                            "src": "25154:17:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                              "typeString": "mapping(address => address[] storage ref)"
                            }
                          },
                          "id": 9507,
                          "indexExpression": {
                            "expression": {
                              "expression": {
                                "id": 9504,
                                "name": "trade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9481,
                                "src": "25172:5:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                  "typeString": "struct Swaps.Trade storage pointer"
                                }
                              },
                              "id": 9505,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "userTradeData2",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8169,
                              "src": "25172:20:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                                "typeString": "struct Swaps.UserTradeData storage ref"
                              }
                            },
                            "id": 9506,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8103,
                            "src": "25172:33:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25154:52:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 9508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "25154:59:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 9509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25217:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "25154:64:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 9514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "25222:30:35",
                      "subExpression": {
                        "expression": {
                          "expression": {
                            "id": 9511,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9481,
                            "src": "25223:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                              "typeString": "struct Swaps.Trade storage pointer"
                            }
                          },
                          "id": 9512,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "userTradeData2",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8169,
                          "src": "25223:20:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                            "typeString": "struct Swaps.UserTradeData storage ref"
                          }
                        },
                        "id": 9513,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "approved",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8114,
                        "src": "25223:29:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "25154:98:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9519,
                  "nodeType": "IfStatement",
                  "src": "25151:130:35",
                  "trueBody": {
                    "id": 9518,
                    "nodeType": "Block",
                    "src": "25254:27:35",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 9516,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25269:5:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 9478,
                        "id": 9517,
                        "nodeType": "Return",
                        "src": "25262:12:35"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 9520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "25294:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 9478,
                  "id": 9521,
                  "nodeType": "Return",
                  "src": "25287:11:35"
                }
              ]
            },
            "documentation": {
              "id": 9472,
              "nodeType": "StructuredDocumentation",
              "src": "24638:252:35",
              "text": " @dev Verify if a trade has been approved by the token controllers.\n In case a given token has token controllers, those need to validate the trade before it gets executed.\n @param index Index of the trade to be approved."
            },
            "functionSelector": "935259a8",
            "id": 9523,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTradeApprovalStatus",
            "nameLocation": "24902:22:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9475,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9474,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "24933:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 9523,
                  "src": "24925:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9473,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24925:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24924:15:35"
            },
            "returnParameters": {
              "id": 9478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9477,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9523,
                  "src": "24960:4:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9476,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "24960:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24959:6:35"
            },
            "scope": 11766,
            "src": "24893:410:35",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9533,
              "nodeType": "Block",
              "src": "25353:45:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9529,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9525,
                        "src": "25384:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 9530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25391:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 9528,
                      "name": "executeTradeWithPreimage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9605,
                      "src": "25359:24:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,bytes32)"
                      }
                    },
                    "id": 9531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25359:34:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9532,
                  "nodeType": "ExpressionStatement",
                  "src": "25359:34:35"
                }
              ]
            },
            "functionSelector": "02d2838b",
            "id": 9534,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "executeTrade",
            "nameLocation": "25316:12:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9525,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "25337:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 9534,
                  "src": "25329:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9524,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25329:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25328:15:35"
            },
            "returnParameters": {
              "id": 9527,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25353:0:35"
            },
            "scope": 11766,
            "src": "25307:91:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9604,
              "nodeType": "Block",
              "src": "25827:635:35",
              "statements": [
                {
                  "assignments": [
                    9544
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9544,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "25847:5:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 9604,
                      "src": "25833:19:35",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                        "typeString": "struct Swaps.Trade"
                      },
                      "typeName": {
                        "id": 9543,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9542,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8173,
                          "src": "25833:5:35"
                        },
                        "referencedDeclaration": 8173,
                        "src": "25833:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9548,
                  "initialValue": {
                    "baseExpression": {
                      "id": 9545,
                      "name": "_trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8180,
                      "src": "25855:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$8173_storage_$",
                        "typeString": "mapping(uint256 => struct Swaps.Trade storage ref)"
                      }
                    },
                    "id": 9547,
                    "indexExpression": {
                      "id": 9546,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9537,
                      "src": "25863:5:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "25855:14:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$8173_storage",
                      "typeString": "struct Swaps.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25833:36:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$8042",
                          "typeString": "enum Swaps.State"
                        },
                        "id": 9554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 9550,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9544,
                            "src": "25883:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                              "typeString": "struct Swaps.Trade storage pointer"
                            }
                          },
                          "id": 9551,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8172,
                          "src": "25883:11:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$8042",
                            "typeString": "enum Swaps.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 9552,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8042,
                            "src": "25898:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$8042_$",
                              "typeString": "type(enum Swaps.State)"
                            }
                          },
                          "id": 9553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Pending",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8038,
                          "src": "25898:13:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$8042",
                            "typeString": "enum Swaps.State"
                          }
                        },
                        "src": "25883:28:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616465206973206e6f742070656e64696e67",
                        "id": 9555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25913:22:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e231b6203d554050a3d3199e807f8cbd9f29dd790d2450a81df72ae0c3a2c875",
                          "typeString": "literal_string \"Trade is not pending\""
                        },
                        "value": "Trade is not pending"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e231b6203d554050a3d3199e807f8cbd9f29dd790d2450a81df72ae0c3a2c875",
                          "typeString": "literal_string \"Trade is not pending\""
                        }
                      ],
                      "id": 9549,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "25875:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25875:61:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9557,
                  "nodeType": "ExpressionStatement",
                  "src": "25875:61:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 9564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 9558,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9544,
                        "src": "25946:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 9559,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "executer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8159,
                      "src": "25946:14:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 9562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25972:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 9561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "25964:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 9560,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "25964:7:35",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 9563,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25964:10:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "25946:28:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9575,
                  "nodeType": "IfStatement",
                  "src": "25943:153:35",
                  "trueBody": {
                    "id": 9574,
                    "nodeType": "Block",
                    "src": "25976:120:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 9570,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 9566,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "25992:3:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 9567,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "25992:10:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 9568,
                                  "name": "trade",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9544,
                                  "src": "26006:5:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                    "typeString": "struct Swaps.Trade storage pointer"
                                  }
                                },
                                "id": 9569,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "executer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 8159,
                                "src": "26006:14:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "25992:28:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "54726164652063616e206f6e6c7920626520657865637574656420627920657865637574657220646566696e6564206174207472616465206372656174696f6e",
                              "id": 9571,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "26022:66:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_05373b993917885459831a325920a48a75caf468c1ee77a796e72e930bff1b08",
                                "typeString": "literal_string \"Trade can only be executed by executer defined at trade creation\""
                              },
                              "value": "Trade can only be executed by executer defined at trade creation"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_05373b993917885459831a325920a48a75caf468c1ee77a796e72e930bff1b08",
                                "typeString": "literal_string \"Trade can only be executed by executer defined at trade creation\""
                              }
                            ],
                            "id": 9565,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "25984:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 9572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25984:105:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9573,
                        "nodeType": "ExpressionStatement",
                        "src": "25984:105:35"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 9577,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "26110:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 9578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "26110:15:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 9579,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9544,
                            "src": "26129:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                              "typeString": "struct Swaps.Trade storage pointer"
                            }
                          },
                          "id": 9580,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "settlementDate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8163,
                          "src": "26129:20:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "26110:39:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54726164652063616e206f6e6c79206265206578656375746564206f6e206f7220616674657220736574746c656d656e742064617465",
                        "id": 9582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26151:56:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cc7a1d4adabd6d310d870246894e2ed12129fc57e2852560b268c1d1b670f52f",
                          "typeString": "literal_string \"Trade can only be executed on or after settlement date\""
                        },
                        "value": "Trade can only be executed on or after settlement date"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cc7a1d4adabd6d310d870246894e2ed12129fc57e2852560b268c1d1b670f52f",
                          "typeString": "literal_string \"Trade can only be executed on or after settlement date\""
                        }
                      ],
                      "id": 9576,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "26102:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26102:106:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9584,
                  "nodeType": "ExpressionStatement",
                  "src": "26102:106:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 9587,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9537,
                            "src": "26248:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 9586,
                          "name": "getTradeAcceptanceStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9253,
                          "src": "26223:24:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 9588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26223:31:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "547261646520686173206e6f74206265656e20616363657074656420627920616c6c20746f6b656e20686f6c6465727320796574",
                        "id": 9589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26256:54:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4b556a5d77d5a92d99d2da30cbb6be3fd94832b2e3e5f440b20345d863b04042",
                          "typeString": "literal_string \"Trade has not been accepted by all token holders yet\""
                        },
                        "value": "Trade has not been accepted by all token holders yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4b556a5d77d5a92d99d2da30cbb6be3fd94832b2e3e5f440b20345d863b04042",
                          "typeString": "literal_string \"Trade has not been accepted by all token holders yet\""
                        }
                      ],
                      "id": 9585,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "26215:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26215:96:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9591,
                  "nodeType": "ExpressionStatement",
                  "src": "26215:96:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 9594,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9537,
                            "src": "26353:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 9593,
                          "name": "getTradeApprovalStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9523,
                          "src": "26330:22:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 9595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26330:29:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "547261646520686173206e6f74206265656e20617070726f76656420627920616c6c20746f6b656e20636f6e74726f6c6c65727320796574",
                        "id": 9596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26361:58:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_20db3929816dba2a8275bb33ef449b4b1729f4b33bc79b910811933ea2508b0c",
                          "typeString": "literal_string \"Trade has not been approved by all token controllers yet\""
                        },
                        "value": "Trade has not been approved by all token controllers yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_20db3929816dba2a8275bb33ef449b4b1729f4b33bc79b910811933ea2508b0c",
                          "typeString": "literal_string \"Trade has not been approved by all token controllers yet\""
                        }
                      ],
                      "id": 9592,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "26322:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26322:98:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9598,
                  "nodeType": "ExpressionStatement",
                  "src": "26322:98:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9600,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9537,
                        "src": "26441:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 9601,
                        "name": "preimage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9539,
                        "src": "26448:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 9599,
                      "name": "_executeTrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9721,
                      "src": "26427:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,bytes32)"
                      }
                    },
                    "id": 9602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26427:30:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9603,
                  "nodeType": "ExpressionStatement",
                  "src": "26427:30:35"
                }
              ]
            },
            "documentation": {
              "id": 9535,
              "nodeType": "StructuredDocumentation",
              "src": "25402:348:35",
              "text": " @dev Execute a trade in the Swaps contract if possible (e.g. if tokens have been esccrowed, in case it is required).\n This function can only be called by the executer specified at trade creation.\n If no executer is specified, the trade can be launched by anyone.\n @param index Index of the trade to be executed."
            },
            "functionSelector": "582dcd13",
            "id": 9605,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "executeTradeWithPreimage",
            "nameLocation": "25762:24:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9537,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "25795:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 9605,
                  "src": "25787:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9536,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25787:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9539,
                  "mutability": "mutable",
                  "name": "preimage",
                  "nameLocation": "25810:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 9605,
                  "src": "25802:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 9538,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "25802:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25786:33:35"
            },
            "returnParameters": {
              "id": 9541,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25827:0:35"
            },
            "scope": 11766,
            "src": "25753:709:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9720,
              "nodeType": "Block",
              "src": "26718:1066:35",
              "statements": [
                {
                  "assignments": [
                    9615
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9615,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "26738:5:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 9720,
                      "src": "26724:19:35",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                        "typeString": "struct Swaps.Trade"
                      },
                      "typeName": {
                        "id": 9614,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9613,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8173,
                          "src": "26724:5:35"
                        },
                        "referencedDeclaration": 8173,
                        "src": "26724:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9619,
                  "initialValue": {
                    "baseExpression": {
                      "id": 9616,
                      "name": "_trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8180,
                      "src": "26746:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$8173_storage_$",
                        "typeString": "mapping(uint256 => struct Swaps.Trade storage ref)"
                      }
                    },
                    "id": 9618,
                    "indexExpression": {
                      "id": 9617,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9608,
                      "src": "26754:5:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "26746:14:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$8173_storage",
                      "typeString": "struct Swaps.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26724:36:35"
                },
                {
                  "assignments": [
                    9621
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9621,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "26775:5:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 9720,
                      "src": "26767:13:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9620,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "26767:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9625,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 9623,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9608,
                        "src": "26792:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9622,
                      "name": "getPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11737,
                      "src": "26783:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 9624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26783:15:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26767:31:35"
                },
                {
                  "assignments": [
                    9627
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9627,
                      "mutability": "mutable",
                      "name": "tokenValue1",
                      "nameLocation": "26813:11:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 9720,
                      "src": "26805:19:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9626,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "26805:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9631,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 9628,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9615,
                        "src": "26827:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 9629,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8166,
                      "src": "26827:20:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "id": 9630,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenValue",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 8105,
                    "src": "26827:31:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26805:53:35"
                },
                {
                  "assignments": [
                    9633
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9633,
                      "mutability": "mutable",
                      "name": "tokenValue2",
                      "nameLocation": "26872:11:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 9720,
                      "src": "26864:19:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9632,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "26864:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9637,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 9634,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9615,
                        "src": "26886:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 9635,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8169,
                      "src": "26886:20:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "id": 9636,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenValue",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 8105,
                    "src": "26886:31:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26864:53:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 9638,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9621,
                      "src": "26927:5:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 9639,
                      "name": "tokenValue2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9633,
                      "src": "26936:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "26927:20:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 9711,
                    "nodeType": "Block",
                    "src": "27124:621:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 9670,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 9663,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 9661,
                                  "name": "price",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9621,
                                  "src": "27297:5:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 9662,
                                  "name": "tokenValue2",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9633,
                                  "src": "27306:11:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "27297:20:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_TradeType_$8046",
                                  "typeString": "enum Swaps.TradeType"
                                },
                                "id": 9669,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 9664,
                                      "name": "trade",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 9615,
                                      "src": "27321:5:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                        "typeString": "struct Swaps.Trade storage pointer"
                                      }
                                    },
                                    "id": 9665,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "userTradeData2",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 8169,
                                    "src": "27321:20:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                                      "typeString": "struct Swaps.UserTradeData storage ref"
                                    }
                                  },
                                  "id": 9666,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tradeType",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8117,
                                  "src": "27321:30:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_TradeType_$8046",
                                    "typeString": "enum Swaps.TradeType"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "expression": {
                                    "id": 9667,
                                    "name": "TradeType",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8046,
                                    "src": "27355:9:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_TradeType_$8046_$",
                                      "typeString": "type(enum Swaps.TradeType)"
                                    }
                                  },
                                  "id": 9668,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "Hold",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8044,
                                  "src": "27355:14:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_TradeType_$8046",
                                    "typeString": "enum Swaps.TradeType"
                                  }
                                },
                                "src": "27321:48:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "27297:72:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "507269636520697320686967686572207468616e20616d6f756e7420657363726f7765642f617574686f72697a6564",
                              "id": 9671,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27371:49:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6cb1a1c99e78d317001cb18e0e43982675e357ca53b7a61f1a60755ef796f773",
                                "typeString": "literal_string \"Price is higher than amount escrowed/authorized\""
                              },
                              "value": "Price is higher than amount escrowed/authorized"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6cb1a1c99e78d317001cb18e0e43982675e357ca53b7a61f1a60755ef796f773",
                                "typeString": "literal_string \"Price is higher than amount escrowed/authorized\""
                              }
                            ],
                            "id": 9660,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "27289:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 9672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27289:132:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9673,
                        "nodeType": "ExpressionStatement",
                        "src": "27289:132:35"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 9675,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9608,
                              "src": "27450:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 9676,
                                "name": "Holder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8049,
                                "src": "27457:6:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Holder_$8049_$",
                                  "typeString": "type(enum Swaps.Holder)"
                                }
                              },
                              "id": 9677,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Holder1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8047,
                              "src": "27457:14:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Holder_$8049",
                                "typeString": "enum Swaps.Holder"
                              }
                            },
                            {
                              "id": 9678,
                              "name": "tokenValue1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9627,
                              "src": "27473:11:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 9679,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27486:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "id": 9680,
                              "name": "preimage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9610,
                              "src": "27493:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_Holder_$8049",
                                "typeString": "enum Swaps.Holder"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 9674,
                            "name": "_transferUsersTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10201,
                            "src": "27429:20:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_enum$_Holder_$8049_$_t_uint256_$_t_bool_$_t_bytes32_$returns$__$",
                              "typeString": "function (uint256,enum Swaps.Holder,uint256,bool,bytes32)"
                            }
                          },
                          "id": 9681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27429:73:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9682,
                        "nodeType": "ExpressionStatement",
                        "src": "27429:73:35"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 9684,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9608,
                              "src": "27531:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 9685,
                                "name": "Holder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8049,
                                "src": "27538:6:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Holder_$8049_$",
                                  "typeString": "type(enum Swaps.Holder)"
                                }
                              },
                              "id": 9686,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Holder2",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8048,
                              "src": "27538:14:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Holder_$8049",
                                "typeString": "enum Swaps.Holder"
                              }
                            },
                            {
                              "id": 9687,
                              "name": "price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9621,
                              "src": "27554:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 9688,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27561:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "id": 9689,
                              "name": "preimage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9610,
                              "src": "27568:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_Holder_$8049",
                                "typeString": "enum Swaps.Holder"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 9683,
                            "name": "_transferUsersTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10201,
                            "src": "27510:20:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_enum$_Holder_$8049_$_t_uint256_$_t_bool_$_t_bytes32_$returns$__$",
                              "typeString": "function (uint256,enum Swaps.Holder,uint256,bool,bytes32)"
                            }
                          },
                          "id": 9690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27510:67:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9691,
                        "nodeType": "ExpressionStatement",
                        "src": "27510:67:35"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_TradeType_$8046",
                            "typeString": "enum Swaps.TradeType"
                          },
                          "id": 9697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 9692,
                                "name": "trade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9615,
                                "src": "27588:5:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                  "typeString": "struct Swaps.Trade storage pointer"
                                }
                              },
                              "id": 9693,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "userTradeData2",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8169,
                              "src": "27588:20:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                                "typeString": "struct Swaps.UserTradeData storage ref"
                              }
                            },
                            "id": 9694,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tradeType",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8117,
                            "src": "27588:30:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_TradeType_$8046",
                              "typeString": "enum Swaps.TradeType"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 9695,
                              "name": "TradeType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8046,
                              "src": "27622:9:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_TradeType_$8046_$",
                                "typeString": "type(enum Swaps.TradeType)"
                              }
                            },
                            "id": 9696,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Escrow",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8045,
                            "src": "27622:16:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_TradeType_$8046",
                              "typeString": "enum Swaps.TradeType"
                            }
                          },
                          "src": "27588:50:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 9710,
                        "nodeType": "IfStatement",
                        "src": "27585:154:35",
                        "trueBody": {
                          "id": 9709,
                          "nodeType": "Block",
                          "src": "27640:99:35",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 9699,
                                    "name": "index",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9608,
                                    "src": "27671:5:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 9700,
                                      "name": "Holder",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8049,
                                      "src": "27678:6:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_Holder_$8049_$",
                                        "typeString": "type(enum Swaps.Holder)"
                                      }
                                    },
                                    "id": 9701,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "Holder2",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 8048,
                                    "src": "27678:14:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_Holder_$8049",
                                      "typeString": "enum Swaps.Holder"
                                    }
                                  },
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 9704,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 9702,
                                      "name": "tokenValue2",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 9633,
                                      "src": "27694:11:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "id": 9703,
                                      "name": "price",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 9621,
                                      "src": "27708:5:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "27694:19:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "hexValue": "74727565",
                                    "id": 9705,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "27715:4:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "true"
                                  },
                                  {
                                    "id": 9706,
                                    "name": "preimage",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9610,
                                    "src": "27721:8:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_enum$_Holder_$8049",
                                      "typeString": "enum Swaps.Holder"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 9698,
                                  "name": "_transferUsersTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10201,
                                  "src": "27650:20:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_enum$_Holder_$8049_$_t_uint256_$_t_bool_$_t_bytes32_$returns$__$",
                                    "typeString": "function (uint256,enum Swaps.Holder,uint256,bool,bytes32)"
                                  }
                                },
                                "id": 9707,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "27650:80:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 9708,
                              "nodeType": "ExpressionStatement",
                              "src": "27650:80:35"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 9712,
                  "nodeType": "IfStatement",
                  "src": "26924:821:35",
                  "trueBody": {
                    "id": 9659,
                    "nodeType": "Block",
                    "src": "26949:169:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 9642,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9608,
                              "src": "26978:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 9643,
                                "name": "Holder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8049,
                                "src": "26985:6:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Holder_$8049_$",
                                  "typeString": "type(enum Swaps.Holder)"
                                }
                              },
                              "id": 9644,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Holder1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8047,
                              "src": "26985:14:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Holder_$8049",
                                "typeString": "enum Swaps.Holder"
                              }
                            },
                            {
                              "id": 9645,
                              "name": "tokenValue1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9627,
                              "src": "27001:11:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 9646,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27014:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "id": 9647,
                              "name": "preimage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9610,
                              "src": "27021:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_Holder_$8049",
                                "typeString": "enum Swaps.Holder"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 9641,
                            "name": "_transferUsersTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10201,
                            "src": "26957:20:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_enum$_Holder_$8049_$_t_uint256_$_t_bool_$_t_bytes32_$returns$__$",
                              "typeString": "function (uint256,enum Swaps.Holder,uint256,bool,bytes32)"
                            }
                          },
                          "id": 9648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26957:73:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9649,
                        "nodeType": "ExpressionStatement",
                        "src": "26957:73:35"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 9651,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9608,
                              "src": "27059:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 9652,
                                "name": "Holder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8049,
                                "src": "27066:6:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Holder_$8049_$",
                                  "typeString": "type(enum Swaps.Holder)"
                                }
                              },
                              "id": 9653,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Holder2",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8048,
                              "src": "27066:14:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Holder_$8049",
                                "typeString": "enum Swaps.Holder"
                              }
                            },
                            {
                              "id": 9654,
                              "name": "tokenValue2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9633,
                              "src": "27082:11:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 9655,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27095:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "id": 9656,
                              "name": "preimage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9610,
                              "src": "27102:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_Holder_$8049",
                                "typeString": "enum Swaps.Holder"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 9650,
                            "name": "_transferUsersTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10201,
                            "src": "27038:20:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_enum$_Holder_$8049_$_t_uint256_$_t_bool_$_t_bytes32_$returns$__$",
                              "typeString": "function (uint256,enum Swaps.Holder,uint256,bool,bytes32)"
                            }
                          },
                          "id": 9657,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27038:73:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9658,
                        "nodeType": "ExpressionStatement",
                        "src": "27038:73:35"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 9718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 9713,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9615,
                        "src": "27750:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 9715,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8172,
                      "src": "27750:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$8042",
                        "typeString": "enum Swaps.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 9716,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8042,
                        "src": "27764:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$8042_$",
                          "typeString": "type(enum Swaps.State)"
                        }
                      },
                      "id": 9717,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Executed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8039,
                      "src": "27764:14:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$8042",
                        "typeString": "enum Swaps.State"
                      }
                    },
                    "src": "27750:28:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$8042",
                      "typeString": "enum Swaps.State"
                    }
                  },
                  "id": 9719,
                  "nodeType": "ExpressionStatement",
                  "src": "27750:28:35"
                }
              ]
            },
            "documentation": {
              "id": 9606,
              "nodeType": "StructuredDocumentation",
              "src": "26466:184:35",
              "text": " @dev Execute a trade in the Swaps contract if possible (e.g. if tokens have been esccrowed, in case it is required).\n @param index Index of the trade to be executed."
            },
            "id": 9721,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_executeTrade",
            "nameLocation": "26662:13:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9611,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9608,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "26684:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 9721,
                  "src": "26676:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9607,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26676:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9610,
                  "mutability": "mutable",
                  "name": "preimage",
                  "nameLocation": "26699:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 9721,
                  "src": "26691:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 9609,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "26691:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26675:33:35"
            },
            "returnParameters": {
              "id": 9612,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26718:0:35"
            },
            "scope": 11766,
            "src": "26653:1131:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9731,
              "nodeType": "Block",
              "src": "27832:43:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9727,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9723,
                        "src": "27861:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 9728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27868:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 9726,
                      "name": "forceTradeWithPreimage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9897,
                      "src": "27838:22:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,bytes32)"
                      }
                    },
                    "id": 9729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27838:32:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9730,
                  "nodeType": "ExpressionStatement",
                  "src": "27838:32:35"
                }
              ]
            },
            "functionSelector": "61108c06",
            "id": 9732,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "forceTrade",
            "nameLocation": "27797:10:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9724,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9723,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "27816:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 9732,
                  "src": "27808:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9722,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27808:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27807:15:35"
            },
            "returnParameters": {
              "id": 9725,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27832:0:35"
            },
            "scope": 11766,
            "src": "27788:87:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9896,
              "nodeType": "Block",
              "src": "28126:1401:35",
              "statements": [
                {
                  "assignments": [
                    9742
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9742,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "28146:5:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 9896,
                      "src": "28132:19:35",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                        "typeString": "struct Swaps.Trade"
                      },
                      "typeName": {
                        "id": 9741,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9740,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8173,
                          "src": "28132:5:35"
                        },
                        "referencedDeclaration": 8173,
                        "src": "28132:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9746,
                  "initialValue": {
                    "baseExpression": {
                      "id": 9743,
                      "name": "_trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8180,
                      "src": "28154:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$8173_storage_$",
                        "typeString": "mapping(uint256 => struct Swaps.Trade storage ref)"
                      }
                    },
                    "id": 9745,
                    "indexExpression": {
                      "id": 9744,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9735,
                      "src": "28162:5:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "28154:14:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$8173_storage",
                      "typeString": "struct Swaps.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28132:36:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$8042",
                          "typeString": "enum Swaps.State"
                        },
                        "id": 9752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 9748,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9742,
                            "src": "28182:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                              "typeString": "struct Swaps.Trade storage pointer"
                            }
                          },
                          "id": 9749,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8172,
                          "src": "28182:11:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$8042",
                            "typeString": "enum Swaps.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 9750,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8042,
                            "src": "28197:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$8042_$",
                              "typeString": "type(enum Swaps.State)"
                            }
                          },
                          "id": 9751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Pending",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8038,
                          "src": "28197:13:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$8042",
                            "typeString": "enum Swaps.State"
                          }
                        },
                        "src": "28182:28:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616465206973206e6f742070656e64696e67",
                        "id": 9753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28212:22:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e231b6203d554050a3d3199e807f8cbd9f29dd790d2450a81df72ae0c3a2c875",
                          "typeString": "literal_string \"Trade is not pending\""
                        },
                        "value": "Trade is not pending"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e231b6203d554050a3d3199e807f8cbd9f29dd790d2450a81df72ae0c3a2c875",
                          "typeString": "literal_string \"Trade is not pending\""
                        }
                      ],
                      "id": 9747,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "28174:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28174:61:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9755,
                  "nodeType": "ExpressionStatement",
                  "src": "28174:61:35"
                },
                {
                  "assignments": [
                    9757
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9757,
                      "mutability": "mutable",
                      "name": "tokenAddress1",
                      "nameLocation": "28254:13:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 9896,
                      "src": "28246:21:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 9756,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "28246:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9761,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 9758,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9742,
                        "src": "28270:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 9759,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8166,
                      "src": "28270:20:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "id": 9760,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 8103,
                    "src": "28270:33:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28246:57:35"
                },
                {
                  "assignments": [
                    9763
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9763,
                      "mutability": "mutable",
                      "name": "tokenValue1",
                      "nameLocation": "28317:11:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 9896,
                      "src": "28309:19:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9762,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "28309:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9767,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 9764,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9742,
                        "src": "28331:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 9765,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8166,
                      "src": "28331:20:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "id": 9766,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenValue",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 8105,
                    "src": "28331:31:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28309:53:35"
                },
                {
                  "assignments": [
                    9769
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9769,
                      "mutability": "mutable",
                      "name": "accepted1",
                      "nameLocation": "28373:9:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 9896,
                      "src": "28368:14:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 9768,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "28368:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9773,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 9770,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9742,
                        "src": "28385:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 9771,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8166,
                      "src": "28385:20:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "id": 9772,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "accepted",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 8112,
                    "src": "28385:29:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28368:46:35"
                },
                {
                  "assignments": [
                    9775
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9775,
                      "mutability": "mutable",
                      "name": "tokenAddress2",
                      "nameLocation": "28429:13:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 9896,
                      "src": "28421:21:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 9774,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "28421:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9779,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 9776,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9742,
                        "src": "28445:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 9777,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8169,
                      "src": "28445:20:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "id": 9778,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 8103,
                    "src": "28445:33:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28421:57:35"
                },
                {
                  "assignments": [
                    9781
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9781,
                      "mutability": "mutable",
                      "name": "tokenValue2",
                      "nameLocation": "28492:11:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 9896,
                      "src": "28484:19:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9780,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "28484:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9785,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 9782,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9742,
                        "src": "28506:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 9783,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8169,
                      "src": "28506:20:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "id": 9784,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenValue",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 8105,
                    "src": "28506:31:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28484:53:35"
                },
                {
                  "assignments": [
                    9787
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9787,
                      "mutability": "mutable",
                      "name": "accepted2",
                      "nameLocation": "28548:9:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 9896,
                      "src": "28543:14:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 9786,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "28543:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9791,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 9788,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9742,
                        "src": "28560:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 9789,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8169,
                      "src": "28560:20:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "id": 9790,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "accepted",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 8112,
                    "src": "28560:29:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28543:46:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "28604:25:35",
                        "subExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 9795,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 9793,
                                "name": "accepted1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9769,
                                "src": "28606:9:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "id": 9794,
                                "name": "accepted2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9787,
                                "src": "28619:9:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "28606:22:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 9796,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "28605:24:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6578656375746554726164652063616e2062652063616c6c6564",
                        "id": 9798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28631:28:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a65d6f43237034d44b2b9bea23e2173099b9a2624f45373df43a0b386609eb3c",
                          "typeString": "literal_string \"executeTrade can be called\""
                        },
                        "value": "executeTrade can be called"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a65d6f43237034d44b2b9bea23e2173099b9a2624f45373df43a0b386609eb3c",
                          "typeString": "literal_string \"executeTrade can be called\""
                        }
                      ],
                      "id": 9792,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "28596:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28596:64:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9800,
                  "nodeType": "ExpressionStatement",
                  "src": "28596:64:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 9814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 9807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 9802,
                                "name": "_tokenControllers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8221,
                                "src": "28674:17:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                  "typeString": "mapping(address => address[] storage ref)"
                                }
                              },
                              "id": 9804,
                              "indexExpression": {
                                "id": 9803,
                                "name": "tokenAddress1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9757,
                                "src": "28692:13:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "28674:32:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 9805,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "28674:39:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 9806,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "28717:1:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "28674:44:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 9813,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 9808,
                                "name": "_tokenControllers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8221,
                                "src": "28722:17:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                  "typeString": "mapping(address => address[] storage ref)"
                                }
                              },
                              "id": 9810,
                              "indexExpression": {
                                "id": 9809,
                                "name": "tokenAddress2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9775,
                                "src": "28740:13:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "28722:32:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 9811,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "28722:39:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 9812,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "28765:1:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "28722:44:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "28674:92:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54726164652063616e206e6f7420626520666f7263656420696620746f6b656e73206861766520636f6e74726f6c6c657273",
                        "id": 9815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28768:52:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e59e007c4647d712b65f3ed438ec2af5656c5aa20116da30235e14fc2c290a3",
                          "typeString": "literal_string \"Trade can not be forced if tokens have controllers\""
                        },
                        "value": "Trade can not be forced if tokens have controllers"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e59e007c4647d712b65f3ed438ec2af5656c5aa20116da30235e14fc2c290a3",
                          "typeString": "literal_string \"Trade can not be forced if tokens have controllers\""
                        }
                      ],
                      "id": 9801,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "28666:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28666:155:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9817,
                  "nodeType": "ExpressionStatement",
                  "src": "28666:155:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 9824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 9818,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9742,
                        "src": "28831:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 9819,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "executer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8159,
                      "src": "28831:14:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 9822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "28857:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 9821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "28849:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 9820,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "28849:7:35",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 9823,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "28849:10:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "28831:28:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "id": 9835,
                      "name": "accepted1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9769,
                      "src": "28966:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "id": 9846,
                        "name": "accepted2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9787,
                        "src": "29081:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 9861,
                        "nodeType": "Block",
                        "src": "29193:81:35",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "54726164652063616e277420626520666f7263656420617320746f6b656e7320617265206e6f7420617661696c61626c6520736f20666172",
                                  "id": 9858,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "29208:58:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_cfd41566fc83253424c692dd5977dabc40d4800a378b116731c43ead1d396f63",
                                    "typeString": "literal_string \"Trade can't be forced as tokens are not available so far\""
                                  },
                                  "value": "Trade can't be forced as tokens are not available so far"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_cfd41566fc83253424c692dd5977dabc40d4800a378b116731c43ead1d396f63",
                                    "typeString": "literal_string \"Trade can't be forced as tokens are not available so far\""
                                  }
                                ],
                                "id": 9857,
                                "name": "revert",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  4294967277,
                                  4294967277
                                ],
                                "referencedDeclaration": 4294967277,
                                "src": "29201:6:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (string memory) pure"
                                }
                              },
                              "id": 9859,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "29201:66:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 9860,
                            "nodeType": "ExpressionStatement",
                            "src": "29201:66:35"
                          }
                        ]
                      },
                      "id": 9862,
                      "nodeType": "IfStatement",
                      "src": "29078:196:35",
                      "trueBody": {
                        "id": 9856,
                        "nodeType": "Block",
                        "src": "29092:95:35",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 9852,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 9848,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "29108:3:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 9849,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "29108:10:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 9850,
                                      "name": "trade",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 9742,
                                      "src": "29122:5:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                        "typeString": "struct Swaps.Trade storage pointer"
                                      }
                                    },
                                    "id": 9851,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "holder2",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 8157,
                                    "src": "29122:13:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "29108:27:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "53656e646572206973206e6f7420616c6c6f77656420746f20666f72636520747261646520283229",
                                  "id": 9853,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "29137:42:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_f3ffbbdcd6ee2ecafc39ed8a1215a00ab98c19e6f204edac1d401983b57656b8",
                                    "typeString": "literal_string \"Sender is not allowed to force trade (2)\""
                                  },
                                  "value": "Sender is not allowed to force trade (2)"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_f3ffbbdcd6ee2ecafc39ed8a1215a00ab98c19e6f204edac1d401983b57656b8",
                                    "typeString": "literal_string \"Sender is not allowed to force trade (2)\""
                                  }
                                ],
                                "id": 9847,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  4294967278,
                                  4294967278
                                ],
                                "referencedDeclaration": 4294967278,
                                "src": "29100:7:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 9854,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "29100:80:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 9855,
                            "nodeType": "ExpressionStatement",
                            "src": "29100:80:35"
                          }
                        ]
                      }
                    },
                    "id": 9863,
                    "nodeType": "IfStatement",
                    "src": "28963:311:35",
                    "trueBody": {
                      "id": 9845,
                      "nodeType": "Block",
                      "src": "28977:95:35",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 9841,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 9837,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "28993:3:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 9838,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "28993:10:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 9839,
                                    "name": "trade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9742,
                                    "src": "29007:5:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                      "typeString": "struct Swaps.Trade storage pointer"
                                    }
                                  },
                                  "id": 9840,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "holder1",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8155,
                                  "src": "29007:13:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "28993:27:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "53656e646572206973206e6f7420616c6c6f77656420746f20666f72636520747261646520283129",
                                "id": 9842,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "29022:42:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_255ed6eb6f30d1485f3dcafc169da0ede71d63ed3f663207dcd881f82aecfb81",
                                  "typeString": "literal_string \"Sender is not allowed to force trade (1)\""
                                },
                                "value": "Sender is not allowed to force trade (1)"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_255ed6eb6f30d1485f3dcafc169da0ede71d63ed3f663207dcd881f82aecfb81",
                                  "typeString": "literal_string \"Sender is not allowed to force trade (1)\""
                                }
                              ],
                              "id": 9836,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "src": "28985:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 9843,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "28985:80:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 9844,
                          "nodeType": "ExpressionStatement",
                          "src": "28985:80:35"
                        }
                      ]
                    }
                  },
                  "id": 9864,
                  "nodeType": "IfStatement",
                  "src": "28828:446:35",
                  "trueBody": {
                    "id": 9834,
                    "nodeType": "Block",
                    "src": "28861:96:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 9830,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 9826,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "28877:3:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 9827,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "28877:10:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 9828,
                                  "name": "trade",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9742,
                                  "src": "28891:5:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                    "typeString": "struct Swaps.Trade storage pointer"
                                  }
                                },
                                "id": 9829,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "executer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 8159,
                                "src": "28891:14:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "28877:28:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "53656e646572206973206e6f7420616c6c6f77656420746f20666f72636520747261646520283029",
                              "id": 9831,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "28907:42:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d5872adc53feb1228a23992569f03c41f99efcc8573122308ea2220b7a8481b5",
                                "typeString": "literal_string \"Sender is not allowed to force trade (0)\""
                              },
                              "value": "Sender is not allowed to force trade (0)"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d5872adc53feb1228a23992569f03c41f99efcc8573122308ea2220b7a8481b5",
                                "typeString": "literal_string \"Sender is not allowed to force trade (0)\""
                              }
                            ],
                            "id": 9825,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "28869:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 9832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28869:81:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9833,
                        "nodeType": "ExpressionStatement",
                        "src": "28869:81:35"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 9865,
                    "name": "accepted1",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9769,
                    "src": "29283:9:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9876,
                  "nodeType": "IfStatement",
                  "src": "29280:102:35",
                  "trueBody": {
                    "id": 9875,
                    "nodeType": "Block",
                    "src": "29294:88:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 9867,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9735,
                              "src": "29323:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 9868,
                                "name": "Holder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8049,
                                "src": "29330:6:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Holder_$8049_$",
                                  "typeString": "type(enum Swaps.Holder)"
                                }
                              },
                              "id": 9869,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Holder1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8047,
                              "src": "29330:14:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Holder_$8049",
                                "typeString": "enum Swaps.Holder"
                              }
                            },
                            {
                              "id": 9870,
                              "name": "tokenValue1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9763,
                              "src": "29346:11:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 9871,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "29359:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "id": 9872,
                              "name": "preimage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9737,
                              "src": "29366:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_Holder_$8049",
                                "typeString": "enum Swaps.Holder"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 9866,
                            "name": "_transferUsersTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10201,
                            "src": "29302:20:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_enum$_Holder_$8049_$_t_uint256_$_t_bool_$_t_bytes32_$returns$__$",
                              "typeString": "function (uint256,enum Swaps.Holder,uint256,bool,bytes32)"
                            }
                          },
                          "id": 9873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "29302:73:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9874,
                        "nodeType": "ExpressionStatement",
                        "src": "29302:73:35"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 9877,
                    "name": "accepted2",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9787,
                    "src": "29391:9:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9888,
                  "nodeType": "IfStatement",
                  "src": "29388:102:35",
                  "trueBody": {
                    "id": 9887,
                    "nodeType": "Block",
                    "src": "29402:88:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 9879,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9735,
                              "src": "29431:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 9880,
                                "name": "Holder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8049,
                                "src": "29438:6:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Holder_$8049_$",
                                  "typeString": "type(enum Swaps.Holder)"
                                }
                              },
                              "id": 9881,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Holder2",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8048,
                              "src": "29438:14:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Holder_$8049",
                                "typeString": "enum Swaps.Holder"
                              }
                            },
                            {
                              "id": 9882,
                              "name": "tokenValue2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9781,
                              "src": "29454:11:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 9883,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "29467:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "id": 9884,
                              "name": "preimage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9737,
                              "src": "29474:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_Holder_$8049",
                                "typeString": "enum Swaps.Holder"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 9878,
                            "name": "_transferUsersTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10201,
                            "src": "29410:20:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_enum$_Holder_$8049_$_t_uint256_$_t_bool_$_t_bytes32_$returns$__$",
                              "typeString": "function (uint256,enum Swaps.Holder,uint256,bool,bytes32)"
                            }
                          },
                          "id": 9885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "29410:73:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9886,
                        "nodeType": "ExpressionStatement",
                        "src": "29410:73:35"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 9894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 9889,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9742,
                        "src": "29496:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 9891,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8172,
                      "src": "29496:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$8042",
                        "typeString": "enum Swaps.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 9892,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8042,
                        "src": "29510:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$8042_$",
                          "typeString": "type(enum Swaps.State)"
                        }
                      },
                      "id": 9893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Forced",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8040,
                      "src": "29510:12:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$8042",
                        "typeString": "enum Swaps.State"
                      }
                    },
                    "src": "29496:26:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$8042",
                      "typeString": "enum Swaps.State"
                    }
                  },
                  "id": 9895,
                  "nodeType": "ExpressionStatement",
                  "src": "29496:26:35"
                }
              ]
            },
            "documentation": {
              "id": 9733,
              "nodeType": "StructuredDocumentation",
              "src": "27879:172:35",
              "text": " @dev Force a trade execution in the Swaps contract by transferring tokens back to their target recipients.\n @param index Index of the trade to be forced."
            },
            "functionSelector": "d95b585e",
            "id": 9897,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "forceTradeWithPreimage",
            "nameLocation": "28063:22:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9738,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9735,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "28094:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 9897,
                  "src": "28086:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9734,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "28086:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9737,
                  "mutability": "mutable",
                  "name": "preimage",
                  "nameLocation": "28109:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 9897,
                  "src": "28101:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 9736,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "28101:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28085:33:35"
            },
            "returnParameters": {
              "id": 9739,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28126:0:35"
            },
            "scope": 11766,
            "src": "28054:1473:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10136,
              "nodeType": "Block",
              "src": "29752:1785:35",
              "statements": [
                {
                  "assignments": [
                    9905
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9905,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "29772:5:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 10136,
                      "src": "29758:19:35",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                        "typeString": "struct Swaps.Trade"
                      },
                      "typeName": {
                        "id": 9904,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9903,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8173,
                          "src": "29758:5:35"
                        },
                        "referencedDeclaration": 8173,
                        "src": "29758:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9909,
                  "initialValue": {
                    "baseExpression": {
                      "id": 9906,
                      "name": "_trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8180,
                      "src": "29780:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$8173_storage_$",
                        "typeString": "mapping(uint256 => struct Swaps.Trade storage ref)"
                      }
                    },
                    "id": 9908,
                    "indexExpression": {
                      "id": 9907,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9900,
                      "src": "29788:5:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "29780:14:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$8173_storage",
                      "typeString": "struct Swaps.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "29758:36:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$8042",
                          "typeString": "enum Swaps.State"
                        },
                        "id": 9915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 9911,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9905,
                            "src": "29808:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                              "typeString": "struct Swaps.Trade storage pointer"
                            }
                          },
                          "id": 9912,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8172,
                          "src": "29808:11:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$8042",
                            "typeString": "enum Swaps.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 9913,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8042,
                            "src": "29823:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$8042_$",
                              "typeString": "type(enum Swaps.State)"
                            }
                          },
                          "id": 9914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Pending",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8038,
                          "src": "29823:13:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$8042",
                            "typeString": "enum Swaps.State"
                          }
                        },
                        "src": "29808:28:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616465206973206e6f742070656e64696e67",
                        "id": 9916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29838:22:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e231b6203d554050a3d3199e807f8cbd9f29dd790d2450a81df72ae0c3a2c875",
                          "typeString": "literal_string \"Trade is not pending\""
                        },
                        "value": "Trade is not pending"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e231b6203d554050a3d3199e807f8cbd9f29dd790d2450a81df72ae0c3a2c875",
                          "typeString": "literal_string \"Trade is not pending\""
                        }
                      ],
                      "id": 9910,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "29800:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29800:61:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9918,
                  "nodeType": "ExpressionStatement",
                  "src": "29800:61:35"
                },
                {
                  "assignments": [
                    9920
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9920,
                      "mutability": "mutable",
                      "name": "tokenValue1",
                      "nameLocation": "29876:11:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 10136,
                      "src": "29868:19:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9919,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "29868:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9924,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 9921,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9905,
                        "src": "29890:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 9922,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8166,
                      "src": "29890:20:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "id": 9923,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenValue",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 8105,
                    "src": "29890:31:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "29868:53:35"
                },
                {
                  "assignments": [
                    9926
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9926,
                      "mutability": "mutable",
                      "name": "accepted1",
                      "nameLocation": "29932:9:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 10136,
                      "src": "29927:14:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 9925,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "29927:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9930,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 9927,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9905,
                        "src": "29944:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 9928,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8166,
                      "src": "29944:20:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "id": 9929,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "accepted",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 8112,
                    "src": "29944:29:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "29927:46:35"
                },
                {
                  "assignments": [
                    9932
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9932,
                      "mutability": "mutable",
                      "name": "tokenValue2",
                      "nameLocation": "29988:11:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 10136,
                      "src": "29980:19:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9931,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "29980:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9936,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 9933,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9905,
                        "src": "30002:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 9934,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8169,
                      "src": "30002:20:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "id": 9935,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenValue",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 8105,
                    "src": "30002:31:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "29980:53:35"
                },
                {
                  "assignments": [
                    9938
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9938,
                      "mutability": "mutable",
                      "name": "accepted2",
                      "nameLocation": "30044:9:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 10136,
                      "src": "30039:14:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 9937,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "30039:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9942,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 9939,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9905,
                        "src": "30056:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 9940,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8169,
                      "src": "30056:20:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "id": 9941,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "accepted",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 8112,
                    "src": "30056:29:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "30039:46:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 9945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 9943,
                      "name": "accepted1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9926,
                      "src": "30095:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 9944,
                      "name": "accepted2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9938,
                      "src": "30108:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "30095:22:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "id": 10016,
                      "name": "accepted1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9926,
                      "src": "30645:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "id": 10060,
                        "name": "accepted2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9938,
                        "src": "30993:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 10125,
                        "nodeType": "Block",
                        "src": "31338:159:35",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 10121,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 10115,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      "id": 10109,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 10105,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967281,
                                          "src": "31354:3:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 10106,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "31354:10:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "expression": {
                                          "id": 10107,
                                          "name": "trade",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 9905,
                                          "src": "31368:5:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                            "typeString": "struct Swaps.Trade storage pointer"
                                          }
                                        },
                                        "id": 10108,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "executer",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 8159,
                                        "src": "31368:14:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "src": "31354:28:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "||",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      "id": 10114,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 10110,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967281,
                                          "src": "31386:3:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 10111,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "31386:10:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "expression": {
                                          "id": 10112,
                                          "name": "trade",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 9905,
                                          "src": "31400:5:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                            "typeString": "struct Swaps.Trade storage pointer"
                                          }
                                        },
                                        "id": 10113,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "holder1",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 8155,
                                        "src": "31400:13:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "src": "31386:27:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "31354:59:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "||",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 10120,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 10116,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "31417:3:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 10117,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "31417:10:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 10118,
                                        "name": "trade",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 9905,
                                        "src": "31431:5:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                          "typeString": "struct Swaps.Trade storage pointer"
                                        }
                                      },
                                      "id": 10119,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "holder2",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 8157,
                                      "src": "31431:13:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "31417:27:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "31354:90:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "53656e646572206973206e6f7420616c6c6f77656420746f2063616e63656c20747261646520283329",
                                  "id": 10122,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "31446:43:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_62915fc4bdc23f948b008ac5bb93785842503d33f35707b31a531df5ef8b008f",
                                    "typeString": "literal_string \"Sender is not allowed to cancel trade (3)\""
                                  },
                                  "value": "Sender is not allowed to cancel trade (3)"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_62915fc4bdc23f948b008ac5bb93785842503d33f35707b31a531df5ef8b008f",
                                    "typeString": "literal_string \"Sender is not allowed to cancel trade (3)\""
                                  }
                                ],
                                "id": 10104,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  4294967278,
                                  4294967278
                                ],
                                "referencedDeclaration": 4294967278,
                                "src": "31346:7:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 10123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "31346:144:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 10124,
                            "nodeType": "ExpressionStatement",
                            "src": "31346:144:35"
                          }
                        ]
                      },
                      "id": 10126,
                      "nodeType": "IfStatement",
                      "src": "30990:507:35",
                      "trueBody": {
                        "id": 10103,
                        "nodeType": "Block",
                        "src": "31004:328:35",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 10079,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 10066,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 10062,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "31020:3:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 10063,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "31020:10:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 10064,
                                        "name": "trade",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 9905,
                                        "src": "31034:5:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                          "typeString": "struct Swaps.Trade storage pointer"
                                        }
                                      },
                                      "id": 10065,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "executer",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 8159,
                                      "src": "31034:14:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "31020:28:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "||",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "id": 10077,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 10071,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "id": 10067,
                                              "name": "block",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4294967292,
                                              "src": "31053:5:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_block",
                                                "typeString": "block"
                                              }
                                            },
                                            "id": 10068,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "timestamp",
                                            "nodeType": "MemberAccess",
                                            "src": "31053:15:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": ">=",
                                          "rightExpression": {
                                            "expression": {
                                              "id": 10069,
                                              "name": "trade",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 9905,
                                              "src": "31072:5:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                                "typeString": "struct Swaps.Trade storage pointer"
                                              }
                                            },
                                            "id": 10070,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "expirationDate",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 8161,
                                            "src": "31072:20:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "31053:39:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "&&",
                                        "rightExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          "id": 10076,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "id": 10072,
                                              "name": "msg",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4294967281,
                                              "src": "31096:3:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                              }
                                            },
                                            "id": 10073,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "sender",
                                            "nodeType": "MemberAccess",
                                            "src": "31096:10:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "expression": {
                                              "id": 10074,
                                              "name": "trade",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 9905,
                                              "src": "31110:5:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                                "typeString": "struct Swaps.Trade storage pointer"
                                              }
                                            },
                                            "id": 10075,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "holder2",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 8157,
                                            "src": "31110:13:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "src": "31096:27:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "src": "31053:70:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      }
                                    ],
                                    "id": 10078,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "31052:72:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "31020:104:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "53656e646572206973206e6f7420616c6c6f77656420746f2063616e63656c20747261646520283229",
                                  "id": 10080,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "31126:43:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_ddc0ea0a3c16467f3e90962bae7c77db78af2e3817b9cf66cef0d9bf75e269eb",
                                    "typeString": "literal_string \"Sender is not allowed to cancel trade (2)\""
                                  },
                                  "value": "Sender is not allowed to cancel trade (2)"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_ddc0ea0a3c16467f3e90962bae7c77db78af2e3817b9cf66cef0d9bf75e269eb",
                                    "typeString": "literal_string \"Sender is not allowed to cancel trade (2)\""
                                  }
                                ],
                                "id": 10061,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  4294967278,
                                  4294967278
                                ],
                                "referencedDeclaration": 4294967278,
                                "src": "31012:7:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 10081,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "31012:158:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 10082,
                            "nodeType": "ExpressionStatement",
                            "src": "31012:158:35"
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_TradeType_$8046",
                                "typeString": "enum Swaps.TradeType"
                              },
                              "id": 10088,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 10083,
                                    "name": "trade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9905,
                                    "src": "31181:5:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                      "typeString": "struct Swaps.Trade storage pointer"
                                    }
                                  },
                                  "id": 10084,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "userTradeData2",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8169,
                                  "src": "31181:20:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                                    "typeString": "struct Swaps.UserTradeData storage ref"
                                  }
                                },
                                "id": 10085,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tradeType",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 8117,
                                "src": "31181:30:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_TradeType_$8046",
                                  "typeString": "enum Swaps.TradeType"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 10086,
                                  "name": "TradeType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8046,
                                  "src": "31215:9:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_TradeType_$8046_$",
                                    "typeString": "type(enum Swaps.TradeType)"
                                  }
                                },
                                "id": 10087,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "Escrow",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 8045,
                                "src": "31215:16:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_TradeType_$8046",
                                  "typeString": "enum Swaps.TradeType"
                                }
                              },
                              "src": "31181:50:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 10102,
                            "nodeType": "IfStatement",
                            "src": "31178:148:35",
                            "trueBody": {
                              "id": 10101,
                              "nodeType": "Block",
                              "src": "31233:93:35",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 10090,
                                        "name": "index",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 9900,
                                        "src": "31264:5:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "expression": {
                                          "id": 10091,
                                          "name": "Holder",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 8049,
                                          "src": "31271:6:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_enum$_Holder_$8049_$",
                                            "typeString": "type(enum Swaps.Holder)"
                                          }
                                        },
                                        "id": 10092,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "Holder2",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 8048,
                                        "src": "31271:14:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_Holder_$8049",
                                          "typeString": "enum Swaps.Holder"
                                        }
                                      },
                                      {
                                        "id": 10093,
                                        "name": "tokenValue2",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 9932,
                                        "src": "31287:11:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "hexValue": "74727565",
                                        "id": 10094,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "31300:4:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "hexValue": "30",
                                            "id": 10097,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "31314:1:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            }
                                          ],
                                          "id": 10096,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "31306:7:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_bytes32_$",
                                            "typeString": "type(bytes32)"
                                          },
                                          "typeName": {
                                            "id": 10095,
                                            "name": "bytes32",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "31306:7:35",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 10098,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "31306:10:35",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_enum$_Holder_$8049",
                                          "typeString": "enum Swaps.Holder"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      ],
                                      "id": 10089,
                                      "name": "_transferUsersTokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10201,
                                      "src": "31243:20:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_enum$_Holder_$8049_$_t_uint256_$_t_bool_$_t_bytes32_$returns$__$",
                                        "typeString": "function (uint256,enum Swaps.Holder,uint256,bool,bytes32)"
                                      }
                                    },
                                    "id": 10099,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "31243:74:35",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 10100,
                                  "nodeType": "ExpressionStatement",
                                  "src": "31243:74:35"
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    "id": 10127,
                    "nodeType": "IfStatement",
                    "src": "30642:855:35",
                    "trueBody": {
                      "id": 10059,
                      "nodeType": "Block",
                      "src": "30656:328:35",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 10035,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 10022,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 10018,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "30672:3:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 10019,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "30672:10:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 10020,
                                      "name": "trade",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 9905,
                                      "src": "30686:5:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                        "typeString": "struct Swaps.Trade storage pointer"
                                      }
                                    },
                                    "id": 10021,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "executer",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 8159,
                                    "src": "30686:14:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "30672:28:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 10033,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 10027,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 10023,
                                            "name": "block",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967292,
                                            "src": "30705:5:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_block",
                                              "typeString": "block"
                                            }
                                          },
                                          "id": 10024,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "timestamp",
                                          "nodeType": "MemberAccess",
                                          "src": "30705:15:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": ">=",
                                        "rightExpression": {
                                          "expression": {
                                            "id": 10025,
                                            "name": "trade",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 9905,
                                            "src": "30724:5:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                              "typeString": "struct Swaps.Trade storage pointer"
                                            }
                                          },
                                          "id": 10026,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "expirationDate",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 8161,
                                          "src": "30724:20:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "30705:39:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "&&",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        "id": 10032,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 10028,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967281,
                                            "src": "30748:3:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 10029,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "30748:10:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "expression": {
                                            "id": 10030,
                                            "name": "trade",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 9905,
                                            "src": "30762:5:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                              "typeString": "struct Swaps.Trade storage pointer"
                                            }
                                          },
                                          "id": 10031,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "holder1",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 8155,
                                          "src": "30762:13:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "src": "30748:27:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "30705:70:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    }
                                  ],
                                  "id": 10034,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "30704:72:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "30672:104:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "53656e646572206973206e6f7420616c6c6f77656420746f2063616e63656c20747261646520283129",
                                "id": 10036,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "30778:43:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_13a62c55f76587a2dd941a7afaba21d8be7cba385c183c78ab02aae0f038fccf",
                                  "typeString": "literal_string \"Sender is not allowed to cancel trade (1)\""
                                },
                                "value": "Sender is not allowed to cancel trade (1)"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_13a62c55f76587a2dd941a7afaba21d8be7cba385c183c78ab02aae0f038fccf",
                                  "typeString": "literal_string \"Sender is not allowed to cancel trade (1)\""
                                }
                              ],
                              "id": 10017,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "src": "30664:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 10037,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "30664:158:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 10038,
                          "nodeType": "ExpressionStatement",
                          "src": "30664:158:35"
                        },
                        {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_TradeType_$8046",
                              "typeString": "enum Swaps.TradeType"
                            },
                            "id": 10044,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "expression": {
                                  "id": 10039,
                                  "name": "trade",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9905,
                                  "src": "30833:5:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                    "typeString": "struct Swaps.Trade storage pointer"
                                  }
                                },
                                "id": 10040,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "userTradeData1",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 8166,
                                "src": "30833:20:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                                  "typeString": "struct Swaps.UserTradeData storage ref"
                                }
                              },
                              "id": 10041,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tradeType",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8117,
                              "src": "30833:30:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_TradeType_$8046",
                                "typeString": "enum Swaps.TradeType"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 10042,
                                "name": "TradeType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8046,
                                "src": "30867:9:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_TradeType_$8046_$",
                                  "typeString": "type(enum Swaps.TradeType)"
                                }
                              },
                              "id": 10043,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Escrow",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8045,
                              "src": "30867:16:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_TradeType_$8046",
                                "typeString": "enum Swaps.TradeType"
                              }
                            },
                            "src": "30833:50:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 10058,
                          "nodeType": "IfStatement",
                          "src": "30830:148:35",
                          "trueBody": {
                            "id": 10057,
                            "nodeType": "Block",
                            "src": "30885:93:35",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 10046,
                                      "name": "index",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 9900,
                                      "src": "30916:5:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 10047,
                                        "name": "Holder",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 8049,
                                        "src": "30923:6:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_enum$_Holder_$8049_$",
                                          "typeString": "type(enum Swaps.Holder)"
                                        }
                                      },
                                      "id": 10048,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "Holder1",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 8047,
                                      "src": "30923:14:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_Holder_$8049",
                                        "typeString": "enum Swaps.Holder"
                                      }
                                    },
                                    {
                                      "id": 10049,
                                      "name": "tokenValue1",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 9920,
                                      "src": "30939:11:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "hexValue": "74727565",
                                      "id": 10050,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "bool",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "30952:4:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "value": "true"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "hexValue": "30",
                                          "id": 10053,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "30966:1:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          }
                                        ],
                                        "id": 10052,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "30958:7:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_bytes32_$",
                                          "typeString": "type(bytes32)"
                                        },
                                        "typeName": {
                                          "id": 10051,
                                          "name": "bytes32",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "30958:7:35",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 10054,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "30958:10:35",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_enum$_Holder_$8049",
                                        "typeString": "enum Swaps.Holder"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    ],
                                    "id": 10045,
                                    "name": "_transferUsersTokens",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10201,
                                    "src": "30895:20:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_enum$_Holder_$8049_$_t_uint256_$_t_bool_$_t_bytes32_$returns$__$",
                                      "typeString": "function (uint256,enum Swaps.Holder,uint256,bool,bytes32)"
                                    }
                                  },
                                  "id": 10055,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "30895:74:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 10056,
                                "nodeType": "ExpressionStatement",
                                "src": "30895:74:35"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "id": 10128,
                  "nodeType": "IfStatement",
                  "src": "30092:1405:35",
                  "trueBody": {
                    "id": 10015,
                    "nodeType": "Block",
                    "src": "30119:517:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 9971,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 9951,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 9947,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "30135:3:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 9948,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "30135:10:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 9949,
                                    "name": "trade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9905,
                                    "src": "30149:5:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                      "typeString": "struct Swaps.Trade storage pointer"
                                    }
                                  },
                                  "id": 9950,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "executer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8159,
                                  "src": "30149:14:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "30135:28:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 9969,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 9956,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 9952,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967292,
                                          "src": "30168:5:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 9953,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "30168:15:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">=",
                                      "rightExpression": {
                                        "expression": {
                                          "id": 9954,
                                          "name": "trade",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 9905,
                                          "src": "30187:5:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                            "typeString": "struct Swaps.Trade storage pointer"
                                          }
                                        },
                                        "id": 9955,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "expirationDate",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 8161,
                                        "src": "30187:20:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "30168:39:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&&",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          "id": 9967,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            "id": 9961,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "expression": {
                                                "id": 9957,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967281,
                                                "src": "30212:3:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_message",
                                                  "typeString": "msg"
                                                }
                                              },
                                              "id": 9958,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "sender",
                                              "nodeType": "MemberAccess",
                                              "src": "30212:10:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "expression": {
                                                "id": 9959,
                                                "name": "trade",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 9905,
                                                "src": "30226:5:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                                  "typeString": "struct Swaps.Trade storage pointer"
                                                }
                                              },
                                              "id": 9960,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "holder1",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 8155,
                                              "src": "30226:13:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "src": "30212:27:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "||",
                                          "rightExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            "id": 9966,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "expression": {
                                                "id": 9962,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967281,
                                                "src": "30243:3:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_message",
                                                  "typeString": "msg"
                                                }
                                              },
                                              "id": 9963,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "sender",
                                              "nodeType": "MemberAccess",
                                              "src": "30243:10:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "expression": {
                                                "id": 9964,
                                                "name": "trade",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 9905,
                                                "src": "30257:5:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                                  "typeString": "struct Swaps.Trade storage pointer"
                                                }
                                              },
                                              "id": 9965,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "holder2",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 8157,
                                              "src": "30257:13:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "src": "30243:27:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "src": "30212:58:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        }
                                      ],
                                      "id": 9968,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "30211:60:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "30168:103:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 9970,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "30167:106:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "30135:138:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "53656e646572206973206e6f7420616c6c6f77656420746f2063616e63656c20747261646520283029",
                              "id": 9972,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "30275:43:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5d6836f0c0e087667fc172041236feaf9634db8287593900fb516b3a15e093e3",
                                "typeString": "literal_string \"Sender is not allowed to cancel trade (0)\""
                              },
                              "value": "Sender is not allowed to cancel trade (0)"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5d6836f0c0e087667fc172041236feaf9634db8287593900fb516b3a15e093e3",
                                "typeString": "literal_string \"Sender is not allowed to cancel trade (0)\""
                              }
                            ],
                            "id": 9946,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "30127:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 9973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "30127:192:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9974,
                        "nodeType": "ExpressionStatement",
                        "src": "30127:192:35"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_TradeType_$8046",
                            "typeString": "enum Swaps.TradeType"
                          },
                          "id": 9980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 9975,
                                "name": "trade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9905,
                                "src": "30330:5:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                  "typeString": "struct Swaps.Trade storage pointer"
                                }
                              },
                              "id": 9976,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "userTradeData1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8166,
                              "src": "30330:20:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                                "typeString": "struct Swaps.UserTradeData storage ref"
                              }
                            },
                            "id": 9977,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tradeType",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8117,
                            "src": "30330:30:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_TradeType_$8046",
                              "typeString": "enum Swaps.TradeType"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 9978,
                              "name": "TradeType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8046,
                              "src": "30364:9:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_TradeType_$8046_$",
                                "typeString": "type(enum Swaps.TradeType)"
                              }
                            },
                            "id": 9979,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Escrow",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8045,
                            "src": "30364:16:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_TradeType_$8046",
                              "typeString": "enum Swaps.TradeType"
                            }
                          },
                          "src": "30330:50:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 9994,
                        "nodeType": "IfStatement",
                        "src": "30327:148:35",
                        "trueBody": {
                          "id": 9993,
                          "nodeType": "Block",
                          "src": "30382:93:35",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 9982,
                                    "name": "index",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9900,
                                    "src": "30413:5:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 9983,
                                      "name": "Holder",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8049,
                                      "src": "30420:6:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_Holder_$8049_$",
                                        "typeString": "type(enum Swaps.Holder)"
                                      }
                                    },
                                    "id": 9984,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "Holder1",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 8047,
                                    "src": "30420:14:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_Holder_$8049",
                                      "typeString": "enum Swaps.Holder"
                                    }
                                  },
                                  {
                                    "id": 9985,
                                    "name": "tokenValue1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9920,
                                    "src": "30436:11:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "hexValue": "74727565",
                                    "id": 9986,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "30449:4:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "true"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 9989,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "30463:1:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 9988,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "30455:7:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes32_$",
                                        "typeString": "type(bytes32)"
                                      },
                                      "typeName": {
                                        "id": 9987,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "30455:7:35",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 9990,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "30455:10:35",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_enum$_Holder_$8049",
                                      "typeString": "enum Swaps.Holder"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 9981,
                                  "name": "_transferUsersTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10201,
                                  "src": "30392:20:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_enum$_Holder_$8049_$_t_uint256_$_t_bool_$_t_bytes32_$returns$__$",
                                    "typeString": "function (uint256,enum Swaps.Holder,uint256,bool,bytes32)"
                                  }
                                },
                                "id": 9991,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "30392:74:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 9992,
                              "nodeType": "ExpressionStatement",
                              "src": "30392:74:35"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_TradeType_$8046",
                            "typeString": "enum Swaps.TradeType"
                          },
                          "id": 10000,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 9995,
                                "name": "trade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9905,
                                "src": "30485:5:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                  "typeString": "struct Swaps.Trade storage pointer"
                                }
                              },
                              "id": 9996,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "userTradeData2",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8169,
                              "src": "30485:20:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                                "typeString": "struct Swaps.UserTradeData storage ref"
                              }
                            },
                            "id": 9997,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tradeType",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8117,
                            "src": "30485:30:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_TradeType_$8046",
                              "typeString": "enum Swaps.TradeType"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 9998,
                              "name": "TradeType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8046,
                              "src": "30519:9:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_TradeType_$8046_$",
                                "typeString": "type(enum Swaps.TradeType)"
                              }
                            },
                            "id": 9999,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Escrow",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8045,
                            "src": "30519:16:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_TradeType_$8046",
                              "typeString": "enum Swaps.TradeType"
                            }
                          },
                          "src": "30485:50:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 10014,
                        "nodeType": "IfStatement",
                        "src": "30482:148:35",
                        "trueBody": {
                          "id": 10013,
                          "nodeType": "Block",
                          "src": "30537:93:35",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 10002,
                                    "name": "index",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9900,
                                    "src": "30568:5:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 10003,
                                      "name": "Holder",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8049,
                                      "src": "30575:6:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_Holder_$8049_$",
                                        "typeString": "type(enum Swaps.Holder)"
                                      }
                                    },
                                    "id": 10004,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "Holder2",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 8048,
                                    "src": "30575:14:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_Holder_$8049",
                                      "typeString": "enum Swaps.Holder"
                                    }
                                  },
                                  {
                                    "id": 10005,
                                    "name": "tokenValue2",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9932,
                                    "src": "30591:11:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "hexValue": "74727565",
                                    "id": 10006,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "30604:4:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "true"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 10009,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "30618:1:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 10008,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "30610:7:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes32_$",
                                        "typeString": "type(bytes32)"
                                      },
                                      "typeName": {
                                        "id": 10007,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "30610:7:35",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 10010,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "30610:10:35",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_enum$_Holder_$8049",
                                      "typeString": "enum Swaps.Holder"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 10001,
                                  "name": "_transferUsersTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10201,
                                  "src": "30547:20:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_enum$_Holder_$8049_$_t_uint256_$_t_bool_$_t_bytes32_$returns$__$",
                                    "typeString": "function (uint256,enum Swaps.Holder,uint256,bool,bytes32)"
                                  }
                                },
                                "id": 10011,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "30547:74:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 10012,
                              "nodeType": "ExpressionStatement",
                              "src": "30547:74:35"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 10134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 10129,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9905,
                        "src": "31503:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 10131,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8172,
                      "src": "31503:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$8042",
                        "typeString": "enum Swaps.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 10132,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8042,
                        "src": "31517:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$8042_$",
                          "typeString": "type(enum Swaps.State)"
                        }
                      },
                      "id": 10133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Cancelled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8041,
                      "src": "31517:15:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$8042",
                        "typeString": "enum Swaps.State"
                      }
                    },
                    "src": "31503:29:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$8042",
                      "typeString": "enum Swaps.State"
                    }
                  },
                  "id": 10135,
                  "nodeType": "ExpressionStatement",
                  "src": "31503:29:35"
                }
              ]
            },
            "documentation": {
              "id": 9898,
              "nodeType": "StructuredDocumentation",
              "src": "29531:173:35",
              "text": " @dev Cancel a trade execution in the Swaps contract by transferring tokens back to their initial owners.\n @param index Index of the trade to be cancelled."
            },
            "functionSelector": "09ec6cc7",
            "id": 10137,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelTrade",
            "nameLocation": "29716:11:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9901,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9900,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "29736:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10137,
                  "src": "29728:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9899,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29728:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29727:15:35"
            },
            "returnParameters": {
              "id": 9902,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29752:0:35"
            },
            "scope": 11766,
            "src": "29707:1830:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10200,
              "nodeType": "Block",
              "src": "31664:453:35",
              "statements": [
                {
                  "assignments": [
                    10153
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10153,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "31685:5:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 10200,
                      "src": "31671:19:35",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                        "typeString": "struct Swaps.Trade"
                      },
                      "typeName": {
                        "id": 10152,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10151,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8173,
                          "src": "31671:5:35"
                        },
                        "referencedDeclaration": 8173,
                        "src": "31671:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10157,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10154,
                      "name": "_trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8180,
                      "src": "31693:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$8173_storage_$",
                        "typeString": "mapping(uint256 => struct Swaps.Trade storage ref)"
                      }
                    },
                    "id": 10156,
                    "indexExpression": {
                      "id": 10155,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10139,
                      "src": "31701:5:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "31693:14:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$8173_storage",
                      "typeString": "struct Swaps.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "31671:36:35"
                },
                {
                  "assignments": [
                    10160
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10160,
                      "mutability": "mutable",
                      "name": "senderUserTradeData",
                      "nameLocation": "31735:19:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 10200,
                      "src": "31714:40:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                        "typeString": "struct Swaps.UserTradeData"
                      },
                      "typeName": {
                        "id": 10159,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10158,
                          "name": "UserTradeData",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8118,
                          "src": "31714:13:35"
                        },
                        "referencedDeclaration": 8118,
                        "src": "31714:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserTradeData_$8118_storage_ptr",
                          "typeString": "struct Swaps.UserTradeData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10171,
                  "initialValue": {
                    "condition": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_enum$_Holder_$8049",
                            "typeString": "enum Swaps.Holder"
                          },
                          "id": 10164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 10161,
                            "name": "holder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10142,
                            "src": "31758:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Holder_$8049",
                              "typeString": "enum Swaps.Holder"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 10162,
                              "name": "Holder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8049,
                              "src": "31768:6:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Holder_$8049_$",
                                "typeString": "type(enum Swaps.Holder)"
                              }
                            },
                            "id": 10163,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Holder1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8047,
                            "src": "31768:14:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Holder_$8049",
                              "typeString": "enum Swaps.Holder"
                            }
                          },
                          "src": "31758:24:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 10165,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "31757:26:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "expression": {
                        "id": 10168,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10153,
                        "src": "31809:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 10169,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8169,
                      "src": "31809:20:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "id": 10170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "31757:72:35",
                    "trueExpression": {
                      "expression": {
                        "id": 10166,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10153,
                        "src": "31786:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 10167,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8166,
                      "src": "31786:20:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserTradeData_$8118_storage_ptr",
                      "typeString": "struct Swaps.UserTradeData storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "31714:115:35"
                },
                {
                  "assignments": [
                    10174
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10174,
                      "mutability": "mutable",
                      "name": "tokenTradeType",
                      "nameLocation": "31846:14:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 10200,
                      "src": "31836:24:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_TradeType_$8046",
                        "typeString": "enum Swaps.TradeType"
                      },
                      "typeName": {
                        "id": 10173,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10172,
                          "name": "TradeType",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8046,
                          "src": "31836:9:35"
                        },
                        "referencedDeclaration": 8046,
                        "src": "31836:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_TradeType_$8046",
                          "typeString": "enum Swaps.TradeType"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10177,
                  "initialValue": {
                    "expression": {
                      "id": 10175,
                      "name": "senderUserTradeData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10160,
                      "src": "31863:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                        "typeString": "struct Swaps.UserTradeData memory"
                      }
                    },
                    "id": 10176,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tradeType",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 8117,
                    "src": "31863:29:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_TradeType_$8046",
                      "typeString": "enum Swaps.TradeType"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "31836:56:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_TradeType_$8046",
                      "typeString": "enum Swaps.TradeType"
                    },
                    "id": 10181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10178,
                      "name": "tokenTradeType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10174,
                      "src": "31903:14:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_TradeType_$8046",
                        "typeString": "enum Swaps.TradeType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 10179,
                        "name": "TradeType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8046,
                        "src": "31921:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_TradeType_$8046_$",
                          "typeString": "type(enum Swaps.TradeType)"
                        }
                      },
                      "id": 10180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Hold",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8044,
                      "src": "31921:14:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_TradeType_$8046",
                        "typeString": "enum Swaps.TradeType"
                      }
                    },
                    "src": "31903:32:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 10198,
                    "nodeType": "Block",
                    "src": "32031:82:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 10192,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10139,
                              "src": "32069:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 10193,
                              "name": "holder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10142,
                              "src": "32076:6:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Holder_$8049",
                                "typeString": "enum Swaps.Holder"
                              }
                            },
                            {
                              "id": 10194,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10144,
                              "src": "32084:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 10195,
                              "name": "revertTransfer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10146,
                              "src": "32091:14:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_Holder_$8049",
                                "typeString": "enum Swaps.Holder"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 10191,
                            "name": "_executeTransferOnUsersTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10517,
                            "src": "32039:29:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_enum$_Holder_$8049_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (uint256,enum Swaps.Holder,uint256,bool)"
                            }
                          },
                          "id": 10196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "32039:67:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10197,
                        "nodeType": "ExpressionStatement",
                        "src": "32039:67:35"
                      }
                    ]
                  },
                  "id": 10199,
                  "nodeType": "IfStatement",
                  "src": "31899:214:35",
                  "trueBody": {
                    "id": 10190,
                    "nodeType": "Block",
                    "src": "31937:88:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 10183,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10139,
                              "src": "31971:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 10184,
                              "name": "holder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10142,
                              "src": "31978:6:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Holder_$8049",
                                "typeString": "enum Swaps.Holder"
                              }
                            },
                            {
                              "id": 10185,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10144,
                              "src": "31986:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 10186,
                              "name": "revertTransfer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10146,
                              "src": "31993:14:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 10187,
                              "name": "preimage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10148,
                              "src": "32009:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_Holder_$8049",
                                "typeString": "enum Swaps.Holder"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 10182,
                            "name": "_executeHoldOnUsersTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10318,
                            "src": "31945:25:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_enum$_Holder_$8049_$_t_uint256_$_t_bool_$_t_bytes32_$returns$__$",
                              "typeString": "function (uint256,enum Swaps.Holder,uint256,bool,bytes32)"
                            }
                          },
                          "id": 10188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "31945:73:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10189,
                        "nodeType": "ExpressionStatement",
                        "src": "31945:73:35"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 10201,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferUsersTokens",
            "nameLocation": "31550:20:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10139,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "31579:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10201,
                  "src": "31571:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10138,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "31571:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10142,
                  "mutability": "mutable",
                  "name": "holder",
                  "nameLocation": "31593:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10201,
                  "src": "31586:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Holder_$8049",
                    "typeString": "enum Swaps.Holder"
                  },
                  "typeName": {
                    "id": 10141,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10140,
                      "name": "Holder",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8049,
                      "src": "31586:6:35"
                    },
                    "referencedDeclaration": 8049,
                    "src": "31586:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Holder_$8049",
                      "typeString": "enum Swaps.Holder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10144,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "31609:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10201,
                  "src": "31601:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10143,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "31601:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10146,
                  "mutability": "mutable",
                  "name": "revertTransfer",
                  "nameLocation": "31621:14:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10201,
                  "src": "31616:19:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10145,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "31616:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10148,
                  "mutability": "mutable",
                  "name": "preimage",
                  "nameLocation": "31645:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10201,
                  "src": "31637:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10147,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "31637:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "31570:84:35"
            },
            "returnParameters": {
              "id": 10150,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "31664:0:35"
            },
            "scope": 11766,
            "src": "31541:576:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10317,
              "nodeType": "Block",
              "src": "32228:877:35",
              "statements": [
                {
                  "assignments": [
                    10217
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10217,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "32249:5:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 10317,
                      "src": "32235:19:35",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                        "typeString": "struct Swaps.Trade"
                      },
                      "typeName": {
                        "id": 10216,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10215,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8173,
                          "src": "32235:5:35"
                        },
                        "referencedDeclaration": 8173,
                        "src": "32235:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10221,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10218,
                      "name": "_trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8180,
                      "src": "32257:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$8173_storage_$",
                        "typeString": "mapping(uint256 => struct Swaps.Trade storage ref)"
                      }
                    },
                    "id": 10220,
                    "indexExpression": {
                      "id": 10219,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10203,
                      "src": "32265:5:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "32257:14:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$8173_storage",
                      "typeString": "struct Swaps.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "32235:36:35"
                },
                {
                  "assignments": [
                    10223
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10223,
                      "mutability": "mutable",
                      "name": "sender",
                      "nameLocation": "32286:6:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 10317,
                      "src": "32278:14:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10222,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "32278:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10234,
                  "initialValue": {
                    "condition": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_enum$_Holder_$8049",
                            "typeString": "enum Swaps.Holder"
                          },
                          "id": 10227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 10224,
                            "name": "holder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10206,
                            "src": "32296:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Holder_$8049",
                              "typeString": "enum Swaps.Holder"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 10225,
                              "name": "Holder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8049,
                              "src": "32306:6:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Holder_$8049_$",
                                "typeString": "type(enum Swaps.Holder)"
                              }
                            },
                            "id": 10226,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Holder1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8047,
                            "src": "32306:14:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Holder_$8049",
                              "typeString": "enum Swaps.Holder"
                            }
                          },
                          "src": "32296:24:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 10228,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "32295:26:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "expression": {
                        "id": 10231,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10217,
                        "src": "32340:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 10232,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "holder2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8157,
                      "src": "32340:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 10233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "32295:58:35",
                    "trueExpression": {
                      "expression": {
                        "id": 10229,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10217,
                        "src": "32324:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 10230,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "holder1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8155,
                      "src": "32324:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "32278:75:35"
                },
                {
                  "assignments": [
                    10236
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10236,
                      "mutability": "mutable",
                      "name": "recipient",
                      "nameLocation": "32367:9:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 10317,
                      "src": "32359:17:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10235,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "32359:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10247,
                  "initialValue": {
                    "condition": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_enum$_Holder_$8049",
                            "typeString": "enum Swaps.Holder"
                          },
                          "id": 10240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 10237,
                            "name": "holder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10206,
                            "src": "32380:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Holder_$8049",
                              "typeString": "enum Swaps.Holder"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 10238,
                              "name": "Holder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8049,
                              "src": "32390:6:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Holder_$8049_$",
                                "typeString": "type(enum Swaps.Holder)"
                              }
                            },
                            "id": 10239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Holder1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8047,
                            "src": "32390:14:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Holder_$8049",
                              "typeString": "enum Swaps.Holder"
                            }
                          },
                          "src": "32380:24:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 10241,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "32379:26:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "expression": {
                        "id": 10244,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10217,
                        "src": "32424:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 10245,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "holder1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8155,
                      "src": "32424:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 10246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "32379:58:35",
                    "trueExpression": {
                      "expression": {
                        "id": 10242,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10217,
                        "src": "32408:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 10243,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "holder2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8157,
                      "src": "32408:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "32359:78:35"
                },
                {
                  "assignments": [
                    10250
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10250,
                      "mutability": "mutable",
                      "name": "senderUserTradeData",
                      "nameLocation": "32464:19:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 10317,
                      "src": "32443:40:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                        "typeString": "struct Swaps.UserTradeData"
                      },
                      "typeName": {
                        "id": 10249,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10248,
                          "name": "UserTradeData",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8118,
                          "src": "32443:13:35"
                        },
                        "referencedDeclaration": 8118,
                        "src": "32443:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserTradeData_$8118_storage_ptr",
                          "typeString": "struct Swaps.UserTradeData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10261,
                  "initialValue": {
                    "condition": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_enum$_Holder_$8049",
                            "typeString": "enum Swaps.Holder"
                          },
                          "id": 10254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 10251,
                            "name": "holder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10206,
                            "src": "32487:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Holder_$8049",
                              "typeString": "enum Swaps.Holder"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 10252,
                              "name": "Holder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8049,
                              "src": "32497:6:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Holder_$8049_$",
                                "typeString": "type(enum Swaps.Holder)"
                              }
                            },
                            "id": 10253,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Holder1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8047,
                            "src": "32497:14:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Holder_$8049",
                              "typeString": "enum Swaps.Holder"
                            }
                          },
                          "src": "32487:24:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 10255,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "32486:26:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "expression": {
                        "id": 10258,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10217,
                        "src": "32538:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 10259,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8169,
                      "src": "32538:20:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "id": 10260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "32486:72:35",
                    "trueExpression": {
                      "expression": {
                        "id": 10256,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10217,
                        "src": "32515:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 10257,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8166,
                      "src": "32515:20:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserTradeData_$8118_storage_ptr",
                      "typeString": "struct Swaps.UserTradeData storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "32443:115:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 10263,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "32573:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 10264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "32573:15:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 10265,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10217,
                            "src": "32592:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                              "typeString": "struct Swaps.Trade storage pointer"
                            }
                          },
                          "id": 10266,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "expirationDate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8161,
                          "src": "32592:20:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "32573:39:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45787069726174696f6e20646174652069732070617374",
                        "id": 10268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "32614:25:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7ec5e5b6d8986751e9975433d52bdbaec91cf6fa3fa30d8651373347427b1a8b",
                          "typeString": "literal_string \"Expiration date is past\""
                        },
                        "value": "Expiration date is past"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7ec5e5b6d8986751e9975433d52bdbaec91cf6fa3fa30d8651373347427b1a8b",
                          "typeString": "literal_string \"Expiration date is past\""
                        }
                      ],
                      "id": 10262,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "32565:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32565:75:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10270,
                  "nodeType": "ExpressionStatement",
                  "src": "32565:75:35"
                },
                {
                  "assignments": [
                    10272
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10272,
                      "mutability": "mutable",
                      "name": "tokenAddress",
                      "nameLocation": "32655:12:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 10317,
                      "src": "32647:20:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10271,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "32647:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10275,
                  "initialValue": {
                    "expression": {
                      "id": 10273,
                      "name": "senderUserTradeData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10250,
                      "src": "32670:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                        "typeString": "struct Swaps.UserTradeData memory"
                      }
                    },
                    "id": 10274,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 8103,
                    "src": "32670:32:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "32647:55:35"
                },
                {
                  "assignments": [
                    10277
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10277,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "32716:7:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 10317,
                      "src": "32708:15:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 10276,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "32708:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10280,
                  "initialValue": {
                    "expression": {
                      "id": 10278,
                      "name": "senderUserTradeData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10250,
                      "src": "32726:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                        "typeString": "struct Swaps.UserTradeData memory"
                      }
                    },
                    "id": 10279,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenId",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 8107,
                    "src": "32726:27:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "32708:45:35"
                },
                {
                  "assignments": [
                    10283
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10283,
                      "mutability": "mutable",
                      "name": "tokenStandard",
                      "nameLocation": "32768:13:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 10317,
                      "src": "32759:22:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Standard_$8036",
                        "typeString": "enum Swaps.Standard"
                      },
                      "typeName": {
                        "id": 10282,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10281,
                          "name": "Standard",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8036,
                          "src": "32759:8:35"
                        },
                        "referencedDeclaration": 8036,
                        "src": "32759:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Standard_$8036",
                          "typeString": "enum Swaps.Standard"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10286,
                  "initialValue": {
                    "expression": {
                      "id": 10284,
                      "name": "senderUserTradeData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10250,
                      "src": "32784:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                        "typeString": "struct Swaps.UserTradeData memory"
                      }
                    },
                    "id": 10285,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenStandard",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 8110,
                    "src": "32784:33:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Standard_$8036",
                      "typeString": "enum Swaps.Standard"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "32759:58:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_Standard_$8036",
                            "typeString": "enum Swaps.Standard"
                          },
                          "id": 10291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 10288,
                            "name": "tokenStandard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10283,
                            "src": "32832:13:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Standard_$8036",
                              "typeString": "enum Swaps.Standard"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 10289,
                              "name": "Standard",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8036,
                              "src": "32849:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Standard_$8036_$",
                                "typeString": "type(enum Swaps.Standard)"
                              }
                            },
                            "id": 10290,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ERC20",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8033,
                            "src": "32849:14:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Standard_$8036",
                              "typeString": "enum Swaps.Standard"
                            }
                          },
                          "src": "32832:31:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_Standard_$8036",
                            "typeString": "enum Swaps.Standard"
                          },
                          "id": 10295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 10292,
                            "name": "tokenStandard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10283,
                            "src": "32867:13:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Standard_$8036",
                              "typeString": "enum Swaps.Standard"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 10293,
                              "name": "Standard",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8036,
                              "src": "32884:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Standard_$8036_$",
                                "typeString": "type(enum Swaps.Standard)"
                              }
                            },
                            "id": 10294,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ERC1400",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8035,
                            "src": "32884:16:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Standard_$8036",
                              "typeString": "enum Swaps.Standard"
                            }
                          },
                          "src": "32867:33:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "32832:68:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e207374616e64617264206d75737420626520686f6c6461626c65",
                        "id": 10297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "32902:33:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f3fb3eca663334b08617a28f5e55e2698b004ee0a964aa2bc92825ec7c73641",
                          "typeString": "literal_string \"Token standard must be holdable\""
                        },
                        "value": "Token standard must be holdable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f3fb3eca663334b08617a28f5e55e2698b004ee0a964aa2bc92825ec7c73641",
                          "typeString": "literal_string \"Token standard must be holdable\""
                        }
                      ],
                      "id": 10287,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "32824:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32824:112:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10299,
                  "nodeType": "ExpressionStatement",
                  "src": "32824:112:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 10302,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10223,
                            "src": "32963:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 10303,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10236,
                            "src": "32971:9:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 10304,
                            "name": "senderUserTradeData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10250,
                            "src": "32982:19:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                              "typeString": "struct Swaps.UserTradeData memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                              "typeString": "struct Swaps.UserTradeData memory"
                            }
                          ],
                          "id": 10301,
                          "name": "_holdExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10822,
                          "src": "32951:11:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_struct$_UserTradeData_$8118_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,struct Swaps.UserTradeData memory) view returns (bool)"
                          }
                        },
                        "id": 10305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "32951:51:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "486f6c64206d757374206578697374",
                        "id": 10306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "33004:17:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0e67fb1929d4780c273d05979a1e9884927127ac457215fefeddd8d222ee5b83",
                          "typeString": "literal_string \"Hold must exist\""
                        },
                        "value": "Hold must exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0e67fb1929d4780c273d05979a1e9884927127ac457215fefeddd8d222ee5b83",
                          "typeString": "literal_string \"Hold must exist\""
                        }
                      ],
                      "id": 10300,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "32943:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32943:79:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10308,
                  "nodeType": "ExpressionStatement",
                  "src": "32943:79:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10310,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10272,
                        "src": "33042:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10311,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10277,
                        "src": "33056:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 10312,
                        "name": "tokenStandard",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10283,
                        "src": "33065:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Standard_$8036",
                          "typeString": "enum Swaps.Standard"
                        }
                      },
                      {
                        "id": 10313,
                        "name": "preimage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10212,
                        "src": "33080:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 10314,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10236,
                        "src": "33090:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_enum$_Standard_$8036",
                          "typeString": "enum Swaps.Standard"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10309,
                      "name": "_executeHold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10625,
                      "src": "33029:12:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_enum$_Standard_$8036_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (address,bytes32,enum Swaps.Standard,bytes32,address)"
                      }
                    },
                    "id": 10315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33029:71:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10316,
                  "nodeType": "ExpressionStatement",
                  "src": "33029:71:35"
                }
              ]
            },
            "id": 10318,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_executeHoldOnUsersTokens",
            "nameLocation": "32130:25:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10203,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "32164:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10318,
                  "src": "32156:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10202,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "32156:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10206,
                  "mutability": "mutable",
                  "name": "holder",
                  "nameLocation": "32178:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10318,
                  "src": "32171:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Holder_$8049",
                    "typeString": "enum Swaps.Holder"
                  },
                  "typeName": {
                    "id": 10205,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10204,
                      "name": "Holder",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8049,
                      "src": "32171:6:35"
                    },
                    "referencedDeclaration": 8049,
                    "src": "32171:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Holder_$8049",
                      "typeString": "enum Swaps.Holder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10208,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10318,
                  "src": "32186:7:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10207,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "32186:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10210,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10318,
                  "src": "32195:4:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10209,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "32195:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10212,
                  "mutability": "mutable",
                  "name": "preimage",
                  "nameLocation": "32209:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10318,
                  "src": "32201:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10211,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "32201:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "32155:63:35"
            },
            "returnParameters": {
              "id": 10214,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "32228:0:35"
            },
            "scope": 11766,
            "src": "32121:984:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10516,
              "nodeType": "Block",
              "src": "33695:1498:35",
              "statements": [
                {
                  "assignments": [
                    10333
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10333,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "33715:5:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 10516,
                      "src": "33701:19:35",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                        "typeString": "struct Swaps.Trade"
                      },
                      "typeName": {
                        "id": 10332,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10331,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8173,
                          "src": "33701:5:35"
                        },
                        "referencedDeclaration": 8173,
                        "src": "33701:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10337,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10334,
                      "name": "_trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8180,
                      "src": "33723:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$8173_storage_$",
                        "typeString": "mapping(uint256 => struct Swaps.Trade storage ref)"
                      }
                    },
                    "id": 10336,
                    "indexExpression": {
                      "id": 10335,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10321,
                      "src": "33731:5:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "33723:14:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$8173_storage",
                      "typeString": "struct Swaps.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "33701:36:35"
                },
                {
                  "assignments": [
                    10339
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10339,
                      "mutability": "mutable",
                      "name": "sender",
                      "nameLocation": "33752:6:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 10516,
                      "src": "33744:14:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10338,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "33744:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10350,
                  "initialValue": {
                    "condition": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_enum$_Holder_$8049",
                            "typeString": "enum Swaps.Holder"
                          },
                          "id": 10343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 10340,
                            "name": "holder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10324,
                            "src": "33762:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Holder_$8049",
                              "typeString": "enum Swaps.Holder"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 10341,
                              "name": "Holder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8049,
                              "src": "33772:6:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Holder_$8049_$",
                                "typeString": "type(enum Swaps.Holder)"
                              }
                            },
                            "id": 10342,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Holder1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8047,
                            "src": "33772:14:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Holder_$8049",
                              "typeString": "enum Swaps.Holder"
                            }
                          },
                          "src": "33762:24:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 10344,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "33761:26:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "expression": {
                        "id": 10347,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10333,
                        "src": "33806:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 10348,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "holder2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8157,
                      "src": "33806:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 10349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "33761:58:35",
                    "trueExpression": {
                      "expression": {
                        "id": 10345,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10333,
                        "src": "33790:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 10346,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "holder1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8155,
                      "src": "33790:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "33744:75:35"
                },
                {
                  "assignments": [
                    10352
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10352,
                      "mutability": "mutable",
                      "name": "recipient",
                      "nameLocation": "33833:9:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 10516,
                      "src": "33825:17:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10351,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "33825:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10363,
                  "initialValue": {
                    "condition": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_enum$_Holder_$8049",
                            "typeString": "enum Swaps.Holder"
                          },
                          "id": 10356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 10353,
                            "name": "holder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10324,
                            "src": "33846:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Holder_$8049",
                              "typeString": "enum Swaps.Holder"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 10354,
                              "name": "Holder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8049,
                              "src": "33856:6:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Holder_$8049_$",
                                "typeString": "type(enum Swaps.Holder)"
                              }
                            },
                            "id": 10355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Holder1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8047,
                            "src": "33856:14:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Holder_$8049",
                              "typeString": "enum Swaps.Holder"
                            }
                          },
                          "src": "33846:24:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 10357,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "33845:26:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "expression": {
                        "id": 10360,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10333,
                        "src": "33890:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 10361,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "holder1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8155,
                      "src": "33890:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 10362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "33845:58:35",
                    "trueExpression": {
                      "expression": {
                        "id": 10358,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10333,
                        "src": "33874:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 10359,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "holder2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8157,
                      "src": "33874:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "33825:78:35"
                },
                {
                  "assignments": [
                    10366
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10366,
                      "mutability": "mutable",
                      "name": "senderUserTradeData",
                      "nameLocation": "33931:19:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 10516,
                      "src": "33909:41:35",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$8118_storage_ptr",
                        "typeString": "struct Swaps.UserTradeData"
                      },
                      "typeName": {
                        "id": 10365,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10364,
                          "name": "UserTradeData",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8118,
                          "src": "33909:13:35"
                        },
                        "referencedDeclaration": 8118,
                        "src": "33909:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserTradeData_$8118_storage_ptr",
                          "typeString": "struct Swaps.UserTradeData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10377,
                  "initialValue": {
                    "condition": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_enum$_Holder_$8049",
                            "typeString": "enum Swaps.Holder"
                          },
                          "id": 10370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 10367,
                            "name": "holder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10324,
                            "src": "33954:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Holder_$8049",
                              "typeString": "enum Swaps.Holder"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 10368,
                              "name": "Holder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8049,
                              "src": "33964:6:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Holder_$8049_$",
                                "typeString": "type(enum Swaps.Holder)"
                              }
                            },
                            "id": 10369,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Holder1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8047,
                            "src": "33964:14:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Holder_$8049",
                              "typeString": "enum Swaps.Holder"
                            }
                          },
                          "src": "33954:24:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 10371,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "33953:26:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "expression": {
                        "id": 10374,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10333,
                        "src": "34005:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 10375,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8169,
                      "src": "34005:20:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "id": 10376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "33953:72:35",
                    "trueExpression": {
                      "expression": {
                        "id": 10372,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10333,
                        "src": "33982:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 10373,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8166,
                      "src": "33982:20:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserTradeData_$8118_storage_ptr",
                      "typeString": "struct Swaps.UserTradeData storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "33909:116:35"
                },
                {
                  "assignments": [
                    10379
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10379,
                      "mutability": "mutable",
                      "name": "tokenAddress",
                      "nameLocation": "34040:12:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 10516,
                      "src": "34032:20:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10378,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "34032:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10382,
                  "initialValue": {
                    "expression": {
                      "id": 10380,
                      "name": "senderUserTradeData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10366,
                      "src": "34055:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$8118_storage_ptr",
                        "typeString": "struct Swaps.UserTradeData storage pointer"
                      }
                    },
                    "id": 10381,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 8103,
                    "src": "34055:32:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "34032:55:35"
                },
                {
                  "assignments": [
                    10384
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10384,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "34101:7:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 10516,
                      "src": "34093:15:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 10383,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "34093:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10387,
                  "initialValue": {
                    "expression": {
                      "id": 10385,
                      "name": "senderUserTradeData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10366,
                      "src": "34111:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$8118_storage_ptr",
                        "typeString": "struct Swaps.UserTradeData storage pointer"
                      }
                    },
                    "id": 10386,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenId",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 8107,
                    "src": "34111:27:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "34093:45:35"
                },
                {
                  "assignments": [
                    10390
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10390,
                      "mutability": "mutable",
                      "name": "tokenStandard",
                      "nameLocation": "34153:13:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 10516,
                      "src": "34144:22:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Standard_$8036",
                        "typeString": "enum Swaps.Standard"
                      },
                      "typeName": {
                        "id": 10389,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10388,
                          "name": "Standard",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8036,
                          "src": "34144:8:35"
                        },
                        "referencedDeclaration": 8036,
                        "src": "34144:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Standard_$8036",
                          "typeString": "enum Swaps.Standard"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10393,
                  "initialValue": {
                    "expression": {
                      "id": 10391,
                      "name": "senderUserTradeData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10366,
                      "src": "34169:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$8118_storage_ptr",
                        "typeString": "struct Swaps.UserTradeData storage pointer"
                      }
                    },
                    "id": 10392,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenStandard",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 8110,
                    "src": "34169:33:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Standard_$8036",
                      "typeString": "enum Swaps.Standard"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "34144:58:35"
                },
                {
                  "assignments": [
                    10395
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10395,
                      "mutability": "mutable",
                      "name": "currentHolder",
                      "nameLocation": "34217:13:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 10516,
                      "src": "34209:21:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10394,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "34209:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10397,
                  "initialValue": {
                    "id": 10396,
                    "name": "sender",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10339,
                    "src": "34233:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "34209:30:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_TradeType_$8046",
                      "typeString": "enum Swaps.TradeType"
                    },
                    "id": 10402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 10398,
                        "name": "senderUserTradeData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10366,
                        "src": "34248:19:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserTradeData_$8118_storage_ptr",
                          "typeString": "struct Swaps.UserTradeData storage pointer"
                        }
                      },
                      "id": 10399,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tradeType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8117,
                      "src": "34248:29:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_TradeType_$8046",
                        "typeString": "enum Swaps.TradeType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 10400,
                        "name": "TradeType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8046,
                        "src": "34281:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_TradeType_$8046_$",
                          "typeString": "type(enum Swaps.TradeType)"
                        }
                      },
                      "id": 10401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Escrow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8045,
                      "src": "34281:16:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_TradeType_$8046",
                        "typeString": "enum Swaps.TradeType"
                      }
                    },
                    "src": "34248:49:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10411,
                  "nodeType": "IfStatement",
                  "src": "34245:98:35",
                  "trueBody": {
                    "id": 10410,
                    "nodeType": "Block",
                    "src": "34299:44:35",
                    "statements": [
                      {
                        "expression": {
                          "id": 10408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10403,
                            "name": "currentHolder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10395,
                            "src": "34307:13:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 10406,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "34331:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Swaps_$11766",
                                  "typeString": "contract Swaps"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Swaps_$11766",
                                  "typeString": "contract Swaps"
                                }
                              ],
                              "id": 10405,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "34323:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 10404,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "34323:7:35",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 10407,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "34323:13:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "34307:29:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 10409,
                        "nodeType": "ExpressionStatement",
                        "src": "34307:29:35"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 10412,
                    "name": "revertTransfer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10328,
                    "src": "34352:14:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 10427,
                    "nodeType": "Block",
                    "src": "34407:90:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 10423,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 10419,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967292,
                                  "src": "34423:5:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 10420,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "34423:15:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "id": 10421,
                                  "name": "trade",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10333,
                                  "src": "34442:5:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                                    "typeString": "struct Swaps.Trade storage pointer"
                                  }
                                },
                                "id": 10422,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "expirationDate",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 8161,
                                "src": "34442:20:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "34423:39:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45787069726174696f6e20646174652069732070617374",
                              "id": 10424,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "34464:25:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7ec5e5b6d8986751e9975433d52bdbaec91cf6fa3fa30d8651373347427b1a8b",
                                "typeString": "literal_string \"Expiration date is past\""
                              },
                              "value": "Expiration date is past"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7ec5e5b6d8986751e9975433d52bdbaec91cf6fa3fa30d8651373347427b1a8b",
                                "typeString": "literal_string \"Expiration date is past\""
                              }
                            ],
                            "id": 10418,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "34415:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 10425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "34415:75:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10426,
                        "nodeType": "ExpressionStatement",
                        "src": "34415:75:35"
                      }
                    ]
                  },
                  "id": 10428,
                  "nodeType": "IfStatement",
                  "src": "34349:148:35",
                  "trueBody": {
                    "id": 10417,
                    "nodeType": "Block",
                    "src": "34368:33:35",
                    "statements": [
                      {
                        "expression": {
                          "id": 10415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10413,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10352,
                            "src": "34376:9:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 10414,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10339,
                            "src": "34388:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "34376:18:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 10416,
                        "nodeType": "ExpressionStatement",
                        "src": "34376:18:35"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Standard_$8036",
                      "typeString": "enum Swaps.Standard"
                    },
                    "id": 10432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10429,
                      "name": "tokenStandard",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10390,
                      "src": "34506:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Standard_$8036",
                        "typeString": "enum Swaps.Standard"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 10430,
                        "name": "Standard",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8036,
                        "src": "34523:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Standard_$8036_$",
                          "typeString": "type(enum Swaps.Standard)"
                        }
                      },
                      "id": 10431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8032,
                      "src": "34523:12:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Standard_$8036",
                        "typeString": "enum Swaps.Standard"
                      }
                    },
                    "src": "34506:29:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_Standard_$8036",
                        "typeString": "enum Swaps.Standard"
                      },
                      "id": 10450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 10447,
                        "name": "tokenStandard",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10390,
                        "src": "34654:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Standard_$8036",
                          "typeString": "enum Swaps.Standard"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 10448,
                          "name": "Standard",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8036,
                          "src": "34671:8:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Standard_$8036_$",
                            "typeString": "type(enum Swaps.Standard)"
                          }
                        },
                        "id": 10449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "ERC20",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8033,
                        "src": "34671:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Standard_$8036",
                          "typeString": "enum Swaps.Standard"
                        }
                      },
                      "src": "34654:31:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Standard_$8036",
                          "typeString": "enum Swaps.Standard"
                        },
                        "id": 10481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10478,
                          "name": "tokenStandard",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10390,
                          "src": "34902:13:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Standard_$8036",
                            "typeString": "enum Swaps.Standard"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 10479,
                            "name": "Standard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8036,
                            "src": "34919:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Standard_$8036_$",
                              "typeString": "type(enum Swaps.Standard)"
                            }
                          },
                          "id": 10480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "ERC721",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8034,
                          "src": "34919:15:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Standard_$8036",
                            "typeString": "enum Swaps.Standard"
                          }
                        },
                        "src": "34902:32:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_Standard_$8036",
                            "typeString": "enum Swaps.Standard"
                          },
                          "id": 10498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 10495,
                            "name": "tokenStandard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10390,
                            "src": "35038:13:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Standard_$8036",
                              "typeString": "enum Swaps.Standard"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 10496,
                              "name": "Standard",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8036,
                              "src": "35055:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Standard_$8036_$",
                                "typeString": "type(enum Swaps.Standard)"
                              }
                            },
                            "id": 10497,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ERC1400",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8035,
                            "src": "35055:16:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Standard_$8036",
                              "typeString": "enum Swaps.Standard"
                            }
                          },
                          "src": "35038:33:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 10512,
                        "nodeType": "IfStatement",
                        "src": "35035:153:35",
                        "trueBody": {
                          "id": 10511,
                          "nodeType": "Block",
                          "src": "35073:115:35",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 10503,
                                    "name": "tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10384,
                                    "src": "35132:7:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 10504,
                                    "name": "currentHolder",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10395,
                                    "src": "35141:13:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 10505,
                                    "name": "recipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10352,
                                    "src": "35156:9:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 10506,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10326,
                                    "src": "35167:5:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "hexValue": "",
                                    "id": 10507,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "35174:2:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  },
                                  {
                                    "hexValue": "",
                                    "id": 10508,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "35178:2:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 10500,
                                        "name": "tokenAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10379,
                                        "src": "35090:12:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 10499,
                                      "name": "IERC1400",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1790,
                                      "src": "35081:8:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC1400_$1790_$",
                                        "typeString": "type(contract IERC1400)"
                                      }
                                    },
                                    "id": 10501,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "35081:22:35",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC1400_$1790",
                                      "typeString": "contract IERC1400"
                                    }
                                  },
                                  "id": 10502,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "operatorTransferByPartition",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1570,
                                  "src": "35081:50:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes32,address,address,uint256,bytes memory,bytes memory) external returns (bytes32)"
                                  }
                                },
                                "id": 10509,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "35081:100:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 10510,
                              "nodeType": "ExpressionStatement",
                              "src": "35081:100:35"
                            }
                          ]
                        }
                      },
                      "id": 10513,
                      "nodeType": "IfStatement",
                      "src": "34899:289:35",
                      "trueBody": {
                        "id": 10494,
                        "nodeType": "Block",
                        "src": "34936:93:35",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 10486,
                                  "name": "currentHolder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10395,
                                  "src": "34979:13:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 10487,
                                  "name": "recipient",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10352,
                                  "src": "34994:9:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 10490,
                                      "name": "tokenId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10384,
                                      "src": "35013:7:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    ],
                                    "id": 10489,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "35005:7:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 10488,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "35005:7:35",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 10491,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "35005:16:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 10483,
                                      "name": "tokenAddress",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10379,
                                      "src": "34952:12:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 10482,
                                    "name": "IERC721",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1059,
                                    "src": "34944:7:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC721_$1059_$",
                                      "typeString": "type(contract IERC721)"
                                    }
                                  },
                                  "id": 10484,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "34944:21:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC721_$1059",
                                    "typeString": "contract IERC721"
                                  }
                                },
                                "id": 10485,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transferFrom",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1012,
                                "src": "34944:34:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,address,uint256) external"
                                }
                              },
                              "id": 10492,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "34944:78:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 10493,
                            "nodeType": "ExpressionStatement",
                            "src": "34944:78:35"
                          }
                        ]
                      }
                    },
                    "id": 10514,
                    "nodeType": "IfStatement",
                    "src": "34651:537:35",
                    "trueBody": {
                      "id": 10477,
                      "nodeType": "Block",
                      "src": "34687:206:35",
                      "statements": [
                        {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 10456,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 10451,
                              "name": "currentHolder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10395,
                              "src": "34698:13:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "id": 10454,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "34723:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Swaps_$11766",
                                    "typeString": "contract Swaps"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Swaps_$11766",
                                    "typeString": "contract Swaps"
                                  }
                                ],
                                "id": 10453,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "34715:7:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 10452,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "34715:7:35",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 10455,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "34715:13:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "34698:30:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "id": 10475,
                            "nodeType": "Block",
                            "src": "34802:85:35",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 10470,
                                      "name": "currentHolder",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10395,
                                      "src": "34846:13:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 10471,
                                      "name": "recipient",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10352,
                                      "src": "34861:9:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 10472,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10326,
                                      "src": "34872:5:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 10467,
                                          "name": "tokenAddress",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 10379,
                                          "src": "34819:12:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 10466,
                                        "name": "IERC20",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 819,
                                        "src": "34812:6:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_IERC20_$819_$",
                                          "typeString": "type(contract IERC20)"
                                        }
                                      },
                                      "id": 10468,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "34812:20:35",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$819",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 10469,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "transferFrom",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 800,
                                    "src": "34812:33:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function (address,address,uint256) external returns (bool)"
                                    }
                                  },
                                  "id": 10473,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "34812:66:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 10474,
                                "nodeType": "ExpressionStatement",
                                "src": "34812:66:35"
                              }
                            ]
                          },
                          "id": 10476,
                          "nodeType": "IfStatement",
                          "src": "34695:192:35",
                          "trueBody": {
                            "id": 10465,
                            "nodeType": "Block",
                            "src": "34730:66:35",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 10461,
                                      "name": "recipient",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10352,
                                      "src": "34770:9:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 10462,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10326,
                                      "src": "34781:5:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 10458,
                                          "name": "tokenAddress",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 10379,
                                          "src": "34747:12:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 10457,
                                        "name": "IERC20",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 819,
                                        "src": "34740:6:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_IERC20_$819_$",
                                          "typeString": "type(contract IERC20)"
                                        }
                                      },
                                      "id": 10459,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "34740:20:35",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$819",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 10460,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "transfer",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 768,
                                    "src": "34740:29:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function (address,uint256) external returns (bool)"
                                    }
                                  },
                                  "id": 10463,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "34740:47:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 10464,
                                "nodeType": "ExpressionStatement",
                                "src": "34740:47:35"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "id": 10515,
                  "nodeType": "IfStatement",
                  "src": "34503:685:35",
                  "trueBody": {
                    "id": 10446,
                    "nodeType": "Block",
                    "src": "34537:108:35",
                    "statements": [
                      {
                        "assignments": [
                          10434
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 10434,
                            "mutability": "mutable",
                            "name": "payableRecipient",
                            "nameLocation": "34561:16:35",
                            "nodeType": "VariableDeclaration",
                            "scope": 10446,
                            "src": "34545:32:35",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            "typeName": {
                              "id": 10433,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "34545:15:35",
                              "stateMutability": "payable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 10439,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 10437,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10352,
                              "src": "34588:9:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 10436,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "34580:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 10435,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "34580:8:35",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "34580:18:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "34545:53:35"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 10443,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10326,
                              "src": "34632:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 10440,
                              "name": "payableRecipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10434,
                              "src": "34606:16:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 10442,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "34606:25:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 10444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "34606:32:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10445,
                        "nodeType": "ExpressionStatement",
                        "src": "34606:32:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 10319,
              "nodeType": "StructuredDocumentation",
              "src": "33109:469:35",
              "text": " @dev Internal function to transfer tokens to their recipient by taking the token standard into account.\n @param index Index of the trade the token transfer is execcuted for.\n @param holder Sender of the tokens (currently owning the tokens).\n @param value Amount of tokens to send.\n @param revertTransfer If set to true + trade has been accepted, tokens need to be sent back to their initial owners instead of sent to the target recipient."
            },
            "id": 10517,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_executeTransferOnUsersTokens",
            "nameLocation": "33590:29:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10321,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "33628:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10517,
                  "src": "33620:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10320,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "33620:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10324,
                  "mutability": "mutable",
                  "name": "holder",
                  "nameLocation": "33642:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10517,
                  "src": "33635:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Holder_$8049",
                    "typeString": "enum Swaps.Holder"
                  },
                  "typeName": {
                    "id": 10323,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10322,
                      "name": "Holder",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8049,
                      "src": "33635:6:35"
                    },
                    "referencedDeclaration": 8049,
                    "src": "33635:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Holder_$8049",
                      "typeString": "enum Swaps.Holder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10326,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "33658:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10517,
                  "src": "33650:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10325,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "33650:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10328,
                  "mutability": "mutable",
                  "name": "revertTransfer",
                  "nameLocation": "33670:14:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10517,
                  "src": "33665:19:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10327,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "33665:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "33619:66:35"
            },
            "returnParameters": {
              "id": 10330,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "33695:0:35"
            },
            "scope": 11766,
            "src": "33581:1612:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10624,
              "nodeType": "Block",
              "src": "35354:985:35",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Standard_$8036",
                      "typeString": "enum Swaps.Standard"
                    },
                    "id": 10534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10531,
                      "name": "tokenStandard",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10524,
                      "src": "35379:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Standard_$8036",
                        "typeString": "enum Swaps.Standard"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 10532,
                        "name": "Standard",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8036,
                        "src": "35396:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Standard_$8036_$",
                          "typeString": "type(enum Swaps.Standard)"
                        }
                      },
                      "id": 10533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ERC20",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8033,
                      "src": "35396:14:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Standard_$8036",
                        "typeString": "enum Swaps.Standard"
                      }
                    },
                    "src": "35379:31:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_Standard_$8036",
                        "typeString": "enum Swaps.Standard"
                      },
                      "id": 10557,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 10554,
                        "name": "tokenStandard",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10524,
                        "src": "35570:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Standard_$8036",
                          "typeString": "enum Swaps.Standard"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 10555,
                          "name": "Standard",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8036,
                          "src": "35587:8:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Standard_$8036_$",
                            "typeString": "type(enum Swaps.Standard)"
                          }
                        },
                        "id": 10556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "ERC1400",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8035,
                        "src": "35587:16:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Standard_$8036",
                          "typeString": "enum Swaps.Standard"
                        }
                      },
                      "src": "35570:33:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 10614,
                      "nodeType": "Block",
                      "src": "36178:49:35",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "696e76616c696420746f6b656e207374616e64617264",
                                "id": 10611,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "36195:24:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_f0620a46efe8affa820fbd852dcc28a8e648b503387395bca694e0a29fc04b28",
                                  "typeString": "literal_string \"invalid token standard\""
                                },
                                "value": "invalid token standard"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_f0620a46efe8affa820fbd852dcc28a8e648b503387395bca694e0a29fc04b28",
                                  "typeString": "literal_string \"invalid token standard\""
                                }
                              ],
                              "id": 10610,
                              "name": "revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                4294967277,
                                4294967277
                              ],
                              "referencedDeclaration": 4294967277,
                              "src": "36188:6:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (string memory) pure"
                              }
                            },
                            "id": 10612,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "36188:32:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 10613,
                          "nodeType": "ExpressionStatement",
                          "src": "36188:32:35"
                        }
                      ]
                    },
                    "id": 10615,
                    "nodeType": "IfStatement",
                    "src": "35566:661:35",
                    "trueBody": {
                      "id": 10609,
                      "nodeType": "Block",
                      "src": "35605:567:35",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 10564,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 10559,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10519,
                                  "src": "35621:5:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 10562,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "35638:1:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 10561,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "35630:7:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 10560,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "35630:7:35",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 10563,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "35630:10:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "35621:19:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "746f6b656e2063616e206e6f742062652061207a65726f2061646472657373",
                                "id": 10565,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "35642:33:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_9bca14e5cc753f0d9d21c7a81c2e4a61f9edd91f8ff260da709d961518ab2f18",
                                  "typeString": "literal_string \"token can not be a zero address\""
                                },
                                "value": "token can not be a zero address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_9bca14e5cc753f0d9d21c7a81c2e4a61f9edd91f8ff260da709d961518ab2f18",
                                  "typeString": "literal_string \"token can not be a zero address\""
                                }
                              ],
                              "id": 10558,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "src": "35613:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 10566,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "35613:63:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 10567,
                          "nodeType": "ExpressionStatement",
                          "src": "35613:63:35"
                        },
                        {
                          "assignments": [
                            10569
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 10569,
                              "mutability": "mutable",
                              "name": "tokenExtension",
                              "nameLocation": "35693:14:35",
                              "nodeType": "VariableDeclaration",
                              "scope": 10609,
                              "src": "35685:22:35",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "typeName": {
                                "id": 10568,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "35685:7:35",
                                "stateMutability": "nonpayable",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 10574,
                          "initialValue": {
                            "arguments": [
                              {
                                "id": 10571,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10519,
                                "src": "35724:5:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 10572,
                                "name": "ERC1400_TOKENS_VALIDATOR",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8052,
                                "src": "35731:24:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 10570,
                              "name": "interfaceAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7852,
                              "src": "35710:13:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_string_memory_ptr_$returns$_t_address_$",
                                "typeString": "function (address,string memory) view returns (address)"
                              }
                            },
                            "id": 10573,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "35710:46:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "35685:71:35"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 10581,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 10576,
                                  "name": "tokenExtension",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10569,
                                  "src": "35783:14:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 10579,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "35809:1:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 10578,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "35801:7:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 10577,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "35801:7:35",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 10580,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "35801:10:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "35783:28:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "746f6b656e20686173206e6f20686f6c6461626c6520746f6b656e20657874656e73696f6e",
                                "id": 10582,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "35823:39:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_edd347b7968327b3600dcce7aedea7605cef236b6faa053fefe641b69cc9f073",
                                  "typeString": "literal_string \"token has no holdable token extension\""
                                },
                                "value": "token has no holdable token extension"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_edd347b7968327b3600dcce7aedea7605cef236b6faa053fefe641b69cc9f073",
                                  "typeString": "literal_string \"token has no holdable token extension\""
                                }
                              ],
                              "id": 10575,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "src": "35764:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 10583,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "35764:106:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 10584,
                          "nodeType": "ExpressionStatement",
                          "src": "35764:106:35"
                        },
                        {
                          "assignments": [
                            10586
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 10586,
                              "mutability": "mutable",
                              "name": "holdValue",
                              "nameLocation": "35887:9:35",
                              "nodeType": "VariableDeclaration",
                              "scope": 10609,
                              "src": "35879:17:35",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 10585,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "35879:7:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 10587,
                          "nodeType": "VariableDeclarationStatement",
                          "src": "35879:17:35"
                        },
                        {
                          "expression": {
                            "id": 10597,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "components": [
                                null,
                                null,
                                null,
                                null,
                                {
                                  "id": 10588,
                                  "name": "holdValue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10586,
                                  "src": "35909:9:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                null,
                                null,
                                null,
                                null
                              ],
                              "id": 10589,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "TupleExpression",
                              "src": "35904:19:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$__$__$__$_t_uint256_$__$__$__$__$",
                                "typeString": "tuple(,,,,uint256,,,,)"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "id": 10594,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10519,
                                  "src": "35990:5:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 10595,
                                  "name": "tokenHoldId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10521,
                                  "src": "35997:11:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 10591,
                                      "name": "tokenExtension",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10569,
                                      "src": "35957:14:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 10590,
                                    "name": "IHoldableERC1400TokenExtension",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5624,
                                    "src": "35926:30:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IHoldableERC1400TokenExtension_$5624_$",
                                      "typeString": "type(contract IHoldableERC1400TokenExtension)"
                                    }
                                  },
                                  "id": 10592,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "35926:46:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IHoldableERC1400TokenExtension_$5624",
                                    "typeString": "contract IHoldableERC1400TokenExtension"
                                  }
                                },
                                "id": 10593,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "retrieveHoldData",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 5623,
                                "src": "35926:63:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_bytes32_$returns$_t_bytes32_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$_t_bytes32_$_t_enum$_HoldStatusCode_$5396_$",
                                  "typeString": "function (address,bytes32) view external returns (bytes32,address,address,address,uint256,uint256,bytes32,bytes32,enum HoldStatusCode)"
                                }
                              },
                              "id": 10596,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "35926:83:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bytes32_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$_t_bytes32_$_t_enum$_HoldStatusCode_$5396_$",
                                "typeString": "tuple(bytes32,address,address,address,uint256,uint256,bytes32,bytes32,enum HoldStatusCode)"
                              }
                            },
                            "src": "35904:105:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 10598,
                          "nodeType": "ExpressionStatement",
                          "src": "35904:105:35"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 10603,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10519,
                                "src": "36088:5:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 10604,
                                "name": "tokenHoldId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10521,
                                "src": "36105:11:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 10605,
                                "name": "holdValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10586,
                                "src": "36128:9:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 10606,
                                "name": "preimage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10526,
                                "src": "36149:8:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 10600,
                                    "name": "tokenExtension",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10569,
                                    "src": "36049:14:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 10599,
                                  "name": "IHoldableERC1400TokenExtension",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5624,
                                  "src": "36018:30:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IHoldableERC1400TokenExtension_$5624_$",
                                    "typeString": "type(contract IHoldableERC1400TokenExtension)"
                                  }
                                },
                                "id": 10601,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "36018:46:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IHoldableERC1400TokenExtension_$5624",
                                  "typeString": "contract IHoldableERC1400TokenExtension"
                                }
                              },
                              "id": 10602,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "executeHold",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5597,
                              "src": "36018:58:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$_t_bytes32_$returns$__$",
                                "typeString": "function (address,bytes32,uint256,bytes32) external"
                              }
                            },
                            "id": 10607,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "36018:147:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 10608,
                          "nodeType": "ExpressionStatement",
                          "src": "36018:147:35"
                        }
                      ]
                    }
                  },
                  "id": 10616,
                  "nodeType": "IfStatement",
                  "src": "35375:852:35",
                  "trueBody": {
                    "id": 10553,
                    "nodeType": "Block",
                    "src": "35412:148:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 10541,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 10536,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10519,
                                "src": "35428:5:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 10539,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "35445:1:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 10538,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "35437:7:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 10537,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "35437:7:35",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 10540,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "35437:10:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "35428:19:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "746f6b656e2063616e206e6f742062652061207a65726f2061646472657373",
                              "id": 10542,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "35449:33:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9bca14e5cc753f0d9d21c7a81c2e4a61f9edd91f8ff260da709d961518ab2f18",
                                "typeString": "literal_string \"token can not be a zero address\""
                              },
                              "value": "token can not be a zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9bca14e5cc753f0d9d21c7a81c2e4a61f9edd91f8ff260da709d961518ab2f18",
                                "typeString": "literal_string \"token can not be a zero address\""
                              }
                            ],
                            "id": 10535,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "35420:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 10543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "35420:63:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10544,
                        "nodeType": "ExpressionStatement",
                        "src": "35420:63:35"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 10549,
                              "name": "tokenHoldId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10521,
                              "src": "35531:11:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 10550,
                              "name": "preimage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10526,
                              "src": "35544:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 10546,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10519,
                                  "src": "35512:5:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 10545,
                                "name": "IERC20HoldableToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5583,
                                "src": "35492:19:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20HoldableToken_$5583_$",
                                  "typeString": "type(contract IERC20HoldableToken)"
                                }
                              },
                              "id": 10547,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "35492:26:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20HoldableToken_$5583",
                                "typeString": "contract IERC20HoldableToken"
                              }
                            },
                            "id": 10548,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "executeHold",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5536,
                            "src": "35492:38:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32,bytes32) external"
                            }
                          },
                          "id": 10551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "35492:61:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10552,
                        "nodeType": "ExpressionStatement",
                        "src": "35492:61:35"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 10618,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10519,
                        "src": "36260:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10619,
                        "name": "tokenHoldId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10521,
                        "src": "36275:11:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 10620,
                        "name": "preimage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10526,
                        "src": "36296:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 10621,
                        "name": "tokenRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10528,
                        "src": "36314:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10617,
                      "name": "ExecutedHold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8063,
                      "src": "36238:12:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (address,bytes32,bytes32,address)"
                      }
                    },
                    "id": 10622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36238:96:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10623,
                  "nodeType": "EmitStatement",
                  "src": "36233:101:35"
                }
              ]
            },
            "id": 10625,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_executeHold",
            "nameLocation": "35206:12:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10519,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "35232:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10625,
                  "src": "35224:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10518,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "35224:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10521,
                  "mutability": "mutable",
                  "name": "tokenHoldId",
                  "nameLocation": "35251:11:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10625,
                  "src": "35243:19:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10520,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "35243:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10524,
                  "mutability": "mutable",
                  "name": "tokenStandard",
                  "nameLocation": "35277:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10625,
                  "src": "35268:22:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Standard_$8036",
                    "typeString": "enum Swaps.Standard"
                  },
                  "typeName": {
                    "id": 10523,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10522,
                      "name": "Standard",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8036,
                      "src": "35268:8:35"
                    },
                    "referencedDeclaration": 8036,
                    "src": "35268:8:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Standard_$8036",
                      "typeString": "enum Swaps.Standard"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10526,
                  "mutability": "mutable",
                  "name": "preimage",
                  "nameLocation": "35304:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10625,
                  "src": "35296:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10525,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "35296:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10528,
                  "mutability": "mutable",
                  "name": "tokenRecipient",
                  "nameLocation": "35326:14:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10625,
                  "src": "35318:22:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10527,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "35318:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "35218:126:35"
            },
            "returnParameters": {
              "id": 10530,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "35354:0:35"
            },
            "scope": 11766,
            "src": "35197:1142:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10821,
              "nodeType": "Block",
              "src": "36463:1430:35",
              "statements": [
                {
                  "assignments": [
                    10638
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10638,
                      "mutability": "mutable",
                      "name": "tokenAddress",
                      "nameLocation": "36477:12:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 10821,
                      "src": "36469:20:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10637,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "36469:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10641,
                  "initialValue": {
                    "expression": {
                      "id": 10639,
                      "name": "userTradeData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10632,
                      "src": "36492:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                        "typeString": "struct Swaps.UserTradeData memory"
                      }
                    },
                    "id": 10640,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 8103,
                    "src": "36492:26:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "36469:49:35"
                },
                {
                  "assignments": [
                    10643
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10643,
                      "mutability": "mutable",
                      "name": "holdId",
                      "nameLocation": "36532:6:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 10821,
                      "src": "36524:14:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 10642,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "36524:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10646,
                  "initialValue": {
                    "expression": {
                      "id": 10644,
                      "name": "userTradeData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10632,
                      "src": "36541:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                        "typeString": "struct Swaps.UserTradeData memory"
                      }
                    },
                    "id": 10645,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenId",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 8107,
                    "src": "36541:21:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "36524:38:35"
                },
                {
                  "assignments": [
                    10649
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10649,
                      "mutability": "mutable",
                      "name": "tokenStandard",
                      "nameLocation": "36577:13:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 10821,
                      "src": "36568:22:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Standard_$8036",
                        "typeString": "enum Swaps.Standard"
                      },
                      "typeName": {
                        "id": 10648,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10647,
                          "name": "Standard",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8036,
                          "src": "36568:8:35"
                        },
                        "referencedDeclaration": 8036,
                        "src": "36568:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Standard_$8036",
                          "typeString": "enum Swaps.Standard"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10652,
                  "initialValue": {
                    "expression": {
                      "id": 10650,
                      "name": "userTradeData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10632,
                      "src": "36593:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                        "typeString": "struct Swaps.UserTradeData memory"
                      }
                    },
                    "id": 10651,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenStandard",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 8110,
                    "src": "36593:27:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Standard_$8036",
                      "typeString": "enum Swaps.Standard"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "36568:52:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Standard_$8036",
                      "typeString": "enum Swaps.Standard"
                    },
                    "id": 10656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10653,
                      "name": "tokenStandard",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10649,
                      "src": "36634:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Standard_$8036",
                        "typeString": "enum Swaps.Standard"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 10654,
                        "name": "Standard",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8036,
                        "src": "36651:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Standard_$8036_$",
                          "typeString": "type(enum Swaps.Standard)"
                        }
                      },
                      "id": 10655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ERC1400",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8035,
                      "src": "36651:16:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Standard_$8036",
                        "typeString": "enum Swaps.Standard"
                      }
                    },
                    "src": "36634:33:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_Standard_$8036",
                        "typeString": "enum Swaps.Standard"
                      },
                      "id": 10754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 10751,
                        "name": "tokenStandard",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10649,
                        "src": "37445:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Standard_$8036",
                          "typeString": "enum Swaps.Standard"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 10752,
                          "name": "Standard",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8036,
                          "src": "37462:8:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Standard_$8036_$",
                            "typeString": "type(enum Swaps.Standard)"
                          }
                        },
                        "id": 10753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "ERC20",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8033,
                        "src": "37462:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Standard_$8036",
                          "typeString": "enum Swaps.Standard"
                        }
                      },
                      "src": "37445:31:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 10818,
                      "nodeType": "Block",
                      "src": "37834:55:35",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "496e76616c696420746f6b656e5374616e646172642070726f7669646564",
                                "id": 10815,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "37849:32:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c877a4103bc121fd41358537bbacb20b7d369de62eb7417357dd35bafcfe9e8b",
                                  "typeString": "literal_string \"Invalid tokenStandard provided\""
                                },
                                "value": "Invalid tokenStandard provided"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c877a4103bc121fd41358537bbacb20b7d369de62eb7417357dd35bafcfe9e8b",
                                  "typeString": "literal_string \"Invalid tokenStandard provided\""
                                }
                              ],
                              "id": 10814,
                              "name": "revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                4294967277,
                                4294967277
                              ],
                              "referencedDeclaration": 4294967277,
                              "src": "37842:6:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (string memory) pure"
                              }
                            },
                            "id": 10816,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "37842:40:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 10817,
                          "nodeType": "ExpressionStatement",
                          "src": "37842:40:35"
                        }
                      ]
                    },
                    "id": 10819,
                    "nodeType": "IfStatement",
                    "src": "37441:448:35",
                    "trueBody": {
                      "id": 10813,
                      "nodeType": "Block",
                      "src": "37478:350:35",
                      "statements": [
                        {
                          "assignments": [
                            10757
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 10757,
                              "mutability": "mutable",
                              "name": "data",
                              "nameLocation": "37507:4:35",
                              "nodeType": "VariableDeclaration",
                              "scope": 10813,
                              "src": "37486:25:35",
                              "stateVariable": false,
                              "storageLocation": "memory",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC20HoldData_$5467_memory_ptr",
                                "typeString": "struct ERC20HoldData"
                              },
                              "typeName": {
                                "id": 10756,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 10755,
                                  "name": "ERC20HoldData",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 5467,
                                  "src": "37486:13:35"
                                },
                                "referencedDeclaration": 5467,
                                "src": "37486:13:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ERC20HoldData_$5467_storage_ptr",
                                  "typeString": "struct ERC20HoldData"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 10764,
                          "initialValue": {
                            "arguments": [
                              {
                                "id": 10762,
                                "name": "holdId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10643,
                                "src": "37565:6:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 10759,
                                    "name": "tokenAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10638,
                                    "src": "37534:12:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 10758,
                                  "name": "IERC20HoldableToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5583,
                                  "src": "37514:19:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20HoldableToken_$5583_$",
                                    "typeString": "type(contract IERC20HoldableToken)"
                                  }
                                },
                                "id": 10760,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "37514:33:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20HoldableToken_$5583",
                                  "typeString": "contract IERC20HoldableToken"
                                }
                              },
                              "id": 10761,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "retrieveHoldData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5522,
                              "src": "37514:50:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_ERC20HoldData_$5467_memory_ptr_$",
                                "typeString": "function (bytes32) view external returns (struct ERC20HoldData memory)"
                              }
                            },
                            "id": 10763,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "37514:58:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20HoldData_$5467_memory_ptr",
                              "typeString": "struct ERC20HoldData memory"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "37486:86:35"
                        },
                        {
                          "expression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 10811,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 10794,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 10788,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 10782,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "id": 10776,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          "id": 10768,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "id": 10765,
                                              "name": "data",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 10757,
                                              "src": "37588:4:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_ERC20HoldData_$5467_memory_ptr",
                                                "typeString": "struct ERC20HoldData memory"
                                              }
                                            },
                                            "id": 10766,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "sender",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 5453,
                                            "src": "37588:11:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "id": 10767,
                                            "name": "sender",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 10627,
                                            "src": "37603:6:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "src": "37588:21:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "||",
                                        "rightExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          "id": 10775,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "id": 10769,
                                              "name": "data",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 10757,
                                              "src": "37613:4:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_ERC20HoldData_$5467_memory_ptr",
                                                "typeString": "struct ERC20HoldData memory"
                                              }
                                            },
                                            "id": 10770,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "sender",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 5453,
                                            "src": "37613:11:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "arguments": [
                                              {
                                                "hexValue": "30",
                                                "id": 10773,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "37636:1:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_0_by_1",
                                                  "typeString": "int_const 0"
                                                },
                                                "value": "0"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_rational_0_by_1",
                                                  "typeString": "int_const 0"
                                                }
                                              ],
                                              "id": 10772,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "37628:7:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 10771,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "37628:7:35",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 10774,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "37628:10:35",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "src": "37613:25:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "src": "37588:50:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      }
                                    ],
                                    "id": 10777,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "37587:52:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "&&",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 10781,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 10778,
                                        "name": "data",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10757,
                                        "src": "37643:4:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ERC20HoldData_$5467_memory_ptr",
                                          "typeString": "struct ERC20HoldData memory"
                                        }
                                      },
                                      "id": 10779,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "recipient",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 5455,
                                      "src": "37643:14:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "id": 10780,
                                      "name": "recipient",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10629,
                                      "src": "37661:9:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "37643:27:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "37587:83:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 10787,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 10783,
                                      "name": "data",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10757,
                                      "src": "37674:4:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ERC20HoldData_$5467_memory_ptr",
                                        "typeString": "struct ERC20HoldData memory"
                                      }
                                    },
                                    "id": 10784,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "amount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 5459,
                                    "src": "37674:11:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 10785,
                                      "name": "userTradeData",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10632,
                                      "src": "37689:13:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                                        "typeString": "struct Swaps.UserTradeData memory"
                                      }
                                    },
                                    "id": 10786,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenValue",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 8105,
                                    "src": "37689:24:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "37674:39:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "37587:126:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_HoldStatusCode_$5396",
                                  "typeString": "enum HoldStatusCode"
                                },
                                "id": 10793,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 10789,
                                    "name": "data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10757,
                                    "src": "37717:4:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ERC20HoldData_$5467_memory_ptr",
                                      "typeString": "struct ERC20HoldData memory"
                                    }
                                  },
                                  "id": 10790,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "status",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 5466,
                                  "src": "37717:11:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_HoldStatusCode_$5396",
                                    "typeString": "enum HoldStatusCode"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 10791,
                                    "name": "HoldStatusCode",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5396,
                                    "src": "37732:14:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_HoldStatusCode_$5396_$",
                                      "typeString": "type(enum HoldStatusCode)"
                                    }
                                  },
                                  "id": 10792,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "Ordered",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 5390,
                                  "src": "37732:22:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_HoldStatusCode_$5396",
                                    "typeString": "enum HoldStatusCode"
                                  }
                                },
                                "src": "37717:37:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "37587:167:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 10809,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    "id": 10801,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 10795,
                                        "name": "data",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10757,
                                        "src": "37759:4:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ERC20HoldData_$5467_memory_ptr",
                                          "typeString": "struct ERC20HoldData memory"
                                        }
                                      },
                                      "id": 10796,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "secretHash",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 5463,
                                      "src": "37759:15:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "arguments": [
                                        {
                                          "hexValue": "30",
                                          "id": 10799,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "37786:1:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          }
                                        ],
                                        "id": 10798,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "37778:7:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_bytes32_$",
                                          "typeString": "type(bytes32)"
                                        },
                                        "typeName": {
                                          "id": 10797,
                                          "name": "bytes32",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "37778:7:35",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 10800,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "37778:10:35",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "src": "37759:29:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "||",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 10808,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 10802,
                                        "name": "data",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10757,
                                        "src": "37792:4:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ERC20HoldData_$5467_memory_ptr",
                                          "typeString": "struct ERC20HoldData memory"
                                        }
                                      },
                                      "id": 10803,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "notary",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 5457,
                                      "src": "37792:11:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "arguments": [
                                        {
                                          "id": 10806,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967268,
                                          "src": "37815:4:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Swaps_$11766",
                                            "typeString": "contract Swaps"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_Swaps_$11766",
                                            "typeString": "contract Swaps"
                                          }
                                        ],
                                        "id": 10805,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "37807:7:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 10804,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "37807:7:35",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 10807,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "37807:13:35",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "37792:28:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "37759:61:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "id": 10810,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "37758:63:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "37587:234:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "functionReturnParameters": 10636,
                          "id": 10812,
                          "nodeType": "Return",
                          "src": "37580:241:35"
                        }
                      ]
                    }
                  },
                  "id": 10820,
                  "nodeType": "IfStatement",
                  "src": "36631:1258:35",
                  "trueBody": {
                    "id": 10750,
                    "nodeType": "Block",
                    "src": "36669:766:35",
                    "statements": [
                      {
                        "assignments": [
                          10658
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 10658,
                            "mutability": "mutable",
                            "name": "tokenExtension",
                            "nameLocation": "36685:14:35",
                            "nodeType": "VariableDeclaration",
                            "scope": 10750,
                            "src": "36677:22:35",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 10657,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "36677:7:35",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 10663,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 10660,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10638,
                              "src": "36716:12:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 10661,
                              "name": "ERC1400_TOKENS_VALIDATOR",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8052,
                              "src": "36730:24:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 10659,
                            "name": "interfaceAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7852,
                            "src": "36702:13:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_string_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (address,string memory) view returns (address)"
                            }
                          },
                          "id": 10662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "36702:53:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "36677:78:35"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 10670,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 10665,
                                "name": "tokenExtension",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10658,
                                "src": "36782:14:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 10668,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "36808:1:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 10667,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "36800:7:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 10666,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "36800:7:35",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 10669,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "36800:10:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "36782:28:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "746f6b656e20686173206e6f20686f6c6461626c6520746f6b656e20657874656e73696f6e",
                              "id": 10671,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "36822:39:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_edd347b7968327b3600dcce7aedea7605cef236b6faa053fefe641b69cc9f073",
                                "typeString": "literal_string \"token has no holdable token extension\""
                              },
                              "value": "token has no holdable token extension"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_edd347b7968327b3600dcce7aedea7605cef236b6faa053fefe641b69cc9f073",
                                "typeString": "literal_string \"token has no holdable token extension\""
                              }
                            ],
                            "id": 10664,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "36763:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 10672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "36763:106:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10673,
                        "nodeType": "ExpressionStatement",
                        "src": "36763:106:35"
                      },
                      {
                        "assignments": [
                          10676
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 10676,
                            "mutability": "mutable",
                            "name": "holdStatus",
                            "nameLocation": "36893:10:35",
                            "nodeType": "VariableDeclaration",
                            "scope": 10750,
                            "src": "36878:25:35",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_HoldStatusCode_$5396",
                              "typeString": "enum HoldStatusCode"
                            },
                            "typeName": {
                              "id": 10675,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 10674,
                                "name": "HoldStatusCode",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 5396,
                                "src": "36878:14:35"
                              },
                              "referencedDeclaration": 5396,
                              "src": "36878:14:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_HoldStatusCode_$5396",
                                "typeString": "enum HoldStatusCode"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 10677,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "36878:25:35"
                      },
                      {
                        "assignments": [
                          10679
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 10679,
                            "mutability": "mutable",
                            "name": "holdSender",
                            "nameLocation": "36919:10:35",
                            "nodeType": "VariableDeclaration",
                            "scope": 10750,
                            "src": "36911:18:35",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 10678,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "36911:7:35",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 10680,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "36911:18:35"
                      },
                      {
                        "assignments": [
                          10682
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 10682,
                            "mutability": "mutable",
                            "name": "holdRecipient",
                            "nameLocation": "36945:13:35",
                            "nodeType": "VariableDeclaration",
                            "scope": 10750,
                            "src": "36937:21:35",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 10681,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "36937:7:35",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 10683,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "36937:21:35"
                      },
                      {
                        "assignments": [
                          10685
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 10685,
                            "mutability": "mutable",
                            "name": "holdValue",
                            "nameLocation": "36974:9:35",
                            "nodeType": "VariableDeclaration",
                            "scope": 10750,
                            "src": "36966:17:35",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 10684,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "36966:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 10686,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "36966:17:35"
                      },
                      {
                        "assignments": [
                          10688
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 10688,
                            "mutability": "mutable",
                            "name": "notary",
                            "nameLocation": "36999:6:35",
                            "nodeType": "VariableDeclaration",
                            "scope": 10750,
                            "src": "36991:14:35",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 10687,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "36991:7:35",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 10689,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "36991:14:35"
                      },
                      {
                        "assignments": [
                          10691
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 10691,
                            "mutability": "mutable",
                            "name": "secretHash",
                            "nameLocation": "37021:10:35",
                            "nodeType": "VariableDeclaration",
                            "scope": 10750,
                            "src": "37013:18:35",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 10690,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "37013:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 10692,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "37013:18:35"
                      },
                      {
                        "expression": {
                          "id": 10707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              null,
                              {
                                "id": 10693,
                                "name": "holdSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10679,
                                "src": "37041:10:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 10694,
                                "name": "holdRecipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10682,
                                "src": "37052:13:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 10695,
                                "name": "notary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10688,
                                "src": "37066:6:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 10696,
                                "name": "holdValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10685,
                                "src": "37073:9:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              null,
                              {
                                "id": 10697,
                                "name": "secretHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10691,
                                "src": "37084:10:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              null,
                              {
                                "id": 10698,
                                "name": "holdStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10676,
                                "src": "37096:10:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_HoldStatusCode_$5396",
                                  "typeString": "enum HoldStatusCode"
                                }
                              }
                            ],
                            "id": 10699,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "37039:68:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$_t_address_$_t_address_$_t_address_$_t_uint256_$__$_t_bytes32_$__$_t_enum$_HoldStatusCode_$5396_$",
                              "typeString": "tuple(,address,address,address,uint256,,bytes32,,enum HoldStatusCode)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 10704,
                                "name": "tokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10638,
                                "src": "37174:12:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 10705,
                                "name": "holdId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10643,
                                "src": "37188:6:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 10701,
                                    "name": "tokenExtension",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10658,
                                    "src": "37141:14:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 10700,
                                  "name": "IHoldableERC1400TokenExtension",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5624,
                                  "src": "37110:30:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IHoldableERC1400TokenExtension_$5624_$",
                                    "typeString": "type(contract IHoldableERC1400TokenExtension)"
                                  }
                                },
                                "id": 10702,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "37110:46:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IHoldableERC1400TokenExtension_$5624",
                                  "typeString": "contract IHoldableERC1400TokenExtension"
                                }
                              },
                              "id": 10703,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "retrieveHoldData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5623,
                              "src": "37110:63:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$_t_bytes32_$returns$_t_bytes32_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$_t_bytes32_$_t_enum$_HoldStatusCode_$5396_$",
                                "typeString": "function (address,bytes32) view external returns (bytes32,address,address,address,uint256,uint256,bytes32,bytes32,enum HoldStatusCode)"
                              }
                            },
                            "id": 10706,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "37110:85:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes32_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$_t_bytes32_$_t_enum$_HoldStatusCode_$5396_$",
                              "typeString": "tuple(bytes32,address,address,address,uint256,uint256,bytes32,bytes32,enum HoldStatusCode)"
                            }
                          },
                          "src": "37039:156:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10708,
                        "nodeType": "ExpressionStatement",
                        "src": "37039:156:35"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 10748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 10733,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 10729,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 10717,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_enum$_HoldStatusCode_$5396",
                                    "typeString": "enum HoldStatusCode"
                                  },
                                  "id": 10712,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 10709,
                                    "name": "holdStatus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10676,
                                    "src": "37210:10:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_HoldStatusCode_$5396",
                                      "typeString": "enum HoldStatusCode"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 10710,
                                      "name": "HoldStatusCode",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5396,
                                      "src": "37224:14:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_HoldStatusCode_$5396_$",
                                        "typeString": "type(enum HoldStatusCode)"
                                      }
                                    },
                                    "id": 10711,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "Ordered",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 5390,
                                    "src": "37224:22:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_HoldStatusCode_$5396",
                                      "typeString": "enum HoldStatusCode"
                                    }
                                  },
                                  "src": "37210:36:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 10716,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 10713,
                                    "name": "holdValue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10685,
                                    "src": "37250:9:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 10714,
                                      "name": "userTradeData",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10632,
                                      "src": "37263:13:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                                        "typeString": "struct Swaps.UserTradeData memory"
                                      }
                                    },
                                    "id": 10715,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenValue",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 8105,
                                    "src": "37263:24:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "37250:37:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "37210:77:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 10727,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      "id": 10720,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 10718,
                                        "name": "holdSender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10679,
                                        "src": "37292:10:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "id": 10719,
                                        "name": "sender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10627,
                                        "src": "37306:6:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "src": "37292:20:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "||",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      "id": 10726,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 10721,
                                        "name": "holdSender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10679,
                                        "src": "37316:10:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "arguments": [
                                          {
                                            "hexValue": "30",
                                            "id": 10724,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "37338:1:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            }
                                          ],
                                          "id": 10723,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "37330:7:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 10722,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "37330:7:35",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 10725,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "37330:10:35",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "src": "37316:24:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "37292:48:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 10728,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "37291:50:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "37210:131:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 10732,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 10730,
                                "name": "holdRecipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10682,
                                "src": "37345:13:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 10731,
                                "name": "recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10629,
                                "src": "37362:9:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "37345:26:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "37210:161:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 10746,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  "id": 10739,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 10734,
                                    "name": "secretHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10691,
                                    "src": "37376:10:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "!=",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 10737,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "37398:1:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 10736,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "37390:7:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes32_$",
                                        "typeString": "type(bytes32)"
                                      },
                                      "typeName": {
                                        "id": 10735,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "37390:7:35",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 10738,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "37390:10:35",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "src": "37376:24:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 10745,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 10740,
                                    "name": "notary",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10688,
                                    "src": "37404:6:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "id": 10743,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967268,
                                        "src": "37422:4:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Swaps_$11766",
                                          "typeString": "contract Swaps"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_Swaps_$11766",
                                          "typeString": "contract Swaps"
                                        }
                                      ],
                                      "id": 10742,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "37414:7:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 10741,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "37414:7:35",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 10744,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "37414:13:35",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "37404:23:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "37376:51:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 10747,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "37375:53:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "37210:218:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 10636,
                        "id": 10749,
                        "nodeType": "Return",
                        "src": "37203:225:35"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 10822,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_holdExists",
            "nameLocation": "36352:11:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10633,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10627,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "36372:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10822,
                  "src": "36364:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10626,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "36364:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10629,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "36388:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10822,
                  "src": "36380:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10628,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "36380:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10632,
                  "mutability": "mutable",
                  "name": "userTradeData",
                  "nameLocation": "36420:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10822,
                  "src": "36399:34:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                    "typeString": "struct Swaps.UserTradeData"
                  },
                  "typeName": {
                    "id": 10631,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10630,
                      "name": "UserTradeData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8118,
                      "src": "36399:13:35"
                    },
                    "referencedDeclaration": 8118,
                    "src": "36399:13:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserTradeData_$8118_storage_ptr",
                      "typeString": "struct Swaps.UserTradeData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "36363:71:35"
            },
            "returnParameters": {
              "id": 10636,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10635,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10822,
                  "src": "36457:4:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10634,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "36457:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "36456:6:35"
            },
            "scope": 11766,
            "src": "36343:1550:35",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10891,
              "nodeType": "Block",
              "src": "39288:518:35",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 10832,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10827,
                        "src": "39297:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 10833,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "39297:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 10834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "39320:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "39297:24:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10839,
                  "nodeType": "IfStatement",
                  "src": "39294:149:35",
                  "trueBody": {
                    "id": 10838,
                    "nodeType": "Block",
                    "src": "39323:120:35",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 10836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "39431:5:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 10831,
                        "id": 10837,
                        "nodeType": "Return",
                        "src": "39424:12:35"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    10841
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10841,
                      "mutability": "mutable",
                      "name": "flag",
                      "nameLocation": "39461:4:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 10891,
                      "src": "39453:12:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 10840,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "39453:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10845,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10843,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10825,
                        "src": "39482:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 10842,
                      "name": "_getTradeFlag",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10902,
                      "src": "39468:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 10844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "39468:19:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "39453:34:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 10853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 10849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 10846,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10825,
                          "src": "39496:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 10847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "39496:11:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "333230",
                        "id": 10848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "39511:3:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_320_by_1",
                          "typeString": "int_const 320"
                        },
                        "value": "320"
                      },
                      "src": "39496:18:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "id": 10852,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 10850,
                        "name": "flag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10841,
                        "src": "39518:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 10851,
                        "name": "TRADE_PROPOSAL_FLAG",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8021,
                        "src": "39526:19:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "src": "39518:27:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "39496:49:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 10870,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 10865,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 10860,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 10857,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10825,
                                  "src": "39584:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 10858,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "39584:11:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "3634",
                                "id": 10859,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "39599:2:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_64_by_1",
                                  "typeString": "int_const 64"
                                },
                                "value": "64"
                              },
                              "src": "39584:17:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 10864,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 10861,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10825,
                                  "src": "39605:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 10862,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "39605:11:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "3936",
                                "id": 10863,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "39620:2:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_96_by_1",
                                  "typeString": "int_const 96"
                                },
                                "value": "96"
                              },
                              "src": "39605:17:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "39584:38:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 10866,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "39583:40:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 10869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10867,
                          "name": "flag",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10841,
                          "src": "39627:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 10868,
                          "name": "TRADE_ACCEPTANCE_FLAG",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8024,
                          "src": "39635:21:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "39627:29:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "39583:73:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 10874,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10825,
                              "src": "39694:4:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 10875,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "39694:11:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "3332",
                            "id": 10876,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "39709:2:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_32_by_1",
                              "typeString": "int_const 32"
                            },
                            "value": "32"
                          },
                          "src": "39694:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 10880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 10878,
                            "name": "flag",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10841,
                            "src": "39715:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 10879,
                            "name": "BYPASS_ACTION_FLAG",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8027,
                            "src": "39723:18:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "39715:26:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "39694:47:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 10887,
                        "nodeType": "Block",
                        "src": "39775:27:35",
                        "statements": [
                          {
                            "expression": {
                              "hexValue": "66616c7365",
                              "id": 10885,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "39790:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            "functionReturnParameters": 10831,
                            "id": 10886,
                            "nodeType": "Return",
                            "src": "39783:12:35"
                          }
                        ]
                      },
                      "id": 10888,
                      "nodeType": "IfStatement",
                      "src": "39690:112:35",
                      "trueBody": {
                        "id": 10884,
                        "nodeType": "Block",
                        "src": "39743:26:35",
                        "statements": [
                          {
                            "expression": {
                              "hexValue": "74727565",
                              "id": 10882,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "39758:4:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            "functionReturnParameters": 10831,
                            "id": 10883,
                            "nodeType": "Return",
                            "src": "39751:11:35"
                          }
                        ]
                      }
                    },
                    "id": 10889,
                    "nodeType": "IfStatement",
                    "src": "39579:223:35",
                    "trueBody": {
                      "id": 10873,
                      "nodeType": "Block",
                      "src": "39658:26:35",
                      "statements": [
                        {
                          "expression": {
                            "hexValue": "74727565",
                            "id": 10871,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "39673:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "functionReturnParameters": 10831,
                          "id": 10872,
                          "nodeType": "Return",
                          "src": "39666:11:35"
                        }
                      ]
                    }
                  },
                  "id": 10890,
                  "nodeType": "IfStatement",
                  "src": "39493:309:35",
                  "trueBody": {
                    "id": 10856,
                    "nodeType": "Block",
                    "src": "39547:26:35",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 10854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "39562:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 10831,
                        "id": 10855,
                        "nodeType": "Return",
                        "src": "39555:11:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 10823,
              "nodeType": "StructuredDocumentation",
              "src": "37897:1293:35",
              "text": " @dev Indicate whether or not the Swaps contract can receive the tokens or not.\n By convention, the 32 first bytes of a token transfer to the Swaps smart contract contain a flag.\n  - When tokens are transferred to Swaps contract to propose a new trade. The 'data' field starts with the\n  following flag: 0xcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc\n  In this case the data structure is the the following:\n  <tradeFlag (32 bytes)><recipient address (32 bytes)><executer address (32 bytes)><expiration date (32 bytes)><requested token data (4 * 32 bytes)>\n  - When tokens are transferred to Swaps contract to accept an existing trade. The 'data' field starts with the\n  following flag: 0xdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd\n  In this case the data structure is the the following:\n  <tradeFlag (32 bytes)><request index (32 bytes)>\n If the 'data' doesn't start with one of those flags, the Swaps contract won't accept the token transfer.\n @param data Information attached to the Swaps transfer.\n @param operatorData Information attached to the Swaps transfer, by the operator.\n @return 'true' if the Swaps contract can receive the tokens, 'false' if not."
            },
            "id": 10892,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canReceive",
            "nameLocation": "39202:11:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10828,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10825,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "39227:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10892,
                  "src": "39214:17:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10824,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "39214:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10827,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "39246:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10892,
                  "src": "39233:25:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10826,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "39233:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "39213:46:35"
            },
            "returnParameters": {
              "id": 10831,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10830,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10892,
                  "src": "39282:4:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10829,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "39282:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "39281:6:35"
            },
            "scope": 11766,
            "src": "39193:613:35",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10901,
              "nodeType": "Block",
              "src": "40575:60:35",
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "40590:41:35",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "40598:27:35",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "40615:4:35"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "40621:2:35",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "40611:3:35"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "40611:13:35"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "40605:5:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "40605:20:35"
                        },
                        "variableNames": [
                          {
                            "name": "flag",
                            "nodeType": "YulIdentifier",
                            "src": "40598:4:35"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 10895,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "40615:4:35",
                      "valueSize": 1
                    },
                    {
                      "declaration": 10898,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "40598:4:35",
                      "valueSize": 1
                    }
                  ],
                  "id": 10900,
                  "nodeType": "InlineAssembly",
                  "src": "40581:50:35"
                }
              ]
            },
            "documentation": {
              "id": 10893,
              "nodeType": "StructuredDocumentation",
              "src": "39812:682:35",
              "text": " @dev Retrieve the trade flag from the 'data' field.\n By convention, the 32 first bytes of a token transfer to the Swaps smart contract contain a flag.\n  - When tokens are transferred to Swaps contract to propose a new trade. The 'data' field starts with the\n  following flag: 0xcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc\n  - When tokens are transferred to Swaps contract to accept an existing trade. The 'data' field starts with the\n  following flag: 0xdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd\n @param data Concatenated information about the trade proposal.\n @return flag Trade flag."
            },
            "id": 10902,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getTradeFlag",
            "nameLocation": "40506:13:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10896,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10895,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "40533:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10902,
                  "src": "40520:17:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10894,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "40520:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "40519:19:35"
            },
            "returnParameters": {
              "id": 10899,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10898,
                  "mutability": "mutable",
                  "name": "flag",
                  "nameLocation": "40569:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10902,
                  "src": "40561:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10897,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "40561:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "40560:14:35"
            },
            "scope": 11766,
            "src": "40497:138:35",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10941,
              "nodeType": "Block",
              "src": "43471:513:35",
              "statements": [
                {
                  "assignments": [
                    10912
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10912,
                      "mutability": "mutable",
                      "name": "tokenAddress",
                      "nameLocation": "43485:12:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 10941,
                      "src": "43477:20:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10911,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "43477:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10913,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "43477:20:35"
                },
                {
                  "assignments": [
                    10915
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10915,
                      "mutability": "mutable",
                      "name": "tokenAmount",
                      "nameLocation": "43511:11:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 10941,
                      "src": "43503:19:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10914,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "43503:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10916,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "43503:19:35"
                },
                {
                  "assignments": [
                    10918
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10918,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "43536:7:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 10941,
                      "src": "43528:15:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 10917,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "43528:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10919,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "43528:15:35"
                },
                {
                  "assignments": [
                    10922
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10922,
                      "mutability": "mutable",
                      "name": "tokenStandard",
                      "nameLocation": "43558:13:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 10941,
                      "src": "43549:22:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Standard_$8036",
                        "typeString": "enum Swaps.Standard"
                      },
                      "typeName": {
                        "id": 10921,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10920,
                          "name": "Standard",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8036,
                          "src": "43549:8:35"
                        },
                        "referencedDeclaration": 8036,
                        "src": "43549:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Standard_$8036",
                          "typeString": "enum Swaps.Standard"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10923,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "43549:22:35"
                },
                {
                  "assignments": [
                    10926
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10926,
                      "mutability": "mutable",
                      "name": "tradeType",
                      "nameLocation": "43587:9:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 10941,
                      "src": "43577:19:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_TradeType_$8046",
                        "typeString": "enum Swaps.TradeType"
                      },
                      "typeName": {
                        "id": 10925,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10924,
                          "name": "TradeType",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8046,
                          "src": "43577:9:35"
                        },
                        "referencedDeclaration": 8046,
                        "src": "43577:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_TradeType_$8046",
                          "typeString": "enum Swaps.TradeType"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10927,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "43577:19:35"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "43611:214:35",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "43619:36:35",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "43644:4:35"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "43650:3:35",
                                  "type": "",
                                  "value": "192"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "43640:3:35"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "43640:14:35"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "43634:5:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "43634:21:35"
                        },
                        "variableNames": [
                          {
                            "name": "tokenAddress",
                            "nodeType": "YulIdentifier",
                            "src": "43619:12:35"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "43662:35:35",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "43686:4:35"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "43692:3:35",
                                  "type": "",
                                  "value": "224"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "43682:3:35"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "43682:14:35"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "43676:5:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "43676:21:35"
                        },
                        "variableNames": [
                          {
                            "name": "tokenAmount",
                            "nodeType": "YulIdentifier",
                            "src": "43662:11:35"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "43704:31:35",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "43724:4:35"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "43730:3:35",
                                  "type": "",
                                  "value": "256"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "43720:3:35"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "43720:14:35"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "43714:5:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "43714:21:35"
                        },
                        "variableNames": [
                          {
                            "name": "tokenId",
                            "nodeType": "YulIdentifier",
                            "src": "43704:7:35"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "43742:37:35",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "43768:4:35"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "43774:3:35",
                                  "type": "",
                                  "value": "288"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "43764:3:35"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "43764:14:35"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "43758:5:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "43758:21:35"
                        },
                        "variableNames": [
                          {
                            "name": "tokenStandard",
                            "nodeType": "YulIdentifier",
                            "src": "43742:13:35"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "43786:33:35",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "43808:4:35"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "43814:3:35",
                                  "type": "",
                                  "value": "320"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "43804:3:35"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "43804:14:35"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "43798:5:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "43798:21:35"
                        },
                        "variableNames": [
                          {
                            "name": "tradeType",
                            "nodeType": "YulIdentifier",
                            "src": "43786:9:35"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 10905,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "43644:4:35",
                      "valueSize": 1
                    },
                    {
                      "declaration": 10905,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "43686:4:35",
                      "valueSize": 1
                    },
                    {
                      "declaration": 10905,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "43724:4:35",
                      "valueSize": 1
                    },
                    {
                      "declaration": 10905,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "43768:4:35",
                      "valueSize": 1
                    },
                    {
                      "declaration": 10905,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "43808:4:35",
                      "valueSize": 1
                    },
                    {
                      "declaration": 10912,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "43619:12:35",
                      "valueSize": 1
                    },
                    {
                      "declaration": 10915,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "43662:11:35",
                      "valueSize": 1
                    },
                    {
                      "declaration": 10918,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "43704:7:35",
                      "valueSize": 1
                    },
                    {
                      "declaration": 10922,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "43742:13:35",
                      "valueSize": 1
                    },
                    {
                      "declaration": 10926,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "43786:9:35",
                      "valueSize": 1
                    }
                  ],
                  "id": 10928,
                  "nodeType": "InlineAssembly",
                  "src": "43602:223:35"
                },
                {
                  "expression": {
                    "id": 10939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10929,
                      "name": "tokenData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10909,
                      "src": "43830:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                        "typeString": "struct Swaps.UserTradeData memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 10931,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10912,
                          "src": "43863:12:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 10932,
                          "name": "tokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10915,
                          "src": "43883:11:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 10933,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10918,
                          "src": "43902:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 10934,
                          "name": "tokenStandard",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10922,
                          "src": "43917:13:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Standard_$8036",
                            "typeString": "enum Swaps.Standard"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 10935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "43938:5:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 10936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "43951:5:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "id": 10937,
                          "name": "tradeType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10926,
                          "src": "43964:9:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_TradeType_$8046",
                            "typeString": "enum Swaps.TradeType"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_enum$_Standard_$8036",
                            "typeString": "enum Swaps.Standard"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_enum$_TradeType_$8046",
                            "typeString": "enum Swaps.TradeType"
                          }
                        ],
                        "id": 10930,
                        "name": "UserTradeData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8118,
                        "src": "43842:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_UserTradeData_$8118_storage_ptr_$",
                          "typeString": "type(struct Swaps.UserTradeData storage pointer)"
                        }
                      },
                      "id": 10938,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "43842:137:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                        "typeString": "struct Swaps.UserTradeData memory"
                      }
                    },
                    "src": "43830:149:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                      "typeString": "struct Swaps.UserTradeData memory"
                    }
                  },
                  "id": 10940,
                  "nodeType": "ExpressionStatement",
                  "src": "43830:149:35"
                }
              ]
            },
            "documentation": {
              "id": 10903,
              "nodeType": "StructuredDocumentation",
              "src": "43091:276:35",
              "text": " @dev Retrieve the tokenData from the 'data' field.\n @param data Concatenated information about the trade proposal.\n @return tokenData Trade token data < 1: address > < 2: amount > < 3: id/partition > < 4: standard > < 5: accepted > < 6: approved >."
            },
            "id": 10942,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getTradeTokenData",
            "nameLocation": "43379:18:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10905,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "43411:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10942,
                  "src": "43398:17:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10904,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "43398:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "43397:19:35"
            },
            "returnParameters": {
              "id": 10910,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10909,
                  "mutability": "mutable",
                  "name": "tokenData",
                  "nameLocation": "43460:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10942,
                  "src": "43439:30:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserTradeData_$8118_memory_ptr",
                    "typeString": "struct Swaps.UserTradeData"
                  },
                  "typeName": {
                    "id": 10908,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10907,
                      "name": "UserTradeData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8118,
                      "src": "43439:13:35"
                    },
                    "referencedDeclaration": 8118,
                    "src": "43439:13:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserTradeData_$8118_storage_ptr",
                      "typeString": "struct Swaps.UserTradeData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "43438:32:35"
            },
            "scope": 11766,
            "src": "43370:614:35",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              60
            ],
            "body": {
              "id": 10958,
              "nodeType": "Block",
              "src": "44921:66:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 10949,
                        "name": "Ownable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103,
                        "src": "44927:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Ownable_$103_$",
                          "typeString": "type(contract Ownable)"
                        }
                      },
                      "id": 10951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "renounceOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60,
                      "src": "44927:25:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 10952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "44927:27:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10953,
                  "nodeType": "ExpressionStatement",
                  "src": "44927:27:35"
                },
                {
                  "expression": {
                    "id": 10956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10954,
                      "name": "_ownedContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8209,
                      "src": "44960:14:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 10955,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "44977:5:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "44960:22:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10957,
                  "nodeType": "ExpressionStatement",
                  "src": "44960:22:35"
                }
              ]
            },
            "documentation": {
              "id": 10943,
              "nodeType": "StructuredDocumentation",
              "src": "44808:55:35",
              "text": " @dev Renounce ownership of the contract."
            },
            "functionSelector": "715018a6",
            "id": 10959,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10947,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10946,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "44911:9:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "44911:9:35"
              }
            ],
            "name": "renounceOwnership",
            "nameLocation": "44875:17:35",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10945,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "44902:8:35"
            },
            "parameters": {
              "id": 10944,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "44892:2:35"
            },
            "returnParameters": {
              "id": 10948,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "44921:0:35"
            },
            "scope": 11766,
            "src": "44866:121:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10968,
              "nodeType": "Block",
              "src": "45205:33:35",
              "statements": [
                {
                  "expression": {
                    "id": 10966,
                    "name": "_tradeExecuters",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8212,
                    "src": "45218:15:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 10965,
                  "id": 10967,
                  "nodeType": "Return",
                  "src": "45211:22:35"
                }
              ]
            },
            "documentation": {
              "id": 10960,
              "nodeType": "StructuredDocumentation",
              "src": "44991:144:35",
              "text": " @dev Get the list of trade executers as defined by the Swaps contract.\n @return List of addresses of all the trade executers."
            },
            "functionSelector": "45a06cb2",
            "id": 10969,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tradeExecuters",
            "nameLocation": "45147:14:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10961,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "45161:2:35"
            },
            "returnParameters": {
              "id": 10965,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10964,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10969,
                  "src": "45187:16:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10962,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "45187:7:35",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 10963,
                    "nodeType": "ArrayTypeName",
                    "src": "45187:9:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "45186:18:35"
            },
            "scope": 11766,
            "src": "45138:100:35",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10987,
              "nodeType": "Block",
              "src": "45441:100:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10979,
                        "name": "_ownedContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8209,
                        "src": "45455:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "537761707320636f6e7472616374206973206e6f74206f776e6564",
                        "id": 10980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "45471:29:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c96902dc6641465bcb47d51e789da6011d4ef6e7cace86feca178d31470e323a",
                          "typeString": "literal_string \"Swaps contract is not owned\""
                        },
                        "value": "Swaps contract is not owned"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c96902dc6641465bcb47d51e789da6011d4ef6e7cace86feca178d31470e323a",
                          "typeString": "literal_string \"Swaps contract is not owned\""
                        }
                      ],
                      "id": 10978,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "45447:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "45447:54:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10982,
                  "nodeType": "ExpressionStatement",
                  "src": "45447:54:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10984,
                        "name": "operators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10973,
                        "src": "45526:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      ],
                      "id": 10983,
                      "name": "_setTradeExecuters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11042,
                      "src": "45507:18:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory)"
                      }
                    },
                    "id": 10985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "45507:29:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10986,
                  "nodeType": "ExpressionStatement",
                  "src": "45507:29:35"
                }
              ]
            },
            "documentation": {
              "id": 10970,
              "nodeType": "StructuredDocumentation",
              "src": "45242:120:35",
              "text": " @dev Set list of trade executers for the Swaps contract.\n @param operators Trade executers addresses."
            },
            "functionSelector": "a22ae631",
            "id": 10988,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10976,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10975,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "45431:9:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "45431:9:35"
              }
            ],
            "name": "setTradeExecuters",
            "nameLocation": "45374:17:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10974,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10973,
                  "mutability": "mutable",
                  "name": "operators",
                  "nameLocation": "45411:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10988,
                  "src": "45392:28:35",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10971,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "45392:7:35",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 10972,
                    "nodeType": "ArrayTypeName",
                    "src": "45392:9:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "45391:30:35"
            },
            "returnParameters": {
              "id": 10977,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "45441:0:35"
            },
            "scope": 11766,
            "src": "45365:176:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11041,
              "nodeType": "Block",
              "src": "45733:248:35",
              "statements": [
                {
                  "body": {
                    "id": 11014,
                    "nodeType": "Block",
                    "src": "45787:59:35",
                    "statements": [
                      {
                        "expression": {
                          "id": 11012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 11006,
                              "name": "_isTradeExecuter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8216,
                              "src": "45795:16:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 11010,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 11007,
                                "name": "_tradeExecuters",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8212,
                                "src": "45812:15:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 11009,
                              "indexExpression": {
                                "id": 11008,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10996,
                                "src": "45828:1:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "45812:18:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "45795:36:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 11011,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "45834:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "45795:44:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 11013,
                        "nodeType": "ExpressionStatement",
                        "src": "45795:44:35"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10999,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10996,
                      "src": "45757:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 11000,
                        "name": "_tradeExecuters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8212,
                        "src": "45759:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 11001,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "45759:22:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "45757:24:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11015,
                  "initializationExpression": {
                    "assignments": [
                      10996
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 10996,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "45750:1:35",
                        "nodeType": "VariableDeclaration",
                        "scope": 11015,
                        "src": "45745:6:35",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 10995,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "45745:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 10998,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 10997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "45754:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "45745:10:35"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 11004,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "45783:3:35",
                      "subExpression": {
                        "id": 11003,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10996,
                        "src": "45783:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 11005,
                    "nodeType": "ExpressionStatement",
                    "src": "45783:3:35"
                  },
                  "nodeType": "ForStatement",
                  "src": "45740:106:35"
                },
                {
                  "body": {
                    "id": 11035,
                    "nodeType": "Block",
                    "src": "45892:52:35",
                    "statements": [
                      {
                        "expression": {
                          "id": 11033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 11027,
                              "name": "_isTradeExecuter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8216,
                              "src": "45900:16:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 11031,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 11028,
                                "name": "operators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10992,
                                "src": "45917:9:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 11030,
                              "indexExpression": {
                                "id": 11029,
                                "name": "j",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11017,
                                "src": "45927:1:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "45917:12:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "45900:30:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 11032,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "45933:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "45900:37:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 11034,
                        "nodeType": "ExpressionStatement",
                        "src": "45900:37:35"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11020,
                      "name": "j",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11017,
                      "src": "45868:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 11021,
                        "name": "operators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10992,
                        "src": "45870:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 11022,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "45870:16:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "45868:18:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11036,
                  "initializationExpression": {
                    "assignments": [
                      11017
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 11017,
                        "mutability": "mutable",
                        "name": "j",
                        "nameLocation": "45861:1:35",
                        "nodeType": "VariableDeclaration",
                        "scope": 11036,
                        "src": "45856:6:35",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 11016,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "45856:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 11019,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 11018,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "45865:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "45856:10:35"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 11025,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "45888:3:35",
                      "subExpression": {
                        "id": 11024,
                        "name": "j",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11017,
                        "src": "45888:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 11026,
                    "nodeType": "ExpressionStatement",
                    "src": "45888:3:35"
                  },
                  "nodeType": "ForStatement",
                  "src": "45851:93:35"
                },
                {
                  "expression": {
                    "id": 11039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11037,
                      "name": "_tradeExecuters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8212,
                      "src": "45949:15:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11038,
                      "name": "operators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10992,
                      "src": "45967:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "45949:27:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 11040,
                  "nodeType": "ExpressionStatement",
                  "src": "45949:27:35"
                }
              ]
            },
            "documentation": {
              "id": 10989,
              "nodeType": "StructuredDocumentation",
              "src": "45545:120:35",
              "text": " @dev Set list of trade executers for the Swaps contract.\n @param operators Trade executers addresses."
            },
            "id": 11042,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setTradeExecuters",
            "nameLocation": "45677:18:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10993,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10992,
                  "mutability": "mutable",
                  "name": "operators",
                  "nameLocation": "45713:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 11042,
                  "src": "45696:26:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10990,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "45696:7:35",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 10991,
                    "nodeType": "ArrayTypeName",
                    "src": "45696:9:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "45695:28:35"
            },
            "returnParameters": {
              "id": 10994,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "45733:0:35"
            },
            "scope": 11766,
            "src": "45668:313:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 11055,
              "nodeType": "Block",
              "src": "46350:49:35",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 11051,
                      "name": "_tokenControllers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8221,
                      "src": "46363:17:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(address => address[] storage ref)"
                      }
                    },
                    "id": 11053,
                    "indexExpression": {
                      "id": 11052,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11045,
                      "src": "46381:12:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "46363:31:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 11050,
                  "id": 11054,
                  "nodeType": "Return",
                  "src": "46356:38:35"
                }
              ]
            },
            "documentation": {
              "id": 11043,
              "nodeType": "StructuredDocumentation",
              "src": "46067:191:35",
              "text": " @dev Get the list of token controllers for a given token.\n @param tokenAddress Token address.\n @return List of addresses of all the token controllers for a given token."
            },
            "functionSelector": "759561fa",
            "id": 11056,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenControllers",
            "nameLocation": "46270:16:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11046,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11045,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "46295:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 11056,
                  "src": "46287:20:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11044,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "46287:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "46286:22:35"
            },
            "returnParameters": {
              "id": 11050,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11049,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11056,
                  "src": "46332:16:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11047,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "46332:7:35",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 11048,
                    "nodeType": "ArrayTypeName",
                    "src": "46332:9:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "46331:18:35"
            },
            "scope": 11766,
            "src": "46261:138:35",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11124,
              "nodeType": "Block",
              "src": "46681:327:35",
              "statements": [
                {
                  "body": {
                    "id": 11093,
                    "nodeType": "Block",
                    "src": "46750:91:35",
                    "statements": [
                      {
                        "expression": {
                          "id": 11091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 11081,
                                "name": "_isTokenController",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8227,
                                "src": "46758:18:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(address => bool))"
                                }
                              },
                              "id": 11088,
                              "indexExpression": {
                                "id": 11082,
                                "name": "tokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11059,
                                "src": "46777:12:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "46758:32:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 11089,
                            "indexExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 11083,
                                  "name": "_tokenControllers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8221,
                                  "src": "46791:17:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                    "typeString": "mapping(address => address[] storage ref)"
                                  }
                                },
                                "id": 11085,
                                "indexExpression": {
                                  "id": 11084,
                                  "name": "tokenAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11059,
                                  "src": "46809:12:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "46791:31:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 11087,
                              "indexExpression": {
                                "id": 11086,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11069,
                                "src": "46823:1:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "46791:34:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "46758:68:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 11090,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "46829:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "46758:76:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 11092,
                        "nodeType": "ExpressionStatement",
                        "src": "46758:76:35"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11072,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11069,
                      "src": "46704:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 11073,
                          "name": "_tokenControllers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8221,
                          "src": "46706:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 11075,
                        "indexExpression": {
                          "id": 11074,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11059,
                          "src": "46724:12:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "46706:31:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 11076,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "46706:38:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "46704:40:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11094,
                  "initializationExpression": {
                    "assignments": [
                      11069
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 11069,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "46697:1:35",
                        "nodeType": "VariableDeclaration",
                        "scope": 11094,
                        "src": "46692:6:35",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 11068,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "46692:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 11071,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 11070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "46701:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "46692:10:35"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 11079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "46746:3:35",
                      "subExpression": {
                        "id": 11078,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11069,
                        "src": "46746:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 11080,
                    "nodeType": "ExpressionStatement",
                    "src": "46746:3:35"
                  },
                  "nodeType": "ForStatement",
                  "src": "46687:154:35"
                },
                {
                  "body": {
                    "id": 11116,
                    "nodeType": "Block",
                    "src": "46887:68:35",
                    "statements": [
                      {
                        "expression": {
                          "id": 11114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 11106,
                                "name": "_isTokenController",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8227,
                                "src": "46895:18:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(address => bool))"
                                }
                              },
                              "id": 11111,
                              "indexExpression": {
                                "id": 11107,
                                "name": "tokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11059,
                                "src": "46914:12:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "46895:32:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 11112,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 11108,
                                "name": "operators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11062,
                                "src": "46928:9:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 11110,
                              "indexExpression": {
                                "id": 11109,
                                "name": "j",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11096,
                                "src": "46938:1:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "46928:12:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "46895:46:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 11113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "46944:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "46895:53:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 11115,
                        "nodeType": "ExpressionStatement",
                        "src": "46895:53:35"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11099,
                      "name": "j",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11096,
                      "src": "46863:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 11100,
                        "name": "operators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11062,
                        "src": "46865:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 11101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "46865:16:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "46863:18:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11117,
                  "initializationExpression": {
                    "assignments": [
                      11096
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 11096,
                        "mutability": "mutable",
                        "name": "j",
                        "nameLocation": "46856:1:35",
                        "nodeType": "VariableDeclaration",
                        "scope": 11117,
                        "src": "46851:6:35",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 11095,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "46851:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 11098,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 11097,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "46860:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "46851:10:35"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 11104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "46883:3:35",
                      "subExpression": {
                        "id": 11103,
                        "name": "j",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11096,
                        "src": "46883:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 11105,
                    "nodeType": "ExpressionStatement",
                    "src": "46883:3:35"
                  },
                  "nodeType": "ForStatement",
                  "src": "46846:109:35"
                },
                {
                  "expression": {
                    "id": 11122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 11118,
                        "name": "_tokenControllers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8221,
                        "src": "46960:17:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                          "typeString": "mapping(address => address[] storage ref)"
                        }
                      },
                      "id": 11120,
                      "indexExpression": {
                        "id": 11119,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11059,
                        "src": "46978:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "46960:31:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11121,
                      "name": "operators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11062,
                      "src": "46994:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                        "typeString": "address[] calldata"
                      }
                    },
                    "src": "46960:43:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 11123,
                  "nodeType": "ExpressionStatement",
                  "src": "46960:43:35"
                }
              ]
            },
            "documentation": {
              "id": 11057,
              "nodeType": "StructuredDocumentation",
              "src": "46403:151:35",
              "text": " @dev Set list of token controllers for a given token.\n @param tokenAddress Token address.\n @param operators Operators addresses."
            },
            "functionSelector": "ec96dfb4",
            "id": 11125,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 11065,
                    "name": "tokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11059,
                    "src": "46667:12:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 11066,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11064,
                  "name": "onlyTokenController",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8257,
                  "src": "46647:19:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "46647:33:35"
              }
            ],
            "name": "setTokenControllers",
            "nameLocation": "46566:19:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11063,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11059,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "46594:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 11125,
                  "src": "46586:20:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11058,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "46586:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11062,
                  "mutability": "mutable",
                  "name": "operators",
                  "nameLocation": "46627:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 11125,
                  "src": "46608:28:35",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11060,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "46608:7:35",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 11061,
                    "nodeType": "ArrayTypeName",
                    "src": "46608:9:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "46585:52:35"
            },
            "returnParameters": {
              "id": 11067,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "46681:0:35"
            },
            "scope": 11766,
            "src": "46557:451:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11138,
              "nodeType": "Block",
              "src": "47367:45:35",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 11134,
                      "name": "_priceOracles",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8185,
                      "src": "47380:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(address => address[] storage ref)"
                      }
                    },
                    "id": 11136,
                    "indexExpression": {
                      "id": 11135,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11128,
                      "src": "47394:12:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "47380:27:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 11133,
                  "id": 11137,
                  "nodeType": "Return",
                  "src": "47373:34:35"
                }
              ]
            },
            "documentation": {
              "id": 11126,
              "nodeType": "StructuredDocumentation",
              "src": "47096:183:35",
              "text": " @dev Get the list of price oracles for a given token.\n @param tokenAddress Token address.\n @return List of addresses of all the price oracles for a given token."
            },
            "functionSelector": "01374518",
            "id": 11139,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "priceOracles",
            "nameLocation": "47291:12:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11128,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "47312:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 11139,
                  "src": "47304:20:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11127,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "47304:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "47303:22:35"
            },
            "returnParameters": {
              "id": 11133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11132,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11139,
                  "src": "47349:16:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11130,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "47349:7:35",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 11131,
                    "nodeType": "ArrayTypeName",
                    "src": "47349:9:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "47348:18:35"
            },
            "scope": 11766,
            "src": "47282:130:35",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11207,
              "nodeType": "Block",
              "src": "47676:301:35",
              "statements": [
                {
                  "body": {
                    "id": 11176,
                    "nodeType": "Block",
                    "src": "47741:83:35",
                    "statements": [
                      {
                        "expression": {
                          "id": 11174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 11164,
                                "name": "_isPriceOracle",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8191,
                                "src": "47749:14:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(address => bool))"
                                }
                              },
                              "id": 11171,
                              "indexExpression": {
                                "id": 11165,
                                "name": "tokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11142,
                                "src": "47764:12:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "47749:28:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 11172,
                            "indexExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 11166,
                                  "name": "_priceOracles",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8185,
                                  "src": "47778:13:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                    "typeString": "mapping(address => address[] storage ref)"
                                  }
                                },
                                "id": 11168,
                                "indexExpression": {
                                  "id": 11167,
                                  "name": "tokenAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11142,
                                  "src": "47792:12:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "47778:27:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 11170,
                              "indexExpression": {
                                "id": 11169,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11152,
                                "src": "47806:1:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "47778:30:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "47749:60:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 11173,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "47812:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "47749:68:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 11175,
                        "nodeType": "ExpressionStatement",
                        "src": "47749:68:35"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11155,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11152,
                      "src": "47699:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 11156,
                          "name": "_priceOracles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8185,
                          "src": "47701:13:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 11158,
                        "indexExpression": {
                          "id": 11157,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11142,
                          "src": "47715:12:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "47701:27:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 11159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "47701:34:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "47699:36:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11177,
                  "initializationExpression": {
                    "assignments": [
                      11152
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 11152,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "47692:1:35",
                        "nodeType": "VariableDeclaration",
                        "scope": 11177,
                        "src": "47687:6:35",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 11151,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "47687:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 11154,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 11153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "47696:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "47687:10:35"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 11162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "47737:3:35",
                      "subExpression": {
                        "id": 11161,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11152,
                        "src": "47737:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 11163,
                    "nodeType": "ExpressionStatement",
                    "src": "47737:3:35"
                  },
                  "nodeType": "ForStatement",
                  "src": "47682:142:35"
                },
                {
                  "body": {
                    "id": 11199,
                    "nodeType": "Block",
                    "src": "47868:62:35",
                    "statements": [
                      {
                        "expression": {
                          "id": 11197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 11189,
                                "name": "_isPriceOracle",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8191,
                                "src": "47876:14:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(address => bool))"
                                }
                              },
                              "id": 11194,
                              "indexExpression": {
                                "id": 11190,
                                "name": "tokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11142,
                                "src": "47891:12:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "47876:28:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 11195,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 11191,
                                "name": "oracles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11145,
                                "src": "47905:7:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 11193,
                              "indexExpression": {
                                "id": 11192,
                                "name": "j",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11179,
                                "src": "47913:1:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "47905:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "47876:40:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 11196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "47919:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "47876:47:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 11198,
                        "nodeType": "ExpressionStatement",
                        "src": "47876:47:35"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11182,
                      "name": "j",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11179,
                      "src": "47846:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 11183,
                        "name": "oracles",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11145,
                        "src": "47848:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 11184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "47848:14:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "47846:16:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11200,
                  "initializationExpression": {
                    "assignments": [
                      11179
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 11179,
                        "mutability": "mutable",
                        "name": "j",
                        "nameLocation": "47839:1:35",
                        "nodeType": "VariableDeclaration",
                        "scope": 11200,
                        "src": "47834:6:35",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 11178,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "47834:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 11181,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 11180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "47843:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "47834:10:35"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 11187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "47864:3:35",
                      "subExpression": {
                        "id": 11186,
                        "name": "j",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11179,
                        "src": "47864:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 11188,
                    "nodeType": "ExpressionStatement",
                    "src": "47864:3:35"
                  },
                  "nodeType": "ForStatement",
                  "src": "47829:101:35"
                },
                {
                  "expression": {
                    "id": 11205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 11201,
                        "name": "_priceOracles",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8185,
                        "src": "47935:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                          "typeString": "mapping(address => address[] storage ref)"
                        }
                      },
                      "id": 11203,
                      "indexExpression": {
                        "id": 11202,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11142,
                        "src": "47949:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "47935:27:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11204,
                      "name": "oracles",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11145,
                      "src": "47965:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                        "typeString": "address[] calldata"
                      }
                    },
                    "src": "47935:37:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 11206,
                  "nodeType": "ExpressionStatement",
                  "src": "47935:37:35"
                }
              ]
            },
            "documentation": {
              "id": 11140,
              "nodeType": "StructuredDocumentation",
              "src": "47416:143:35",
              "text": " @dev Set list of price oracles for a given token.\n @param tokenAddress Token address.\n @param oracles Oracles addresses."
            },
            "functionSelector": "01636f4e",
            "id": 11208,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 11148,
                    "name": "tokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11142,
                    "src": "47662:12:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 11149,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11147,
                  "name": "onlyPriceOracle",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8273,
                  "src": "47646:15:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "47646:29:35"
              }
            ],
            "name": "setPriceOracles",
            "nameLocation": "47571:15:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11142,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "47595:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 11208,
                  "src": "47587:20:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11141,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "47587:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11145,
                  "mutability": "mutable",
                  "name": "oracles",
                  "nameLocation": "47628:7:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 11208,
                  "src": "47609:26:35",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11143,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "47609:7:35",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 11144,
                    "nodeType": "ArrayTypeName",
                    "src": "47609:9:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "47586:50:35"
            },
            "returnParameters": {
              "id": 11150,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "47676:0:35"
            },
            "scope": 11766,
            "src": "47562:415:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11233,
              "nodeType": "Block",
              "src": "48281:98:35",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 11230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 11218,
                              "name": "_isPriceOracle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8191,
                              "src": "48294:14:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                "typeString": "mapping(address => mapping(address => bool))"
                              }
                            },
                            "id": 11220,
                            "indexExpression": {
                              "id": 11219,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11211,
                              "src": "48309:12:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "48294:28:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 11222,
                          "indexExpression": {
                            "id": 11221,
                            "name": "oracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11213,
                            "src": "48323:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "48294:36:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 11229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 11223,
                            "name": "oracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11213,
                            "src": "48334:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 11225,
                                    "name": "tokenAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11211,
                                    "src": "48352:12:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 11224,
                                  "name": "Ownable",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 103,
                                  "src": "48344:7:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Ownable_$103_$",
                                    "typeString": "type(contract Ownable)"
                                  }
                                },
                                "id": 11226,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "48344:21:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Ownable_$103",
                                  "typeString": "contract Ownable"
                                }
                              },
                              "id": 11227,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "owner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 32,
                              "src": "48344:27:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 11228,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "48344:29:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "48334:39:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "48294:79:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 11231,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "48293:81:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 11217,
                  "id": 11232,
                  "nodeType": "Return",
                  "src": "48287:87:35"
                }
              ]
            },
            "documentation": {
              "id": 11209,
              "nodeType": "StructuredDocumentation",
              "src": "47981:204:35",
              "text": " @dev Check if address is oracle of a given token.\n @param tokenAddress Token address.\n @param oracle Oracle address.\n @return 'true' if the address is oracle of the given token."
            },
            "id": 11234,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkPriceOracle",
            "nameLocation": "48197:17:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11211,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "48223:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 11234,
                  "src": "48215:20:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11210,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "48215:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11213,
                  "mutability": "mutable",
                  "name": "oracle",
                  "nameLocation": "48245:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 11234,
                  "src": "48237:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11212,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "48237:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "48214:38:35"
            },
            "returnParameters": {
              "id": 11217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11216,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11234,
                  "src": "48275:4:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11215,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "48275:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "48274:6:35"
            },
            "scope": 11766,
            "src": "48188:191:35",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 11250,
              "nodeType": "Block",
              "src": "48740:63:35",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 11244,
                        "name": "_priceOwnership",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8197,
                        "src": "48753:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 11246,
                      "indexExpression": {
                        "id": 11245,
                        "name": "tokenAddress1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11237,
                        "src": "48769:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "48753:30:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 11248,
                    "indexExpression": {
                      "id": 11247,
                      "name": "tokenAddress2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11239,
                      "src": "48784:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "48753:45:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 11243,
                  "id": 11249,
                  "nodeType": "Return",
                  "src": "48746:52:35"
                }
              ]
            },
            "documentation": {
              "id": 11235,
              "nodeType": "StructuredDocumentation",
              "src": "48466:170:35",
              "text": " @dev Get price of the token.\n @param tokenAddress1 Address of the token to be priced.\n @param tokenAddress2 Address of the token to pay for token1."
            },
            "functionSelector": "1af6649f",
            "id": 11251,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPriceOwnership",
            "nameLocation": "48648:17:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11240,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11237,
                  "mutability": "mutable",
                  "name": "tokenAddress1",
                  "nameLocation": "48674:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 11251,
                  "src": "48666:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11236,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "48666:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11239,
                  "mutability": "mutable",
                  "name": "tokenAddress2",
                  "nameLocation": "48697:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 11251,
                  "src": "48689:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11238,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "48689:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "48665:46:35"
            },
            "returnParameters": {
              "id": 11243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11242,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11251,
                  "src": "48734:4:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11241,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "48734:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "48733:6:35"
            },
            "scope": 11766,
            "src": "48639:164:35",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11272,
              "nodeType": "Block",
              "src": "49139:73:35",
              "statements": [
                {
                  "expression": {
                    "id": 11270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 11264,
                          "name": "_priceOwnership",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8197,
                          "src": "49145:15:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 11267,
                        "indexExpression": {
                          "id": 11265,
                          "name": "tokenAddress1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11254,
                          "src": "49161:13:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "49145:30:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 11268,
                      "indexExpression": {
                        "id": 11266,
                        "name": "tokenAddress2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11256,
                        "src": "49176:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "49145:45:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11269,
                      "name": "priceOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11258,
                      "src": "49193:14:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "49145:62:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11271,
                  "nodeType": "ExpressionStatement",
                  "src": "49145:62:35"
                }
              ]
            },
            "documentation": {
              "id": 11252,
              "nodeType": "StructuredDocumentation",
              "src": "48807:195:35",
              "text": " @dev Take ownership for setting the price of a token.\n @param tokenAddress1 Address of the token to be priced.\n @param tokenAddress2 Address of the token to pay for token1."
            },
            "functionSelector": "0baf41a6",
            "id": 11273,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 11261,
                    "name": "tokenAddress1",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11254,
                    "src": "49124:13:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 11262,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11260,
                  "name": "onlyPriceOracle",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8273,
                  "src": "49108:15:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "49108:30:35"
              }
            ],
            "name": "setPriceOwnership",
            "nameLocation": "49014:17:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11254,
                  "mutability": "mutable",
                  "name": "tokenAddress1",
                  "nameLocation": "49040:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 11273,
                  "src": "49032:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11253,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "49032:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11256,
                  "mutability": "mutable",
                  "name": "tokenAddress2",
                  "nameLocation": "49063:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 11273,
                  "src": "49055:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11255,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "49055:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11258,
                  "mutability": "mutable",
                  "name": "priceOwnership",
                  "nameLocation": "49083:14:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 11273,
                  "src": "49078:19:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11257,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "49078:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "49031:67:35"
            },
            "returnParameters": {
              "id": 11263,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "49139:0:35"
            },
            "scope": 11766,
            "src": "49005:207:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11285,
              "nodeType": "Block",
              "src": "49478:55:35",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 11281,
                      "name": "_variablePriceStartDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8231,
                      "src": "49491:23:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 11283,
                    "indexExpression": {
                      "id": 11282,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11276,
                      "src": "49515:12:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "49491:37:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 11280,
                  "id": 11284,
                  "nodeType": "Return",
                  "src": "49484:44:35"
                }
              ]
            },
            "documentation": {
              "id": 11274,
              "nodeType": "StructuredDocumentation",
              "src": "49216:174:35",
              "text": " @dev Get date after which the token price can potentially be set by an oracle (0 if price can not be set by an oracle).\n @param tokenAddress Token address."
            },
            "functionSelector": "30f97699",
            "id": 11286,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "variablePriceStartDate",
            "nameLocation": "49402:22:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11277,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11276,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "49433:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 11286,
                  "src": "49425:20:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11275,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "49425:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "49424:22:35"
            },
            "returnParameters": {
              "id": 11280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11279,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11286,
                  "src": "49469:7:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11278,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "49469:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "49468:9:35"
            },
            "scope": 11766,
            "src": "49393:140:35",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11318,
              "nodeType": "Block",
              "src": "49958:193:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 11308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 11303,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 11298,
                                "name": "startDate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11291,
                                "src": "49973:9:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 11302,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 11299,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967292,
                                    "src": "49985:5:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 11300,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "49985:15:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 11301,
                                  "name": "SECONDS_IN_WEEK",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8018,
                                  "src": "50003:15:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "49985:33:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "49973:45:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 11304,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "49972:47:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 11307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 11305,
                            "name": "startDate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11291,
                            "src": "50023:9:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 11306,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "50036:1:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "50023:14:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "49972:65:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53746172742064617465206e6565647320746f20626520736574206174206c656173742061207765656b206265666f7265",
                        "id": 11309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "50039:51:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_02ebd69188c7db9c3dd01f2aaa1d87221471968f5aa99525c48b99a1505380e0",
                          "typeString": "literal_string \"Start date needs to be set at least a week before\""
                        },
                        "value": "Start date needs to be set at least a week before"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_02ebd69188c7db9c3dd01f2aaa1d87221471968f5aa99525c48b99a1505380e0",
                          "typeString": "literal_string \"Start date needs to be set at least a week before\""
                        }
                      ],
                      "id": 11297,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "49964:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "49964:127:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11311,
                  "nodeType": "ExpressionStatement",
                  "src": "49964:127:35"
                },
                {
                  "expression": {
                    "id": 11316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 11312,
                        "name": "_variablePriceStartDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8231,
                        "src": "50097:23:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 11314,
                      "indexExpression": {
                        "id": 11313,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11289,
                        "src": "50121:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "50097:37:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11315,
                      "name": "startDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11291,
                      "src": "50137:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "50097:49:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11317,
                  "nodeType": "ExpressionStatement",
                  "src": "50097:49:35"
                }
              ]
            },
            "documentation": {
              "id": 11287,
              "nodeType": "StructuredDocumentation",
              "src": "49537:303:35",
              "text": " @dev Set date after which the token price can potentially be set by an oracle (0 if price can not be set by an oracle).\n @param tokenAddress Token address.\n @param startDate Date after which token price can potentially be set by an oracle (0 if price can not be set by an oracle)."
            },
            "functionSelector": "c9adffe2",
            "id": 11319,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 11294,
                    "name": "tokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11289,
                    "src": "49944:12:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 11295,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11293,
                  "name": "onlyPriceOracle",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8273,
                  "src": "49928:15:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "49928:29:35"
              }
            ],
            "name": "setVariablePriceStartDate",
            "nameLocation": "49852:25:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11289,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "49886:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 11319,
                  "src": "49878:20:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11288,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "49878:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11291,
                  "mutability": "mutable",
                  "name": "startDate",
                  "nameLocation": "49908:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 11319,
                  "src": "49900:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11290,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "49900:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "49877:41:35"
            },
            "returnParameters": {
              "id": 11296,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "49958:0:35"
            },
            "scope": 11766,
            "src": "49843:308:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11343,
              "nodeType": "Block",
              "src": "50678:95:35",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 11333,
                            "name": "_tokenUnitPricesByPartition",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8207,
                            "src": "50691:27:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$_$",
                              "typeString": "mapping(address => mapping(address => mapping(bytes32 => mapping(bytes32 => uint256))))"
                            }
                          },
                          "id": 11335,
                          "indexExpression": {
                            "id": 11334,
                            "name": "tokenAddress1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11322,
                            "src": "50719:13:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "50691:42:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$",
                            "typeString": "mapping(address => mapping(bytes32 => mapping(bytes32 => uint256)))"
                          }
                        },
                        "id": 11337,
                        "indexExpression": {
                          "id": 11336,
                          "name": "tokenAddress2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11324,
                          "src": "50734:13:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "50691:57:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                          "typeString": "mapping(bytes32 => mapping(bytes32 => uint256))"
                        }
                      },
                      "id": 11339,
                      "indexExpression": {
                        "id": 11338,
                        "name": "tokenId1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11326,
                        "src": "50749:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "50691:67:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                        "typeString": "mapping(bytes32 => uint256)"
                      }
                    },
                    "id": 11341,
                    "indexExpression": {
                      "id": 11340,
                      "name": "tokenId2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11328,
                      "src": "50759:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "50691:77:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 11332,
                  "id": 11342,
                  "nodeType": "Return",
                  "src": "50684:84:35"
                }
              ]
            },
            "documentation": {
              "id": 11320,
              "nodeType": "StructuredDocumentation",
              "src": "50155:384:35",
              "text": " @dev Get price of the token.\n @param tokenAddress1 Address of the token to be priced.\n @param tokenAddress2 Address of the token to pay for token1.\n @param tokenId1 ID/partition of the token1 (set to 0 bytes32 if price is set for all IDs/partitions).\n @param tokenId1 ID/partition of the token2 (set to 0 bytes32 if price is set for all IDs/partitions)."
            },
            "functionSelector": "8595240b",
            "id": 11344,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenPrice",
            "nameLocation": "50551:13:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11322,
                  "mutability": "mutable",
                  "name": "tokenAddress1",
                  "nameLocation": "50573:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 11344,
                  "src": "50565:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11321,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "50565:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11324,
                  "mutability": "mutable",
                  "name": "tokenAddress2",
                  "nameLocation": "50596:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 11344,
                  "src": "50588:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11323,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "50588:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11326,
                  "mutability": "mutable",
                  "name": "tokenId1",
                  "nameLocation": "50619:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 11344,
                  "src": "50611:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 11325,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "50611:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11328,
                  "mutability": "mutable",
                  "name": "tokenId2",
                  "nameLocation": "50637:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 11344,
                  "src": "50629:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 11327,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "50629:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "50564:82:35"
            },
            "returnParameters": {
              "id": 11332,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11331,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11344,
                  "src": "50669:7:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11330,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "50669:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "50668:9:35"
            },
            "scope": 11766,
            "src": "50542:231:35",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11424,
              "nodeType": "Block",
              "src": "51339:647:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "51353:97:35",
                        "subExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 11369,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 11359,
                                    "name": "_priceOwnership",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8197,
                                    "src": "51355:15:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                      "typeString": "mapping(address => mapping(address => bool))"
                                    }
                                  },
                                  "id": 11361,
                                  "indexExpression": {
                                    "id": 11360,
                                    "name": "tokenAddress1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11347,
                                    "src": "51371:13:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "51355:30:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 11363,
                                "indexExpression": {
                                  "id": 11362,
                                  "name": "tokenAddress2",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11349,
                                  "src": "51386:13:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "51355:45:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 11364,
                                    "name": "_priceOwnership",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8197,
                                    "src": "51404:15:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                      "typeString": "mapping(address => mapping(address => bool))"
                                    }
                                  },
                                  "id": 11366,
                                  "indexExpression": {
                                    "id": 11365,
                                    "name": "tokenAddress2",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11349,
                                    "src": "51420:13:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "51404:30:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 11368,
                                "indexExpression": {
                                  "id": 11367,
                                  "name": "tokenAddress1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11347,
                                  "src": "51435:13:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "51404:45:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "51355:94:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 11370,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "51354:96:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e206f6e207072696365206f776e657273686970",
                        "id": 11372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "51452:32:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9cca473d4699184ddb1b521cc84943981ca1f9ae354f32feb4ed94760c4d4047",
                          "typeString": "literal_string \"Competition on price ownership\""
                        },
                        "value": "Competition on price ownership"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9cca473d4699184ddb1b521cc84943981ca1f9ae354f32feb4ed94760c4d4047",
                          "typeString": "literal_string \"Competition on price ownership\""
                        }
                      ],
                      "id": 11358,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "51345:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "51345:140:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11374,
                  "nodeType": "ExpressionStatement",
                  "src": "51345:140:35"
                },
                {
                  "condition": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 11375,
                        "name": "_priceOwnership",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8197,
                        "src": "51495:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 11377,
                      "indexExpression": {
                        "id": 11376,
                        "name": "tokenAddress1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11347,
                        "src": "51511:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "51495:30:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 11379,
                    "indexExpression": {
                      "id": 11378,
                      "name": "tokenAddress2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11349,
                      "src": "51526:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "51495:45:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 11390,
                          "name": "_priceOwnership",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8197,
                          "src": "51671:15:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 11392,
                        "indexExpression": {
                          "id": 11391,
                          "name": "tokenAddress2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11349,
                          "src": "51687:13:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "51671:30:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 11394,
                      "indexExpression": {
                        "id": 11393,
                        "name": "tokenAddress1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11347,
                        "src": "51702:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "51671:45:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 11409,
                      "nodeType": "Block",
                      "src": "51844:43:35",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "4e6f207072696365206f776e657273686970",
                                "id": 11406,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "51859:20:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_242e1ec42c4d9d50f39212896afb445568abd9a5227b187111929b57dbb7bf2e",
                                  "typeString": "literal_string \"No price ownership\""
                                },
                                "value": "No price ownership"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_242e1ec42c4d9d50f39212896afb445568abd9a5227b187111929b57dbb7bf2e",
                                  "typeString": "literal_string \"No price ownership\""
                                }
                              ],
                              "id": 11405,
                              "name": "revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                4294967277,
                                4294967277
                              ],
                              "referencedDeclaration": 4294967277,
                              "src": "51852:6:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (string memory) pure"
                              }
                            },
                            "id": 11407,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "51852:28:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 11408,
                          "nodeType": "ExpressionStatement",
                          "src": "51852:28:35"
                        }
                      ]
                    },
                    "id": 11410,
                    "nodeType": "IfStatement",
                    "src": "51668:219:35",
                    "trueBody": {
                      "id": 11404,
                      "nodeType": "Block",
                      "src": "51718:120:35",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 11397,
                                    "name": "tokenAddress2",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11349,
                                    "src": "51752:13:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 11398,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "51767:3:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 11399,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "51767:10:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 11396,
                                  "name": "_checkPriceOracle",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11234,
                                  "src": "51734:17:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (address,address) view returns (bool)"
                                  }
                                },
                                "id": 11400,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "51734:44:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "507269636520736574746572206973206e6f7420616e206f7261636c6520666f72207468697320746f6b656e20283229",
                                "id": 11401,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "51780:50:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b1178f18a5aa1a32a6e2280a977824c520f59de733c77c9821fa1a6ad0758d01",
                                  "typeString": "literal_string \"Price setter is not an oracle for this token (2)\""
                                },
                                "value": "Price setter is not an oracle for this token (2)"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b1178f18a5aa1a32a6e2280a977824c520f59de733c77c9821fa1a6ad0758d01",
                                  "typeString": "literal_string \"Price setter is not an oracle for this token (2)\""
                                }
                              ],
                              "id": 11395,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "src": "51726:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 11402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "51726:105:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 11403,
                          "nodeType": "ExpressionStatement",
                          "src": "51726:105:35"
                        }
                      ]
                    }
                  },
                  "id": 11411,
                  "nodeType": "IfStatement",
                  "src": "51492:395:35",
                  "trueBody": {
                    "id": 11389,
                    "nodeType": "Block",
                    "src": "51542:120:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 11382,
                                  "name": "tokenAddress1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11347,
                                  "src": "51576:13:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 11383,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "51591:3:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 11384,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "51591:10:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 11381,
                                "name": "_checkPriceOracle",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11234,
                                "src": "51558:17:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address,address) view returns (bool)"
                                }
                              },
                              "id": 11385,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "51558:44:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "507269636520736574746572206973206e6f7420616e206f7261636c6520666f72207468697320746f6b656e20283129",
                              "id": 11386,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "51604:50:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2f0a6c014b93879ada9ab209e5b7a62ef24399af93bf6c00c1529d6e0d627fce",
                                "typeString": "literal_string \"Price setter is not an oracle for this token (1)\""
                              },
                              "value": "Price setter is not an oracle for this token (1)"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2f0a6c014b93879ada9ab209e5b7a62ef24399af93bf6c00c1529d6e0d627fce",
                                "typeString": "literal_string \"Price setter is not an oracle for this token (1)\""
                              }
                            ],
                            "id": 11380,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "51550:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 11387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "51550:105:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11388,
                        "nodeType": "ExpressionStatement",
                        "src": "51550:105:35"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 11422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 11412,
                              "name": "_tokenUnitPricesByPartition",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8207,
                              "src": "51893:27:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$_$",
                                "typeString": "mapping(address => mapping(address => mapping(bytes32 => mapping(bytes32 => uint256))))"
                              }
                            },
                            "id": 11417,
                            "indexExpression": {
                              "id": 11413,
                              "name": "tokenAddress1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11347,
                              "src": "51921:13:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "51893:42:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$",
                              "typeString": "mapping(address => mapping(bytes32 => mapping(bytes32 => uint256)))"
                            }
                          },
                          "id": 11418,
                          "indexExpression": {
                            "id": 11414,
                            "name": "tokenAddress2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11349,
                            "src": "51936:13:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "51893:57:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                            "typeString": "mapping(bytes32 => mapping(bytes32 => uint256))"
                          }
                        },
                        "id": 11419,
                        "indexExpression": {
                          "id": 11415,
                          "name": "tokenId1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11351,
                          "src": "51951:8:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "51893:67:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 11420,
                      "indexExpression": {
                        "id": 11416,
                        "name": "tokenId2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11353,
                        "src": "51961:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "51893:77:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11421,
                      "name": "newPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11355,
                      "src": "51973:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "51893:88:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11423,
                  "nodeType": "ExpressionStatement",
                  "src": "51893:88:35"
                }
              ]
            },
            "documentation": {
              "id": 11345,
              "nodeType": "StructuredDocumentation",
              "src": "50777:427:35",
              "text": " @dev Set price of a token.\n @param tokenAddress1 Address of the token to be priced.\n @param tokenAddress2 Address of the token to pay for token1.\n @param tokenId1 ID/partition of the token1 (set to 0 bytes32 if price is set for all IDs/partitions).\n @param tokenId2 ID/partition of the token2 (set to 0 bytes32 if price is set for all IDs/partitions).\n @param newPrice New price of the token."
            },
            "functionSelector": "58727467",
            "id": 11425,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTokenPrice",
            "nameLocation": "51216:13:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11347,
                  "mutability": "mutable",
                  "name": "tokenAddress1",
                  "nameLocation": "51238:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 11425,
                  "src": "51230:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11346,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "51230:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11349,
                  "mutability": "mutable",
                  "name": "tokenAddress2",
                  "nameLocation": "51261:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 11425,
                  "src": "51253:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11348,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "51253:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11351,
                  "mutability": "mutable",
                  "name": "tokenId1",
                  "nameLocation": "51284:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 11425,
                  "src": "51276:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 11350,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "51276:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11353,
                  "mutability": "mutable",
                  "name": "tokenId2",
                  "nameLocation": "51302:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 11425,
                  "src": "51294:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 11352,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "51294:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11355,
                  "mutability": "mutable",
                  "name": "newPrice",
                  "nameLocation": "51320:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 11425,
                  "src": "51312:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11354,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "51312:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "51229:100:35"
            },
            "returnParameters": {
              "id": 11357,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "51339:0:35"
            },
            "scope": 11766,
            "src": "51207:779:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11736,
              "nodeType": "Block",
              "src": "52171:2690:35",
              "statements": [
                {
                  "assignments": [
                    11435
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11435,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "52191:5:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 11736,
                      "src": "52177:19:35",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                        "typeString": "struct Swaps.Trade"
                      },
                      "typeName": {
                        "id": 11434,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11433,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8173,
                          "src": "52177:5:35"
                        },
                        "referencedDeclaration": 8173,
                        "src": "52177:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11439,
                  "initialValue": {
                    "baseExpression": {
                      "id": 11436,
                      "name": "_trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8180,
                      "src": "52199:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$8173_storage_$",
                        "typeString": "mapping(uint256 => struct Swaps.Trade storage ref)"
                      }
                    },
                    "id": 11438,
                    "indexExpression": {
                      "id": 11437,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11428,
                      "src": "52207:5:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "52199:14:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$8173_storage",
                      "typeString": "struct Swaps.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "52177:36:35"
                },
                {
                  "assignments": [
                    11441
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11441,
                      "mutability": "mutable",
                      "name": "tokenAddress1",
                      "nameLocation": "52228:13:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 11736,
                      "src": "52220:21:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 11440,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "52220:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11445,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 11442,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11435,
                        "src": "52244:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 11443,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8166,
                      "src": "52244:20:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "id": 11444,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 8103,
                    "src": "52244:33:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "52220:57:35"
                },
                {
                  "assignments": [
                    11447
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11447,
                      "mutability": "mutable",
                      "name": "tokenValue1",
                      "nameLocation": "52291:11:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 11736,
                      "src": "52283:19:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11446,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "52283:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11451,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 11448,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11435,
                        "src": "52305:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 11449,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8166,
                      "src": "52305:20:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "id": 11450,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenValue",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 8105,
                    "src": "52305:31:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "52283:53:35"
                },
                {
                  "assignments": [
                    11453
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11453,
                      "mutability": "mutable",
                      "name": "tokenId1",
                      "nameLocation": "52350:8:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 11736,
                      "src": "52342:16:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 11452,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "52342:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11457,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 11454,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11435,
                        "src": "52361:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 11455,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8166,
                      "src": "52361:20:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "id": 11456,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenId",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 8107,
                    "src": "52361:28:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "52342:47:35"
                },
                {
                  "assignments": [
                    11459
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11459,
                      "mutability": "mutable",
                      "name": "tokenAddress2",
                      "nameLocation": "52404:13:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 11736,
                      "src": "52396:21:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 11458,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "52396:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11463,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 11460,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11435,
                        "src": "52420:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 11461,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8169,
                      "src": "52420:20:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "id": 11462,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 8103,
                    "src": "52420:33:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "52396:57:35"
                },
                {
                  "assignments": [
                    11465
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11465,
                      "mutability": "mutable",
                      "name": "tokenValue2",
                      "nameLocation": "52467:11:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 11736,
                      "src": "52459:19:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11464,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "52459:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11469,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 11466,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11435,
                        "src": "52481:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 11467,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8169,
                      "src": "52481:20:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "id": 11468,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenValue",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 8105,
                    "src": "52481:31:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "52459:53:35"
                },
                {
                  "assignments": [
                    11471
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11471,
                      "mutability": "mutable",
                      "name": "tokenId2",
                      "nameLocation": "52526:8:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 11736,
                      "src": "52518:16:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 11470,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "52518:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11475,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 11472,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11435,
                        "src": "52537:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 11473,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8169,
                      "src": "52537:20:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$8118_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "id": 11474,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenId",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 8107,
                    "src": "52537:28:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "52518:47:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "52580:97:35",
                        "subExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 11487,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 11477,
                                    "name": "_priceOwnership",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8197,
                                    "src": "52582:15:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                      "typeString": "mapping(address => mapping(address => bool))"
                                    }
                                  },
                                  "id": 11479,
                                  "indexExpression": {
                                    "id": 11478,
                                    "name": "tokenAddress1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11441,
                                    "src": "52598:13:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "52582:30:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 11481,
                                "indexExpression": {
                                  "id": 11480,
                                  "name": "tokenAddress2",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11459,
                                  "src": "52613:13:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "52582:45:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 11482,
                                    "name": "_priceOwnership",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8197,
                                    "src": "52631:15:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                      "typeString": "mapping(address => mapping(address => bool))"
                                    }
                                  },
                                  "id": 11484,
                                  "indexExpression": {
                                    "id": 11483,
                                    "name": "tokenAddress2",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11459,
                                    "src": "52647:13:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "52631:30:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 11486,
                                "indexExpression": {
                                  "id": 11485,
                                  "name": "tokenAddress1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11441,
                                  "src": "52662:13:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "52631:45:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "52582:94:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 11488,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "52581:96:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e206f6e207072696365206f776e657273686970",
                        "id": 11490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "52679:32:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9cca473d4699184ddb1b521cc84943981ca1f9ae354f32feb4ed94760c4d4047",
                          "typeString": "literal_string \"Competition on price ownership\""
                        },
                        "value": "Competition on price ownership"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9cca473d4699184ddb1b521cc84943981ca1f9ae354f32feb4ed94760c4d4047",
                          "typeString": "literal_string \"Competition on price ownership\""
                        }
                      ],
                      "id": 11476,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "52572:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "52572:140:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11492,
                  "nodeType": "ExpressionStatement",
                  "src": "52572:140:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 11504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 11497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 11493,
                          "name": "_variablePriceStartDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8231,
                          "src": "52722:23:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 11495,
                        "indexExpression": {
                          "id": 11494,
                          "name": "tokenAddress1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11441,
                          "src": "52746:13:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "52722:38:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 11496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "52764:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "52722:43:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 11503,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 11498,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "52769:5:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 11499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "52769:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "baseExpression": {
                          "id": 11500,
                          "name": "_variablePriceStartDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8231,
                          "src": "52787:23:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 11502,
                        "indexExpression": {
                          "id": 11501,
                          "name": "tokenAddress1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11441,
                          "src": "52811:13:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "52787:38:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "52769:56:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "52722:103:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11508,
                  "nodeType": "IfStatement",
                  "src": "52719:141:35",
                  "trueBody": {
                    "id": 11507,
                    "nodeType": "Block",
                    "src": "52827:33:35",
                    "statements": [
                      {
                        "expression": {
                          "id": 11505,
                          "name": "tokenValue2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11465,
                          "src": "52842:11:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 11432,
                        "id": 11506,
                        "nodeType": "Return",
                        "src": "52835:18:35"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 11519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 11509,
                          "name": "_priceOwnership",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8197,
                          "src": "52869:15:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 11511,
                        "indexExpression": {
                          "id": 11510,
                          "name": "tokenAddress1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11441,
                          "src": "52885:13:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "52869:30:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 11513,
                      "indexExpression": {
                        "id": 11512,
                        "name": "tokenAddress2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11459,
                        "src": "52900:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "52869:45:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 11514,
                          "name": "_priceOwnership",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8197,
                          "src": "52918:15:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 11516,
                        "indexExpression": {
                          "id": 11515,
                          "name": "tokenAddress2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11459,
                          "src": "52934:13:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "52918:30:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 11518,
                      "indexExpression": {
                        "id": 11517,
                        "name": "tokenAddress1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11441,
                        "src": "52949:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "52918:45:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "52869:94:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 11734,
                    "nodeType": "Block",
                    "src": "54824:33:35",
                    "statements": [
                      {
                        "expression": {
                          "id": 11732,
                          "name": "tokenValue2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11465,
                          "src": "54839:11:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 11432,
                        "id": 11733,
                        "nodeType": "Return",
                        "src": "54832:18:35"
                      }
                    ]
                  },
                  "id": 11735,
                  "nodeType": "IfStatement",
                  "src": "52866:1991:35",
                  "trueBody": {
                    "id": 11731,
                    "nodeType": "Block",
                    "src": "52965:1853:35",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 11530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 11520,
                                    "name": "_tokenUnitPricesByPartition",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8207,
                                    "src": "52977:27:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$_$",
                                      "typeString": "mapping(address => mapping(address => mapping(bytes32 => mapping(bytes32 => uint256))))"
                                    }
                                  },
                                  "id": 11522,
                                  "indexExpression": {
                                    "id": 11521,
                                    "name": "tokenAddress1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11441,
                                    "src": "53005:13:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "52977:42:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$",
                                    "typeString": "mapping(address => mapping(bytes32 => mapping(bytes32 => uint256)))"
                                  }
                                },
                                "id": 11524,
                                "indexExpression": {
                                  "id": 11523,
                                  "name": "tokenAddress2",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11459,
                                  "src": "53020:13:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "52977:57:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                  "typeString": "mapping(bytes32 => mapping(bytes32 => uint256))"
                                }
                              },
                              "id": 11526,
                              "indexExpression": {
                                "id": 11525,
                                "name": "tokenId1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11453,
                                "src": "53035:8:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "52977:67:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                "typeString": "mapping(bytes32 => uint256)"
                              }
                            },
                            "id": 11528,
                            "indexExpression": {
                              "id": 11527,
                              "name": "tokenId2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11471,
                              "src": "53045:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "52977:77:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 11529,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "53058:1:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "52977:82:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 11555,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 11545,
                                      "name": "_tokenUnitPricesByPartition",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8207,
                                      "src": "53190:27:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$_$",
                                        "typeString": "mapping(address => mapping(address => mapping(bytes32 => mapping(bytes32 => uint256))))"
                                      }
                                    },
                                    "id": 11547,
                                    "indexExpression": {
                                      "id": 11546,
                                      "name": "tokenAddress2",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 11459,
                                      "src": "53218:13:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "53190:42:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$",
                                      "typeString": "mapping(address => mapping(bytes32 => mapping(bytes32 => uint256)))"
                                    }
                                  },
                                  "id": 11549,
                                  "indexExpression": {
                                    "id": 11548,
                                    "name": "tokenAddress1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11441,
                                    "src": "53233:13:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "53190:57:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                    "typeString": "mapping(bytes32 => mapping(bytes32 => uint256))"
                                  }
                                },
                                "id": 11551,
                                "indexExpression": {
                                  "id": 11550,
                                  "name": "tokenId2",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11471,
                                  "src": "53248:8:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "53190:67:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                  "typeString": "mapping(bytes32 => uint256)"
                                }
                              },
                              "id": 11553,
                              "indexExpression": {
                                "id": 11552,
                                "name": "tokenId1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11453,
                                "src": "53258:8:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "53190:77:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 11554,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "53271:1:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "53190:82:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 11580,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 11570,
                                        "name": "_tokenUnitPricesByPartition",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 8207,
                                        "src": "53403:27:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$_$",
                                          "typeString": "mapping(address => mapping(address => mapping(bytes32 => mapping(bytes32 => uint256))))"
                                        }
                                      },
                                      "id": 11572,
                                      "indexExpression": {
                                        "id": 11571,
                                        "name": "tokenAddress1",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 11441,
                                        "src": "53431:13:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "53403:42:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$",
                                        "typeString": "mapping(address => mapping(bytes32 => mapping(bytes32 => uint256)))"
                                      }
                                    },
                                    "id": 11574,
                                    "indexExpression": {
                                      "id": 11573,
                                      "name": "tokenAddress2",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 11459,
                                      "src": "53446:13:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "53403:57:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                      "typeString": "mapping(bytes32 => mapping(bytes32 => uint256))"
                                    }
                                  },
                                  "id": 11576,
                                  "indexExpression": {
                                    "id": 11575,
                                    "name": "tokenId1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11453,
                                    "src": "53461:8:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "53403:67:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                    "typeString": "mapping(bytes32 => uint256)"
                                  }
                                },
                                "id": 11578,
                                "indexExpression": {
                                  "id": 11577,
                                  "name": "ALL_PARTITIONS",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8030,
                                  "src": "53471:14:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "53403:83:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 11579,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "53490:1:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "53403:88:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 11605,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 11595,
                                          "name": "_tokenUnitPricesByPartition",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 8207,
                                          "src": "53628:27:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$_$",
                                            "typeString": "mapping(address => mapping(address => mapping(bytes32 => mapping(bytes32 => uint256))))"
                                          }
                                        },
                                        "id": 11597,
                                        "indexExpression": {
                                          "id": 11596,
                                          "name": "tokenAddress2",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 11459,
                                          "src": "53656:13:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "53628:42:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$",
                                          "typeString": "mapping(address => mapping(bytes32 => mapping(bytes32 => uint256)))"
                                        }
                                      },
                                      "id": 11599,
                                      "indexExpression": {
                                        "id": 11598,
                                        "name": "tokenAddress1",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 11441,
                                        "src": "53671:13:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "53628:57:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                        "typeString": "mapping(bytes32 => mapping(bytes32 => uint256))"
                                      }
                                    },
                                    "id": 11601,
                                    "indexExpression": {
                                      "id": 11600,
                                      "name": "ALL_PARTITIONS",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8030,
                                      "src": "53686:14:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "53628:73:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                      "typeString": "mapping(bytes32 => uint256)"
                                    }
                                  },
                                  "id": 11603,
                                  "indexExpression": {
                                    "id": 11602,
                                    "name": "tokenId1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11453,
                                    "src": "53702:8:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "53628:83:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 11604,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "53715:1:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "53628:88:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 11630,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "baseExpression": {
                                            "id": 11620,
                                            "name": "_tokenUnitPricesByPartition",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 8207,
                                            "src": "53853:27:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$_$",
                                              "typeString": "mapping(address => mapping(address => mapping(bytes32 => mapping(bytes32 => uint256))))"
                                            }
                                          },
                                          "id": 11622,
                                          "indexExpression": {
                                            "id": 11621,
                                            "name": "tokenAddress1",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 11441,
                                            "src": "53881:13:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "53853:42:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$",
                                            "typeString": "mapping(address => mapping(bytes32 => mapping(bytes32 => uint256)))"
                                          }
                                        },
                                        "id": 11624,
                                        "indexExpression": {
                                          "id": 11623,
                                          "name": "tokenAddress2",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 11459,
                                          "src": "53896:13:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "53853:57:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                          "typeString": "mapping(bytes32 => mapping(bytes32 => uint256))"
                                        }
                                      },
                                      "id": 11626,
                                      "indexExpression": {
                                        "id": 11625,
                                        "name": "ALL_PARTITIONS",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 8030,
                                        "src": "53911:14:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "53853:73:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                        "typeString": "mapping(bytes32 => uint256)"
                                      }
                                    },
                                    "id": 11628,
                                    "indexExpression": {
                                      "id": 11627,
                                      "name": "tokenId2",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 11471,
                                      "src": "53927:8:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "53853:83:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "!=",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 11629,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "53940:1:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "53853:88:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 11655,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "baseExpression": {
                                            "baseExpression": {
                                              "id": 11645,
                                              "name": "_tokenUnitPricesByPartition",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 8207,
                                              "src": "54078:27:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$_$",
                                                "typeString": "mapping(address => mapping(address => mapping(bytes32 => mapping(bytes32 => uint256))))"
                                              }
                                            },
                                            "id": 11647,
                                            "indexExpression": {
                                              "id": 11646,
                                              "name": "tokenAddress2",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 11459,
                                              "src": "54106:13:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "54078:42:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$",
                                              "typeString": "mapping(address => mapping(bytes32 => mapping(bytes32 => uint256)))"
                                            }
                                          },
                                          "id": 11649,
                                          "indexExpression": {
                                            "id": 11648,
                                            "name": "tokenAddress1",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 11441,
                                            "src": "54121:13:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "54078:57:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                            "typeString": "mapping(bytes32 => mapping(bytes32 => uint256))"
                                          }
                                        },
                                        "id": 11651,
                                        "indexExpression": {
                                          "id": 11650,
                                          "name": "tokenId2",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 11471,
                                          "src": "54136:8:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "54078:67:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                          "typeString": "mapping(bytes32 => uint256)"
                                        }
                                      },
                                      "id": 11653,
                                      "indexExpression": {
                                        "id": 11652,
                                        "name": "ALL_PARTITIONS",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 8030,
                                        "src": "54146:14:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "54078:83:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 11654,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "54165:1:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "54078:88:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 11680,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "baseExpression": {
                                          "baseExpression": {
                                            "baseExpression": {
                                              "baseExpression": {
                                                "id": 11670,
                                                "name": "_tokenUnitPricesByPartition",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 8207,
                                                "src": "54303:27:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$_$",
                                                  "typeString": "mapping(address => mapping(address => mapping(bytes32 => mapping(bytes32 => uint256))))"
                                                }
                                              },
                                              "id": 11672,
                                              "indexExpression": {
                                                "id": 11671,
                                                "name": "tokenAddress1",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 11441,
                                                "src": "54331:13:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "54303:42:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$",
                                                "typeString": "mapping(address => mapping(bytes32 => mapping(bytes32 => uint256)))"
                                              }
                                            },
                                            "id": 11674,
                                            "indexExpression": {
                                              "id": 11673,
                                              "name": "tokenAddress2",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 11459,
                                              "src": "54346:13:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "54303:57:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                              "typeString": "mapping(bytes32 => mapping(bytes32 => uint256))"
                                            }
                                          },
                                          "id": 11676,
                                          "indexExpression": {
                                            "id": 11675,
                                            "name": "ALL_PARTITIONS",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 8030,
                                            "src": "54361:14:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "54303:73:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                            "typeString": "mapping(bytes32 => uint256)"
                                          }
                                        },
                                        "id": 11678,
                                        "indexExpression": {
                                          "id": 11677,
                                          "name": "ALL_PARTITIONS",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 8030,
                                          "src": "54377:14:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "54303:89:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "!=",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 11679,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "54396:1:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "54303:94:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": {
                                      "condition": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 11705,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "baseExpression": {
                                            "baseExpression": {
                                              "baseExpression": {
                                                "baseExpression": {
                                                  "id": 11695,
                                                  "name": "_tokenUnitPricesByPartition",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 8207,
                                                  "src": "54540:27:35",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$_$",
                                                    "typeString": "mapping(address => mapping(address => mapping(bytes32 => mapping(bytes32 => uint256))))"
                                                  }
                                                },
                                                "id": 11697,
                                                "indexExpression": {
                                                  "id": 11696,
                                                  "name": "tokenAddress2",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 11459,
                                                  "src": "54568:13:35",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "54540:42:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$",
                                                  "typeString": "mapping(address => mapping(bytes32 => mapping(bytes32 => uint256)))"
                                                }
                                              },
                                              "id": 11699,
                                              "indexExpression": {
                                                "id": 11698,
                                                "name": "tokenAddress1",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 11441,
                                                "src": "54583:13:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "54540:57:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                                "typeString": "mapping(bytes32 => mapping(bytes32 => uint256))"
                                              }
                                            },
                                            "id": 11701,
                                            "indexExpression": {
                                              "id": 11700,
                                              "name": "ALL_PARTITIONS",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 8030,
                                              "src": "54598:14:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "54540:73:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                              "typeString": "mapping(bytes32 => uint256)"
                                            }
                                          },
                                          "id": 11703,
                                          "indexExpression": {
                                            "id": 11702,
                                            "name": "ALL_PARTITIONS",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 8030,
                                            "src": "54614:14:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "54540:89:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "!=",
                                        "rightExpression": {
                                          "hexValue": "30",
                                          "id": 11704,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "54633:1:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        },
                                        "src": "54540:94:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "falseBody": {
                                        "id": 11722,
                                        "nodeType": "Block",
                                        "src": "54774:37:35",
                                        "statements": [
                                          {
                                            "expression": {
                                              "id": 11720,
                                              "name": "tokenValue2",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 11465,
                                              "src": "54791:11:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "functionReturnParameters": 11432,
                                            "id": 11721,
                                            "nodeType": "Return",
                                            "src": "54784:18:35"
                                          }
                                        ]
                                      },
                                      "id": 11723,
                                      "nodeType": "IfStatement",
                                      "src": "54537:274:35",
                                      "trueBody": {
                                        "id": 11719,
                                        "nodeType": "Block",
                                        "src": "54636:132:35",
                                        "statements": [
                                          {
                                            "expression": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 11717,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 11706,
                                                "name": "tokenValue1",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 11447,
                                                "src": "54653:11:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "/",
                                              "rightExpression": {
                                                "components": [
                                                  {
                                                    "baseExpression": {
                                                      "baseExpression": {
                                                        "baseExpression": {
                                                          "baseExpression": {
                                                            "id": 11707,
                                                            "name": "_tokenUnitPricesByPartition",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 8207,
                                                            "src": "54668:27:35",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$_$",
                                                              "typeString": "mapping(address => mapping(address => mapping(bytes32 => mapping(bytes32 => uint256))))"
                                                            }
                                                          },
                                                          "id": 11709,
                                                          "indexExpression": {
                                                            "id": 11708,
                                                            "name": "tokenAddress2",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 11459,
                                                            "src": "54696:13:35",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_address",
                                                              "typeString": "address"
                                                            }
                                                          },
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "nodeType": "IndexAccess",
                                                          "src": "54668:42:35",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$",
                                                            "typeString": "mapping(address => mapping(bytes32 => mapping(bytes32 => uint256)))"
                                                          }
                                                        },
                                                        "id": 11711,
                                                        "indexExpression": {
                                                          "id": 11710,
                                                          "name": "tokenAddress1",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 11441,
                                                          "src": "54711:13:35",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                          }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "54668:57:35",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                                          "typeString": "mapping(bytes32 => mapping(bytes32 => uint256))"
                                                        }
                                                      },
                                                      "id": 11713,
                                                      "indexExpression": {
                                                        "id": 11712,
                                                        "name": "ALL_PARTITIONS",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 8030,
                                                        "src": "54726:14:35",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bytes32",
                                                          "typeString": "bytes32"
                                                        }
                                                      },
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "nodeType": "IndexAccess",
                                                      "src": "54668:73:35",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                                        "typeString": "mapping(bytes32 => uint256)"
                                                      }
                                                    },
                                                    "id": 11715,
                                                    "indexExpression": {
                                                      "id": 11714,
                                                      "name": "ALL_PARTITIONS",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 8030,
                                                      "src": "54742:14:35",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes32",
                                                        "typeString": "bytes32"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "54668:89:35",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  }
                                                ],
                                                "id": 11716,
                                                "isConstant": false,
                                                "isInlineArray": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "TupleExpression",
                                                "src": "54667:91:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "54653:105:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "functionReturnParameters": 11432,
                                            "id": 11718,
                                            "nodeType": "Return",
                                            "src": "54646:112:35"
                                          }
                                        ]
                                      }
                                    },
                                    "id": 11724,
                                    "nodeType": "IfStatement",
                                    "src": "54300:511:35",
                                    "trueBody": {
                                      "id": 11694,
                                      "nodeType": "Block",
                                      "src": "54399:132:35",
                                      "statements": [
                                        {
                                          "expression": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 11692,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 11681,
                                              "name": "tokenValue1",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 11447,
                                              "src": "54416:11:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "components": [
                                                {
                                                  "baseExpression": {
                                                    "baseExpression": {
                                                      "baseExpression": {
                                                        "baseExpression": {
                                                          "id": 11682,
                                                          "name": "_tokenUnitPricesByPartition",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 8207,
                                                          "src": "54431:27:35",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$_$",
                                                            "typeString": "mapping(address => mapping(address => mapping(bytes32 => mapping(bytes32 => uint256))))"
                                                          }
                                                        },
                                                        "id": 11684,
                                                        "indexExpression": {
                                                          "id": 11683,
                                                          "name": "tokenAddress1",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 11441,
                                                          "src": "54459:13:35",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                          }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "54431:42:35",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$",
                                                          "typeString": "mapping(address => mapping(bytes32 => mapping(bytes32 => uint256)))"
                                                        }
                                                      },
                                                      "id": 11686,
                                                      "indexExpression": {
                                                        "id": 11685,
                                                        "name": "tokenAddress2",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 11459,
                                                        "src": "54474:13:35",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_address",
                                                          "typeString": "address"
                                                        }
                                                      },
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "nodeType": "IndexAccess",
                                                      "src": "54431:57:35",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                                        "typeString": "mapping(bytes32 => mapping(bytes32 => uint256))"
                                                      }
                                                    },
                                                    "id": 11688,
                                                    "indexExpression": {
                                                      "id": 11687,
                                                      "name": "ALL_PARTITIONS",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 8030,
                                                      "src": "54489:14:35",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes32",
                                                        "typeString": "bytes32"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "54431:73:35",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                                      "typeString": "mapping(bytes32 => uint256)"
                                                    }
                                                  },
                                                  "id": 11690,
                                                  "indexExpression": {
                                                    "id": 11689,
                                                    "name": "ALL_PARTITIONS",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 8030,
                                                    "src": "54505:14:35",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bytes32",
                                                      "typeString": "bytes32"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "54431:89:35",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                }
                                              ],
                                              "id": 11691,
                                              "isConstant": false,
                                              "isInlineArray": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "TupleExpression",
                                              "src": "54430:91:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "54416:105:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "functionReturnParameters": 11432,
                                          "id": 11693,
                                          "nodeType": "Return",
                                          "src": "54409:112:35"
                                        }
                                      ]
                                    }
                                  },
                                  "id": 11725,
                                  "nodeType": "IfStatement",
                                  "src": "54075:736:35",
                                  "trueBody": {
                                    "id": 11669,
                                    "nodeType": "Block",
                                    "src": "54168:126:35",
                                    "statements": [
                                      {
                                        "expression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 11667,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 11656,
                                            "name": "tokenValue1",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 11447,
                                            "src": "54185:11:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "/",
                                          "rightExpression": {
                                            "components": [
                                              {
                                                "baseExpression": {
                                                  "baseExpression": {
                                                    "baseExpression": {
                                                      "baseExpression": {
                                                        "id": 11657,
                                                        "name": "_tokenUnitPricesByPartition",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 8207,
                                                        "src": "54200:27:35",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$_$",
                                                          "typeString": "mapping(address => mapping(address => mapping(bytes32 => mapping(bytes32 => uint256))))"
                                                        }
                                                      },
                                                      "id": 11659,
                                                      "indexExpression": {
                                                        "id": 11658,
                                                        "name": "tokenAddress2",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 11459,
                                                        "src": "54228:13:35",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_address",
                                                          "typeString": "address"
                                                        }
                                                      },
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "nodeType": "IndexAccess",
                                                      "src": "54200:42:35",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$",
                                                        "typeString": "mapping(address => mapping(bytes32 => mapping(bytes32 => uint256)))"
                                                      }
                                                    },
                                                    "id": 11661,
                                                    "indexExpression": {
                                                      "id": 11660,
                                                      "name": "tokenAddress1",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 11441,
                                                      "src": "54243:13:35",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "54200:57:35",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                                      "typeString": "mapping(bytes32 => mapping(bytes32 => uint256))"
                                                    }
                                                  },
                                                  "id": 11663,
                                                  "indexExpression": {
                                                    "id": 11662,
                                                    "name": "tokenId2",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 11471,
                                                    "src": "54258:8:35",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bytes32",
                                                      "typeString": "bytes32"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "54200:67:35",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                                    "typeString": "mapping(bytes32 => uint256)"
                                                  }
                                                },
                                                "id": 11665,
                                                "indexExpression": {
                                                  "id": 11664,
                                                  "name": "ALL_PARTITIONS",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 8030,
                                                  "src": "54268:14:35",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "54200:83:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "id": 11666,
                                            "isConstant": false,
                                            "isInlineArray": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "TupleExpression",
                                            "src": "54199:85:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "54185:99:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "functionReturnParameters": 11432,
                                        "id": 11668,
                                        "nodeType": "Return",
                                        "src": "54178:106:35"
                                      }
                                    ]
                                  }
                                },
                                "id": 11726,
                                "nodeType": "IfStatement",
                                "src": "53850:961:35",
                                "trueBody": {
                                  "id": 11644,
                                  "nodeType": "Block",
                                  "src": "53943:126:35",
                                  "statements": [
                                    {
                                      "expression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 11642,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 11631,
                                          "name": "tokenValue1",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 11447,
                                          "src": "53960:11:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "components": [
                                            {
                                              "baseExpression": {
                                                "baseExpression": {
                                                  "baseExpression": {
                                                    "baseExpression": {
                                                      "id": 11632,
                                                      "name": "_tokenUnitPricesByPartition",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 8207,
                                                      "src": "53975:27:35",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$_$",
                                                        "typeString": "mapping(address => mapping(address => mapping(bytes32 => mapping(bytes32 => uint256))))"
                                                      }
                                                    },
                                                    "id": 11634,
                                                    "indexExpression": {
                                                      "id": 11633,
                                                      "name": "tokenAddress1",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 11441,
                                                      "src": "54003:13:35",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "53975:42:35",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$",
                                                      "typeString": "mapping(address => mapping(bytes32 => mapping(bytes32 => uint256)))"
                                                    }
                                                  },
                                                  "id": 11636,
                                                  "indexExpression": {
                                                    "id": 11635,
                                                    "name": "tokenAddress2",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 11459,
                                                    "src": "54018:13:35",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "53975:57:35",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                                    "typeString": "mapping(bytes32 => mapping(bytes32 => uint256))"
                                                  }
                                                },
                                                "id": 11638,
                                                "indexExpression": {
                                                  "id": 11637,
                                                  "name": "ALL_PARTITIONS",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 8030,
                                                  "src": "54033:14:35",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "53975:73:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                                  "typeString": "mapping(bytes32 => uint256)"
                                                }
                                              },
                                              "id": 11640,
                                              "indexExpression": {
                                                "id": 11639,
                                                "name": "tokenId2",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 11471,
                                                "src": "54049:8:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "53975:83:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 11641,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "53974:85:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "53960:99:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "functionReturnParameters": 11432,
                                      "id": 11643,
                                      "nodeType": "Return",
                                      "src": "53953:106:35"
                                    }
                                  ]
                                }
                              },
                              "id": 11727,
                              "nodeType": "IfStatement",
                              "src": "53625:1186:35",
                              "trueBody": {
                                "id": 11619,
                                "nodeType": "Block",
                                "src": "53718:126:35",
                                "statements": [
                                  {
                                    "expression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 11617,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 11606,
                                        "name": "tokenValue1",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 11447,
                                        "src": "53735:11:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "components": [
                                          {
                                            "baseExpression": {
                                              "baseExpression": {
                                                "baseExpression": {
                                                  "baseExpression": {
                                                    "id": 11607,
                                                    "name": "_tokenUnitPricesByPartition",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 8207,
                                                    "src": "53750:27:35",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$_$",
                                                      "typeString": "mapping(address => mapping(address => mapping(bytes32 => mapping(bytes32 => uint256))))"
                                                    }
                                                  },
                                                  "id": 11609,
                                                  "indexExpression": {
                                                    "id": 11608,
                                                    "name": "tokenAddress2",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 11459,
                                                    "src": "53778:13:35",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "53750:42:35",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$",
                                                    "typeString": "mapping(address => mapping(bytes32 => mapping(bytes32 => uint256)))"
                                                  }
                                                },
                                                "id": 11611,
                                                "indexExpression": {
                                                  "id": 11610,
                                                  "name": "tokenAddress1",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 11441,
                                                  "src": "53793:13:35",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "53750:57:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                                  "typeString": "mapping(bytes32 => mapping(bytes32 => uint256))"
                                                }
                                              },
                                              "id": 11613,
                                              "indexExpression": {
                                                "id": 11612,
                                                "name": "ALL_PARTITIONS",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 8030,
                                                "src": "53808:14:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "53750:73:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                                "typeString": "mapping(bytes32 => uint256)"
                                              }
                                            },
                                            "id": 11615,
                                            "indexExpression": {
                                              "id": 11614,
                                              "name": "tokenId1",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 11453,
                                              "src": "53824:8:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "53750:83:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 11616,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "53749:85:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "53735:99:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "functionReturnParameters": 11432,
                                    "id": 11618,
                                    "nodeType": "Return",
                                    "src": "53728:106:35"
                                  }
                                ]
                              }
                            },
                            "id": 11728,
                            "nodeType": "IfStatement",
                            "src": "53400:1411:35",
                            "trueBody": {
                              "id": 11594,
                              "nodeType": "Block",
                              "src": "53493:126:35",
                              "statements": [
                                {
                                  "expression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 11592,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 11581,
                                      "name": "tokenValue1",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 11447,
                                      "src": "53510:11:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "baseExpression": {
                                            "baseExpression": {
                                              "baseExpression": {
                                                "baseExpression": {
                                                  "id": 11582,
                                                  "name": "_tokenUnitPricesByPartition",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 8207,
                                                  "src": "53525:27:35",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$_$",
                                                    "typeString": "mapping(address => mapping(address => mapping(bytes32 => mapping(bytes32 => uint256))))"
                                                  }
                                                },
                                                "id": 11584,
                                                "indexExpression": {
                                                  "id": 11583,
                                                  "name": "tokenAddress1",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 11441,
                                                  "src": "53553:13:35",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "53525:42:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$",
                                                  "typeString": "mapping(address => mapping(bytes32 => mapping(bytes32 => uint256)))"
                                                }
                                              },
                                              "id": 11586,
                                              "indexExpression": {
                                                "id": 11585,
                                                "name": "tokenAddress2",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 11459,
                                                "src": "53568:13:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "53525:57:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                                "typeString": "mapping(bytes32 => mapping(bytes32 => uint256))"
                                              }
                                            },
                                            "id": 11588,
                                            "indexExpression": {
                                              "id": 11587,
                                              "name": "tokenId1",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 11453,
                                              "src": "53583:8:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "53525:67:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                              "typeString": "mapping(bytes32 => uint256)"
                                            }
                                          },
                                          "id": 11590,
                                          "indexExpression": {
                                            "id": 11589,
                                            "name": "ALL_PARTITIONS",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 8030,
                                            "src": "53593:14:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "53525:83:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 11591,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "53524:85:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "53510:99:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "functionReturnParameters": 11432,
                                  "id": 11593,
                                  "nodeType": "Return",
                                  "src": "53503:106:35"
                                }
                              ]
                            }
                          },
                          "id": 11729,
                          "nodeType": "IfStatement",
                          "src": "53187:1624:35",
                          "trueBody": {
                            "id": 11569,
                            "nodeType": "Block",
                            "src": "53274:120:35",
                            "statements": [
                              {
                                "expression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 11567,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 11556,
                                    "name": "tokenValue1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11447,
                                    "src": "53291:11:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "baseExpression": {
                                          "baseExpression": {
                                            "baseExpression": {
                                              "baseExpression": {
                                                "id": 11557,
                                                "name": "_tokenUnitPricesByPartition",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 8207,
                                                "src": "53306:27:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$_$",
                                                  "typeString": "mapping(address => mapping(address => mapping(bytes32 => mapping(bytes32 => uint256))))"
                                                }
                                              },
                                              "id": 11559,
                                              "indexExpression": {
                                                "id": 11558,
                                                "name": "tokenAddress2",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 11459,
                                                "src": "53334:13:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "53306:42:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$",
                                                "typeString": "mapping(address => mapping(bytes32 => mapping(bytes32 => uint256)))"
                                              }
                                            },
                                            "id": 11561,
                                            "indexExpression": {
                                              "id": 11560,
                                              "name": "tokenAddress1",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 11441,
                                              "src": "53349:13:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "53306:57:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                              "typeString": "mapping(bytes32 => mapping(bytes32 => uint256))"
                                            }
                                          },
                                          "id": 11563,
                                          "indexExpression": {
                                            "id": 11562,
                                            "name": "tokenId2",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 11471,
                                            "src": "53364:8:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "53306:67:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                            "typeString": "mapping(bytes32 => uint256)"
                                          }
                                        },
                                        "id": 11565,
                                        "indexExpression": {
                                          "id": 11564,
                                          "name": "tokenId1",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 11453,
                                          "src": "53374:8:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "53306:77:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 11566,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "53305:79:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "53291:93:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "functionReturnParameters": 11432,
                                "id": 11568,
                                "nodeType": "Return",
                                "src": "53284:100:35"
                              }
                            ]
                          }
                        },
                        "id": 11730,
                        "nodeType": "IfStatement",
                        "src": "52974:1837:35",
                        "trueBody": {
                          "id": 11544,
                          "nodeType": "Block",
                          "src": "53061:120:35",
                          "statements": [
                            {
                              "expression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 11542,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 11531,
                                  "name": "tokenValue1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11447,
                                  "src": "53078:11:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "baseExpression": {
                                            "baseExpression": {
                                              "id": 11532,
                                              "name": "_tokenUnitPricesByPartition",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 8207,
                                              "src": "53093:27:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$_$",
                                                "typeString": "mapping(address => mapping(address => mapping(bytes32 => mapping(bytes32 => uint256))))"
                                              }
                                            },
                                            "id": 11534,
                                            "indexExpression": {
                                              "id": 11533,
                                              "name": "tokenAddress1",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 11441,
                                              "src": "53121:13:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "53093:42:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$",
                                              "typeString": "mapping(address => mapping(bytes32 => mapping(bytes32 => uint256)))"
                                            }
                                          },
                                          "id": 11536,
                                          "indexExpression": {
                                            "id": 11535,
                                            "name": "tokenAddress2",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 11459,
                                            "src": "53136:13:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "53093:57:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                            "typeString": "mapping(bytes32 => mapping(bytes32 => uint256))"
                                          }
                                        },
                                        "id": 11538,
                                        "indexExpression": {
                                          "id": 11537,
                                          "name": "tokenId1",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 11453,
                                          "src": "53151:8:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "53093:67:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                          "typeString": "mapping(bytes32 => uint256)"
                                        }
                                      },
                                      "id": 11540,
                                      "indexExpression": {
                                        "id": 11539,
                                        "name": "tokenId2",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 11471,
                                        "src": "53161:8:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "53093:77:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 11541,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "53092:79:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "53078:93:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 11432,
                              "id": 11543,
                              "nodeType": "Return",
                              "src": "53071:100:35"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 11426,
              "nodeType": "StructuredDocumentation",
              "src": "51990:116:35",
              "text": " @dev Get amount of token2 to pay to acquire the token1.\n @param index Index of the Swaps request."
            },
            "functionSelector": "e7572230",
            "id": 11737,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPrice",
            "nameLocation": "52118:8:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11429,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11428,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "52135:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 11737,
                  "src": "52127:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11427,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "52127:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "52126:15:35"
            },
            "returnParameters": {
              "id": 11432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11431,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11737,
                  "src": "52162:7:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11430,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "52162:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "52161:9:35"
            },
            "scope": 11766,
            "src": "52109:2752:35",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11755,
              "nodeType": "Block",
              "src": "55110:65:35",
              "statements": [
                {
                  "assignments": [
                    11748
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11748,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "55130:5:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 11755,
                      "src": "55116:19:35",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                        "typeString": "struct Swaps.Trade"
                      },
                      "typeName": {
                        "id": 11747,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11746,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8173,
                          "src": "55116:5:35"
                        },
                        "referencedDeclaration": 8173,
                        "src": "55116:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                          "typeString": "struct Swaps.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11752,
                  "initialValue": {
                    "baseExpression": {
                      "id": 11749,
                      "name": "_trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8180,
                      "src": "55138:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$8173_storage_$",
                        "typeString": "mapping(uint256 => struct Swaps.Trade storage ref)"
                      }
                    },
                    "id": 11751,
                    "indexExpression": {
                      "id": 11750,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11740,
                      "src": "55146:5:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "55138:14:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$8173_storage",
                      "typeString": "struct Swaps.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "55116:36:35"
                },
                {
                  "expression": {
                    "id": 11753,
                    "name": "trade",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11748,
                    "src": "55165:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                      "typeString": "struct Swaps.Trade storage pointer"
                    }
                  },
                  "functionReturnParameters": 11745,
                  "id": 11754,
                  "nodeType": "Return",
                  "src": "55158:12:35"
                }
              ]
            },
            "documentation": {
              "id": 11738,
              "nodeType": "StructuredDocumentation",
              "src": "54946:92:35",
              "text": " @dev Get the trade.\n @param index Index of the trade.\n @return Trade."
            },
            "functionSelector": "2db25e05",
            "id": 11756,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTrade",
            "nameLocation": "55050:8:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11740,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "55067:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 11756,
                  "src": "55059:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11739,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "55059:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "55058:15:35"
            },
            "returnParameters": {
              "id": 11745,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11744,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11756,
                  "src": "55096:12:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Trade_$8173_memory_ptr",
                    "typeString": "struct Swaps.Trade"
                  },
                  "typeName": {
                    "id": 11743,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11742,
                      "name": "Trade",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8173,
                      "src": "55096:5:35"
                    },
                    "referencedDeclaration": 8173,
                    "src": "55096:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$8173_storage_ptr",
                      "typeString": "struct Swaps.Trade"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "55095:14:35"
            },
            "scope": 11766,
            "src": "55041:134:35",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11764,
              "nodeType": "Block",
              "src": "55372:24:35",
              "statements": [
                {
                  "expression": {
                    "id": 11762,
                    "name": "_index",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8175,
                    "src": "55385:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 11761,
                  "id": 11763,
                  "nodeType": "Return",
                  "src": "55378:13:35"
                }
              ]
            },
            "documentation": {
              "id": 11757,
              "nodeType": "StructuredDocumentation",
              "src": "55179:136:35",
              "text": " @dev Get the total number of requests in the Swaps contract.\n @return Total number of requests in the Swaps contract."
            },
            "functionSelector": "ebbca407",
            "id": 11765,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNbTrades",
            "nameLocation": "55327:11:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11758,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "55338:2:35"
            },
            "returnParameters": {
              "id": 11761,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11760,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11765,
                  "src": "55363:7:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11759,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "55363:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "55362:9:35"
            },
            "scope": 11766,
            "src": "55318:78:35",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 11767,
        "src": "3595:51804:35",
        "usedErrors": []
      }
    ],
    "src": "154:55246:35"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {
    "1337": {
      "events": {
        "0x5ffb3072e4515cf3bfae8b16be9dff6313cf7c313a0c26faafe6971d8c7585f1": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "noteHash",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "bytes",
              "name": "metadata",
              "type": "bytes"
            }
          ],
          "name": "CreateNote",
          "type": "event"
        },
        "0x979308e20fbd28822c4526e85d528175e04e3ca0cf91c46301db34401a26a8c6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "noteHash",
              "type": "bytes32"
            }
          ],
          "name": "DestroyNote",
          "type": "event"
        },
        "0xf16e81ebbf4a87ccaa6230614a9d911f4d2a9e9274e2aaca49922f1779959489": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "holdId",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "bytes32",
              "name": "lockPreimage",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "name": "ExecutedHold",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokens",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0xff4e9a26af4eb73b8bacfaa4abd4fea03d9448e7b912dc5ff4019048875aa2d4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "fromPartition",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "indexed": false,
              "internalType": "bytes",
              "name": "operatorData",
              "type": "bytes"
            }
          ],
          "name": "TransferByPartition",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x7eF84473a4E772fB6aDfA1B0C6728A3dbf268Dd7",
      "transactionHash": "0x3318079e544896f7bdf31efe5d425055dcc6709e29661451cee9d3a6d4bd4c3a"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-05-07T16:57:28.434Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "Delivery-Vs-Payment contract for investor-to-investor token trades.Intended usage: The purpose of the contract is to allow secure token transfers/exchanges between 2 stakeholders (called holder1 and holder2). From now on, an operation in the Swaps smart contract (transfer/exchange) is called a trade. Depending on the type of trade, one/multiple token transfers will be executed. The simplified workflow is the following: 1) A trade request is created in the Swaps smart contract, it specifies:  - The token holder(s) involved in the trade  - The trade executer (optional)  - An expiration date  - Details on the first token (address, requested amount, standard)  - Details on the second token (address, requested amount, standard)  - Whether the tokens need to be escrowed in the Swaps contract or not  - The current status of the trade (pending / executed / forced / cancelled) 2) The trade is accepted by both token holders 3) [OPTIONAL] The trade is approved by token controllers (only if requested by tokens controllers) 4) The trade is executed (either by the executer in case the executer is specified, or by anyone) STANDARD-AGNOSTIC: The Swaps smart contract is standard-agnostic, it supports ETH, ERC20, ERC721, ERC1400. The advantage of using an ERC1400 token is to leverages its hook property, thus requiring ONE single transaction (operatorTransferByPartition()) to send tokens to the Swaps smart contract instead of TWO with the ERC20 token standard (approve() + transferFrom()). OFF-CHAIN PAYMENT: The contract can be used as escrow contract while waiting for an off-chain payment. Once payment is received off-chain, the token sender realeases the tokens escrowed in the Swaps contract to deliver them to the recipient. ESCROW VS SWAP MODE: In case escrow mode is selected, tokens need to be escrowed in Swaps smart contract before the trade can occur. In case swap mode is selected, tokens are not escrowed in the Swaps. Instead, the Swaps contract is only allowed to transfer tokens ON BEHALF of their owners. When trade is executed, an atomic token swap occurs. EXPIRATION DATE: The trade can be cancelled by both parties in case expiration date is passed. CLAIMS: The executer has the ability to force or cancel the trade. In case of disagreement/missing payment, both parties can contact the \"executer\" of the trade to deposit a claim and solve the issue. MARKETPLACE: The contract can be used as a token marketplace. Indeed, when trades are created without specifying the recipient address, anyone can purchase them by sending the requested payment in exchange. PRICE ORACLES: When price oracles are defined, those can define the price at which trades need to be executed. This feature is particularly useful for assets with NAV (net asset value).",
    "events": {
      "ExecutedHold(address,bytes32,bytes32,address)": {
        "details": "Include token events so they can be parsed by Ethereum clients from the settlement transactions."
      }
    },
    "kind": "dev",
    "methods": {
      "acceptTrade(uint256,bytes32)": {
        "details": "Accept a given trade (+ potentially escrow tokens).",
        "params": {
          "index": "Index of the trade to be accepted."
        }
      },
      "approveTradeWithPreimage(uint256,bool,bytes32)": {
        "details": "Approve a trade (if the tokens involved in the trade are controlled) This function can only be called by a token controller of one of the tokens involved in the trade. Indeed, when a token smart contract is controlled by an owner, the owner can decide to open the secondary market by:  - Allowlisting the Swaps smart contract  - Setting \"token controllers\" in the Swaps smart contract, in order to approve all the trades made with his token",
        "params": {
          "approved": "'true' if trade is approved, 'false' if not.",
          "index": "Index of the trade to be executed."
        }
      },
      "canReceive(bytes,bytes32,address,address,address,uint256,bytes,bytes)": {
        "details": "Indicate whether or not the Swaps contract can receive the tokens or not. [USED FOR ERC1400 TOKENS ONLY]",
        "params": {
          "data": "Information attached to the token transfer.",
          "operatorData": "Information attached to the Swaps transfer, by the operator."
        },
        "returns": {
          "_0": "'true' if the Swaps contract can receive the tokens, 'false' if not."
        }
      },
      "cancelTrade(uint256)": {
        "details": "Cancel a trade execution in the Swaps contract by transferring tokens back to their initial owners.",
        "params": {
          "index": "Index of the trade to be cancelled."
        }
      },
      "constructor": {
        "details": "Initialize Swaps + register the contract implementation in ERC1820Registry."
      },
      "executeTradeWithPreimage(uint256,bytes32)": {
        "details": "Execute a trade in the Swaps contract if possible (e.g. if tokens have been esccrowed, in case it is required). This function can only be called by the executer specified at trade creation. If no executer is specified, the trade can be launched by anyone.",
        "params": {
          "index": "Index of the trade to be executed."
        }
      },
      "forceTradeWithPreimage(uint256,bytes32)": {
        "details": "Force a trade execution in the Swaps contract by transferring tokens back to their target recipients.",
        "params": {
          "index": "Index of the trade to be forced."
        }
      },
      "getNbTrades()": {
        "details": "Get the total number of requests in the Swaps contract.",
        "returns": {
          "_0": "Total number of requests in the Swaps contract."
        }
      },
      "getPrice(uint256)": {
        "details": "Get amount of token2 to pay to acquire the token1.",
        "params": {
          "index": "Index of the Swaps request."
        }
      },
      "getPriceOwnership(address,address)": {
        "details": "Get price of the token.",
        "params": {
          "tokenAddress1": "Address of the token to be priced.",
          "tokenAddress2": "Address of the token to pay for token1."
        }
      },
      "getTokenPrice(address,address,bytes32,bytes32)": {
        "details": "Get price of the token.",
        "params": {
          "tokenAddress1": "Address of the token to be priced.",
          "tokenAddress2": "Address of the token to pay for token1.",
          "tokenId1": "ID/partition of the token2 (set to 0 bytes32 if price is set for all IDs/partitions)."
        }
      },
      "getTrade(uint256)": {
        "details": "Get the trade.",
        "params": {
          "index": "Index of the trade."
        },
        "returns": {
          "_0": "Trade."
        }
      },
      "getTradeAcceptanceStatus(uint256)": {
        "details": "Verify if a trade has been accepted by the token holders. The trade needs to be accepted by both parties (token holders) before it gets executed.",
        "params": {
          "index": "Index of the trade to be accepted."
        }
      },
      "getTradeApprovalStatus(uint256)": {
        "details": "Verify if a trade has been approved by the token controllers. In case a given token has token controllers, those need to validate the trade before it gets executed.",
        "params": {
          "index": "Index of the trade to be approved."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "priceOracles(address)": {
        "details": "Get the list of price oracles for a given token.",
        "params": {
          "tokenAddress": "Token address."
        },
        "returns": {
          "_0": "List of addresses of all the price oracles for a given token."
        }
      },
      "renounceOwnership()": {
        "details": "Renounce ownership of the contract."
      },
      "requestTrade((address,address,address,uint256,address,uint256,bytes32,uint8,address,uint256,bytes32,uint8,uint8,uint8,uint256),bytes32)": {
        "details": "Create a new trade request in the Swaps smart contract.",
        "params": {
          "inputData": "The input for this function"
        }
      },
      "setPriceOracles(address,address[])": {
        "details": "Set list of price oracles for a given token.",
        "params": {
          "oracles": "Oracles addresses.",
          "tokenAddress": "Token address."
        }
      },
      "setPriceOwnership(address,address,bool)": {
        "details": "Take ownership for setting the price of a token.",
        "params": {
          "tokenAddress1": "Address of the token to be priced.",
          "tokenAddress2": "Address of the token to pay for token1."
        }
      },
      "setTokenControllers(address,address[])": {
        "details": "Set list of token controllers for a given token.",
        "params": {
          "operators": "Operators addresses.",
          "tokenAddress": "Token address."
        }
      },
      "setTokenPrice(address,address,bytes32,bytes32,uint256)": {
        "details": "Set price of a token.",
        "params": {
          "newPrice": "New price of the token.",
          "tokenAddress1": "Address of the token to be priced.",
          "tokenAddress2": "Address of the token to pay for token1.",
          "tokenId1": "ID/partition of the token1 (set to 0 bytes32 if price is set for all IDs/partitions).",
          "tokenId2": "ID/partition of the token2 (set to 0 bytes32 if price is set for all IDs/partitions)."
        }
      },
      "setTradeExecuters(address[])": {
        "details": "Set list of trade executers for the Swaps contract.",
        "params": {
          "operators": "Trade executers addresses."
        }
      },
      "setVariablePriceStartDate(address,uint256)": {
        "details": "Set date after which the token price can potentially be set by an oracle (0 if price can not be set by an oracle).",
        "params": {
          "startDate": "Date after which token price can potentially be set by an oracle (0 if price can not be set by an oracle).",
          "tokenAddress": "Token address."
        }
      },
      "tokenControllers(address)": {
        "details": "Get the list of token controllers for a given token.",
        "params": {
          "tokenAddress": "Token address."
        },
        "returns": {
          "_0": "List of addresses of all the token controllers for a given token."
        }
      },
      "tokensReceived(bytes,bytes32,address,address,address,uint256,bytes,bytes)": {
        "details": "Hook function executed when tokens are sent to the Swaps contract. [USED FOR ERC1400 TOKENS ONLY]",
        "params": {
          "data": "Information attached to the token transfer.",
          "from": "Token holder.",
          "operatorData": "Information attached to the Swaps transfer, by the operator.",
          "partition": "Name of the partition.",
          "to": "Token recipient.",
          "value": "Number of tokens to transfer."
        }
      },
      "tradeExecuters()": {
        "details": "Get the list of trade executers as defined by the Swaps contract.",
        "returns": {
          "_0": "List of addresses of all the trade executers."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "variablePriceStartDate(address)": {
        "details": "Get date after which the token price can potentially be set by an oracle (0 if price can not be set by an oracle).",
        "params": {
          "tokenAddress": "Token address."
        }
      }
    },
    "title": "Swaps",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "canReceive(bytes,bytes32,address,address,address,uint256,bytes,bytes)": {
        "notice": "[ERC1400TokensRecipient INTERFACE (1/2)]"
      },
      "constructor": {
        "notice": "[Swaps CONSTRUCTOR]"
      },
      "tokensReceived(bytes,bytes32,address,address,address,uint256,bytes,bytes)": {
        "notice": "[ERC1400TokensRecipient INTERFACE (2/2)]"
      }
    },
    "version": 1
  }
}