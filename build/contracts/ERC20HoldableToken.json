{
  "contractName": "ERC20HoldableToken",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "holdId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "lockPreimage",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "ExecutedHold",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "holdId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "notary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "expirationDateTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "lockHash",
          "type": "bytes32"
        }
      ],
      "name": "NewHold",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "holdId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ReleaseHold",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "interfaceHash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "canImplementInterfaceForAddress",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupplyOnHold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "notary",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expirationDateTime",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "lockHash",
          "type": "bytes32"
        }
      ],
      "name": "generateHoldId",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "holdId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "notary",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "retrieveHoldHashId",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "holdId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "notary",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expirationDateTime",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "lockHash",
          "type": "bytes32"
        }
      ],
      "name": "hold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "holdId",
          "type": "bytes32"
        }
      ],
      "name": "retrieveHoldData",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "notary",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationDateTime",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "secretHash",
              "type": "bytes32"
            },
            {
              "internalType": "enum HoldStatusCode",
              "name": "status",
              "type": "uint8"
            }
          ],
          "internalType": "struct ERC20HoldData",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "holdId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "lockPreimage",
          "type": "bytes32"
        }
      ],
      "name": "executeHold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "holdId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "lockPreimage",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "executeHold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "holdId",
          "type": "bytes32"
        }
      ],
      "name": "executeHold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "holdId",
          "type": "bytes32"
        }
      ],
      "name": "releaseHold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOnHold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "spendableBalanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "holdId",
          "type": "bytes32"
        }
      ],
      "name": "holdStatus",
      "outputs": [
        {
          "internalType": "enum HoldStatusCode",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"holdId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"lockPreimage\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"ExecutedHold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"holdId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"notary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expirationDateTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"lockHash\",\"type\":\"bytes32\"}],\"name\":\"NewHold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"holdId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ReleaseHold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOnHold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"interfaceHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"canImplementInterfaceForAddress\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"holdId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"lockPreimage\",\"type\":\"bytes32\"}],\"name\":\"executeHold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"holdId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"lockPreimage\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"executeHold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"holdId\",\"type\":\"bytes32\"}],\"name\":\"executeHold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"notary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDateTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"lockHash\",\"type\":\"bytes32\"}],\"name\":\"generateHoldId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"holdId\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"holdId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"notary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDateTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"lockHash\",\"type\":\"bytes32\"}],\"name\":\"hold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"holdId\",\"type\":\"bytes32\"}],\"name\":\"holdStatus\",\"outputs\":[{\"internalType\":\"enum HoldStatusCode\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"holdId\",\"type\":\"bytes32\"}],\"name\":\"releaseHold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"holdId\",\"type\":\"bytes32\"}],\"name\":\"retrieveHoldData\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"notary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDateTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"secretHash\",\"type\":\"bytes32\"},{\"internalType\":\"enum HoldStatusCode\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct ERC20HoldData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"notary\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"retrieveHoldHashId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"spendableBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupplyOnHold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"balanceOf(address)\":{\"params\":{\"account\":\"owner of the tokens\\u00df\"}},\"balanceOnHold(address)\":{\"params\":{\"account\":\"owner of the tokens\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"executeHold(bytes32)\":{\"params\":{\"holdId\":\"a unique identifier for the hold.\"}},\"executeHold(bytes32,bytes32)\":{\"params\":{\"holdId\":\"a unique identifier for the hold.\",\"lockPreimage\":\"the image used to generate the lock hash with a sha256 hash\"}},\"executeHold(bytes32,bytes32,address)\":{\"params\":{\"holdId\":\"a unique identifier for the hold.\",\"lockPreimage\":\"the image used to generate the lock hash with a keccak256 hash\",\"recipient\":\"the account the tokens will be transferred to on execution.\"}},\"hold(bytes32,address,address,uint256,uint256,bytes32)\":{\"params\":{\"amount\":\"of tokens to be transferred to the recipient on execution. Must be a non zero amount.\",\"expirationDateTime\":\"UNIX epoch seconds the held amount can be released back to the sender by the sender. Past dates are allowed.\",\"holdId\":\"a unique identifier for the hold.\",\"lockHash\":\"optional keccak256 hash of a lock preimage. An empty hash will not enforce the hash lock when the hold is executed.\",\"notary\":\"account that can execute the hold. Typically the recipient but can be a third party or a smart contact.\",\"recipient\":\"optional account the tokens will be transferred to on execution. If a zero address, the recipient must be specified on execution of the hold.\"}},\"holdStatus(bytes32)\":{\"params\":{\"holdId\":\"a unique identifier for the hold.\"},\"returns\":{\"_0\":\"hold status code.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens\",\"params\":{\"to\":\"The address that will receive the minted tokens.\",\"value\":\"The amount of tokens to mint.\"},\"returns\":{\"_0\":\"A boolean that indicates if the operation was successful.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"releaseHold(bytes32)\":{\"params\":{\"holdId\":\"a unique identifier for the hold.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"retrieveHoldHashId(address,address,address,uint256)\":{\"details\":\"Retrieve hold hash, and ID for given parameters\"},\"spendableBalanceOf(address)\":{\"params\":{\"account\":\"owner of the tokens\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"ERC20HoldableToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"ERC20 approve that checks on hold tokens can not be approved for spending by another account.\"},\"balanceOf(address)\":{\"notice\":\"Amount of tokens owned by an account that are available for transfer. That is, the gross balance less any held tokens.\"},\"balanceOnHold(address)\":{\"notice\":\"Amount of tokens owned by an account that are held pending execution or release.\"},\"burn(uint256)\":{\"notice\":\"ERC20 burn that checks on hold tokens can not be burnt.\"},\"burnFrom(address,uint256)\":{\"notice\":\"ERC20 burnFrom that checks on hold tokens can not be burnt.\"},\"executeHold(bytes32)\":{\"notice\":\"Called by the notary to transfer the held tokens to the set at the hold recipient if there is no hash lock.\"},\"executeHold(bytes32,bytes32)\":{\"notice\":\"Called by the notary to transfer the held tokens to the recipient that was set at the hold.\"},\"executeHold(bytes32,bytes32,address)\":{\"notice\":\"Called by the notary to transfer the held tokens to the recipient if no recipient was specified at the hold.\"},\"hold(bytes32,address,address,uint256,uint256,bytes32)\":{\"notice\":\"Called by the sender to hold some tokens for a recipient that the sender can not release back to themself until after the expiration date.\"},\"releaseHold(bytes32)\":{\"notice\":\"Called by the notary at any time or the sender after the expiration date to release the held tokens back to the sender.\"},\"spendableBalanceOf(address)\":{\"notice\":\"Total amount of tokens owned by an account including all the held tokens pending execution or release.\"},\"transfer(address,uint256)\":{\"notice\":\"ERC20 transfer that checks on hold tokens can not be transferred.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"ERC20 transferFrom that checks on hold tokens can not be transferred.\"}},\"notice\":\"A hold is like an approve where held tokens can not be spent by the token holder until after an hold expiration period. The hold can be executed by a notary, which can be the recipient of the tokens, a third party or a smart contract. The notary can execute the hold before or after the expiration period. Additionally, a hash lock at be applied which requires the notary of the hold to present the hash preimage to execute the hold. Held tokens can be released by the notary at any time or by the token holder after the expiration period. A recipient does not have to get set at the time of the hold, which means it will have to be specified when the hold is executed.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/tokens/ERC20HoldableToken.sol\":\"ERC20HoldableToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":0},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xa35b1f2a670cd2a701a52c398032c9fed72df1909fe394d77ceacbf074e8937b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72b957861691ebdaa78c52834465c4f8296480fe4f1a12ba72dc6c0c8ac076dd\",\"dweb:/ipfs/QmVz1sHCwgEivHPRDswdt9tdvky7EnWqFmbuk1wFE55VMG\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x418cfe64226a974419f8ab7287ad4bb413156a4d7af8ab5d9bcaa5678d1a2f22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f65118c99d5d6cfe602720418b8551c2da6c3de650e61c5231b0be4396aae0d\",\"dweb:/ipfs/QmdLmkRHJhEifzzDjF44MHXcQx2SXc5EzhpHzN2z1vUq8H\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0xf98cb1651a90d20ef77d8c1dd10d5fce4954e747603e5672a8292bd4368120dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76b539a8edd558b010d1ff3e462c5d4edd039b790b91f31a5bce18957655cc9f\",\"dweb:/ipfs/QmSdJehhx1SwCWLSFFgHQTmUY2YwDTBQjTVjkmhXhA1srb\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0xb6d09c0a37d1222bff59fb166567558c057bab36b96a8457de29f25afd6e87b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70a859245ffa6c804558f365acc53b0d90f020e199f46e87568e41f47d2a28db\",\"dweb:/ipfs/QmSpzKQeYL6yqqb526wC6VdphBcmb3oqDeb3anMRKzbM33\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]},\"project:/contracts/interface/ERC1820Implementer.sol\":{\"keccak256\":\"0x73a779c5921dd13ed066e7f552c70650a7dc180259c7ae3ca737412c44f456f4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6ef9b2cd1dc82ba9a8a0174f3eb319ad4272ba88ece590245b1b226587c6c640\",\"dweb:/ipfs/QmVQ154bNWE8ZVtC9HFYEntAgxGj5KNamUSXmCGWjacebx\"]},\"project:/contracts/interface/HoldStatusCode.sol\":{\"keccak256\":\"0x6deb0acca580b9e9474d8dc953a759311c1f77876fa06cf672550970db0289a6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://603ba40c099b8affdd7a25a2922b7a13fe30a52d0922cc10d669723dac80de05\",\"dweb:/ipfs/QmWE3hHWtcJqaL1g2rU3ztTxwJMUJnMQS5ZdA2QvChpRo6\"]},\"project:/contracts/interface/IERC20HoldableToken.sol\":{\"keccak256\":\"0x8348bebc4695425ee6e0adbb79980ee226fbe410ccb4d46bca76d45214f123a1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://722d3a124137d7f819066ab36108fbcf54d77fd130e2069ae093e454af10fbc6\",\"dweb:/ipfs/QmNRgnDos5dW12tiW71g1h4JCQ7dqNxisXRjczEaNFb1Cp\"]},\"project:/contracts/roles/MinterRole.sol\":{\"keccak256\":\"0x8122ab47d135e2a61d934f701973ba60f1a37a6b8ec96caadf4312361bb96423\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://84022004ad75be59548bd32ede14801d8214fa548d235a5f12c768dcafdd9010\",\"dweb:/ipfs/QmQE5WQxcKD7DBfuM864oLVyU6yTvZCqwQqA4CwEM2J9R6\"]},\"project:/contracts/roles/Roles.sol\":{\"keccak256\":\"0x5a50db74c6506a1fa2bf12dc2a584e9131d27e011ca11f848c3eefcc87ccf9e3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ef0289f75d1b7b3f0dd7dd815ef7bff742f38e137605fbf3c4a3b5e3a6b44b6b\",\"dweb:/ipfs/QmTdoBbU4PhqcApxJmbJxVVVJLpBTMKofy9USEYjGnariR\"]},\"project:/contracts/tokens/ERC20HoldableToken.sol\":{\"keccak256\":\"0x5a76a3d4e768c79fa57d2fd35acf35687ad8118fc15d2d648cfa643a973f7718\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4c419d43360e468b0822473e1bb68dfca2f9f847968555fe47740d99f87a0877\",\"dweb:/ipfs/QmQ2Nytd1QL1dzavXGY4q3cG4btuDkVaPWvd4gxTVKKfeq\"]},\"project:/contracts/tokens/ERC20Token.sol\":{\"keccak256\":\"0xae2a11a2f9342944c6e56a0e2b61d25889dd1a0e3df0fa3170337132a0d25754\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ed1bd1de54a583f30ea21805ce42ed259f5157f4cb3db47b1341462f8a493d9\",\"dweb:/ipfs/QmbbhN7FhzenrwDJGAhYvNVQXaPZBmqoN4fsdZPBqsejc7\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101a15760003560e01c806306fdde03146101a6578063095ea7b3146101c45780630f8f8b83146101e757806318160ddd1461020857806323b872dd14610210578063249cb3fa146102235780633092afd514610236578063313ce5671461024b578063395093511461027c57806340c10f191461028f57806342966c68146102a2578063445850af146102b557806351bfb961146102c85780635c975abb146102d1578063603dfcb5146102dc57806370a08231146102ef578063715018a61461030257806379cc67901461030a5780638da5cb5b1461031d5780639335c28f1461033257806395d89b4114610345578063983b2d561461034d57806398650275146103605780639d22091514610368578063a457c2d714610390578063a9059cbb146103a3578063aa271e1a146103b6578063b67f7bd4146103c9578063c0e8330e146103fc578063c5a468c61461040f578063da1ec24614610438578063dd62ed3e14610458578063f2fde38b14610491578063f8abd4bc146104a4578063fdec4c21146104b7575b600080fd5b6101ae610522565b6040516101bb9190612613565b60405180910390f35b6101d76101d2366004612485565b6105b4565b60405190151581526020016101bb565b6101fa6101f5366004612363565b610666565b6040519081526020016101bb565b6003546101fa565b6101d761021e3660046123fc565b610692565b6101fa6102313660046124e1565b61073b565b610249610244366004612363565b61079a565b005b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016101bb565b6101d761028a366004612485565b6107b8565b6101d761029d366004612485565b6107fd565b6102496102b03660046124af565b61081b565b6102496102c336600461255c565b6108b7565b6101fa600c5481565b60065460ff166101d7565b6102496102ea36600461257e565b6109cf565b6101fa6102fd366004612363565b610bcc565b610249610bd7565b610249610318366004612485565b610c12565b610325610caf565b6040516101bb91906125f1565b6102496103403660046124af565b610cbe565b6101ae610f53565b61024961035b366004612363565b610f62565b610249610f7d565b61037b6103763660046123b1565b610f86565b604080519283526020830191909152016101bb565b6101d761039e366004612485565b610ff6565b6101d76103b1366004612485565b61108f565b6101d76103c4366004612363565b61112f565b6103ef6103d73660046124af565b60009081526009602052604090206006015460ff1690565b6040516101bb9190612605565b61024961040a366004612504565b61113c565b6101fa61041d366004612363565b6001600160a01b03166000908152600a602052604090205490565b61044b6104463660046124af565b6114ff565b6040516101bb91906127d0565b6101fa61046636600461237e565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b61024961049f366004612363565b6115dd565b6102496104b23660046124af565b61167a565b6101fa6104c5366004612438565b6040516001600160601b0319606087811b8216602084015286901b16603482015260488101849052606881018390526088810182905260009060a80160405160208183030381529060405280519060200120905095945050505050565b60606004805461053190612890565b80601f016020809104026020016040519081016040528092919081815260200182805461055d90612890565b80156105aa5780601f1061057f576101008083540402835291602001916105aa565b820191906000526020600020905b81548152906001019060200180831161058d57829003601f168201915b5050505050905090565b604051630f8f8b8360e01b815260009082903090630f8f8b83906105dc9033906004016125f1565b60206040518083038186803b1580156105f457600080fd5b505afa158015610608573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062c91906124c8565b10156106535760405162461bcd60e51b815260040161064a90612705565b60405180910390fd5b61065d838361181f565b90505b92915050565b6001600160a01b0381166000908152600a60205260408120546106609061068c8461182c565b90611847565b604051630f8f8b8360e01b815260009082903090630f8f8b83906106ba9088906004016125f1565b60206040518083038186803b1580156106d257600080fd5b505afa1580156106e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070a91906124c8565b10156107285760405162461bcd60e51b815260040161064a90612705565b610733848484611853565b949350505050565b60008281526007602052604081205460ff16156107925760405173455243313832305f4143434550545f4d4147494360601b6020820152603401604051602081830303815290604052805190602001209050610660565b506000610660565b6107a33361112f565b6107ac57600080fd5b6107b5816118fd565b50565b3360008181526002602090815260408083206001600160a01b038716845290915281205490916107f49185906107ef908690612835565b61193f565b50600192915050565b60006108083361112f565b61081157600080fd5b6107f48383611a63565b604051630f8f8b8360e01b815281903090630f8f8b83906108409033906004016125f1565b60206040518083038186803b15801561085857600080fd5b505afa15801561086c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089091906124c8565b10156108ae5760405162461bcd60e51b815260040161064a90612705565b6107b581611b3c565b6000828152600960205260409020600101546001600160a01b03166108ee5760405162461bcd60e51b815260040161064a90612754565b600082815260096020526040902060050154156109a35760028160405160200161091a91815260200190565b60408051601f1981840301815290829052610934916125d5565b602060405180830381855afa158015610951573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061097491906124c8565b600083815260096020526040902060050154146109a35760405162461bcd60e51b815260040161064a9061267d565b6000828152600960205260409020600101546109cb90839083906001600160a01b0316611b46565b5050565b6000838152600960205260409020600101546001600160a01b031615610a6d5760405162461bcd60e51b815260206004820152604760248201527f65786563757465486f6c643a2063616e206e6f7420736574206120726563697060448201527f69656e74206f6e20657865637574696f6e2061732069742077617320736574206064820152661bdb881a1bdb1960ca1b608482015260a40161064a565b6001600160a01b038116610add5760405162461bcd60e51b815260206004820152603160248201527f65786563757465486f6c643a20726563697069656e74206d757374206e6f742060448201527062652061207a65726f206164647265737360781b606482015260840161064a565b60008381526009602052604090206005015415610b9257600282604051602001610b0991815260200190565b60408051601f1981840301815290829052610b23916125d5565b602060405180830381855afa158015610b40573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610b6391906124c8565b60008481526009602052604090206005015414610b925760405162461bcd60e51b815260040161064a9061267d565b600083815260096020526040902060010180546001600160a01b0319166001600160a01b038316179055610bc7838383611b46565b505050565b60006106608261182c565b33610be0610caf565b6001600160a01b031614610c065760405162461bcd60e51b815260040161064a906126d0565b610c106000611d94565b565b604051630f8f8b8360e01b815281903090630f8f8b8390610c379033906004016125f1565b60206040518083038186803b158015610c4f57600080fd5b505afa158015610c63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8791906124c8565b1015610ca55760405162461bcd60e51b815260040161064a90612705565b6109cb8282611de4565b6000546001600160a01b031690565b806001600082815260096020526040902060069081015460ff1690811115610ce857610ce86128e1565b1480610d1a57506003600082815260096020526040902060069081015460ff1690811115610d1857610d186128e1565b145b610d365760405162461bcd60e51b815260040161064a90612646565b6000828152600960205260409020546001600160a01b0316331415610df9576000828152600960205260409020600401544211610dd65760405162461bcd60e51b815260206004820152603860248201527f72656c65617365486f6c643a2063616e206f6e6c792072656c656173652061666044820152773a32b9103a34329032bc3834b930ba34b7b7103230ba329760411b606482015260840161064a565b60008281526009602052604090206006908101805460ff19169091179055610e9e565b6000828152600960205260409020600201546001600160a01b03163314610e815760405162461bcd60e51b815260206004820152603660248201527f72656c65617365486f6c643a2063616c6c6572206d75737420626520746865206044820152753437b6321039b2b73232b91037b9103737ba30b93c9760511b606482015260840161064a565b6000828152600960205260409020600601805460ff191660041790555b6000828152600960209081526040808320600381015490546001600160a01b03168452600a90925290912054610ed391611847565b600083815260096020818152604080842080546001600160a01b03168552600a83529084209490945591859052905260030154600c54610f1291611847565b600c5560405182907f67493c41cf2a398ecd74af2c26b3ad6114f9a0b0532ea06fc327adec6015110290610f479033906125f1565b60405180910390a25050565b60606005805461053190612890565b610f6b3361112f565b610f7457600080fd5b6107b581611e65565b610c10336118fd565b604080516001600160601b031930606090811b821660208085019190915296811b8216603484015294851b811660488301529590931b909416605c83015260708083019190915283518083039091018152609090910183528051908201206000818152600b909252919020549091565b3360009081526002602090815260408083206001600160a01b0386168452909152812054828110156110785760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161064a565b611085338585840361193f565b5060019392505050565b604051630f8f8b8360e01b815260009082903090630f8f8b83906110b79033906004016125f1565b60206040518083038186803b1580156110cf57600080fd5b505afa1580156110e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110791906124c8565b10156111255760405162461bcd60e51b815260040161064a90612705565b61065d8383611ea7565b6000610660600883611eb4565b6001600160a01b0384166111a25760405162461bcd60e51b815260206004820152602760248201527f686f6c643a206e6f74617279206d757374206e6f742062652061207a65726f206044820152666164647265737360c81b606482015260840161064a565b826111fe5760405162461bcd60e51b815260206004820152602660248201527f686f6c643a20616d6f756e74206d7573742062652067726561746572207468616044820152656e207a65726f60d01b606482015260840161064a565b604051630f8f8b8360e01b815283903090630f8f8b83906112239033906004016125f1565b60206040518083038186803b15801561123b57600080fd5b505afa15801561124f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061127391906124c8565b10156112d05760405162461bcd60e51b815260206004820152602660248201527f686f6c643a20616d6f756e74206578636565647320617661696c61626c652062604482015265616c616e636560d01b606482015260840161064a565b60006112de85338887610f86565b506000818152600b60205260408120899055909150600088815260096020526040902060069081015460ff169081111561131a5761131a6128e1565b146113615760405162461bcd60e51b8152602060048201526017602482015276686f6c643a20696420616c72656164792065786973747360481b604482015260640161064a565b6040518060e00160405280336001600160a01b03168152602001876001600160a01b03168152602001866001600160a01b03168152602001858152602001848152602001838152602001600160068111156113be576113be6128e1565b9052600088815260096020908152604091829020835181546001600160a01b03199081166001600160a01b03928316178355928501516001808401805486169284169290921790915593850151600283018054909416911617909155606083015160038201556080830151600482015560a0830151600582015560c08301516006808301805493949293909260ff19909116918490811115611462576114626128e1565b021790555050336000908152600a6020526040902054611483915085611f37565b336000908152600a6020526040902055600c546114a09085611f37565b600c5560408051858152602081018590529081018390526001600160a01b03808716919088169089907fe978043d2c2c19e698dfa9c4c7d635cd7a872597314f9f0b7979dae393c6da7c9060600160405180910390a450505050505050565b61153c6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a081018290529060c082015290565b600082815260096020908152604091829020825160e08101845281546001600160a01b03908116825260018301548116938201939093526002820154909216928201929092526003820154606082015260048201546080820152600582015460a082015260068083015491929160c084019160ff909116908111156115c3576115c36128e1565b60068111156115d4576115d46128e1565b90525092915050565b336115e6610caf565b6001600160a01b03161461160c5760405162461bcd60e51b815260040161064a906126d0565b6001600160a01b0381166116715760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161064a565b6107b581611d94565b6000818152600960205260409020600101546001600160a01b03166116b15760405162461bcd60e51b815260040161064a90612754565b6000818152600960205260409020600501541561172f5760405162461bcd60e51b815260206004820152603660248201527f65786563757465486f6c643a206e65656420707265696d6167652069662074686044820152750ca40d0ded8c840d0c2e640c240d8dec6d640d0c2e6d60531b606482015260840161064a565b6000818152600960205260408120600101546107b59183916001600160a01b0316611b46565b6001600760008360405160200161176c91906125d5565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff191691151591909117905550565b6117ad8282611eb4565b156117fa5760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015260640161064a565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006107f433848461193f565b6001600160a01b031660009081526001602052604090205490565b600061065d828461284d565b6000611860848484611f43565b6001600160a01b0384166000908152600260209081526040808320338452909152902054828110156118e55760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b606482015260840161064a565b6118f2853385840361193f565b506001949350505050565b61190860088261210c565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6001600160a01b0383166119a15760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161064a565b6001600160a01b038216611a025760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161064a565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038216611ab95760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161064a565b611ac56000838361218e565b8060036000828254611ad79190612835565b90915550506001600160a01b03821660009081526001602052604081208054839290611b04908490612835565b90915550506040518181526001600160a01b038316906000906000805160206128f88339815191529060200160405180910390a35050565b6107b53382612199565b826001600082815260096020526040902060069081015460ff1690811115611b7057611b706128e1565b1480611ba257506003600082815260096020526040902060069081015460ff1690811115611ba057611ba06128e1565b145b611bbe5760405162461bcd60e51b815260040161064a90612646565b6000848152600960205260409020600201546001600160a01b03163314611c3b5760405162461bcd60e51b815260206004820152602b60248201527f65786563757465486f6c643a2063616c6c6572206d757374206265207468652060448201526a686f6c64206e6f7461727960a81b606482015260840161064a565b60008481526009602052604090208054600390910154611c66916001600160a01b0316908490611f43565b600084815260096020908152604080832060068101805460ff19166002179055600381015490546001600160a01b03168452600a90925290912054611caa91611847565b600085815260096020818152604080842080546001600160a01b03168552600a83529084209490945591879052905260030154600c54611ce991611847565b600c556000848152600960205260408120600281015481546001830154600390930154611d27936001600160a01b0393841693928316921690610f86565b509050600b600082815260200190815260200160002060009055847fc6d1a93a7a047b3f030e0a63b85e07ff5741659917295090572c23834d53281d8585604051611d859291909182526001600160a01b0316602082015260400190565b60405180910390a25050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000611df08333610466565b905081811015611e4e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604482015263616e636560e01b606482015260840161064a565b611e5b833384840361193f565b610bc78383612199565b611e706008826117a3565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b60006107f4338484611f43565b60006001600160a01b038216611f175760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b606482015260840161064a565b506001600160a01b03166000908152602091909152604090205460ff1690565b600061065d8284612835565b6001600160a01b038316611fa75760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161064a565b6001600160a01b0382166120095760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161064a565b61201483838361218e565b6001600160a01b0383166000908152600160205260409020548181101561208c5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161064a565b6001600160a01b038085166000908152600160205260408082208585039055918516815290812080548492906120c3908490612835565b92505081905550826001600160a01b0316846001600160a01b03166000805160206128f8833981519152846040516120fd91815260200190565b60405180910390a35b50505050565b6121168282611eb4565b61216c5760405162461bcd60e51b815260206004820152602160248201527f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6044820152606560f81b606482015260840161064a565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b610bc78383836122e1565b6001600160a01b0382166121f95760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161064a565b6122058260008361218e565b6001600160a01b038216600090815260016020526040902054818110156122795760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161064a565b6001600160a01b03831660009081526001602052604081208383039055600380548492906122a890849061284d565b90915550506040518281526000906001600160a01b038516906000805160206128f88339815191529060200160405180910390a3505050565b60065460ff1615610bc75760405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b606482015260840161064a565b80356001600160a01b038116811461235e57600080fd5b919050565b60006020828403121561237557600080fd5b61065d82612347565b6000806040838503121561239157600080fd5b61239a83612347565b91506123a860208401612347565b90509250929050565b600080600080608085870312156123c757600080fd5b6123d085612347565b93506123de60208601612347565b92506123ec60408601612347565b9396929550929360600135925050565b60008060006060848603121561241157600080fd5b61241a84612347565b925061242860208501612347565b9150604084013590509250925092565b600080600080600060a0868803121561245057600080fd5b61245986612347565b945061246760208701612347565b94979496505050506040830135926060810135926080909101359150565b6000806040838503121561249857600080fd5b6124a183612347565b946020939093013593505050565b6000602082840312156124c157600080fd5b5035919050565b6000602082840312156124da57600080fd5b5051919050565b600080604083850312156124f457600080fd5b823591506123a860208401612347565b60008060008060008060c0878903121561251d57600080fd5b8635955061252d60208801612347565b945061253b60408801612347565b9350606087013592506080870135915060a087013590509295509295509295565b6000806040838503121561256f57600080fd5b50508035926020909101359150565b60008060006060848603121561259357600080fd5b83359250602084013591506125aa60408501612347565b90509250925092565b600781106125d157634e487b7160e01b600052602160045260246000fd5b9052565b600082516125e7818460208701612864565b9190910192915050565b6001600160a01b0391909116815260200190565b6020810161066082846125b3565b6020815260008251806020840152612632816040850160208701612864565b601f01601f19169190910160400192915050565b6020808252601d908201527f486f6c64206973206e6f7420696e204f72646572656420737461747573000000604082015260600190565b60208082526033908201527f65786563757465486f6c643a20707265696d616765206861736820646f6573206040820152720dcdee840dac2e8c6d040d8dec6d640d0c2e6d606b1b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602f908201527f486f6c6461626c65546f6b656e3a20616d6f756e74206578636565647320617660408201526e61696c61626c652062616c616e636560881b606082015260800190565b60208082526056908201527f65786563757465486f6c643a206d75737420706173732074686520726563697060408201527f69656e74206f6e20657865637574696f6e2061732074686520726563697069656060820152751b9d081dd85cc81b9bdd081cd95d081bdb881a1bdb1960521b608082015260a00190565b600060e08201905060018060a01b0380845116835280602085015116602084015280604085015116604084015250606083015160608301526080830151608083015260a083015160a083015260c083015161282e60c08401826125b3565b5092915050565b60008219821115612848576128486128cb565b500190565b60008282101561285f5761285f6128cb565b500390565b60005b8381101561287f578181015183820152602001612867565b838111156121065750506000910152565b600181811c908216806128a457607f821691505b602082108114156128c557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212204036f3c436cb6ab646cbabd5e414172343db81d6b9aed818e4b76c473c9d88e064736f6c63430008070033",
  "immutableReferences": {
    "7578": [
      {
        "length": 32,
        "start": 594
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3243:36",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:36",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "78:622:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "127:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "136:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "129:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "129:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "129:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "106:6:36"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "114:4:36",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "102:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "102:17:36"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "121:3:36"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "98:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "98:27:36"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "91:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "91:35:36"
                  },
                  "nodeType": "YulIf",
                  "src": "88:55:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "152:23:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "168:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "162:5:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "162:13:36"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "156:2:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "184:28:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "202:2:36",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "206:1:36",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "198:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "198:10:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "210:1:36",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "194:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "194:18:36"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "188:2:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "235:22:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "237:16:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "237:18:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "237:18:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "227:2:36"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "231:2:36"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "224:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "224:10:36"
                  },
                  "nodeType": "YulIf",
                  "src": "221:36:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "266:17:36",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "280:2:36",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "276:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "276:7:36"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "270:2:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "292:23:36",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "312:2:36",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "306:5:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "306:9:36"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "296:6:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "324:71:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "346:6:36"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "370:2:36"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "374:4:36",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "366:3:36"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "366:13:36"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "381:2:36"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "362:3:36"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "362:22:36"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "386:2:36",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "358:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "358:31:36"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "391:2:36"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "354:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "354:40:36"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "342:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "342:53:36"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "328:10:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "454:22:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "456:16:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "456:18:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "456:18:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "413:10:36"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "425:2:36"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "410:2:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "410:18:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "433:10:36"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "445:6:36"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "430:2:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "430:22:36"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "407:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "407:46:36"
                  },
                  "nodeType": "YulIf",
                  "src": "404:72:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "492:2:36",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "496:10:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "485:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "485:22:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "485:22:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "523:6:36"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "531:2:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "516:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "516:18:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "516:18:36"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "582:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "591:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "594:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "584:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "584:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "584:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "557:6:36"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "565:2:36"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "553:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "553:15:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "570:4:36",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "549:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "549:26:36"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "577:3:36"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "546:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "546:35:36"
                  },
                  "nodeType": "YulIf",
                  "src": "543:55:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "633:6:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "641:4:36",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "629:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "629:17:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "652:6:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "660:4:36",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "648:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "648:17:36"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "667:2:36"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "607:21:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "607:63:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "607:63:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "679:15:36",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "688:6:36"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "679:5:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_string_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "52:6:36",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "60:3:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "68:5:36",
                "type": ""
              }
            ],
            "src": "14:686:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "838:579:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "884:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "893:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "896:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "886:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "886:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "886:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "859:7:36"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "868:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "855:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "855:23:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "880:2:36",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "851:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "851:32:36"
                  },
                  "nodeType": "YulIf",
                  "src": "848:52:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "909:30:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "929:9:36"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "923:5:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "923:16:36"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "913:6:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "948:28:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "966:2:36",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "970:1:36",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "962:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "962:10:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "974:1:36",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "958:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "958:18:36"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "952:2:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1003:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1012:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1015:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1005:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1005:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1005:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "991:6:36"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "999:2:36"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "988:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "988:14:36"
                  },
                  "nodeType": "YulIf",
                  "src": "985:34:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1028:71:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1071:9:36"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1082:6:36"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1067:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1067:22:36"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1091:7:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1038:28:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1038:61:36"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1028:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1108:41:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1134:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1145:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1130:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1130:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1124:5:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1124:25:36"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "1112:8:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1178:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1187:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1190:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1180:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1180:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1180:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "1164:8:36"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1174:2:36"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1161:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1161:16:36"
                  },
                  "nodeType": "YulIf",
                  "src": "1158:36:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1203:73:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1246:9:36"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "1257:8:36"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1242:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1242:24:36"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1268:7:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1213:28:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1213:63:36"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1203:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1285:38:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1308:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1319:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1304:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1304:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1298:5:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1298:25:36"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1289:5:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1371:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1380:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1383:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1373:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1373:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1373:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1345:5:36"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1356:5:36"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1363:4:36",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1352:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1352:16:36"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1342:2:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1342:27:36"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1335:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1335:35:36"
                  },
                  "nodeType": "YulIf",
                  "src": "1332:55:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1396:15:36",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1406:5:36"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1396:6:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "788:9:36",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "799:7:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "811:6:36",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "819:6:36",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "827:6:36",
                "type": ""
              }
            ],
            "src": "705:712:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1561:137:36",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1571:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1591:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1585:5:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1585:13:36"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1575:6:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1633:6:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1641:4:36",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1629:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1629:17:36"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1648:3:36"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1653:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "1607:21:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1607:53:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1607:53:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1669:23:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1680:3:36"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1685:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1676:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1676:16:36"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1669:3:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1537:3:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1542:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1553:3:36",
                "type": ""
              }
            ],
            "src": "1422:276:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1877:181:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1894:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1905:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1887:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1887:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1887:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1928:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1939:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1924:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1924:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1944:2:36",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1917:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1917:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1917:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1967:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1978:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1963:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1963:18:36"
                      },
                      {
                        "hexValue": "526f6c65733a206163636f756e7420616c72656164792068617320726f6c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1983:33:36",
                        "type": "",
                        "value": "Roles: account already has role"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1956:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1956:61:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1956:61:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2026:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2038:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2049:2:36",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2034:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2034:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2026:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1854:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1868:4:36",
                "type": ""
              }
            ],
            "src": "1703:355:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2237:224:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2254:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2265:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2247:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2247:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2247:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2288:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2299:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2284:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2284:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2304:2:36",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2277:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2277:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2277:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2327:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2338:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2323:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2323:18:36"
                      },
                      {
                        "hexValue": "526f6c65733a206163636f756e7420697320746865207a65726f206164647265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2343:34:36",
                        "type": "",
                        "value": "Roles: account is the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2316:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2316:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2316:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2398:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2409:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2394:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2394:18:36"
                      },
                      {
                        "hexValue": "7373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2414:4:36",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2387:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2387:32:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2387:32:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2428:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2440:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2451:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2436:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2436:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2428:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2214:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2228:4:36",
                "type": ""
              }
            ],
            "src": "2063:398:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2519:205:36",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2529:10:36",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2538:1:36",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "2533:1:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2598:63:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "2623:3:36"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "2628:1:36"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2619:3:36"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2619:11:36"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "2642:3:36"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "2647:1:36"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2638:3:36"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2638:11:36"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2632:5:36"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2632:18:36"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2612:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2612:39:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2612:39:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2559:1:36"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2562:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2556:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2556:13:36"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2570:19:36",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2572:15:36",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2581:1:36"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2584:2:36",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2577:3:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2577:10:36"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2572:1:36"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2552:3:36",
                    "statements": []
                  },
                  "src": "2548:113:36"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2687:31:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "2700:3:36"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "2705:6:36"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2696:3:36"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2696:16:36"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2714:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2689:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2689:27:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2689:27:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2676:1:36"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2679:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2673:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2673:13:36"
                  },
                  "nodeType": "YulIf",
                  "src": "2670:48:36"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "2497:3:36",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "2502:3:36",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2507:6:36",
                "type": ""
              }
            ],
            "src": "2466:258:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2784:325:36",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2794:22:36",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2808:1:36",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2811:4:36"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "2804:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2804:12:36"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "2794:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2825:38:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2855:4:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2861:1:36",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2851:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2851:12:36"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "2829:18:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2902:31:36",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2904:27:36",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "2918:6:36"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2926:4:36",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "2914:3:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2914:17:36"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2904:6:36"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "2882:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2875:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2875:26:36"
                  },
                  "nodeType": "YulIf",
                  "src": "2872:61:36"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2992:111:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3013:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3020:3:36",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3025:10:36",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "3016:3:36"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3016:20:36"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3006:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3006:31:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3006:31:36"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3057:1:36",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3060:4:36",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3050:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3050:15:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3050:15:36"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3085:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3088:4:36",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3078:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3078:15:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3078:15:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "2948:18:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2971:6:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2979:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2968:2:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2968:14:36"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "2945:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2945:38:36"
                  },
                  "nodeType": "YulIf",
                  "src": "2942:161:36"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "2764:4:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2773:6:36",
                "type": ""
              }
            ],
            "src": "2729:380:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3146:95:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3163:1:36",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3170:3:36",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3175:10:36",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3166:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3166:20:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3156:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3156:31:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3156:31:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3203:1:36",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3206:4:36",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3196:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3196:15:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3196:15:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3227:1:36",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3230:4:36",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3220:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3220:15:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3220:15:36"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "3114:127:36"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        copy_memory_to_memory(add(offset, 0x20), add(memPtr, 0x20), _1)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        let value := mload(add(headStart, 64))\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value2 := value\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Roles: account already has role\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Roles: account is the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
      "id": 36,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:23555:36",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:36",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:124:36",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:36"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:36"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "165:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "174:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "177:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "167:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "167:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:36"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:36"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "150:3:36",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "155:1:36",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "146:3:36"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "146:11:36"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "159:1:36",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "142:3:36"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "142:19:36"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:31:36"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:42:36"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:50:36"
                  },
                  "nodeType": "YulIf",
                  "src": "111:70:36"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:36",
                "type": ""
              }
            ],
            "src": "14:173:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "262:116:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "308:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "317:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "320:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "310:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "310:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "310:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "283:7:36"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "292:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "279:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "279:23:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "304:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "275:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "275:32:36"
                  },
                  "nodeType": "YulIf",
                  "src": "272:52:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "333:39:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "362:9:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "343:18:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "343:29:36"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "333:6:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "228:9:36",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "239:7:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "251:6:36",
                "type": ""
              }
            ],
            "src": "192:186:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "470:173:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "516:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "525:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "528:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "518:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "518:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "518:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "491:7:36"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "500:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "487:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "487:23:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "512:2:36",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "483:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "483:32:36"
                  },
                  "nodeType": "YulIf",
                  "src": "480:52:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "541:39:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "570:9:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "551:18:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "551:29:36"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "541:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "589:48:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "622:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "633:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "618:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "618:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "599:18:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "599:38:36"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "589:6:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "428:9:36",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "439:7:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "451:6:36",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "459:6:36",
                "type": ""
              }
            ],
            "src": "383:260:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "769:282:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "816:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "825:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "828:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "818:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "818:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "818:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "790:7:36"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "799:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "786:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "786:23:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "811:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "782:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "782:33:36"
                  },
                  "nodeType": "YulIf",
                  "src": "779:53:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "841:39:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "870:9:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "851:18:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "851:29:36"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "841:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "889:48:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "922:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "933:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "918:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "918:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "899:18:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "899:38:36"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "889:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "946:48:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "979:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "990:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "975:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "975:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "956:18:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "956:38:36"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "946:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1003:42:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1030:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1041:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1026:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1026:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1013:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1013:32:36"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1003:6:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "711:9:36",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "722:7:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "734:6:36",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "742:6:36",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "750:6:36",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "758:6:36",
                "type": ""
              }
            ],
            "src": "648:403:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1160:224:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1206:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1215:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1218:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1208:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1208:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1208:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1181:7:36"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1190:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1177:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1177:23:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1202:2:36",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1173:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1173:32:36"
                  },
                  "nodeType": "YulIf",
                  "src": "1170:52:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1231:39:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1260:9:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1241:18:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1241:29:36"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1231:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1279:48:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1312:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1323:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1308:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1308:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1289:18:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1289:38:36"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1279:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1336:42:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1363:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1374:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1359:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1359:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1346:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1346:32:36"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1336:6:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1110:9:36",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1121:7:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1133:6:36",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1141:6:36",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1149:6:36",
                "type": ""
              }
            ],
            "src": "1056:328:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1527:328:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1574:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1583:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1586:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1576:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1576:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1576:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1548:7:36"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1557:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1544:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1544:23:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1569:3:36",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1540:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1540:33:36"
                  },
                  "nodeType": "YulIf",
                  "src": "1537:53:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1599:39:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1628:9:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1609:18:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1609:29:36"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1599:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1647:48:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1680:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1691:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1676:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1676:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1657:18:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1657:38:36"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1647:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1704:42:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1731:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1742:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1727:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1727:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1714:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1714:32:36"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1704:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1755:42:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1782:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1793:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1778:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1778:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1765:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1765:32:36"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1755:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1806:43:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1833:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1844:3:36",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1829:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1829:19:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1816:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1816:33:36"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "1806:6:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1461:9:36",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1472:7:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1484:6:36",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1492:6:36",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1500:6:36",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1508:6:36",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1516:6:36",
                "type": ""
              }
            ],
            "src": "1389:466:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1947:167:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1993:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2002:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2005:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1995:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1995:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1995:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1968:7:36"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1977:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1964:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1964:23:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1989:2:36",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1960:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1960:32:36"
                  },
                  "nodeType": "YulIf",
                  "src": "1957:52:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2018:39:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2047:9:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2028:18:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2028:29:36"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2018:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2066:42:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2093:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2104:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2089:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2089:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2076:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2076:32:36"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2066:6:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1905:9:36",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1916:7:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1928:6:36",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1936:6:36",
                "type": ""
              }
            ],
            "src": "1860:254:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2189:110:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2235:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2244:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2247:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2237:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2237:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2237:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2210:7:36"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2219:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2206:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2206:23:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2231:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2202:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2202:32:36"
                  },
                  "nodeType": "YulIf",
                  "src": "2199:52:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2260:33:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2283:9:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2270:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2270:23:36"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2260:6:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2155:9:36",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2166:7:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2178:6:36",
                "type": ""
              }
            ],
            "src": "2119:180:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2385:103:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2431:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2440:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2443:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2433:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2433:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2433:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2406:7:36"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2415:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2402:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2402:23:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2427:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2398:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2398:32:36"
                  },
                  "nodeType": "YulIf",
                  "src": "2395:52:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2456:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2472:9:36"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2466:5:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2466:16:36"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2456:6:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2351:9:36",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2362:7:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2374:6:36",
                "type": ""
              }
            ],
            "src": "2304:184:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2580:167:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2626:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2635:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2638:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2628:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2628:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2628:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2601:7:36"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2610:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2597:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2597:23:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2622:2:36",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2593:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2593:32:36"
                  },
                  "nodeType": "YulIf",
                  "src": "2590:52:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2651:33:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2674:9:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2661:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2661:23:36"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2651:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2693:48:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2726:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2737:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2722:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2722:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2703:18:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2703:38:36"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2693:6:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2538:9:36",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2549:7:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2561:6:36",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2569:6:36",
                "type": ""
              }
            ],
            "src": "2493:254:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2907:380:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2954:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2963:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2966:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2956:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2956:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2956:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2928:7:36"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2937:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2924:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2924:23:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2949:3:36",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2920:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2920:33:36"
                  },
                  "nodeType": "YulIf",
                  "src": "2917:53:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2979:33:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3002:9:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2989:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2989:23:36"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2979:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3021:48:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3054:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3065:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3050:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3050:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "3031:18:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3031:38:36"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3021:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3078:48:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3111:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3122:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3107:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3107:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "3088:18:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3088:38:36"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3078:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3135:42:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3162:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3173:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3158:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3158:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3145:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3145:32:36"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "3135:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3186:43:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3213:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3224:3:36",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3209:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3209:19:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3196:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3196:33:36"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "3186:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3238:43:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3265:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3276:3:36",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3261:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3261:19:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3248:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3248:33:36"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "3238:6:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_addresst_addresst_uint256t_uint256t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2833:9:36",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2844:7:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2856:6:36",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2864:6:36",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2872:6:36",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2880:6:36",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "2888:6:36",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "2896:6:36",
                "type": ""
              }
            ],
            "src": "2752:535:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3379:161:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3425:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3434:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3437:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3427:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3427:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3427:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3400:7:36"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3409:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3396:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3396:23:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3421:2:36",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3392:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3392:32:36"
                  },
                  "nodeType": "YulIf",
                  "src": "3389:52:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3450:33:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3473:9:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3460:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3460:23:36"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3450:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3492:42:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3519:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3530:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3515:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3515:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3502:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3502:32:36"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3492:6:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3337:9:36",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3348:7:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3360:6:36",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3368:6:36",
                "type": ""
              }
            ],
            "src": "3292:248:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3649:218:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3695:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3704:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3707:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3697:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3697:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3697:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3670:7:36"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3679:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3666:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3666:23:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3691:2:36",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3662:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3662:32:36"
                  },
                  "nodeType": "YulIf",
                  "src": "3659:52:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3720:33:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3743:9:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3730:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3730:23:36"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3720:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3762:42:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3789:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3800:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3785:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3785:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3772:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3772:32:36"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3762:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3813:48:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3846:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3857:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3842:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3842:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "3823:18:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3823:38:36"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3813:6:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3599:9:36",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3610:7:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3622:6:36",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3630:6:36",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3638:6:36",
                "type": ""
              }
            ],
            "src": "3545:322:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3942:110:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3988:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3997:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4000:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3990:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3990:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3990:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3963:7:36"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3972:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3959:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3959:23:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3984:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3955:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3955:32:36"
                  },
                  "nodeType": "YulIf",
                  "src": "3952:52:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4013:33:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4036:9:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4023:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4023:23:36"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4013:6:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3908:9:36",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3919:7:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3931:6:36",
                "type": ""
              }
            ],
            "src": "3872:180:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4138:103:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4184:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4193:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4196:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4186:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4186:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4186:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4159:7:36"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4168:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4155:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4155:23:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4180:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4151:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4151:32:36"
                  },
                  "nodeType": "YulIf",
                  "src": "4148:52:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4209:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4225:9:36"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4219:5:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4219:16:36"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4209:6:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4104:9:36",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4115:7:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4127:6:36",
                "type": ""
              }
            ],
            "src": "4057:184:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4302:186:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4344:111:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4365:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4372:3:36",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4377:10:36",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "4368:3:36"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4368:20:36"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4358:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4358:31:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4358:31:36"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4409:1:36",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4412:4:36",
                              "type": "",
                              "value": "0x21"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4402:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4402:15:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4402:15:36"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4437:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4440:4:36",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4430:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4430:15:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4430:15:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4325:5:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4332:1:36",
                            "type": "",
                            "value": "7"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "4322:2:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4322:12:36"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4315:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4315:20:36"
                  },
                  "nodeType": "YulIf",
                  "src": "4312:143:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4471:3:36"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4476:5:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4464:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4464:18:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4464:18:36"
                }
              ]
            },
            "name": "abi_encode_enum_HoldStatusCode",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4286:5:36",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4293:3:36",
                "type": ""
              }
            ],
            "src": "4246:242:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4724:326:36",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4734:33:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4756:2:36",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4760:1:36",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "4752:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4752:10:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4764:1:36",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4748:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4748:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "4744:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4744:23:36"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4738:2:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4783:3:36"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4796:2:36",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "4800:6:36"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "4792:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4792:15:36"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4809:2:36"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4788:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4788:24:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4776:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4776:37:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4776:37:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4833:3:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4838:2:36",
                            "type": "",
                            "value": "20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4829:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4829:12:36"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4851:2:36",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "4855:6:36"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "4847:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4847:15:36"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4864:2:36"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4843:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4843:24:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4822:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4822:46:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4822:46:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4888:3:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4893:2:36",
                            "type": "",
                            "value": "40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4884:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4884:12:36"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4906:2:36",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "4910:6:36"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "4902:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4902:15:36"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4919:2:36"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4898:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4898:24:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4877:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4877:46:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4877:46:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4943:3:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4948:2:36",
                            "type": "",
                            "value": "60"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4939:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4939:12:36"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4961:2:36",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value3",
                                "nodeType": "YulIdentifier",
                                "src": "4965:6:36"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "4957:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4957:15:36"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4974:2:36"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4953:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4953:24:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4932:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4932:46:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4932:46:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4998:3:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5003:2:36",
                            "type": "",
                            "value": "80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4994:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4994:12:36"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "5008:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4987:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4987:28:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4987:28:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5024:20:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5035:3:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5040:3:36",
                        "type": "",
                        "value": "112"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5031:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5031:13:36"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5024:3:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_address_t_uint256__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4668:3:36",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "4673:6:36",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4681:6:36",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4689:6:36",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4697:6:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4705:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4716:3:36",
                "type": ""
              }
            ],
            "src": "4493:557:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5286:291:36",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5296:33:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5318:2:36",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5322:1:36",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "5314:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5314:10:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5326:1:36",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5310:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5310:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "5306:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5306:23:36"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "5300:2:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5345:3:36"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5358:2:36",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5362:6:36"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "5354:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5354:15:36"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5371:2:36"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5350:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5350:24:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5338:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5338:37:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5338:37:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5395:3:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5400:2:36",
                            "type": "",
                            "value": "20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5391:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5391:12:36"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5413:2:36",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "5417:6:36"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "5409:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5409:15:36"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5426:2:36"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5405:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5405:24:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5384:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5384:46:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5384:46:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5450:3:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5455:2:36",
                            "type": "",
                            "value": "40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5446:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5446:12:36"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "5460:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5439:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5439:28:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5439:28:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5487:3:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5492:2:36",
                            "type": "",
                            "value": "72"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5483:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5483:12:36"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "5497:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5476:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5476:28:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5476:28:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5524:3:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5529:3:36",
                            "type": "",
                            "value": "104"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5520:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5520:13:36"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "5535:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5513:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5513:29:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5513:29:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5551:20:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5562:3:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5567:3:36",
                        "type": "",
                        "value": "136"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5558:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5558:13:36"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5551:3:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address_t_address_t_uint256_t_uint256_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_bytes32__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5230:3:36",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "5235:6:36",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "5243:6:36",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5251:6:36",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5259:6:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5267:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5278:3:36",
                "type": ""
              }
            ],
            "src": "5055:522:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5701:63:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5718:3:36"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5723:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5711:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5711:19:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5711:19:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5739:19:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5750:3:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5755:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5746:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5746:12:36"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5739:3:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5677:3:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5682:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5693:3:36",
                "type": ""
              }
            ],
            "src": "5582:182:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5906:137:36",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5916:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5936:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5930:5:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5930:13:36"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5920:6:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5978:6:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5986:4:36",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5974:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5974:17:36"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5993:3:36"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5998:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "5952:21:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5952:53:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5952:53:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6014:23:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6025:3:36"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6030:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6021:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6021:16:36"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6014:3:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5882:3:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5887:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5898:3:36",
                "type": ""
              }
            ],
            "src": "5769:274:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6187:137:36",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6197:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6217:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6211:5:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6211:13:36"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "6201:6:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6259:6:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6267:4:36",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6255:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6255:17:36"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6274:3:36"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6279:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "6233:21:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6233:53:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6233:53:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6295:23:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6306:3:36"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6311:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6302:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6302:16:36"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6295:3:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6163:3:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6168:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6179:3:36",
                "type": ""
              }
            ],
            "src": "6048:276:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6521:79:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6538:3:36"
                      },
                      {
                        "hexValue": "455243313832305f4143434550545f4d41474943",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6543:22:36",
                        "type": "",
                        "value": "ERC1820_ACCEPT_MAGIC"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6531:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6531:35:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6531:35:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6575:19:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6586:3:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6591:2:36",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6582:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6582:12:36"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6575:3:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_a2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b4__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6505:3:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6513:3:36",
                "type": ""
              }
            ],
            "src": "6329:271:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6706:102:36",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6716:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6728:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6739:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6724:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6724:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6716:4:36"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6758:9:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6773:6:36"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6789:3:36",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6794:1:36",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "6785:3:36"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6785:11:36"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6798:1:36",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "6781:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6781:19:36"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6769:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6769:32:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6751:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6751:51:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6751:51:36"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6675:9:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6686:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6697:4:36",
                "type": ""
              }
            ],
            "src": "6605:203:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6908:92:36",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6918:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6930:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6941:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6926:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6926:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6918:4:36"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6960:9:36"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "6985:6:36"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "6978:6:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6978:14:36"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6971:6:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6971:22:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6953:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6953:41:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6953:41:36"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6877:9:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6888:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6899:4:36",
                "type": ""
              }
            ],
            "src": "6813:187:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7106:76:36",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7116:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7128:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7139:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7124:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7124:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7116:4:36"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7158:9:36"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7169:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7151:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7151:25:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7151:25:36"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7075:9:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7086:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7097:4:36",
                "type": ""
              }
            ],
            "src": "7005:177:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7316:145:36",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7326:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7338:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7349:2:36",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7334:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7334:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7326:4:36"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7368:9:36"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7379:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7361:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7361:25:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7361:25:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7406:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7417:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7402:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7402:18:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "7426:6:36"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7442:3:36",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7447:1:36",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "7438:3:36"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7438:11:36"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7451:1:36",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "7434:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7434:19:36"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7422:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7422:32:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7395:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7395:60:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7395:60:36"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7277:9:36",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7288:6:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7296:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7307:4:36",
                "type": ""
              }
            ],
            "src": "7187:274:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7595:119:36",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7605:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7617:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7628:2:36",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7613:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7613:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7605:4:36"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7647:9:36"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7658:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7640:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7640:25:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7640:25:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7685:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7696:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7681:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7681:18:36"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7701:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7674:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7674:34:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7674:34:36"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7556:9:36",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7567:6:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7575:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7586:4:36",
                "type": ""
              }
            ],
            "src": "7466:248:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7837:100:36",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7847:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7859:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7870:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7855:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7855:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7847:4:36"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7913:6:36"
                      },
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7921:9:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_enum_HoldStatusCode",
                      "nodeType": "YulIdentifier",
                      "src": "7882:30:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7882:49:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7882:49:36"
                }
              ]
            },
            "name": "abi_encode_tuple_t_enum$_HoldStatusCode_$5396__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7806:9:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7817:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7828:4:36",
                "type": ""
              }
            ],
            "src": "7719:218:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8063:262:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8080:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8091:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8073:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8073:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8073:21:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8103:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8123:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8117:5:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8117:13:36"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "8107:6:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8150:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8161:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8146:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8146:18:36"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8166:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8139:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8139:34:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8139:34:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "8208:6:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8216:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8204:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8204:15:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8225:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8236:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8221:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8221:18:36"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8241:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "8182:21:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8182:66:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8182:66:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8257:62:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8273:9:36"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "8292:6:36"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8300:2:36",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8288:3:36"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8288:15:36"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8309:2:36",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "8305:3:36"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8305:7:36"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "8284:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8284:29:36"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8269:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8269:45:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8316:2:36",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8265:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8265:54:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8257:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8032:9:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8043:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8054:4:36",
                "type": ""
              }
            ],
            "src": "7942:383:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8504:225:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8521:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8532:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8514:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8514:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8514:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8555:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8566:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8551:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8551:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8571:2:36",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8544:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8544:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8544:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8594:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8605:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8590:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8590:18:36"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8610:34:36",
                        "type": "",
                        "value": "ERC20: transfer to the zero addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8583:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8583:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8583:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8665:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8676:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8661:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8661:18:36"
                      },
                      {
                        "hexValue": "657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8681:5:36",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8654:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8654:33:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8654:33:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8696:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8708:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8719:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8704:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8704:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8696:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8481:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8495:4:36",
                "type": ""
              }
            ],
            "src": "8330:399:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8908:233:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8925:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8936:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8918:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8918:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8918:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8959:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8970:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8955:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8955:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8975:2:36",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8948:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8948:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8948:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8998:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9009:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8994:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8994:18:36"
                      },
                      {
                        "hexValue": "65786563757465486f6c643a2063616c6c6572206d7573742062652074686520",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9014:34:36",
                        "type": "",
                        "value": "executeHold: caller must be the "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8987:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8987:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8987:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9069:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9080:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9065:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9065:18:36"
                      },
                      {
                        "hexValue": "686f6c64206e6f74617279",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9085:13:36",
                        "type": "",
                        "value": "hold notary"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9058:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9058:41:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9058:41:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9108:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9120:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9131:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9116:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9116:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9108:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_06760903a1a137bd7e8f70a654f085804529f6cf9f19abebbae2f256bb6f7248__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8885:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8899:4:36",
                "type": ""
              }
            ],
            "src": "8734:407:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9320:229:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9337:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9348:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9330:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9330:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9330:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9371:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9382:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9367:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9367:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9387:2:36",
                        "type": "",
                        "value": "39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9360:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9360:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9360:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9410:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9421:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9406:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9406:18:36"
                      },
                      {
                        "hexValue": "686f6c643a206e6f74617279206d757374206e6f742062652061207a65726f20",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9426:34:36",
                        "type": "",
                        "value": "hold: notary must not be a zero "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9399:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9399:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9399:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9481:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9492:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9477:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9477:18:36"
                      },
                      {
                        "hexValue": "61646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9497:9:36",
                        "type": "",
                        "value": "address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9470:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9470:37:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9470:37:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9516:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9528:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9539:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9524:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9524:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9516:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0892ca814e3c1b3a07b90f43daa4885ed2a91182b50bd144f324a7ba002d6e25__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9297:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9311:4:36",
                "type": ""
              }
            ],
            "src": "9146:403:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9728:181:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9745:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9756:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9738:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9738:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9738:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9779:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9790:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9775:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9775:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9795:2:36",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9768:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9768:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9768:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9818:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9829:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9814:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9814:18:36"
                      },
                      {
                        "hexValue": "526f6c65733a206163636f756e7420616c72656164792068617320726f6c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9834:33:36",
                        "type": "",
                        "value": "Roles: account already has role"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9807:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9807:61:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9807:61:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9877:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9889:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9900:2:36",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9885:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9885:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9877:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9705:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9719:4:36",
                "type": ""
              }
            ],
            "src": "9554:355:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10088:224:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10105:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10116:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10098:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10098:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10098:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10139:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10150:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10135:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10135:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10155:2:36",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10128:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10128:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10128:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10178:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10189:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10174:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10174:18:36"
                      },
                      {
                        "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10194:34:36",
                        "type": "",
                        "value": "ERC20: burn amount exceeds balan"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10167:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10167:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10167:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10249:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10260:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10245:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10245:18:36"
                      },
                      {
                        "hexValue": "6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10265:4:36",
                        "type": "",
                        "value": "ce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10238:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10238:32:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10238:32:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10279:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10291:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10302:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10287:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10287:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10279:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10065:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10079:4:36",
                "type": ""
              }
            ],
            "src": "9914:398:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10491:179:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10508:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10519:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10501:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10501:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10501:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10542:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10553:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10538:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10538:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10558:2:36",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10531:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10531:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10531:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10581:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10592:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10577:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10577:18:36"
                      },
                      {
                        "hexValue": "486f6c64206973206e6f7420696e204f72646572656420737461747573",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10597:31:36",
                        "type": "",
                        "value": "Hold is not in Ordered status"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10570:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10570:59:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10570:59:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10638:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10650:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10661:2:36",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10646:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10646:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10638:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1586263b6ed81250e09e3511dae8b28d2c9acb5016a4c7516ff2ccacc49700c4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10468:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10482:4:36",
                "type": ""
              }
            ],
            "src": "10317:353:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10849:228:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10866:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10877:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10859:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10859:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10859:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10900:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10911:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10896:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10896:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10916:2:36",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10889:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10889:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10889:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10939:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10950:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10935:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10935:18:36"
                      },
                      {
                        "hexValue": "686f6c643a20616d6f756e74206578636565647320617661696c61626c652062",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10955:34:36",
                        "type": "",
                        "value": "hold: amount exceeds available b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10928:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10928:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10928:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11010:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11021:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11006:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11006:18:36"
                      },
                      {
                        "hexValue": "616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11026:8:36",
                        "type": "",
                        "value": "alance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10999:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10999:36:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10999:36:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11044:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11056:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11067:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11052:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11052:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11044:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_19034bf26bc3742bd67470410ce64f54edcc10d93f84f4739233c2ff57191b75__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10826:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10840:4:36",
                "type": ""
              }
            ],
            "src": "10675:402:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11256:244:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11273:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11284:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11266:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11266:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11266:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11307:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11318:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11303:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11303:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11323:2:36",
                        "type": "",
                        "value": "54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11296:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11296:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11296:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11346:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11357:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11342:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11342:18:36"
                      },
                      {
                        "hexValue": "65786563757465486f6c643a206e65656420707265696d616765206966207468",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11362:34:36",
                        "type": "",
                        "value": "executeHold: need preimage if th"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11335:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11335:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11335:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11417:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11428:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11413:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11413:18:36"
                      },
                      {
                        "hexValue": "6520686f6c64206861732061206c6f636b2068617368",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11433:24:36",
                        "type": "",
                        "value": "e hold has a lock hash"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11406:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11406:52:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11406:52:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11467:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11479:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11490:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11475:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11475:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11467:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1f68c2a16436ef9beba75fe6c860676b87d7e7c18f5be2e4c797c12ed8ef7eb4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11233:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11247:4:36",
                "type": ""
              }
            ],
            "src": "11082:418:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11679:228:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11696:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11707:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11689:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11689:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11689:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11730:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11741:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11726:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11726:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11746:2:36",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11719:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11719:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11719:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11769:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11780:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11765:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11765:18:36"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11785:34:36",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11758:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11758:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11758:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11840:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11851:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11836:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11836:18:36"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11856:8:36",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11829:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11829:36:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11829:36:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11874:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11886:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11897:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11882:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11882:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11874:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11656:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11670:4:36",
                "type": ""
              }
            ],
            "src": "11505:402:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12086:224:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12103:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12114:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12096:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12096:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12096:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12137:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12148:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12133:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12133:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12153:2:36",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12126:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12126:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12126:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12176:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12187:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12172:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12172:18:36"
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12192:34:36",
                        "type": "",
                        "value": "ERC20: approve to the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12165:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12165:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12165:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12247:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12258:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12243:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12243:18:36"
                      },
                      {
                        "hexValue": "7373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12263:4:36",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12236:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12236:32:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12236:32:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12277:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12289:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12300:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12285:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12285:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12277:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12063:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12077:4:36",
                "type": ""
              }
            ],
            "src": "11912:398:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12489:173:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12506:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12517:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12499:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12499:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12499:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12540:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12551:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12536:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12536:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12556:2:36",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12529:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12529:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12529:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12579:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12590:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12575:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12575:18:36"
                      },
                      {
                        "hexValue": "686f6c643a20696420616c726561647920657869737473",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12595:25:36",
                        "type": "",
                        "value": "hold: id already exists"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12568:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12568:53:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12568:53:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12630:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12642:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12653:2:36",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12638:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12638:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12630:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3fb1032916a9fa7eb9854a20718a129abc1980a1ddced64bc82359ff8f32fdb5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12466:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12480:4:36",
                "type": ""
              }
            ],
            "src": "12315:347:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12841:228:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12858:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12869:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12851:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12851:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12851:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12892:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12903:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12888:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12888:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12908:2:36",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12881:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12881:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12881:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12931:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12942:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12927:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12927:18:36"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12947:34:36",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12920:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12920:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12920:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13002:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13013:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12998:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12998:18:36"
                      },
                      {
                        "hexValue": "616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13018:8:36",
                        "type": "",
                        "value": "alance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12991:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12991:36:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12991:36:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13036:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13048:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13059:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13044:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13044:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13036:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12818:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12832:4:36",
                "type": ""
              }
            ],
            "src": "12667:402:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13248:246:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13265:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13276:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13258:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13258:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13258:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13299:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13310:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13295:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13295:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13315:2:36",
                        "type": "",
                        "value": "56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13288:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13288:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13288:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13338:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13349:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13334:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13334:18:36"
                      },
                      {
                        "hexValue": "72656c65617365486f6c643a2063616e206f6e6c792072656c65617365206166",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13354:34:36",
                        "type": "",
                        "value": "releaseHold: can only release af"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13327:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13327:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13327:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13409:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13420:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13405:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13405:18:36"
                      },
                      {
                        "hexValue": "746572207468652065787069726174696f6e20646174652e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13425:26:36",
                        "type": "",
                        "value": "ter the expiration date."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13398:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13398:54:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13398:54:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13461:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13473:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13484:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13469:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13469:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13461:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_493d53730a9bdfe5ea17be5fb48f7cf625c731a31a9424f72b43547622da1e56__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13225:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13239:4:36",
                "type": ""
              }
            ],
            "src": "13074:420:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13673:228:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13690:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13701:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13683:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13683:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13683:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13724:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13735:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13720:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13720:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13740:2:36",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13713:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13713:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13713:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13763:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13774:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13759:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13759:18:36"
                      },
                      {
                        "hexValue": "686f6c643a20616d6f756e74206d757374206265206772656174657220746861",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13779:34:36",
                        "type": "",
                        "value": "hold: amount must be greater tha"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13752:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13752:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13752:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13834:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13845:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13830:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13830:18:36"
                      },
                      {
                        "hexValue": "6e207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13850:8:36",
                        "type": "",
                        "value": "n zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13823:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13823:36:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13823:36:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13868:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13880:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13891:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13876:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13876:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13868:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4cc511149ca81358a86c3964feb50f2ffdb7c4ba6870b88f6af6e124d9c0f7af__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13650:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13664:4:36",
                "type": ""
              }
            ],
            "src": "13499:402:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14080:239:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14097:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14108:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14090:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14090:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14090:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14131:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14142:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14127:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14127:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14147:2:36",
                        "type": "",
                        "value": "49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14120:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14120:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14120:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14170:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14181:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14166:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14166:18:36"
                      },
                      {
                        "hexValue": "65786563757465486f6c643a20726563697069656e74206d757374206e6f7420",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14186:34:36",
                        "type": "",
                        "value": "executeHold: recipient must not "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14159:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14159:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14159:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14241:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14252:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14237:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14237:18:36"
                      },
                      {
                        "hexValue": "62652061207a65726f2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14257:19:36",
                        "type": "",
                        "value": "be a zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14230:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14230:47:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14230:47:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14286:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14298:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14309:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14294:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14294:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14286:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_501c71291b34e8ea8c38d27b05abbbca9ed16d8e393dcf6a21d81509bdc46bf9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14057:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14071:4:36",
                "type": ""
              }
            ],
            "src": "13906:413:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14498:241:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14515:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14526:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14508:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14508:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14508:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14549:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14560:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14545:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14545:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14565:2:36",
                        "type": "",
                        "value": "51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14538:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14538:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14538:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14588:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14599:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14584:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14584:18:36"
                      },
                      {
                        "hexValue": "65786563757465486f6c643a20707265696d616765206861736820646f657320",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14604:34:36",
                        "type": "",
                        "value": "executeHold: preimage hash does "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14577:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14577:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14577:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14659:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14670:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14655:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14655:18:36"
                      },
                      {
                        "hexValue": "6e6f74206d61746368206c6f636b2068617368",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14675:21:36",
                        "type": "",
                        "value": "not match lock hash"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14648:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14648:49:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14648:49:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14706:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14718:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14729:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14714:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14714:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14706:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7b67df7aff43b902379f5b51d42b44d55c3dd66fdd309918f58eaabd4d470b8b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14475:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14489:4:36",
                "type": ""
              }
            ],
            "src": "14324:415:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14918:223:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14935:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14946:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14928:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14928:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14928:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14969:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14980:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14965:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14965:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14985:2:36",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14958:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14958:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14958:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15008:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15019:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15004:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15004:18:36"
                      },
                      {
                        "hexValue": "526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15024:34:36",
                        "type": "",
                        "value": "Roles: account does not have rol"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14997:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14997:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14997:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15079:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15090:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15075:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15075:18:36"
                      },
                      {
                        "hexValue": "65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15095:3:36",
                        "type": "",
                        "value": "e"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15068:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15068:31:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15068:31:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15108:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15120:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15131:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15116:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15116:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15108:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14895:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14909:4:36",
                "type": ""
              }
            ],
            "src": "14744:397:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15320:230:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15337:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15348:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15330:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15330:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15330:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15371:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15382:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15367:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15367:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15387:2:36",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15360:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15360:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15360:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15410:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15421:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15406:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15406:18:36"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15426:34:36",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15399:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15399:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15399:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15481:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15492:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15477:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15477:18:36"
                      },
                      {
                        "hexValue": "6c6c6f77616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15497:10:36",
                        "type": "",
                        "value": "llowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15470:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15470:38:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15470:38:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15517:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15529:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15540:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15525:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15525:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15517:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15297:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15311:4:36",
                "type": ""
              }
            ],
            "src": "15146:404:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15729:182:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15746:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15757:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15739:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15739:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15739:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15780:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15791:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15776:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15776:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15796:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15769:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15769:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15769:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15819:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15830:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15815:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15815:18:36"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15835:34:36",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15808:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15808:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15808:62:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15879:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15891:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15902:2:36",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15887:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15887:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15879:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15706:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15720:4:36",
                "type": ""
              }
            ],
            "src": "15555:356:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16090:224:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16107:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16118:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16100:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16100:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16100:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16141:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16152:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16137:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16137:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16157:2:36",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16130:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16130:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16130:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16180:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16191:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16176:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16176:18:36"
                      },
                      {
                        "hexValue": "526f6c65733a206163636f756e7420697320746865207a65726f206164647265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16196:34:36",
                        "type": "",
                        "value": "Roles: account is the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16169:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16169:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16169:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16251:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16262:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16247:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16247:18:36"
                      },
                      {
                        "hexValue": "7373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16267:4:36",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16240:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16240:32:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16240:32:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16281:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16293:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16304:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16289:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16289:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16281:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16067:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16081:4:36",
                "type": ""
              }
            ],
            "src": "15916:398:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16493:226:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16510:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16521:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16503:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16503:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16503:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16544:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16555:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16540:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16540:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16560:2:36",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16533:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16533:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16533:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16583:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16594:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16579:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16579:18:36"
                      },
                      {
                        "hexValue": "45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16599:34:36",
                        "type": "",
                        "value": "ERC20: burn amount exceeds allow"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16572:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16572:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16572:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16654:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16665:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16650:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16650:18:36"
                      },
                      {
                        "hexValue": "616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16670:6:36",
                        "type": "",
                        "value": "ance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16643:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16643:34:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16643:34:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16686:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16698:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16709:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16694:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16694:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16686:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16470:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16484:4:36",
                "type": ""
              }
            ],
            "src": "16319:400:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16898:223:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16915:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16926:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16908:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16908:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16908:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16949:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16960:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16945:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16945:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16965:2:36",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16938:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16938:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16938:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16988:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16999:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16984:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16984:18:36"
                      },
                      {
                        "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17004:34:36",
                        "type": "",
                        "value": "ERC20: burn from the zero addres"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16977:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16977:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16977:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17059:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17070:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17055:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17055:18:36"
                      },
                      {
                        "hexValue": "73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17075:3:36",
                        "type": "",
                        "value": "s"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17048:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17048:31:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17048:31:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17088:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17100:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17111:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17096:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17096:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17088:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16875:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16889:4:36",
                "type": ""
              }
            ],
            "src": "16724:397:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17300:227:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17317:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17328:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17310:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17310:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17310:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17351:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17362:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17347:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17347:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17367:2:36",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17340:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17340:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17340:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17390:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17401:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17386:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17386:18:36"
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17406:34:36",
                        "type": "",
                        "value": "ERC20: transfer from the zero ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17379:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17379:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17379:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17461:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17472:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17457:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17457:18:36"
                      },
                      {
                        "hexValue": "6472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17477:7:36",
                        "type": "",
                        "value": "dress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17450:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17450:35:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17450:35:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17494:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17506:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17517:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17502:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17502:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17494:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17277:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17291:4:36",
                "type": ""
              }
            ],
            "src": "17126:401:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17706:244:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17723:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17734:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17716:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17716:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17716:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17757:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17768:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17753:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17753:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17773:2:36",
                        "type": "",
                        "value": "54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17746:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17746:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17746:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17796:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17807:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17792:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17792:18:36"
                      },
                      {
                        "hexValue": "72656c65617365486f6c643a2063616c6c6572206d7573742062652074686520",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17812:34:36",
                        "type": "",
                        "value": "releaseHold: caller must be the "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17785:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17785:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17785:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17867:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17878:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17863:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17863:18:36"
                      },
                      {
                        "hexValue": "686f6c642073656e646572206f72206e6f746172792e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17883:24:36",
                        "type": "",
                        "value": "hold sender or notary."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17856:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17856:52:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17856:52:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17917:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17929:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17940:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17925:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17925:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17917:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_bef427c6599b78a67199088855f3e7d148eff965aedbe04891332f4fd50908c0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17683:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17697:4:36",
                "type": ""
              }
            ],
            "src": "17532:418:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18129:226:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18146:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18157:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18139:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18139:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18139:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18180:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18191:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18176:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18176:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18196:2:36",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18169:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18169:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18169:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18219:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18230:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18215:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18215:18:36"
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18235:34:36",
                        "type": "",
                        "value": "ERC20: approve from the zero add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18208:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18208:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18208:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18290:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18301:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18286:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18286:18:36"
                      },
                      {
                        "hexValue": "72657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18306:6:36",
                        "type": "",
                        "value": "ress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18279:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18279:34:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18279:34:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18322:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18334:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18345:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18330:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18330:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18322:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18106:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18120:4:36",
                "type": ""
              }
            ],
            "src": "17955:400:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18534:237:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18551:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18562:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18544:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18544:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18544:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18585:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18596:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18581:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18581:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18601:2:36",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18574:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18574:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18574:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18624:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18635:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18620:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18620:18:36"
                      },
                      {
                        "hexValue": "486f6c6461626c65546f6b656e3a20616d6f756e742065786365656473206176",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18640:34:36",
                        "type": "",
                        "value": "HoldableToken: amount exceeds av"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18613:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18613:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18613:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18695:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18706:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18691:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18691:18:36"
                      },
                      {
                        "hexValue": "61696c61626c652062616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18711:17:36",
                        "type": "",
                        "value": "ailable balance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18684:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18684:45:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18684:45:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18738:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18750:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18761:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18746:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18746:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18738:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_de0c4f5e4acd44e6696778f13c28096ebd7a4c585872d8f8a461ad0da6c197c8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18511:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18525:4:36",
                "type": ""
              }
            ],
            "src": "18360:411:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18950:301:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18967:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18978:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18960:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18960:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18960:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19001:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19012:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18997:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18997:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19017:2:36",
                        "type": "",
                        "value": "71"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18990:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18990:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18990:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19040:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19051:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19036:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19036:18:36"
                      },
                      {
                        "hexValue": "65786563757465486f6c643a2063616e206e6f74207365742061207265636970",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19056:34:36",
                        "type": "",
                        "value": "executeHold: can not set a recip"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19029:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19029:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19029:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19111:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19122:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19107:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19107:18:36"
                      },
                      {
                        "hexValue": "69656e74206f6e20657865637574696f6e206173206974207761732073657420",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19127:34:36",
                        "type": "",
                        "value": "ient on execution as it was set "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19100:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19100:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19100:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19182:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19193:3:36",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19178:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19178:19:36"
                      },
                      {
                        "hexValue": "6f6e20686f6c64",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19199:9:36",
                        "type": "",
                        "value": "on hold"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19171:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19171:38:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19171:38:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19218:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19230:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19241:3:36",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19226:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19226:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19218:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e25b528742115f43b37a476a8df66d4a71e93f93d2391b99065533f9710ba899__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18927:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18941:4:36",
                "type": ""
              }
            ],
            "src": "18776:475:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19430:316:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19447:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19458:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19440:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19440:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19440:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19481:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19492:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19477:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19477:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19497:2:36",
                        "type": "",
                        "value": "86"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19470:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19470:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19470:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19520:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19531:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19516:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19516:18:36"
                      },
                      {
                        "hexValue": "65786563757465486f6c643a206d757374207061737320746865207265636970",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19536:34:36",
                        "type": "",
                        "value": "executeHold: must pass the recip"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19509:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19509:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19509:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19591:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19602:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19587:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19587:18:36"
                      },
                      {
                        "hexValue": "69656e74206f6e20657865637574696f6e206173207468652072656369706965",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19607:34:36",
                        "type": "",
                        "value": "ient on execution as the recipie"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19580:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19580:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19580:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19662:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19673:3:36",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19658:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19658:19:36"
                      },
                      {
                        "hexValue": "6e7420776173206e6f7420736574206f6e20686f6c64",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19679:24:36",
                        "type": "",
                        "value": "nt was not set on hold"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19651:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19651:53:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19651:53:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19713:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19725:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19736:3:36",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19721:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19721:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19713:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f15c04bad4a39568ed31ea3c6bc3695f659c7d3ffab2052da0b4914f04d3b76a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19407:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19421:4:36",
                "type": ""
              }
            ],
            "src": "19256:490:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19925:227:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19942:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19953:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19935:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19935:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19935:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19976:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19987:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19972:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19972:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19992:2:36",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19965:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19965:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19965:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20015:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20026:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20011:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20011:18:36"
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20031:34:36",
                        "type": "",
                        "value": "ERC20: decreased allowance below"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20004:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20004:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20004:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20086:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20097:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20082:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20082:18:36"
                      },
                      {
                        "hexValue": "207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20102:7:36",
                        "type": "",
                        "value": " zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20075:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20075:35:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20075:35:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20119:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20131:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20142:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20127:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20127:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20119:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19902:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19916:4:36",
                "type": ""
              }
            ],
            "src": "19751:401:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20331:181:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20348:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20359:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20341:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20341:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20341:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20382:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20393:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20378:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20378:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20398:2:36",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20371:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20371:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20371:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20421:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20432:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20417:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20417:18:36"
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20437:33:36",
                        "type": "",
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20410:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20410:61:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20410:61:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20480:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20492:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20503:2:36",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20488:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20488:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20480:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20308:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20322:4:36",
                "type": ""
              }
            ],
            "src": "20157:355:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20691:232:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20708:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20719:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20701:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20701:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20701:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20742:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20753:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20738:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20738:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20758:2:36",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20731:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20731:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20731:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20781:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20792:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20777:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20777:18:36"
                      },
                      {
                        "hexValue": "45524332305061757361626c653a20746f6b656e207472616e73666572207768",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20797:34:36",
                        "type": "",
                        "value": "ERC20Pausable: token transfer wh"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20770:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20770:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20770:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20852:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20863:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20848:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20848:18:36"
                      },
                      {
                        "hexValue": "696c6520706175736564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20868:12:36",
                        "type": "",
                        "value": "ile paused"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20841:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20841:40:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20841:40:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20890:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20902:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20913:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20898:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20898:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20890:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20668:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20682:4:36",
                "type": ""
              }
            ],
            "src": "20517:406:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21091:592:36",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21101:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21113:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21124:3:36",
                        "type": "",
                        "value": "224"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21109:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21109:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21101:4:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21137:29:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21155:3:36",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21160:1:36",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "21151:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21151:11:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21164:1:36",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "21147:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21147:19:36"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "21141:2:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21182:9:36"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "21203:6:36"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "21197:5:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21197:13:36"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "21212:2:36"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "21193:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21193:22:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21175:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21175:41:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21175:41:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21236:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21247:4:36",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21232:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21232:20:36"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "21268:6:36"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21276:4:36",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21264:3:36"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21264:17:36"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "21258:5:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21258:24:36"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "21284:2:36"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "21254:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21254:33:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21225:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21225:63:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21225:63:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21308:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21319:4:36",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21304:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21304:20:36"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "21340:6:36"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21348:4:36",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21336:3:36"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21336:17:36"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "21330:5:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21330:24:36"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "21356:2:36"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "21326:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21326:33:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21297:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21297:63:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21297:63:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21380:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21391:4:36",
                            "type": "",
                            "value": "0x60"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21376:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21376:20:36"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "21408:6:36"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "21416:4:36",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "21404:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21404:17:36"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "21398:5:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21398:24:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21369:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21369:54:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21369:54:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21443:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21454:4:36",
                            "type": "",
                            "value": "0x80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21439:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21439:20:36"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "21471:6:36"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "21479:4:36",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "21467:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21467:17:36"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "21461:5:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21461:24:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21432:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21432:54:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21432:54:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21506:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21517:4:36",
                            "type": "",
                            "value": "0xa0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21502:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21502:20:36"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "21534:6:36"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "21542:4:36",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "21530:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21530:17:36"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "21524:5:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21524:24:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21495:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21495:54:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21495:54:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21558:44:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "21588:6:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21596:4:36",
                            "type": "",
                            "value": "0xc0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21584:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21584:17:36"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "21578:5:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21578:24:36"
                  },
                  "variables": [
                    {
                      "name": "memberValue0",
                      "nodeType": "YulTypedName",
                      "src": "21562:12:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memberValue0",
                        "nodeType": "YulIdentifier",
                        "src": "21642:12:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21660:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21671:4:36",
                            "type": "",
                            "value": "0xc0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21656:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21656:20:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_enum_HoldStatusCode",
                      "nodeType": "YulIdentifier",
                      "src": "21611:30:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21611:66:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21611:66:36"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_ERC20HoldData_$5467_memory_ptr__to_t_struct$_ERC20HoldData_$5467_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21060:9:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "21071:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21082:4:36",
                "type": ""
              }
            ],
            "src": "20928:755:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21789:76:36",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21799:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21811:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21822:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21807:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21807:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21799:4:36"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21841:9:36"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "21852:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21834:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21834:25:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21834:25:36"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21758:9:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "21769:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21780:4:36",
                "type": ""
              }
            ],
            "src": "21688:177:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22027:162:36",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "22037:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22049:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22060:2:36",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22045:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22045:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22037:4:36"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22079:9:36"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "22090:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22072:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22072:25:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22072:25:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22117:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22128:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22113:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22113:18:36"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "22133:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22106:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22106:34:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22106:34:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22160:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22171:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22156:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22156:18:36"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "22176:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22149:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22149:34:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22149:34:36"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_bytes32__to_t_uint256_t_uint256_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21980:9:36",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "21991:6:36",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "21999:6:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "22007:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22018:4:36",
                "type": ""
              }
            ],
            "src": "21870:319:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22291:87:36",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "22301:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22313:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22324:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22309:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22309:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22301:4:36"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22343:9:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "22358:6:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22366:4:36",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "22354:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22354:17:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22336:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22336:36:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22336:36:36"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "22260:9:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "22271:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22282:4:36",
                "type": ""
              }
            ],
            "src": "22194:184:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22431:80:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "22458:22:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "22460:16:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22460:18:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "22460:18:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "22447:1:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "22454:1:36"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "22450:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22450:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "22444:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22444:13:36"
                  },
                  "nodeType": "YulIf",
                  "src": "22441:39:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22489:16:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "22500:1:36"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "22503:1:36"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22496:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22496:9:36"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "22489:3:36"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "22414:1:36",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "22417:1:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "22423:3:36",
                "type": ""
              }
            ],
            "src": "22383:128:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22565:76:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "22587:22:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "22589:16:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22589:18:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "22589:18:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "22581:1:36"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "22584:1:36"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "22578:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22578:8:36"
                  },
                  "nodeType": "YulIf",
                  "src": "22575:34:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22618:17:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "22630:1:36"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "22633:1:36"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "22626:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22626:9:36"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "22618:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "22547:1:36",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "22550:1:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "22556:4:36",
                "type": ""
              }
            ],
            "src": "22516:125:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22699:205:36",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "22709:10:36",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "22718:1:36",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "22713:1:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "22778:63:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "22803:3:36"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "22808:1:36"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "22799:3:36"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "22799:11:36"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "22822:3:36"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "22827:1:36"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "22818:3:36"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "22818:11:36"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "22812:5:36"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "22812:18:36"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "22792:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22792:39:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "22792:39:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "22739:1:36"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "22742:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "22736:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22736:13:36"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "22750:19:36",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "22752:15:36",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "22761:1:36"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "22764:2:36",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "22757:3:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22757:10:36"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "22752:1:36"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "22732:3:36",
                    "statements": []
                  },
                  "src": "22728:113:36"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "22867:31:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "22880:3:36"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "22885:6:36"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "22876:3:36"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "22876:16:36"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "22894:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "22869:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22869:27:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "22869:27:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "22856:1:36"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "22859:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "22853:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22853:13:36"
                  },
                  "nodeType": "YulIf",
                  "src": "22850:48:36"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "22677:3:36",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "22682:3:36",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "22687:6:36",
                "type": ""
              }
            ],
            "src": "22646:258:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22964:325:36",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "22974:22:36",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22988:1:36",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "22991:4:36"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "22984:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22984:12:36"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "22974:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "23005:38:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "23035:4:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23041:1:36",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "23031:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23031:12:36"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "23009:18:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "23082:31:36",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "23084:27:36",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "23098:6:36"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "23106:4:36",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "23094:3:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "23094:17:36"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "23084:6:36"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "23062:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "23055:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23055:26:36"
                  },
                  "nodeType": "YulIf",
                  "src": "23052:61:36"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "23172:111:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "23193:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "23200:3:36",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "23205:10:36",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "23196:3:36"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "23196:20:36"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "23186:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "23186:31:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "23186:31:36"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "23237:1:36",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "23240:4:36",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "23230:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "23230:15:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "23230:15:36"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "23265:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "23268:4:36",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "23258:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "23258:15:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "23258:15:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "23128:18:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "23151:6:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23159:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "23148:2:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23148:14:36"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "23125:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23125:38:36"
                  },
                  "nodeType": "YulIf",
                  "src": "23122:161:36"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "22944:4:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "22953:6:36",
                "type": ""
              }
            ],
            "src": "22909:380:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23326:95:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23343:1:36",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23350:3:36",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23355:10:36",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "23346:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23346:20:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23336:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23336:31:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23336:31:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23383:1:36",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23386:4:36",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23376:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23376:15:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23376:15:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23407:1:36",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23410:4:36",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "23400:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23400:15:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23400:15:36"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "23294:127:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23458:95:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23475:1:36",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23482:3:36",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23487:10:36",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "23478:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23478:20:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23468:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23468:31:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23468:31:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23515:1:36",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23518:4:36",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23508:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23508:15:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23508:15:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23539:1:36",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23542:4:36",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "23532:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23532:15:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23532:15:36"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "23426:127:36"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32t_addresst_addresst_uint256t_uint256t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_decode_tuple_t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32t_bytes32t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_enum_HoldStatusCode(value, pos)\n    {\n        if iszero(lt(value, 7))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(pos, value)\n    }\n    function abi_encode_tuple_packed_t_address_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value4, value3, value2, value1, value0) -> end\n    {\n        let _1 := not(sub(shl(96, 1), 1))\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), and(shl(96, value1), _1))\n        mstore(add(pos, 40), and(shl(96, value2), _1))\n        mstore(add(pos, 60), and(shl(96, value3), _1))\n        mstore(add(pos, 80), value4)\n        end := add(pos, 112)\n    }\n    function abi_encode_tuple_packed_t_address_t_address_t_uint256_t_uint256_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value4, value3, value2, value1, value0) -> end\n    {\n        let _1 := not(sub(shl(96, 1), 1))\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), and(shl(96, value1), _1))\n        mstore(add(pos, 40), value2)\n        mstore(add(pos, 72), value3)\n        mstore(add(pos, 104), value4)\n        end := add(pos, 136)\n    }\n    function abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, value0)\n        end := add(pos, 32)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_a2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b4__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"ERC1820_ACCEPT_MAGIC\")\n        end := add(pos, 20)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_enum$_HoldStatusCode_$5396__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        abi_encode_enum_HoldStatusCode(value0, headStart)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_06760903a1a137bd7e8f70a654f085804529f6cf9f19abebbae2f256bb6f7248__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"executeHold: caller must be the \")\n        mstore(add(headStart, 96), \"hold notary\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0892ca814e3c1b3a07b90f43daa4885ed2a91182b50bd144f324a7ba002d6e25__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"hold: notary must not be a zero \")\n        mstore(add(headStart, 96), \"address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Roles: account already has role\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1586263b6ed81250e09e3511dae8b28d2c9acb5016a4c7516ff2ccacc49700c4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Hold is not in Ordered status\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_19034bf26bc3742bd67470410ce64f54edcc10d93f84f4739233c2ff57191b75__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"hold: amount exceeds available b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1f68c2a16436ef9beba75fe6c860676b87d7e7c18f5be2e4c797c12ed8ef7eb4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"executeHold: need preimage if th\")\n        mstore(add(headStart, 96), \"e hold has a lock hash\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3fb1032916a9fa7eb9854a20718a129abc1980a1ddced64bc82359ff8f32fdb5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"hold: id already exists\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_493d53730a9bdfe5ea17be5fb48f7cf625c731a31a9424f72b43547622da1e56__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"releaseHold: can only release af\")\n        mstore(add(headStart, 96), \"ter the expiration date.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4cc511149ca81358a86c3964feb50f2ffdb7c4ba6870b88f6af6e124d9c0f7af__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"hold: amount must be greater tha\")\n        mstore(add(headStart, 96), \"n zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_501c71291b34e8ea8c38d27b05abbbca9ed16d8e393dcf6a21d81509bdc46bf9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"executeHold: recipient must not \")\n        mstore(add(headStart, 96), \"be a zero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7b67df7aff43b902379f5b51d42b44d55c3dd66fdd309918f58eaabd4d470b8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 51)\n        mstore(add(headStart, 64), \"executeHold: preimage hash does \")\n        mstore(add(headStart, 96), \"not match lock hash\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Roles: account does not have rol\")\n        mstore(add(headStart, 96), \"e\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Roles: account is the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds allow\")\n        mstore(add(headStart, 96), \"ance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_bef427c6599b78a67199088855f3e7d148eff965aedbe04891332f4fd50908c0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"releaseHold: caller must be the \")\n        mstore(add(headStart, 96), \"hold sender or notary.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_de0c4f5e4acd44e6696778f13c28096ebd7a4c585872d8f8a461ad0da6c197c8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"HoldableToken: amount exceeds av\")\n        mstore(add(headStart, 96), \"ailable balance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e25b528742115f43b37a476a8df66d4a71e93f93d2391b99065533f9710ba899__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 71)\n        mstore(add(headStart, 64), \"executeHold: can not set a recip\")\n        mstore(add(headStart, 96), \"ient on execution as it was set \")\n        mstore(add(headStart, 128), \"on hold\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_f15c04bad4a39568ed31ea3c6bc3695f659c7d3ffab2052da0b4914f04d3b76a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 86)\n        mstore(add(headStart, 64), \"executeHold: must pass the recip\")\n        mstore(add(headStart, 96), \"ient on execution as the recipie\")\n        mstore(add(headStart, 128), \"nt was not set on hold\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC20Pausable: token transfer wh\")\n        mstore(add(headStart, 96), \"ile paused\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_struct$_ERC20HoldData_$5467_memory_ptr__to_t_struct$_ERC20HoldData_$5467_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 224)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(mload(value0), _1))\n        mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), _1))\n        mstore(add(headStart, 0x40), and(mload(add(value0, 0x40)), _1))\n        mstore(add(headStart, 0x60), mload(add(value0, 0x60)))\n        mstore(add(headStart, 0x80), mload(add(value0, 0x80)))\n        mstore(add(headStart, 0xa0), mload(add(value0, 0xa0)))\n        let memberValue0 := mload(add(value0, 0xc0))\n        abi_encode_enum_HoldStatusCode(memberValue0, add(headStart, 0xc0))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_bytes32__to_t_uint256_t_uint256_t_bytes32__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n}",
      "id": 36,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "1050:12166:30:-:0;;;1734:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1815:4;1821:6;1829:8;1815:4;1821:6;867:23:0;665:10:8;867:9:0;:23::i;:::-;1962:13:2;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1985:17:2;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;924:7:1;:15;;-1:-1:-1;;924:15:1;;;-1:-1:-1;512:22:27;523:10;512;:22::i;:::-;639:45:31::1;672:11;;;;;;;;;;;;;-1:-1:-1::0;;;672:11:31::1;;::::0;639:32:::1;;;;;:45;;:::i;:::-;690:22;::::0;;;::::1;::::0;-1:-1:-1;1050:12166:30;;-1:-1:-1;;;;1050:12166:30;2041:169:0;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;1032:119:27:-;1088:21;1101:7;1088:8;:12;;;;;;:21;;;;:::i;:::-;1124:20;;-1:-1:-1;;;;;1124:20:27;;;;;;;;1032:119;:::o;676:141:16:-;808:4;744:16;:61;788:14;771:32;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;771:32:16;;;;;;761:43;;771:32;761:43;;;;744:61;;;;;;;;;;-1:-1:-1;744:61:16;:68;;-1:-1:-1;;744:68:16;;;;;;;;;;-1:-1:-1;676:141:16:o;414:175:29:-;491:18;495:4;501:7;491:3;:18::i;:::-;490:19;482:63;;;;-1:-1:-1;;;482:63:29;;1905:2:36;482:63:29;;;1887:21:36;1944:2;1924:18;;;1917:30;1983:33;1963:18;;;1956:61;2034:18;;482:63:29;;;;;;;;;-1:-1:-1;;;;;555:20:29;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;555:27:29;578:4;555:27;;;414:175::o;933:200::-;1005:4;-1:-1:-1;;;;;1029:21:29;;1021:68;;;;-1:-1:-1;;;1021:68:29;;2265:2:36;1021:68:29;;;2247:21:36;2304:2;2284:18;;;2277:30;2343:34;2323:18;;;2316:62;-1:-1:-1;;;2394:18:36;;;2387:32;2436:19;;1021:68:29;2063:398:36;1021:68:29;-1:-1:-1;;;;;;1106:20:29;:11;:20;;;;;;;;;;;;;;;933:200::o;1050:12166:30:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1050:12166:30;;;-1:-1:-1;1050:12166:30;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:686:36;68:5;121:3;114:4;106:6;102:17;98:27;88:55;;139:1;136;129:12;88:55;162:13;;-1:-1:-1;;;;;224:10:36;;;221:36;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:36;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:72;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;577:3;570:4;565:2;557:6;553:15;549:26;546:35;543:55;;;594:1;591;584:12;543:55;607:63;667:2;660:4;652:6;648:17;641:4;633:6;629:17;607:63;:::i;:::-;688:6;14:686;-1:-1:-1;;;;;;14:686:36:o;705:712::-;811:6;819;827;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;923:16;;-1:-1:-1;;;;;988:14:36;;;985:34;;;1015:1;1012;1005:12;985:34;1038:61;1091:7;1082:6;1071:9;1067:22;1038:61;:::i;:::-;1028:71;;1145:2;1134:9;1130:18;1124:25;1108:41;;1174:2;1164:8;1161:16;1158:36;;;1190:1;1187;1180:12;1158:36;;1213:63;1268:7;1257:8;1246:9;1242:24;1213:63;:::i;:::-;1203:73;;;1319:2;1308:9;1304:18;1298:25;1363:4;1356:5;1352:16;1345:5;1342:27;1332:55;;1383:1;1380;1373:12;1332:55;1406:5;1396:15;;;705:712;;;;;:::o;1422:276::-;1553:3;1591:6;1585:13;1607:53;1653:6;1648:3;1641:4;1633:6;1629:17;1607:53;:::i;:::-;1676:16;;;;;1422:276;-1:-1:-1;;1422:276:36:o;2466:258::-;2538:1;2548:113;2562:6;2559:1;2556:13;2548:113;;;2638:11;;;2632:18;2619:11;;;2612:39;2584:2;2577:10;2548:113;;;2679:6;2676:1;2673:13;2670:48;;;2714:1;2705:6;2700:3;2696:16;2689:27;2670:48;;2466:258;;;:::o;2729:380::-;2808:1;2804:12;;;;2851;;;2872:61;;2926:4;2918:6;2914:17;2904:27;;2872:61;2979:2;2971:6;2968:14;2948:18;2945:38;2942:161;;;3025:10;3020:3;3016:20;3013:1;3006:31;3060:4;3057:1;3050:15;3088:4;3085:1;3078:15;2942:161;;2729:380;;;:::o;3114:127::-;3175:10;3170:3;3166:20;3163:1;3156:31;3206:4;3203:1;3196:15;3230:4;3227:1;3220:15;3114:127;1050:12166:30;;;;;;;;;;;;",
  "deployedSourceMap": "1050:12166:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:98:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12235:299:30;;;;;;:::i;:::-;;:::i;:::-;;;6978:14:36;;6971:22;6953:41;;6941:2;6926:18;12235:299:30;6813:187:36;10834:166:30;;;;;;:::i;:::-;;:::i;:::-;;;7151:25:36;;;7139:2;7124:18;10834:166:30;7005:177:36;3162:106:2;3249:12;;3162:106;;11743:363:30;;;;;;:::i;:::-;;:::i;363:309:16:-;;;;;;:::i;:::-;;:::i;849:96:27:-;;;;;;:::i;:::-;;:::i;:::-;;1325:94:31;;;22366:4:36;1405:9:31;22354:17:36;22336:36;;22324:2;22309:18;1325:94:31;22194:184:36;5677:212:2;;;;;;:::i;:::-;;:::i;1659:122:31:-;;;;;;:::i;:::-;;:::i;12625:230:30:-;;;;;;:::i;:::-;;:::i;6212:606::-;;;;;;:::i;:::-;;:::i;1424:41::-;;;;;;1041:84:1;1111:7;;;;1041:84;;7185:801:30;;;;;;:::i;:::-;;:::i;10222:147::-;;;;;;:::i;:::-;;:::i;1605:92:0:-;;;:::i;12950:264:30:-;;;;;;:::i;:::-;;:::i;973:85:0:-;;;:::i;:::-;;;;;;;:::i;9143:883:30:-;;;;;;:::i;:::-;;:::i;2285:102:2:-;;;:::i;753:90:27:-;;;;;;:::i;:::-;;:::i;951:75::-;;;:::i;2359:486:30:-;;;;;;:::i;:::-;;:::i;:::-;;;;7640:25:36;;;7696:2;7681:18;;7674:34;;;;7613:18;2359:486:30;7466:248:36;6376:405:2;;;;;;:::i;:::-;;:::i;11333:305:30:-;;;;;;:::i;:::-;;:::i;640:107:27:-;;;;;;:::i;:::-;;:::i;11106:126:30:-;;;;;;:::i;:::-;11172:14;11205:13;;;:5;:13;;;;;:20;;;;;;11106:126;;;;;;;;:::i;3743:1420::-;;;;;;:::i;:::-;;:::i;10525:131::-;;;;;;:::i;:::-;-1:-1:-1;;;;;10621:28:30;10595:7;10621:28;;;:19;:28;;;;;;;10525:131;5169:133;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3884:149:2:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3999:18:2;;;3973:7;3999:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3884:149;1846:189:0;;;;;;:::i;:::-;;:::i;5498:449:30:-;;;;;;:::i;:::-;;:::i;1847:432::-;;;;;;:::i;:::-;2095:167;;-1:-1:-1;;;;;;5318:2:36;5354:15;;;5350:24;;2095:167:30;;;5338:37:36;5409:15;;;5405:24;5391:12;;;5384:46;5446:12;;;5439:28;;;5483:12;;;5476:28;;;5520:13;;;5513:29;;;2037:14:30;;5558:13:36;;2095:167:30;;;;;;;;;;;;2072:200;;;;;;2063:209;;1847:432;;;;;;;;2074:98:2;2128:13;2160:5;2153:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:98;:::o;12235:299:30:-;12362:35;;-1:-1:-1;;;12362:35:30;;12325:4;;12401:6;;12362:4;;:23;;:35;;12386:10;;12362:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;;12341:139;;;;-1:-1:-1;;;12341:139:30;;;;;;;:::i;:::-;;;;;;;;;12497:30;12511:7;12520:6;12497:13;:30::i;:::-;12490:37;;12235:299;;;;;:::o;10834:166::-;-1:-1:-1;;;;;10964:28:30;;10909:7;10964:28;;;:19;:28;;;;;;10935:58;;:24;10984:7;10935:15;:24::i;:::-;:28;;:58::i;11743:363::-;11923:31;;-1:-1:-1;;;11923:31:30;;11886:4;;11958:6;;11923:4;;:23;;:31;;11947:6;;11923:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:41;;11902:135;;;;-1:-1:-1;;;11902:135:30;;;;;;;:::i;:::-;12054:45;12073:6;12081:9;12092:6;12054:18;:45::i;:::-;12047:52;11743:363;-1:-1:-1;;;;11743:363:30:o;363:309:16:-;543:7;563:31;;;:16;:31;;;;;;;;560:108;;;262:40;;-1:-1:-1;;;262:40:16;;;6531:35:36;6582:12;;262:40:16;;;;;;;;;;;;252:51;;;;;;604:27;;;;560:108;-1:-1:-1;652:9:16;;;849:96:27;595:20;604:10;595:8;:20::i;:::-;587:29;;;;;;916:22:::1;930:7;916:13;:22::i;:::-;849:96:::0;:::o;5677:212:2:-;665:10:8;5765:4:2;5813:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5813:34:2;;;;;;;;;;5765:4;;5781:80;;5804:7;;5813:47;;5850:10;;5813:47;:::i;:::-;5781:8;:80::i;:::-;-1:-1:-1;5878:4:2;5677:212;;;;:::o;1659:122:31:-;1727:4;595:20:27;604:10;595:8;:20::i;:::-;587:29;;;;;;1741:16:31::1;1747:2;1751:5;1741;:16::i;12625:230:30:-:0;12702:35;;-1:-1:-1;;;12702:35:30;;12741:6;;12702:4;;:23;;:35;;12726:10;;12702:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;;12681:139;;;;-1:-1:-1;;;12681:139:30;;;;;;;:::i;:::-;12830:18;12841:6;12830:10;:18::i;6212:606::-;6353:1;6318:13;;;:5;:13;;;;;:23;;;-1:-1:-1;;;;;6318:23:30;6297:170;;;;-1:-1:-1;;;6297:170:30;;;;;;;:::i;:::-;6517:1;6481:13;;;:5;:13;;;;;:24;;;:38;6477:265;;6608:38;6632:12;6615:30;;;;;;5711:19:36;;5755:2;5746:12;;5582:182;6615:30:30;;;;-1:-1:-1;;6615:30:30;;;;;;;;;;6608:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6560:13;;;;:5;:13;;;;;:24;;;:86;6535:196;;;;-1:-1:-1;;;6535:196:30;;;;;;;:::i;:::-;6787:13;;;;:5;:13;;;;;:23;;;6752:59;;6765:6;;6773:12;;-1:-1:-1;;;;;6787:23:30;6752:12;:59::i;:::-;6212:606;;:::o;7185:801::-;7375:1;7340:13;;;:5;:13;;;;;:23;;;-1:-1:-1;;;;;7340:23:30;:37;7319:155;;;;-1:-1:-1;;;7319:155:30;;18978:2:36;7319:155:30;;;18960:21:36;19017:2;18997:18;;;18990:30;19056:34;19036:18;;;19029:62;19127:34;19107:18;;;19100:62;-1:-1:-1;;;19178:19:36;;;19171:38;19226:19;;7319:155:30;18776:475:36;7319:155:30;-1:-1:-1;;;;;7505:23:30;;7484:119;;;;-1:-1:-1;;;7484:119:30;;14108:2:36;7484:119:30;;;14090:21:36;14147:2;14127:18;;;14120:30;14186:34;14166:18;;;14159:62;-1:-1:-1;;;14237:18:36;;;14230:47;14294:19;;7484:119:30;13906:413:36;7484:119:30;7653:1;7617:13;;;:5;:13;;;;;:24;;;:38;7613:265;;7744:38;7768:12;7751:30;;;;;;5711:19:36;;5755:2;5746:12;;5582:182;7751:30:30;;;;-1:-1:-1;;7751:30:30;;;;;;;;;;7744:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7696:13;;;;:5;:13;;;;;:24;;;:86;7671:196;;;;-1:-1:-1;;;7671:196:30;;;;;;;:::i;:::-;7888:13;;;;:5;:13;;;;;:23;;:35;;-1:-1:-1;;;;;;7888:35:30;-1:-1:-1;;;;;7888:35:30;;;;;7934:45;7888:13;7955:12;7888:35;7934:12;:45::i;:::-;7185:801;;;:::o;10222:147::-;10303:7;10329:24;10345:7;10329:15;:24::i;1605:92:0:-;665:10:8;1185:7:0;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:0;;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;12950:264:30:-;13048:35;;-1:-1:-1;;;13048:35:30;;13087:6;;13048:4;;:23;;:35;;13072:10;;13048:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;;13027:139;;;;-1:-1:-1;;;13027:139:30;;;;;;;:::i;:::-;13176:31;13191:7;13200:6;13176:14;:31::i;973:85:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;;973:85::o;9143:883:30:-;9203:6;1559:22;1535:13;;;;:5;:13;;;;;:20;;;;;;;;:46;;;;;;;:::i;:::-;;:120;;;-1:-1:-1;1621:34:30;1597:13;;;;:5;:13;;;;;:20;;;;;;;;:58;;;;;;;:::i;:::-;;1535:120;1514:196;;;;-1:-1:-1;;;1514:196:30;;;;;;;:::i;:::-;9225:13:::1;::::0;;;:5:::1;:13;::::0;;;;:20;-1:-1:-1;;;;;9225:20:30::1;9249:10;9225:34;9221:522;;;9318:13;::::0;;;:5:::1;:13;::::0;;;;:32:::1;;::::0;9300:15:::1;:50;9275:165;;;::::0;-1:-1:-1;;;9275:165:30;;13276:2:36;9275:165:30::1;::::0;::::1;13258:21:36::0;13315:2;13295:18;;;13288:30;13354:34;13334:18;;;13327:62;-1:-1:-1;;;13405:18:36;;;13398:54;13469:19;;9275:165:30::1;13074:420:36::0;9275:165:30::1;9454:13;::::0;;;:5:::1;:13;::::0;;;;9477:35:::1;9454:20:::0;;::::1;:58:::0;;-1:-1:-1;;9454:58:30::1;::::0;;::::1;::::0;;9221:522:::1;;;9533:13;::::0;;;:5:::1;:13;::::0;;;;:20:::1;;::::0;-1:-1:-1;;;;;9533:20:30::1;9557:10;9533:34;9529:214;;9583:64;::::0;-1:-1:-1;;;9583:64:30;;17734:2:36;9583:64:30::1;::::0;::::1;17716:21:36::0;17773:2;17753:18;;;17746:30;17812:34;17792:18;;;17785:62;-1:-1:-1;;;17863:18:36;;;17856:52;17925:19;;9583:64:30::1;17532:418:36::0;9529:214:30::1;9678:13;::::0;;;:5:::1;:13;::::0;;;;:20:::1;;:54:::0;;-1:-1:-1;;9678:54:30::1;9701:31;9678:54;::::0;;9529:214:::1;9869:13;::::0;;;:5:::1;:13;::::0;;;;;;;:20:::1;::::0;::::1;::::0;9830;;-1:-1:-1;;;;;9830:20:30::1;9810:41:::0;;:19:::1;:41:::0;;;;;;;:89:::1;::::0;:45:::1;:89::i;:::-;9753:54;9773:13:::0;;;:5:::1;:13;::::0;;;;;;;:33;;-1:-1:-1;;;;;9773:33:30::1;9753:54:::0;;:19:::1;:54:::0;;;;;:146;;;;9951:13;;;;;;:20:::1;;::::0;9929:17:::1;::::0;:43:::1;::::0;:21:::1;:43::i;:::-;9909:17;:63:::0;9988:31:::1;::::0;10000:6;;9988:31:::1;::::0;::::1;::::0;10008:10:::1;::::0;9988:31:::1;:::i;:::-;;;;;;;;9143:883:::0;;:::o;2285:102:2:-;2341:13;2373:7;2366:14;;;;;:::i;753:90:27:-;595:20;604:10;595:8;:20::i;:::-;587:29;;;;;;817:19:::1;828:7;817:10;:19::i;951:75::-:0;994:25;1008:10;994:13;:25::i;2359:486:30:-;2569:182;;;-1:-1:-1;;;;;;2607:4:30;4756:2:36;4792:15;;;4788:24;;2569:182:30;;;;4776:37:36;;;;4847:15;;;4843:24;;4829:12;;;4822:46;4902:15;;;4898:24;;4884:12;;;4877:46;4957:15;;;;4953:24;;;4939:12;;;4932:46;4994:12;;;;4987:28;;;;2569:182:30;;;;;;;;;;5031:13:36;;;;2569:182:30;;2559:193;;;;;;-1:-1:-1;2779:23:30;;;:13;:23;;;;;;;2559:193;;2359:486::o;6376:405:2:-;665:10:8;6469:4:2;6512:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6512:34:2;;;;;;;;;;6564:35;;;;6556:85;;;;-1:-1:-1;;;6556:85:2;;19953:2:36;6556:85:2;;;19935:21:36;19992:2;19972:18;;;19965:30;20031:34;20011:18;;;20004:62;-1:-1:-1;;;20082:18:36;;;20075:35;20127:19;;6556:85:2;19751:401:36;6556:85:2;6675:67;665:10:8;6698:7:2;6726:15;6707:16;:34;6675:8;:67::i;:::-;-1:-1:-1;6770:4:2;;6376:405;-1:-1:-1;;;6376:405:2:o;11333:305:30:-;11463:35;;-1:-1:-1;;;11463:35:30;;11426:4;;11502:6;;11463:4;;:23;;:35;;11487:10;;11463:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;;11442:139;;;;-1:-1:-1;;;11442:139:30;;;;;;;:::i;:::-;11598:33;11613:9;11624:6;11598:14;:33::i;640:107:27:-;696:4;719:21;:8;732:7;719:12;:21::i;3743:1420:30:-;-1:-1:-1;;;;;3971:20:30;;3950:106;;;;-1:-1:-1;;;3950:106:30;;9348:2:36;3950:106:30;;;9330:21:36;9387:2;9367:18;;;9360:30;9426:34;9406:18;;;9399:62;-1:-1:-1;;;9477:18:36;;;9470:37;9524:19;;3950:106:30;9146:403:36;3950:106:30;4074:11;4066:62;;;;-1:-1:-1;;;4066:62:30;;13701:2:36;4066:62:30;;;13683:21:36;13740:2;13720:18;;;13713:30;13779:34;13759:18;;;13752:62;-1:-1:-1;;;13830:18:36;;;13823:36;13876:19;;4066:62:30;13499:402:36;4066:62:30;4159:35;;-1:-1:-1;;;4159:35:30;;4198:6;;4159:4;;:23;;:35;;4183:10;;4159:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;;4138:130;;;;-1:-1:-1;;;4138:130:30;;10877:2:36;4138:130:30;;;10859:21:36;10916:2;10896:18;;;10889:30;10955:34;10935:18;;;10928:62;-1:-1:-1;;;11006:18:36;;;10999:36;11052:19;;4138:130:30;10675:402:36;4138:130:30;4280:16;4301:117;4333:6;665:10:8;4379:9:30;4402:6;4301:18;:117::i;:::-;-1:-1:-1;4429:23:30;;;;:13;:23;;;;;:32;;;4279:139;;-1:-1:-1;4493:13:30;;;;:5;:13;;;;;:20;;;;;;;;:50;;;;;;;:::i;:::-;;4472:120;;;;-1:-1:-1;;;4472:120:30;;12517:2:36;4472:120:30;;;12499:21:36;12556:2;12536:18;;;12529:30;-1:-1:-1;;;12575:18:36;;;12568:53;12638:18;;4472:120:30;12315:347:36;4472:120:30;4618:200;;;;;;;;4645:10;-1:-1:-1;;;;;4618:200:30;;;;;4669:9;-1:-1:-1;;;;;4618:200:30;;;;;4692:6;-1:-1:-1;;;;;4618:200:30;;;;;4712:6;4618:200;;;;4732:18;4618:200;;;;4764:8;4618:200;;;;4786:22;4618:200;;;;;;;;:::i;:::-;;;4602:13;;;;:5;:13;;;;;;;;;:216;;;;-1:-1:-1;;;;;;4602:216:30;;;-1:-1:-1;;;;;4602:216:30;;;;;;;;;;-1:-1:-1;4602:216:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:13;;:216;;;;-1:-1:-1;;4602:216:30;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;4882:10:30;4862:31;;;;:19;:31;;;;;;:65;;-1:-1:-1;4911:6:30;4862:35;:65::i;:::-;4848:10;4828:31;;;;:19;:31;;;;;:99;4957:17;;:29;;4979:6;4957:21;:29::i;:::-;4937:17;:49;5002:154;;;22072:25:36;;;22128:2;22113:18;;22106:34;;;22156:18;;;22149:34;;;-1:-1:-1;;;;;5002:154:30;;;;;;;;5023:6;;5002:154;;22060:2:36;22045:18;5002:154:30;;;;;;;3940:1223;3743:1420;;;;;;:::o;5169:133::-;5243:20;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5243:20:30;5282:13;;;;:5;:13;;;;;;;;;5275:20;;;;;;;;;-1:-1:-1;;;;;5275:20:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5282:13;5275:20;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;5275:20:30;5169:133;-1:-1:-1;;5169:133:30:o;1846:189:0:-;665:10:8;1185:7:0;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:0;;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:0;;11707:2:36;1926:73:0::1;::::0;::::1;11689:21:36::0;11746:2;11726:18;;;11719:30;11785:34;11765:18;;;11758:62;-1:-1:-1;;;11836:18:36;;;11829:36;11882:19;;1926:73:0::1;11505:402:36::0;1926:73:0::1;2009:19;2019:8;2009:9;:19::i;5498:449:30:-:0;5617:1;5582:13;;;:5;:13;;;;;:23;;;-1:-1:-1;;;;;5582:23:30;5561:170;;;;-1:-1:-1;;;5561:170:30;;;;;;;:::i;:::-;5798:1;5762:13;;;:5;:13;;;;;:24;;;:38;5741:139;;;;-1:-1:-1;;;5741:139:30;;11284:2:36;5741:139:30;;;11266:21:36;11323:2;11303:18;;;11296:30;11362:34;11342:18;;;11335:62;-1:-1:-1;;;11413:18:36;;;11406:52;11475:19;;5741:139:30;11082:418:36;5741:139:30;5891:49;5916:13;;;:5;:13;;;;;:23;;;5891:49;;5904:6;;-1:-1:-1;;;;;5916:23:30;5891:12;:49::i;676:141:16:-;808:4;744:16;:61;788:14;771:32;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;771:32:16;;;;;;761:43;;771:32;761:43;;;;744:61;;;;;;;;;;-1:-1:-1;744:61:16;:68;;-1:-1:-1;;744:68:16;;;;;;;;;;-1:-1:-1;676:141:16:o;414:175:29:-;491:18;495:4;501:7;491:3;:18::i;:::-;490:19;482:63;;;;-1:-1:-1;;;482:63:29;;9756:2:36;482:63:29;;;9738:21:36;9795:2;9775:18;;;9768:30;9834:33;9814:18;;;9807:61;9885:18;;482:63:29;9554:355:36;482:63:29;-1:-1:-1;;;;;555:20:29;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;555:27:29;578:4;555:27;;;414:175::o;4171:166:2:-;4254:4;4270:39;665:10:8;4293:7:2;4302:6;4270:8;:39::i;3326:125::-;-1:-1:-1;;;;;3426:18:2;3400:7;3426:18;;;:9;:18;;;;;;;3326:125::o;3039:96:11:-;3097:7;3123:5;3127:1;3123;:5;:::i;4804:478:2:-;4940:4;4956:36;4966:6;4974:9;4985:6;4956:9;:36::i;:::-;-1:-1:-1;;;;;5030:19:2;;5003:24;5030:19;;;:11;:19;;;;;;;;665:10:8;5030:33:2;;;;;;;;5081:26;;;;5073:79;;;;-1:-1:-1;;;5073:79:2;;15348:2:36;5073:79:2;;;15330:21:36;15387:2;15367:18;;;15360:30;15426:34;15406:18;;;15399:62;-1:-1:-1;;;15477:18:36;;;15470:38;15525:19;;5073:79:2;15146:404:36;5073:79:2;5186:57;5195:6;665:10:8;5236:6:2;5217:16;:25;5186:8;:57::i;:::-;-1:-1:-1;5271:4:2;;4804:478;-1:-1:-1;;;;4804:478:2:o;1157:127:27:-;1216:24;:8;1232:7;1216:15;:24::i;:::-;1255:22;;-1:-1:-1;;;;;1255:22:27;;;;;;;;1157:127;:::o;9952:370:2:-;-1:-1:-1;;;;;10083:19:2;;10075:68;;;;-1:-1:-1;;;10075:68:2;;18157:2:36;10075:68:2;;;18139:21:36;18196:2;18176:18;;;18169:30;18235:34;18215:18;;;18208:62;-1:-1:-1;;;18286:18:36;;;18279:34;18330:19;;10075:68:2;17955:400:36;10075:68:2;-1:-1:-1;;;;;10161:21:2;;10153:68;;;;-1:-1:-1;;;10153:68:2;;12114:2:36;10153:68:2;;;12096:21:36;12153:2;12133:18;;;12126:30;12192:34;12172:18;;;12165:62;-1:-1:-1;;;12243:18:36;;;12236:32;12285:19;;10153:68:2;11912:398:36;10153:68:2;-1:-1:-1;;;;;10232:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10283:32;;7151:25:36;;;10283:32:2;;7124:18:36;10283:32:2;;;;;;;9952:370;;;:::o;8244:389::-;-1:-1:-1;;;;;8327:21:2;;8319:65;;;;-1:-1:-1;;;8319:65:2;;20359:2:36;8319:65:2;;;20341:21:36;20398:2;20378:18;;;20371:30;20437:33;20417:18;;;20410:61;20488:18;;8319:65:2;20157:355:36;8319:65:2;8395:49;8424:1;8428:7;8437:6;8395:20;:49::i;:::-;8471:6;8455:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8487:18:2;;;;;;:9;:18;;;;;:28;;8509:6;;8487:18;:28;;8509:6;;8487:28;:::i;:::-;;;;-1:-1:-1;;8530:37:2;;7151:25:36;;;-1:-1:-1;;;;;8530:37:2;;;8547:1;;-1:-1:-1;;;;;;;;;;;8530:37:2;7139:2:36;7124:18;8530:37:2;;;;;;;6212:606:30;;:::o;487:89:4:-;542:27;665:10:8;562:6:4;542:5;:27::i;7992:943:30:-;8117:6;1559:22;1535:13;;;;:5;:13;;;;;:20;;;;;;;;:46;;;;;;;:::i;:::-;;:120;;;-1:-1:-1;1621:34:30;1597:13;;;;:5;:13;;;;;:20;;;;;;;;:58;;;;;;;:::i;:::-;;1535:120;1514:196;;;;-1:-1:-1;;;1514:196:30;;;;;;;:::i;:::-;8156:13:::1;::::0;;;:5:::1;:13;::::0;;;;:20:::1;;::::0;-1:-1:-1;;;;;8156:20:30::1;8180:10;8156:34;8135:124;;;::::0;-1:-1:-1;;;8135:124:30;;8936:2:36;8135:124:30::1;::::0;::::1;8918:21:36::0;8975:2;8955:18;;;8948:30;9014:34;8994:18;;;8987:62;-1:-1:-1;;;9065:18:36;;;9058:41;9116:19;;8135:124:30::1;8734:407:36::0;8135:124:30::1;8286:13;::::0;;;:5:::1;:13;::::0;;;;:20;;8319::::1;::::0;;::::1;::::0;8270:70:::1;::::0;-1:-1:-1;;;;;8286:20:30::1;::::0;8308:9;;8270:15:::1;:70::i;:::-;8351:13;::::0;;;:5:::1;:13;::::0;;;;;;;:20:::1;::::0;::::1;:46:::0;;-1:-1:-1;;8351:46:30::1;8374:23;8351:46;::::0;;8523:20:::1;::::0;::::1;::::0;8484;;-1:-1:-1;;;;;8484:20:30::1;8464:41:::0;;:19:::1;:41:::0;;;;;;;:89:::1;::::0;:45:::1;:89::i;:::-;8407:54;8427:13:::0;;;:5:::1;:13;::::0;;;;;;;:33;;-1:-1:-1;;;;;8427:33:30::1;8407:54:::0;;:19:::1;:54:::0;;;;;:146;;;;8605:13;;;;;;:20:::1;;::::0;8583:17:::1;::::0;:43:::1;::::0;:21:::1;:43::i;:::-;8563:17;:63:::0;8638:16:::1;8691:13:::0;;;:5:::1;:13;::::0;;;;:20:::1;::::0;::::1;::::0;8725;;8691;8759:23;::::1;::::0;8796:20:::1;::::0;;::::1;::::0;8659:167:::1;::::0;-1:-1:-1;;;;;8691:20:30;;::::1;::::0;8725;;::::1;::::0;8759:23:::1;::::0;8659:18:::1;:167::i;:::-;8637:189;;;8844:13;:23;8858:8;8844:23;;;;;;;;;;;8837:30;;;8896:6;8883:45;8904:12;8918:9;8883:45;;;;;;7361:25:36::0;;;-1:-1:-1;;;;;7422:32:36;7417:2;7402:18;;7395:60;7349:2;7334:18;;7187:274;8883:45:30::1;;;;;;;;8125:810;7992:943:::0;;;;:::o;2041:169:0:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;882:361:4:-;958:24;985:32;995:7;665:10:8;3884:149:2;:::i;985:32:4:-;958:59;;1055:6;1035:16;:26;;1027:75;;;;-1:-1:-1;;;1027:75:4;;16521:2:36;1027:75:4;;;16503:21:36;16560:2;16540:18;;;16533:30;16599:34;16579:18;;;16572:62;-1:-1:-1;;;16650:18:36;;;16643:34;16694:19;;1027:75:4;16319:400:36;1027:75:4;1136:58;1145:7;665:10:8;1187:6:4;1168:16;:25;1136:8;:58::i;:::-;1214:22;1220:7;1229:6;1214:5;:22::i;1032:119:27:-;1088:21;:8;1101:7;1088:12;:21::i;:::-;1124:20;;-1:-1:-1;;;;;1124:20:27;;;;;;;;1032:119;:::o;3654:172:2:-;3740:4;3756:42;665:10:8;3780:9:2;3791:6;3756:9;:42::i;933:200:29:-;1005:4;-1:-1:-1;;;;;1029:21:29;;1021:68;;;;-1:-1:-1;;;1021:68:29;;16118:2:36;1021:68:29;;;16100:21:36;16157:2;16137:18;;;16130:30;16196:34;16176:18;;;16169:62;-1:-1:-1;;;16247:18:36;;;16240:32;16289:19;;1021:68:29;15916:398:36;1021:68:29;-1:-1:-1;;;;;;1106:20:29;:11;:20;;;;;;;;;;;;;;;933:200::o;2672:96:11:-;2730:7;2756:5;2760:1;2756;:5;:::i;7255:713:2:-;-1:-1:-1;;;;;7390:20:2;;7382:70;;;;-1:-1:-1;;;7382:70:2;;17328:2:36;7382:70:2;;;17310:21:36;17367:2;17347:18;;;17340:30;17406:34;17386:18;;;17379:62;-1:-1:-1;;;17457:18:36;;;17450:35;17502:19;;7382:70:2;17126:401:36;7382:70:2;-1:-1:-1;;;;;7470:23:2;;7462:71;;;;-1:-1:-1;;;7462:71:2;;8532:2:36;7462:71:2;;;8514:21:36;8571:2;8551:18;;;8544:30;8610:34;8590:18;;;8583:62;-1:-1:-1;;;8661:18:36;;;8654:33;8704:19;;7462:71:2;8330:399:36;7462:71:2;7544:47;7565:6;7573:9;7584:6;7544:20;:47::i;:::-;-1:-1:-1;;;;;7626:17:2;;7602:21;7626:17;;;:9;:17;;;;;;7661:23;;;;7653:74;;;;-1:-1:-1;;;7653:74:2;;12869:2:36;7653:74:2;;;12851:21:36;12908:2;12888:18;;;12881:30;12947:34;12927:18;;;12920:62;-1:-1:-1;;;12998:18:36;;;12991:36;13044:19;;7653:74:2;12667:402:36;7653:74:2;-1:-1:-1;;;;;7761:17:2;;;;;;;:9;:17;;;;;;7781:22;;;7761:42;;7823:20;;;;;;;;:30;;7797:6;;7761:17;7823:30;;7797:6;;7823:30;:::i;:::-;;;;;;;;7886:9;-1:-1:-1;;;;;7869:35:2;7878:6;-1:-1:-1;;;;;7869:35:2;-1:-1:-1;;;;;;;;;;;7897:6:2;7869:35;;;;7151:25:36;;7139:2;7124:18;;7005:177;7869:35:2;;;;;;;;7915:46;7372:596;7255:713;;;:::o;664:180:29:-;743:18;747:4;753:7;743:3;:18::i;:::-;735:64;;;;-1:-1:-1;;;735:64:29;;14946:2:36;735:64:29;;;14928:21:36;14985:2;14965:18;;;14958:30;15024:34;15004:18;;;14997:62;-1:-1:-1;;;15075:18:36;;;15068:31;15116:19;;735:64:29;14744:397:36;735:64:29;-1:-1:-1;;;;;809:20:29;832:5;809:20;;;;;;;;;;;:28;;-1:-1:-1;;809:28:29;;;664:180::o;1787:197:31:-;1927:52;1962:4;1968:2;1972:6;1927:34;:52::i;8953:576:2:-;-1:-1:-1;;;;;9036:21:2;;9028:67;;;;-1:-1:-1;;;9028:67:2;;16926:2:36;9028:67:2;;;16908:21:36;16965:2;16945:18;;;16938:30;17004:34;16984:18;;;16977:62;-1:-1:-1;;;17055:18:36;;;17048:31;17096:19;;9028:67:2;16724:397:36;9028:67:2;9106:49;9127:7;9144:1;9148:6;9106:20;:49::i;:::-;-1:-1:-1;;;;;9191:18:2;;9166:22;9191:18;;;:9;:18;;;;;;9227:24;;;;9219:71;;;;-1:-1:-1;;;9219:71:2;;10116:2:36;9219:71:2;;;10098:21:36;10155:2;10135:18;;;10128:30;10194:34;10174:18;;;10167:62;-1:-1:-1;;;10245:18:36;;;10238:32;10287:19;;9219:71:2;9914:398:36;9219:71:2;-1:-1:-1;;;;;9324:18:2;;;;;;:9;:18;;;;;9345:23;;;9324:44;;9388:12;:22;;9362:6;;9324:18;9388:22;;9362:6;;9388:22;:::i;:::-;;;;-1:-1:-1;;9426:37:2;;7151:25:36;;;9452:1:2;;-1:-1:-1;;;;;9426:37:2;;;-1:-1:-1;;;;;;;;;;;9426:37:2;7139:2:36;7124:18;9426:37:2;;;;;;;7185:801:30;;;:::o;589:264:5:-;1111:7:1;;;;790:9:5;782:64;;;;-1:-1:-1;;;782:64:5;;20719:2:36;782:64:5;;;20701:21:36;20758:2;20738:18;;;20731:30;20797:34;20777:18;;;20770:62;-1:-1:-1;;;20848:18:36;;;20841:40;20898:19;;782:64:5;20517:406:36;14:173;82:20;;-1:-1:-1;;;;;131:31:36;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:403::-;734:6;742;750;758;811:3;799:9;790:7;786:23;782:33;779:53;;;828:1;825;818:12;779:53;851:29;870:9;851:29;:::i;:::-;841:39;;899:38;933:2;922:9;918:18;899:38;:::i;:::-;889:48;;956:38;990:2;979:9;975:18;956:38;:::i;:::-;648:403;;;;-1:-1:-1;946:48:36;;1041:2;1026:18;1013:32;;-1:-1:-1;;648:403:36:o;1056:328::-;1133:6;1141;1149;1202:2;1190:9;1181:7;1177:23;1173:32;1170:52;;;1218:1;1215;1208:12;1170:52;1241:29;1260:9;1241:29;:::i;:::-;1231:39;;1289:38;1323:2;1312:9;1308:18;1289:38;:::i;:::-;1279:48;;1374:2;1363:9;1359:18;1346:32;1336:42;;1056:328;;;;;:::o;1389:466::-;1484:6;1492;1500;1508;1516;1569:3;1557:9;1548:7;1544:23;1540:33;1537:53;;;1586:1;1583;1576:12;1537:53;1609:29;1628:9;1609:29;:::i;:::-;1599:39;;1657:38;1691:2;1680:9;1676:18;1657:38;:::i;:::-;1389:466;;1647:48;;-1:-1:-1;;;;1742:2:36;1727:18;;1714:32;;1793:2;1778:18;;1765:32;;1844:3;1829:19;;;1816:33;;-1:-1:-1;1389:466:36:o;1860:254::-;1928:6;1936;1989:2;1977:9;1968:7;1964:23;1960:32;1957:52;;;2005:1;2002;1995:12;1957:52;2028:29;2047:9;2028:29;:::i;:::-;2018:39;2104:2;2089:18;;;;2076:32;;-1:-1:-1;;;1860:254:36:o;2119:180::-;2178:6;2231:2;2219:9;2210:7;2206:23;2202:32;2199:52;;;2247:1;2244;2237:12;2199:52;-1:-1:-1;2270:23:36;;2119:180;-1:-1:-1;2119:180:36:o;2304:184::-;2374:6;2427:2;2415:9;2406:7;2402:23;2398:32;2395:52;;;2443:1;2440;2433:12;2395:52;-1:-1:-1;2466:16:36;;2304:184;-1:-1:-1;2304:184:36:o;2493:254::-;2561:6;2569;2622:2;2610:9;2601:7;2597:23;2593:32;2590:52;;;2638:1;2635;2628:12;2590:52;2674:9;2661:23;2651:33;;2703:38;2737:2;2726:9;2722:18;2703:38;:::i;2752:535::-;2856:6;2864;2872;2880;2888;2896;2949:3;2937:9;2928:7;2924:23;2920:33;2917:53;;;2966:1;2963;2956:12;2917:53;3002:9;2989:23;2979:33;;3031:38;3065:2;3054:9;3050:18;3031:38;:::i;:::-;3021:48;;3088:38;3122:2;3111:9;3107:18;3088:38;:::i;:::-;3078:48;;3173:2;3162:9;3158:18;3145:32;3135:42;;3224:3;3213:9;3209:19;3196:33;3186:43;;3276:3;3265:9;3261:19;3248:33;3238:43;;2752:535;;;;;;;;:::o;3292:248::-;3360:6;3368;3421:2;3409:9;3400:7;3396:23;3392:32;3389:52;;;3437:1;3434;3427:12;3389:52;-1:-1:-1;;3460:23:36;;;3530:2;3515:18;;;3502:32;;-1:-1:-1;3292:248:36:o;3545:322::-;3622:6;3630;3638;3691:2;3679:9;3670:7;3666:23;3662:32;3659:52;;;3707:1;3704;3697:12;3659:52;3743:9;3730:23;3720:33;;3800:2;3789:9;3785:18;3772:32;3762:42;;3823:38;3857:2;3846:9;3842:18;3823:38;:::i;:::-;3813:48;;3545:322;;;;;:::o;4246:242::-;4332:1;4325:5;4322:12;4312:143;;4377:10;4372:3;4368:20;4365:1;4358:31;4412:4;4409:1;4402:15;4440:4;4437:1;4430:15;4312:143;4464:18;;4246:242::o;5769:274::-;5898:3;5936:6;5930:13;5952:53;5998:6;5993:3;5986:4;5978:6;5974:17;5952:53;:::i;:::-;6021:16;;;;;5769:274;-1:-1:-1;;5769:274:36:o;6605:203::-;-1:-1:-1;;;;;6769:32:36;;;;6751:51;;6739:2;6724:18;;6605:203::o;7719:218::-;7870:2;7855:18;;7882:49;7859:9;7913:6;7882:49;:::i;7942:383::-;8091:2;8080:9;8073:21;8054:4;8123:6;8117:13;8166:6;8161:2;8150:9;8146:18;8139:34;8182:66;8241:6;8236:2;8225:9;8221:18;8216:2;8208:6;8204:15;8182:66;:::i;:::-;8309:2;8288:15;-1:-1:-1;;8284:29:36;8269:45;;;;8316:2;8265:54;;7942:383;-1:-1:-1;;7942:383:36:o;10317:353::-;10519:2;10501:21;;;10558:2;10538:18;;;10531:30;10597:31;10592:2;10577:18;;10570:59;10661:2;10646:18;;10317:353::o;14324:415::-;14526:2;14508:21;;;14565:2;14545:18;;;14538:30;14604:34;14599:2;14584:18;;14577:62;-1:-1:-1;;;14670:2:36;14655:18;;14648:49;14729:3;14714:19;;14324:415::o;15555:356::-;15757:2;15739:21;;;15776:18;;;15769:30;15835:34;15830:2;15815:18;;15808:62;15902:2;15887:18;;15555:356::o;18360:411::-;18562:2;18544:21;;;18601:2;18581:18;;;18574:30;18640:34;18635:2;18620:18;;18613:62;-1:-1:-1;;;18706:2:36;18691:18;;18684:45;18761:3;18746:19;;18360:411::o;19256:490::-;19458:2;19440:21;;;19497:2;19477:18;;;19470:30;19536:34;19531:2;19516:18;;19509:62;19607:34;19602:2;19587:18;;19580:62;-1:-1:-1;;;19673:3:36;19658:19;;19651:53;19736:3;19721:19;;19256:490::o;20928:755::-;21082:4;21124:3;21113:9;21109:19;21101:27;;21164:1;21160;21155:3;21151:11;21147:19;21212:2;21203:6;21197:13;21193:22;21182:9;21175:41;21284:2;21276:4;21268:6;21264:17;21258:24;21254:33;21247:4;21236:9;21232:20;21225:63;21356:2;21348:4;21340:6;21336:17;21330:24;21326:33;21319:4;21308:9;21304:20;21297:63;;21416:4;21408:6;21404:17;21398:24;21391:4;21380:9;21376:20;21369:54;21479:4;21471:6;21467:17;21461:24;21454:4;21443:9;21439:20;21432:54;21542:4;21534:6;21530:17;21524:24;21517:4;21506:9;21502:20;21495:54;21596:4;21588:6;21584:17;21578:24;21611:66;21671:4;21660:9;21656:20;21642:12;21611:66;:::i;:::-;;20928:755;;;;:::o;22383:128::-;22423:3;22454:1;22450:6;22447:1;22444:13;22441:39;;;22460:18;;:::i;:::-;-1:-1:-1;22496:9:36;;22383:128::o;22516:125::-;22556:4;22584:1;22581;22578:8;22575:34;;;22589:18;;:::i;:::-;-1:-1:-1;22626:9:36;;22516:125::o;22646:258::-;22718:1;22728:113;22742:6;22739:1;22736:13;22728:113;;;22818:11;;;22812:18;22799:11;;;22792:39;22764:2;22757:10;22728:113;;;22859:6;22856:1;22853:13;22850:48;;;-1:-1:-1;;22894:1:36;22876:16;;22869:27;22646:258::o;22909:380::-;22988:1;22984:12;;;;23031;;;23052:61;;23106:4;23098:6;23094:17;23084:27;;23052:61;23159:2;23151:6;23148:14;23128:18;23125:38;23122:161;;;23205:10;23200:3;23196:20;23193:1;23186:31;23240:4;23237:1;23230:15;23268:4;23265:1;23258:15;23122:161;;22909:380;;;:::o;23294:127::-;23355:10;23350:3;23346:20;23343:1;23336:31;23386:4;23383:1;23376:15;23410:4;23407:1;23400:15;23426:127;23487:10;23482:3;23478:20;23475:1;23468:31;23518:4;23515:1;23508:15;23542:4;23539:1;23532:15",
  "source": "// SPDX-License-Identifier: Apache-2.0\n/*\n * This code has not been reviewed.\n * Do not use or deploy this code before reviewing it personally first.\n */\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"./ERC20Token.sol\";\nimport \"../interface/IERC20HoldableToken.sol\";\n\n/**\n * @title ERC20HoldableToken\n * @notice A hold is like an approve where held tokens can not be spent by the token holder until after an hold expiration period.\n    The hold can be executed by a notary, which can be the recipient of the tokens, a third party or a smart contract.\n    The notary can execute the hold before or after the expiration period.\n    Additionally, a hash lock at be applied which requires the notary of the hold to present the hash preimage to execute the hold.\n    Held tokens can be released by the notary at any time or by the token holder after the expiration period.\n    A recipient does not have to get set at the time of the hold, which means it will have to be specified when the hold is executed.\n */\ncontract ERC20HoldableToken is ERC20Token, IERC20HoldableToken {\n    using SafeMath for uint256;\n\n    // mapping of accounts to hold data\n    mapping(bytes32 => ERC20HoldData) internal holds;\n    // mapping of accounts and their total amount on hold\n    mapping(address => uint256) internal accountHoldBalances;\n\n    mapping(bytes32 => bytes32) internal _holdHashToId;\n\n    uint256 override public totalSupplyOnHold;\n\n    modifier isHeld(bytes32 holdId) {\n        require(\n            holds[holdId].status == HoldStatusCode.Ordered ||\n            holds[holdId].status == HoldStatusCode.ExecutedAndKeptOpen,\n            \"Hold is not in Ordered status\"\n        );\n        _;\n    }\n\n    constructor(string memory name, string memory symbol, uint8 decimals) ERC20Token(name, symbol, decimals) {}\n\n    function generateHoldId(\n        address recipient,\n        address notary,\n        uint256 amount,\n        uint256 expirationDateTime,\n        bytes32 lockHash\n    ) external pure returns (bytes32 holdId) {\n        holdId = keccak256(\n            abi.encodePacked(\n                recipient,\n                notary,\n                amount,\n                expirationDateTime,\n                lockHash\n            )\n        );\n    }\n\n    /**\n    * @dev Retrieve hold hash, and ID for given parameters\n    */\n    function retrieveHoldHashId(address notary, address sender, address recipient, uint value) public view returns (bytes32, bytes32) {\n        // Pack and hash hold parameters\n        bytes32 holdHash = keccak256(abi.encodePacked(\n            address(this), //Include the token address to indicate domain\n            sender,\n            recipient,\n            notary,\n            value\n        ));\n        bytes32 holdId = _holdHashToId[holdHash];\n\n        return (holdHash, holdId);\n    }  \n\n    /**\n     @notice Called by the sender to hold some tokens for a recipient that the sender can not release back to themself until after the expiration date.\n     @param holdId a unique identifier for the hold.\n     @param recipient optional account the tokens will be transferred to on execution. If a zero address, the recipient must be specified on execution of the hold.\n     @param notary account that can execute the hold. Typically the recipient but can be a third party or a smart contact.\n     @param amount of tokens to be transferred to the recipient on execution. Must be a non zero amount.\n     @param expirationDateTime UNIX epoch seconds the held amount can be released back to the sender by the sender. Past dates are allowed.\n     @param lockHash optional keccak256 hash of a lock preimage. An empty hash will not enforce the hash lock when the hold is executed.\n     */\n    function hold(\n        bytes32 holdId,\n        address recipient,\n        address notary,\n        uint256 amount,\n        uint256 expirationDateTime,\n        bytes32 lockHash\n    ) public override {\n        require(\n            notary != address(0),\n            \"hold: notary must not be a zero address\"\n        );\n        require(amount != 0, \"hold: amount must be greater than zero\");\n        require(\n            this.spendableBalanceOf(msg.sender) >= amount,\n            \"hold: amount exceeds available balance\"\n        );\n\n        (bytes32 holdHash,) = retrieveHoldHashId(\n            notary,\n            _msgSender(),\n            recipient,\n            amount\n        );\n\n        _holdHashToId[holdHash] = holdId;\n\n        require(\n            holds[holdId].status == HoldStatusCode.Nonexistent,\n            \"hold: id already exists\"\n        );\n        holds[holdId] = ERC20HoldData(\n            msg.sender,\n            recipient,\n            notary,\n            amount,\n            expirationDateTime,\n            lockHash,\n            HoldStatusCode.Ordered\n        );\n        accountHoldBalances[msg.sender] = accountHoldBalances[msg.sender].add(\n            amount\n        );\n        totalSupplyOnHold = totalSupplyOnHold.add(amount);\n\n        emit NewHold(\n            holdId,\n            recipient,\n            notary,\n            amount,\n            expirationDateTime,\n            lockHash\n        );\n    }\n\n    function retrieveHoldData(bytes32 holdId) external override view returns (ERC20HoldData memory) {\n        return holds[holdId];\n    }\n\n    /**\n     @notice Called by the notary to transfer the held tokens to the set at the hold recipient if there is no hash lock.\n     @param holdId a unique identifier for the hold.\n     */\n    function executeHold(bytes32 holdId) public override {\n        require(\n            holds[holdId].recipient != address(0),\n            \"executeHold: must pass the recipient on execution as the recipient was not set on hold\"\n        );\n        require(\n            holds[holdId].secretHash == bytes32(0),\n            \"executeHold: need preimage if the hold has a lock hash\"\n        );\n\n        _executeHold(holdId, \"\", holds[holdId].recipient);\n    }\n\n    /**\n     @notice Called by the notary to transfer the held tokens to the recipient that was set at the hold.\n     @param holdId a unique identifier for the hold.\n     @param lockPreimage the image used to generate the lock hash with a sha256 hash\n     */\n    function executeHold(bytes32 holdId, bytes32 lockPreimage) public override {\n        require(\n            holds[holdId].recipient != address(0),\n            \"executeHold: must pass the recipient on execution as the recipient was not set on hold\"\n        );\n        if (holds[holdId].secretHash != bytes32(0)) {\n            require(\n                holds[holdId].secretHash ==\n                    sha256(abi.encodePacked(lockPreimage)),\n                \"executeHold: preimage hash does not match lock hash\"\n            );\n        }\n\n        _executeHold(holdId, lockPreimage, holds[holdId].recipient);\n    }\n\n    /**\n     @notice Called by the notary to transfer the held tokens to the recipient if no recipient was specified at the hold.\n     @param holdId a unique identifier for the hold.\n     @param lockPreimage the image used to generate the lock hash with a keccak256 hash\n     @param recipient the account the tokens will be transferred to on execution.\n     */\n    function executeHold(\n        bytes32 holdId,\n        bytes32 lockPreimage,\n        address recipient\n    ) public override {\n        require(\n            holds[holdId].recipient == address(0),\n            \"executeHold: can not set a recipient on execution as it was set on hold\"\n        );\n        require(\n            recipient != address(0),\n            \"executeHold: recipient must not be a zero address\"\n        );\n        if (holds[holdId].secretHash != bytes32(0)) {\n            require(\n                holds[holdId].secretHash ==\n                    sha256(abi.encodePacked(lockPreimage)),\n                \"executeHold: preimage hash does not match lock hash\"\n            );\n        }\n\n        holds[holdId].recipient = recipient;\n\n        _executeHold(holdId, lockPreimage, recipient);\n    }\n\n    function _executeHold(\n        bytes32 holdId,\n        bytes32 lockPreimage,\n        address recipient\n    ) internal isHeld(holdId) {\n        require(\n            holds[holdId].notary == msg.sender,\n            \"executeHold: caller must be the hold notary\"\n        );\n\n        super._transfer(holds[holdId].sender, recipient, holds[holdId].amount);\n\n        holds[holdId].status = HoldStatusCode.Executed;\n        accountHoldBalances[holds[holdId]\n            .sender] = accountHoldBalances[holds[holdId].sender].sub(\n            holds[holdId].amount\n        );\n        totalSupplyOnHold = totalSupplyOnHold.sub(holds[holdId].amount);\n\n        (bytes32 holdHash,) = retrieveHoldHashId(\n            holds[holdId].notary,\n            holds[holdId].sender,\n            holds[holdId].recipient,\n            holds[holdId].amount\n        );\n\n        delete _holdHashToId[holdHash];\n\n        emit ExecutedHold(holdId, lockPreimage, recipient);\n    }\n\n    /**\n     @notice Called by the notary at any time or the sender after the expiration date to release the held tokens back to the sender.\n     @param holdId a unique identifier for the hold.\n     */\n    function releaseHold(bytes32 holdId) public override isHeld(holdId) {\n        if (holds[holdId].sender == msg.sender) {\n            require(\n                block.timestamp > holds[holdId].expirationDateTime,\n                \"releaseHold: can only release after the expiration date.\"\n            );\n            holds[holdId].status = HoldStatusCode.ReleasedOnExpiration;\n        } else if (holds[holdId].notary != msg.sender) {\n            revert(\"releaseHold: caller must be the hold sender or notary.\");\n        } else {\n            holds[holdId].status = HoldStatusCode.ReleasedByNotary;\n        }\n\n        accountHoldBalances[holds[holdId]\n            .sender] = accountHoldBalances[holds[holdId].sender].sub(\n            holds[holdId].amount\n        );\n        totalSupplyOnHold = totalSupplyOnHold.sub(holds[holdId].amount);\n\n        emit ReleaseHold(holdId, msg.sender);\n    }\n\n    /**\n     @notice Amount of tokens owned by an account that are available for transfer. That is, the gross balance less any held tokens.\n     @param account owner of the tokensß\n     */\n    function balanceOf(address account) public override(ERC20, IERC20) view returns (uint256) {\n        return super.balanceOf(account);\n        \n    }\n\n    /**\n     @notice Amount of tokens owned by an account that are held pending execution or release.\n     @param account owner of the tokens\n     */\n    function balanceOnHold(address account) public override view returns (uint256) {\n        return accountHoldBalances[account];\n    }\n\n    /**\n     @notice Total amount of tokens owned by an account including all the held tokens pending execution or release.\n     @param account owner of the tokens\n     */\n    function spendableBalanceOf(address account) public override view returns (uint256) {\n        return super.balanceOf(account).sub(accountHoldBalances[account]);\n    }\n\n    /**\n     @param holdId a unique identifier for the hold.\n     @return hold status code.\n     */\n    function holdStatus(bytes32 holdId) public override view returns (HoldStatusCode) {\n        return holds[holdId].status;\n    }\n\n    /**\n     @notice ERC20 transfer that checks on hold tokens can not be transferred.\n     */\n    function transfer(address recipient, uint256 amount) public override(ERC20, IERC20) returns (bool) {\n        require(\n            this.spendableBalanceOf(msg.sender) >= amount,\n            \"HoldableToken: amount exceeds available balance\"\n        );\n        return super.transfer(recipient, amount);\n    }\n\n    /**\n     @notice ERC20 transferFrom that checks on hold tokens can not be transferred.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public override(ERC20, IERC20) returns (bool) {\n        require(\n            this.spendableBalanceOf(sender) >= amount,\n            \"HoldableToken: amount exceeds available balance\"\n        );\n        return super.transferFrom(sender, recipient, amount);\n    }\n\n    /**\n     @notice ERC20 approve that checks on hold tokens can not be approved for spending by another account.\n     */\n    function approve(address spender, uint256 amount) public override(ERC20, IERC20) returns (bool) {\n        require(\n            this.spendableBalanceOf(msg.sender) >= amount,\n            \"HoldableToken: amount exceeds available balance\"\n        );\n        return super.approve(spender, amount);\n    }\n\n    /**\n     @notice ERC20 burn that checks on hold tokens can not be burnt.\n     */\n    function burn(uint256 amount) public override {\n        require(\n            this.spendableBalanceOf(msg.sender) >= amount,\n            \"HoldableToken: amount exceeds available balance\"\n        );\n        super.burn(amount);\n    }\n\n    /**\n     @notice ERC20 burnFrom that checks on hold tokens can not be burnt.\n     */\n    function burnFrom(address account, uint256 amount) public override {\n        require(\n            this.spendableBalanceOf(msg.sender) >= amount,\n            \"HoldableToken: amount exceeds available balance\"\n        );\n        super.burnFrom(account, amount);\n    }\n}\n",
  "sourcePath": "/Users/sergio/Downloads/UniversalToken-master/contracts/tokens/ERC20HoldableToken.sol",
  "ast": {
    "absolutePath": "project:/contracts/tokens/ERC20HoldableToken.sol",
    "exportedSymbols": {
      "Context": [
        1080
      ],
      "ERC1820Implementer": [
        5386
      ],
      "ERC20": [
        741
      ],
      "ERC20Burnable": [
        881
      ],
      "ERC20HoldData": [
        5467
      ],
      "ERC20HoldableToken": [
        7556
      ],
      "ERC20Pausable": [
        918
      ],
      "ERC20Token": [
        7654
      ],
      "HoldStatusCode": [
        5396
      ],
      "IERC20": [
        819
      ],
      "IERC20HoldableToken": [
        5583
      ],
      "IERC20Metadata": [
        943
      ],
      "MinterRole": [
        6457
      ],
      "Ownable": [
        103
      ],
      "Pausable": [
        195
      ],
      "Roles": [
        6687
      ],
      "SafeMath": [
        1494
      ]
    },
    "id": 7557,
    "license": "Apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6689,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "154:23:30"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 6690,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7557,
        "sourceUnit": 1495,
        "src": "179:57:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/tokens/ERC20Token.sol",
        "file": "./ERC20Token.sol",
        "id": 6691,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7557,
        "sourceUnit": 7655,
        "src": "237:26:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interface/IERC20HoldableToken.sol",
        "file": "../interface/IERC20HoldableToken.sol",
        "id": 6692,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7557,
        "sourceUnit": 5584,
        "src": "264:46:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6694,
              "name": "ERC20Token",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7654,
              "src": "1081:10:30"
            },
            "id": 6695,
            "nodeType": "InheritanceSpecifier",
            "src": "1081:10:30"
          },
          {
            "baseName": {
              "id": 6696,
              "name": "IERC20HoldableToken",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5583,
              "src": "1093:19:30"
            },
            "id": 6697,
            "nodeType": "InheritanceSpecifier",
            "src": "1093:19:30"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6693,
          "nodeType": "StructuredDocumentation",
          "src": "312:737:30",
          "text": " @title ERC20HoldableToken\n @notice A hold is like an approve where held tokens can not be spent by the token holder until after an hold expiration period.\nThe hold can be executed by a notary, which can be the recipient of the tokens, a third party or a smart contract.\nThe notary can execute the hold before or after the expiration period.\nAdditionally, a hash lock at be applied which requires the notary of the hold to present the hash preimage to execute the hold.\nHeld tokens can be released by the notary at any time or by the token holder after the expiration period.\nA recipient does not have to get set at the time of the hold, which means it will have to be specified when the hold is executed."
        },
        "fullyImplemented": true,
        "id": 7556,
        "linearizedBaseContracts": [
          7556,
          5583,
          7654,
          6457,
          5386,
          918,
          195,
          881,
          741,
          943,
          819,
          103,
          1080
        ],
        "name": "ERC20HoldableToken",
        "nameLocation": "1059:18:30",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 6700,
            "libraryName": {
              "id": 6698,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1494,
              "src": "1125:8:30"
            },
            "nodeType": "UsingForDirective",
            "src": "1119:27:30",
            "typeName": {
              "id": 6699,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1138:7:30",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 6705,
            "mutability": "mutable",
            "name": "holds",
            "nameLocation": "1235:5:30",
            "nodeType": "VariableDeclaration",
            "scope": 7556,
            "src": "1192:48:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$5467_storage_$",
              "typeString": "mapping(bytes32 => struct ERC20HoldData)"
            },
            "typeName": {
              "id": 6704,
              "keyType": {
                "id": 6701,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1200:7:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1192:33:30",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$5467_storage_$",
                "typeString": "mapping(bytes32 => struct ERC20HoldData)"
              },
              "valueType": {
                "id": 6703,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 6702,
                  "name": "ERC20HoldData",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5467,
                  "src": "1211:13:30"
                },
                "referencedDeclaration": 5467,
                "src": "1211:13:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ERC20HoldData_$5467_storage_ptr",
                  "typeString": "struct ERC20HoldData"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6709,
            "mutability": "mutable",
            "name": "accountHoldBalances",
            "nameLocation": "1341:19:30",
            "nodeType": "VariableDeclaration",
            "scope": 7556,
            "src": "1304:56:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 6708,
              "keyType": {
                "id": 6706,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1312:7:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1304:27:30",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 6707,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1323:7:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6713,
            "mutability": "mutable",
            "name": "_holdHashToId",
            "nameLocation": "1404:13:30",
            "nodeType": "VariableDeclaration",
            "scope": 7556,
            "src": "1367:50:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
              "typeString": "mapping(bytes32 => bytes32)"
            },
            "typeName": {
              "id": 6712,
              "keyType": {
                "id": 6710,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1375:7:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1367:27:30",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                "typeString": "mapping(bytes32 => bytes32)"
              },
              "valueType": {
                "id": 6711,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1386:7:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              5573
            ],
            "constant": false,
            "functionSelector": "51bfb961",
            "id": 6716,
            "mutability": "mutable",
            "name": "totalSupplyOnHold",
            "nameLocation": "1448:17:30",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 6715,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1432:8:30"
            },
            "scope": 7556,
            "src": "1424:41:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6714,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1424:7:30",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 6740,
              "nodeType": "Block",
              "src": "1504:224:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 6735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_HoldStatusCode_$5396",
                            "typeString": "enum HoldStatusCode"
                          },
                          "id": 6727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 6721,
                                "name": "holds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6705,
                                "src": "1535:5:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$5467_storage_$",
                                  "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                                }
                              },
                              "id": 6723,
                              "indexExpression": {
                                "id": 6722,
                                "name": "holdId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6718,
                                "src": "1541:6:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1535:13:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC20HoldData_$5467_storage",
                                "typeString": "struct ERC20HoldData storage ref"
                              }
                            },
                            "id": 6724,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5466,
                            "src": "1535:20:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_HoldStatusCode_$5396",
                              "typeString": "enum HoldStatusCode"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 6725,
                              "name": "HoldStatusCode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5396,
                              "src": "1559:14:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_HoldStatusCode_$5396_$",
                                "typeString": "type(enum HoldStatusCode)"
                              }
                            },
                            "id": 6726,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Ordered",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5390,
                            "src": "1559:22:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_HoldStatusCode_$5396",
                              "typeString": "enum HoldStatusCode"
                            }
                          },
                          "src": "1535:46:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_HoldStatusCode_$5396",
                            "typeString": "enum HoldStatusCode"
                          },
                          "id": 6734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 6728,
                                "name": "holds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6705,
                                "src": "1597:5:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$5467_storage_$",
                                  "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                                }
                              },
                              "id": 6730,
                              "indexExpression": {
                                "id": 6729,
                                "name": "holdId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6718,
                                "src": "1603:6:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1597:13:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC20HoldData_$5467_storage",
                                "typeString": "struct ERC20HoldData storage ref"
                              }
                            },
                            "id": 6731,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5466,
                            "src": "1597:20:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_HoldStatusCode_$5396",
                              "typeString": "enum HoldStatusCode"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 6732,
                              "name": "HoldStatusCode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5396,
                              "src": "1621:14:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_HoldStatusCode_$5396_$",
                                "typeString": "type(enum HoldStatusCode)"
                              }
                            },
                            "id": 6733,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ExecutedAndKeptOpen",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5392,
                            "src": "1621:34:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_HoldStatusCode_$5396",
                              "typeString": "enum HoldStatusCode"
                            }
                          },
                          "src": "1597:58:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1535:120:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "486f6c64206973206e6f7420696e204f72646572656420737461747573",
                        "id": 6736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1669:31:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1586263b6ed81250e09e3511dae8b28d2c9acb5016a4c7516ff2ccacc49700c4",
                          "typeString": "literal_string \"Hold is not in Ordered status\""
                        },
                        "value": "Hold is not in Ordered status"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1586263b6ed81250e09e3511dae8b28d2c9acb5016a4c7516ff2ccacc49700c4",
                          "typeString": "literal_string \"Hold is not in Ordered status\""
                        }
                      ],
                      "id": 6720,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1514:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1514:196:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6738,
                  "nodeType": "ExpressionStatement",
                  "src": "1514:196:30"
                },
                {
                  "id": 6739,
                  "nodeType": "PlaceholderStatement",
                  "src": "1720:1:30"
                }
              ]
            },
            "id": 6741,
            "name": "isHeld",
            "nameLocation": "1481:6:30",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 6719,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6718,
                  "mutability": "mutable",
                  "name": "holdId",
                  "nameLocation": "1496:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 6741,
                  "src": "1488:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6717,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1488:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1487:16:30"
            },
            "src": "1472:256:30",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6755,
              "nodeType": "Block",
              "src": "1839:2:30",
              "statements": []
            },
            "id": 6756,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 6750,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6743,
                    "src": "1815:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 6751,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6745,
                    "src": "1821:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 6752,
                    "name": "decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6747,
                    "src": "1829:8:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 6753,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 6749,
                  "name": "ERC20Token",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7654,
                  "src": "1804:10:30"
                },
                "nodeType": "ModifierInvocation",
                "src": "1804:34:30"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6748,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6743,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1760:4:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 6756,
                  "src": "1746:18:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6742,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1746:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6745,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "1780:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 6756,
                  "src": "1766:20:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6744,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1766:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6747,
                  "mutability": "mutable",
                  "name": "decimals",
                  "nameLocation": "1794:8:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 6756,
                  "src": "1788:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 6746,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1788:5:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1745:58:30"
            },
            "returnParameters": {
              "id": 6754,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1839:0:30"
            },
            "scope": 7556,
            "src": "1734:107:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6784,
              "nodeType": "Block",
              "src": "2053:226:30",
              "statements": [
                {
                  "expression": {
                    "id": 6782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6771,
                      "name": "holdId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6769,
                      "src": "2063:6:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 6775,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6758,
                              "src": "2129:9:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 6776,
                              "name": "notary",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6760,
                              "src": "2156:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 6777,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6762,
                              "src": "2180:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 6778,
                              "name": "expirationDateTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6764,
                              "src": "2204:18:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 6779,
                              "name": "lockHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6766,
                              "src": "2240:8:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 6773,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967295,
                              "src": "2095:3:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 6774,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "2095:16:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 6780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2095:167:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 6772,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967288,
                        "src": "2072:9:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 6781,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2072:200:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2063:209:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 6783,
                  "nodeType": "ExpressionStatement",
                  "src": "2063:209:30"
                }
              ]
            },
            "functionSelector": "fdec4c21",
            "id": 6785,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "generateHoldId",
            "nameLocation": "1856:14:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6767,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6758,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1888:9:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 6785,
                  "src": "1880:17:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6757,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1880:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6760,
                  "mutability": "mutable",
                  "name": "notary",
                  "nameLocation": "1915:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 6785,
                  "src": "1907:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6759,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1907:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6762,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1939:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 6785,
                  "src": "1931:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6761,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1931:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6764,
                  "mutability": "mutable",
                  "name": "expirationDateTime",
                  "nameLocation": "1963:18:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 6785,
                  "src": "1955:26:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6763,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1955:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6766,
                  "mutability": "mutable",
                  "name": "lockHash",
                  "nameLocation": "1999:8:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 6785,
                  "src": "1991:16:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6765,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1991:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1870:143:30"
            },
            "returnParameters": {
              "id": 6770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6769,
                  "mutability": "mutable",
                  "name": "holdId",
                  "nameLocation": "2045:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 6785,
                  "src": "2037:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6768,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2037:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2036:16:30"
            },
            "scope": 7556,
            "src": "1847:432:30",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6827,
              "nodeType": "Block",
              "src": "2489:356:30",
              "statements": [
                {
                  "assignments": [
                    6802
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6802,
                      "mutability": "mutable",
                      "name": "holdHash",
                      "nameLocation": "2548:8:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 6827,
                      "src": "2540:16:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 6801,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2540:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6816,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 6808,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "2607:4:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20HoldableToken_$7556",
                                  "typeString": "contract ERC20HoldableToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20HoldableToken_$7556",
                                  "typeString": "contract ERC20HoldableToken"
                                }
                              ],
                              "id": 6807,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2599:7:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 6806,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2599:7:30",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 6809,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2599:13:30",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 6810,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6790,
                            "src": "2673:6:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 6811,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6792,
                            "src": "2693:9:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 6812,
                            "name": "notary",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6788,
                            "src": "2716:6:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 6813,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6794,
                            "src": "2736:5:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 6804,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "2569:3:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 6805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "2569:16:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 6814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2569:182:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 6803,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "2559:9:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 6815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2559:193:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2540:212:30"
                },
                {
                  "assignments": [
                    6818
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6818,
                      "mutability": "mutable",
                      "name": "holdId",
                      "nameLocation": "2770:6:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 6827,
                      "src": "2762:14:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 6817,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2762:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6822,
                  "initialValue": {
                    "baseExpression": {
                      "id": 6819,
                      "name": "_holdHashToId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6713,
                      "src": "2779:13:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                        "typeString": "mapping(bytes32 => bytes32)"
                      }
                    },
                    "id": 6821,
                    "indexExpression": {
                      "id": 6820,
                      "name": "holdHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6802,
                      "src": "2793:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2779:23:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2762:40:30"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 6823,
                        "name": "holdHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6802,
                        "src": "2821:8:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 6824,
                        "name": "holdId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6818,
                        "src": "2831:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "id": 6825,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2820:18:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
                      "typeString": "tuple(bytes32,bytes32)"
                    }
                  },
                  "functionReturnParameters": 6800,
                  "id": 6826,
                  "nodeType": "Return",
                  "src": "2813:25:30"
                }
              ]
            },
            "documentation": {
              "id": 6786,
              "nodeType": "StructuredDocumentation",
              "src": "2285:69:30",
              "text": " @dev Retrieve hold hash, and ID for given parameters"
            },
            "functionSelector": "9d220915",
            "id": 6828,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retrieveHoldHashId",
            "nameLocation": "2368:18:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6795,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6788,
                  "mutability": "mutable",
                  "name": "notary",
                  "nameLocation": "2395:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 6828,
                  "src": "2387:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6787,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2387:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6790,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2411:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 6828,
                  "src": "2403:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6789,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2403:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6792,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "2427:9:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 6828,
                  "src": "2419:17:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6791,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2419:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6794,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2443:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 6828,
                  "src": "2438:10:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6793,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2438:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2386:63:30"
            },
            "returnParameters": {
              "id": 6800,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6797,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6828,
                  "src": "2471:7:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6796,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2471:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6799,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6828,
                  "src": "2480:7:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6798,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2480:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2470:18:30"
            },
            "scope": 7556,
            "src": "2359:486:30",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5514
            ],
            "body": {
              "id": 6945,
              "nodeType": "Block",
              "src": "3940:1223:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6846,
                          "name": "notary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6835,
                          "src": "3971:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 6849,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3989:1:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 6848,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3981:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6847,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3981:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3981:10:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3971:20:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "686f6c643a206e6f74617279206d757374206e6f742062652061207a65726f2061646472657373",
                        "id": 6852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4005:41:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0892ca814e3c1b3a07b90f43daa4885ed2a91182b50bd144f324a7ba002d6e25",
                          "typeString": "literal_string \"hold: notary must not be a zero address\""
                        },
                        "value": "hold: notary must not be a zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0892ca814e3c1b3a07b90f43daa4885ed2a91182b50bd144f324a7ba002d6e25",
                          "typeString": "literal_string \"hold: notary must not be a zero address\""
                        }
                      ],
                      "id": 6845,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3950:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3950:106:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6854,
                  "nodeType": "ExpressionStatement",
                  "src": "3950:106:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6856,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6837,
                          "src": "4074:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 6857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4084:1:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4074:11:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "686f6c643a20616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
                        "id": 6859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4087:40:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4cc511149ca81358a86c3964feb50f2ffdb7c4ba6870b88f6af6e124d9c0f7af",
                          "typeString": "literal_string \"hold: amount must be greater than zero\""
                        },
                        "value": "hold: amount must be greater than zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4cc511149ca81358a86c3964feb50f2ffdb7c4ba6870b88f6af6e124d9c0f7af",
                          "typeString": "literal_string \"hold: amount must be greater than zero\""
                        }
                      ],
                      "id": 6855,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4066:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4066:62:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6861,
                  "nodeType": "ExpressionStatement",
                  "src": "4066:62:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 6865,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4183:3:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 6866,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4183:10:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 6863,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "4159:4:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20HoldableToken_$7556",
                                "typeString": "contract ERC20HoldableToken"
                              }
                            },
                            "id": 6864,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "spendableBalanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7391,
                            "src": "4159:23:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 6867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4159:35:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 6868,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6837,
                          "src": "4198:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4159:45:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "686f6c643a20616d6f756e74206578636565647320617661696c61626c652062616c616e6365",
                        "id": 6870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4218:40:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19034bf26bc3742bd67470410ce64f54edcc10d93f84f4739233c2ff57191b75",
                          "typeString": "literal_string \"hold: amount exceeds available balance\""
                        },
                        "value": "hold: amount exceeds available balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19034bf26bc3742bd67470410ce64f54edcc10d93f84f4739233c2ff57191b75",
                          "typeString": "literal_string \"hold: amount exceeds available balance\""
                        }
                      ],
                      "id": 6862,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4138:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4138:130:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6872,
                  "nodeType": "ExpressionStatement",
                  "src": "4138:130:30"
                },
                {
                  "assignments": [
                    6874,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6874,
                      "mutability": "mutable",
                      "name": "holdHash",
                      "nameLocation": "4288:8:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 6945,
                      "src": "4280:16:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 6873,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4280:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 6882,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 6876,
                        "name": "notary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6835,
                        "src": "4333:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 6877,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1070,
                          "src": "4353:10:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 6878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4353:12:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6879,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6833,
                        "src": "4379:9:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6880,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6837,
                        "src": "4402:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6875,
                      "name": "retrieveHoldHashId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6828,
                      "src": "4301:18:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_bytes32_$_t_bytes32_$",
                        "typeString": "function (address,address,address,uint256) view returns (bytes32,bytes32)"
                      }
                    },
                    "id": 6881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4301:117:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
                      "typeString": "tuple(bytes32,bytes32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4279:139:30"
                },
                {
                  "expression": {
                    "id": 6887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 6883,
                        "name": "_holdHashToId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6713,
                        "src": "4429:13:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                          "typeString": "mapping(bytes32 => bytes32)"
                        }
                      },
                      "id": 6885,
                      "indexExpression": {
                        "id": 6884,
                        "name": "holdHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6874,
                        "src": "4443:8:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4429:23:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6886,
                      "name": "holdId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6831,
                      "src": "4455:6:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4429:32:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 6888,
                  "nodeType": "ExpressionStatement",
                  "src": "4429:32:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_HoldStatusCode_$5396",
                          "typeString": "enum HoldStatusCode"
                        },
                        "id": 6896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 6890,
                              "name": "holds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6705,
                              "src": "4493:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$5467_storage_$",
                                "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                              }
                            },
                            "id": 6892,
                            "indexExpression": {
                              "id": 6891,
                              "name": "holdId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6831,
                              "src": "4499:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4493:13:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20HoldData_$5467_storage",
                              "typeString": "struct ERC20HoldData storage ref"
                            }
                          },
                          "id": 6893,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5466,
                          "src": "4493:20:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_HoldStatusCode_$5396",
                            "typeString": "enum HoldStatusCode"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 6894,
                            "name": "HoldStatusCode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5396,
                            "src": "4517:14:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_HoldStatusCode_$5396_$",
                              "typeString": "type(enum HoldStatusCode)"
                            }
                          },
                          "id": 6895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Nonexistent",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5389,
                          "src": "4517:26:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_HoldStatusCode_$5396",
                            "typeString": "enum HoldStatusCode"
                          }
                        },
                        "src": "4493:50:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "686f6c643a20696420616c726561647920657869737473",
                        "id": 6897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4557:25:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3fb1032916a9fa7eb9854a20718a129abc1980a1ddced64bc82359ff8f32fdb5",
                          "typeString": "literal_string \"hold: id already exists\""
                        },
                        "value": "hold: id already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3fb1032916a9fa7eb9854a20718a129abc1980a1ddced64bc82359ff8f32fdb5",
                          "typeString": "literal_string \"hold: id already exists\""
                        }
                      ],
                      "id": 6889,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4472:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4472:120:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6899,
                  "nodeType": "ExpressionStatement",
                  "src": "4472:120:30"
                },
                {
                  "expression": {
                    "id": 6914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 6900,
                        "name": "holds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6705,
                        "src": "4602:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$5467_storage_$",
                          "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                        }
                      },
                      "id": 6902,
                      "indexExpression": {
                        "id": 6901,
                        "name": "holdId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6831,
                        "src": "4608:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4602:13:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20HoldData_$5467_storage",
                        "typeString": "struct ERC20HoldData storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 6904,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4645:3:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6905,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4645:10:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 6906,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6833,
                          "src": "4669:9:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 6907,
                          "name": "notary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6835,
                          "src": "4692:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 6908,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6837,
                          "src": "4712:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 6909,
                          "name": "expirationDateTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6839,
                          "src": "4732:18:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 6910,
                          "name": "lockHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6841,
                          "src": "4764:8:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "expression": {
                            "id": 6911,
                            "name": "HoldStatusCode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5396,
                            "src": "4786:14:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_HoldStatusCode_$5396_$",
                              "typeString": "type(enum HoldStatusCode)"
                            }
                          },
                          "id": 6912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Ordered",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5390,
                          "src": "4786:22:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_HoldStatusCode_$5396",
                            "typeString": "enum HoldStatusCode"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_enum$_HoldStatusCode_$5396",
                            "typeString": "enum HoldStatusCode"
                          }
                        ],
                        "id": 6903,
                        "name": "ERC20HoldData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5467,
                        "src": "4618:13:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_ERC20HoldData_$5467_storage_ptr_$",
                          "typeString": "type(struct ERC20HoldData storage pointer)"
                        }
                      },
                      "id": 6913,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4618:200:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20HoldData_$5467_memory_ptr",
                        "typeString": "struct ERC20HoldData memory"
                      }
                    },
                    "src": "4602:216:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20HoldData_$5467_storage",
                      "typeString": "struct ERC20HoldData storage ref"
                    }
                  },
                  "id": 6915,
                  "nodeType": "ExpressionStatement",
                  "src": "4602:216:30"
                },
                {
                  "expression": {
                    "id": 6927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 6916,
                        "name": "accountHoldBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6709,
                        "src": "4828:19:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 6919,
                      "indexExpression": {
                        "expression": {
                          "id": 6917,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4848:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4848:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4828:31:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 6925,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6837,
                          "src": "4911:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 6920,
                            "name": "accountHoldBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6709,
                            "src": "4862:19:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 6923,
                          "indexExpression": {
                            "expression": {
                              "id": 6921,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4882:3:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 6922,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4882:10:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4862:31:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1358,
                        "src": "4862:35:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 6926,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4862:65:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4828:99:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6928,
                  "nodeType": "ExpressionStatement",
                  "src": "4828:99:30"
                },
                {
                  "expression": {
                    "id": 6934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6929,
                      "name": "totalSupplyOnHold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6716,
                      "src": "4937:17:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 6932,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6837,
                          "src": "4979:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 6930,
                          "name": "totalSupplyOnHold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6716,
                          "src": "4957:17:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1358,
                        "src": "4957:21:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 6933,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4957:29:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4937:49:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6935,
                  "nodeType": "ExpressionStatement",
                  "src": "4937:49:30"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 6937,
                        "name": "holdId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6831,
                        "src": "5023:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 6938,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6833,
                        "src": "5043:9:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6939,
                        "name": "notary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6835,
                        "src": "5066:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6940,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6837,
                        "src": "5086:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6941,
                        "name": "expirationDateTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6839,
                        "src": "5106:18:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6942,
                        "name": "lockHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6841,
                        "src": "5138:8:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 6936,
                      "name": "NewHold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5484,
                      "src": "5002:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,address,address,uint256,uint256,bytes32)"
                      }
                    },
                    "id": 6943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5002:154:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6944,
                  "nodeType": "EmitStatement",
                  "src": "4997:159:30"
                }
              ]
            },
            "documentation": {
              "id": 6829,
              "nodeType": "StructuredDocumentation",
              "src": "2853:885:30",
              "text": "@notice Called by the sender to hold some tokens for a recipient that the sender can not release back to themself until after the expiration date.\n@param holdId a unique identifier for the hold.\n@param recipient optional account the tokens will be transferred to on execution. If a zero address, the recipient must be specified on execution of the hold.\n@param notary account that can execute the hold. Typically the recipient but can be a third party or a smart contact.\n@param amount of tokens to be transferred to the recipient on execution. Must be a non zero amount.\n@param expirationDateTime UNIX epoch seconds the held amount can be released back to the sender by the sender. Past dates are allowed.\n@param lockHash optional keccak256 hash of a lock preimage. An empty hash will not enforce the hash lock when the hold is executed."
            },
            "functionSelector": "c0e8330e",
            "id": 6946,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hold",
            "nameLocation": "3752:4:30",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6843,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3931:8:30"
            },
            "parameters": {
              "id": 6842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6831,
                  "mutability": "mutable",
                  "name": "holdId",
                  "nameLocation": "3774:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 6946,
                  "src": "3766:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6830,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3766:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6833,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "3798:9:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 6946,
                  "src": "3790:17:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6832,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3790:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6835,
                  "mutability": "mutable",
                  "name": "notary",
                  "nameLocation": "3825:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 6946,
                  "src": "3817:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6834,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3817:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6837,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3849:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 6946,
                  "src": "3841:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6836,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3841:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6839,
                  "mutability": "mutable",
                  "name": "expirationDateTime",
                  "nameLocation": "3873:18:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 6946,
                  "src": "3865:26:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6838,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3865:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6841,
                  "mutability": "mutable",
                  "name": "lockHash",
                  "nameLocation": "3909:8:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 6946,
                  "src": "3901:16:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6840,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3901:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3756:167:30"
            },
            "returnParameters": {
              "id": 6844,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3940:0:30"
            },
            "scope": 7556,
            "src": "3743:1420:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5522
            ],
            "body": {
              "id": 6959,
              "nodeType": "Block",
              "src": "5265:37:30",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 6955,
                      "name": "holds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6705,
                      "src": "5282:5:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$5467_storage_$",
                        "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                      }
                    },
                    "id": 6957,
                    "indexExpression": {
                      "id": 6956,
                      "name": "holdId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6948,
                      "src": "5288:6:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5282:13:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20HoldData_$5467_storage",
                      "typeString": "struct ERC20HoldData storage ref"
                    }
                  },
                  "functionReturnParameters": 6954,
                  "id": 6958,
                  "nodeType": "Return",
                  "src": "5275:20:30"
                }
              ]
            },
            "functionSelector": "da1ec246",
            "id": 6960,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retrieveHoldData",
            "nameLocation": "5178:16:30",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6950,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5220:8:30"
            },
            "parameters": {
              "id": 6949,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6948,
                  "mutability": "mutable",
                  "name": "holdId",
                  "nameLocation": "5203:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 6960,
                  "src": "5195:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6947,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5195:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5194:16:30"
            },
            "returnParameters": {
              "id": 6954,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6953,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6960,
                  "src": "5243:20:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ERC20HoldData_$5467_memory_ptr",
                    "typeString": "struct ERC20HoldData"
                  },
                  "typeName": {
                    "id": 6952,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6951,
                      "name": "ERC20HoldData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5467,
                      "src": "5243:13:30"
                    },
                    "referencedDeclaration": 5467,
                    "src": "5243:13:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20HoldData_$5467_storage_ptr",
                      "typeString": "struct ERC20HoldData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5242:22:30"
            },
            "scope": 7556,
            "src": "5169:133:30",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5528
            ],
            "body": {
              "id": 7002,
              "nodeType": "Block",
              "src": "5551:396:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 6968,
                              "name": "holds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6705,
                              "src": "5582:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$5467_storage_$",
                                "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                              }
                            },
                            "id": 6970,
                            "indexExpression": {
                              "id": 6969,
                              "name": "holdId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6963,
                              "src": "5588:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5582:13:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20HoldData_$5467_storage",
                              "typeString": "struct ERC20HoldData storage ref"
                            }
                          },
                          "id": 6971,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "recipient",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5455,
                          "src": "5582:23:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 6974,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5617:1:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 6973,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5609:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6972,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5609:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5609:10:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5582:37:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "65786563757465486f6c643a206d75737420706173732074686520726563697069656e74206f6e20657865637574696f6e2061732074686520726563697069656e7420776173206e6f7420736574206f6e20686f6c64",
                        "id": 6977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5633:88:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f15c04bad4a39568ed31ea3c6bc3695f659c7d3ffab2052da0b4914f04d3b76a",
                          "typeString": "literal_string \"executeHold: must pass the recipient on execution as the recipient was not set on hold\""
                        },
                        "value": "executeHold: must pass the recipient on execution as the recipient was not set on hold"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f15c04bad4a39568ed31ea3c6bc3695f659c7d3ffab2052da0b4914f04d3b76a",
                          "typeString": "literal_string \"executeHold: must pass the recipient on execution as the recipient was not set on hold\""
                        }
                      ],
                      "id": 6967,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5561:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5561:170:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6979,
                  "nodeType": "ExpressionStatement",
                  "src": "5561:170:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 6989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 6981,
                              "name": "holds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6705,
                              "src": "5762:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$5467_storage_$",
                                "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                              }
                            },
                            "id": 6983,
                            "indexExpression": {
                              "id": 6982,
                              "name": "holdId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6963,
                              "src": "5768:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5762:13:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20HoldData_$5467_storage",
                              "typeString": "struct ERC20HoldData storage ref"
                            }
                          },
                          "id": 6984,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "secretHash",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5463,
                          "src": "5762:24:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 6987,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5798:1:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 6986,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5790:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 6985,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5790:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5790:10:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "5762:38:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "65786563757465486f6c643a206e65656420707265696d6167652069662074686520686f6c64206861732061206c6f636b2068617368",
                        "id": 6990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5814:56:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f68c2a16436ef9beba75fe6c860676b87d7e7c18f5be2e4c797c12ed8ef7eb4",
                          "typeString": "literal_string \"executeHold: need preimage if the hold has a lock hash\""
                        },
                        "value": "executeHold: need preimage if the hold has a lock hash"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f68c2a16436ef9beba75fe6c860676b87d7e7c18f5be2e4c797c12ed8ef7eb4",
                          "typeString": "literal_string \"executeHold: need preimage if the hold has a lock hash\""
                        }
                      ],
                      "id": 6980,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5741:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5741:139:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6992,
                  "nodeType": "ExpressionStatement",
                  "src": "5741:139:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6994,
                        "name": "holdId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6963,
                        "src": "5904:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 6995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5912:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 6996,
                            "name": "holds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6705,
                            "src": "5916:5:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$5467_storage_$",
                              "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                            }
                          },
                          "id": 6998,
                          "indexExpression": {
                            "id": 6997,
                            "name": "holdId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6963,
                            "src": "5922:6:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5916:13:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20HoldData_$5467_storage",
                            "typeString": "struct ERC20HoldData storage ref"
                          }
                        },
                        "id": 6999,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "recipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5455,
                        "src": "5916:23:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6993,
                      "name": "_executeHold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7243,
                      "src": "5891:12:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,bytes32,address)"
                      }
                    },
                    "id": 7000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5891:49:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7001,
                  "nodeType": "ExpressionStatement",
                  "src": "5891:49:30"
                }
              ]
            },
            "documentation": {
              "id": 6961,
              "nodeType": "StructuredDocumentation",
              "src": "5308:185:30",
              "text": "@notice Called by the notary to transfer the held tokens to the set at the hold recipient if there is no hash lock.\n@param holdId a unique identifier for the hold."
            },
            "functionSelector": "f8abd4bc",
            "id": 7003,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "executeHold",
            "nameLocation": "5507:11:30",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6965,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5542:8:30"
            },
            "parameters": {
              "id": 6964,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6963,
                  "mutability": "mutable",
                  "name": "holdId",
                  "nameLocation": "5527:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 7003,
                  "src": "5519:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6962,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5519:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5518:16:30"
            },
            "returnParameters": {
              "id": 6966,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5551:0:30"
            },
            "scope": 7556,
            "src": "5498:449:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5536
            ],
            "body": {
              "id": 7060,
              "nodeType": "Block",
              "src": "6287:531:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 7013,
                              "name": "holds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6705,
                              "src": "6318:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$5467_storage_$",
                                "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                              }
                            },
                            "id": 7015,
                            "indexExpression": {
                              "id": 7014,
                              "name": "holdId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7006,
                              "src": "6324:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6318:13:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20HoldData_$5467_storage",
                              "typeString": "struct ERC20HoldData storage ref"
                            }
                          },
                          "id": 7016,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "recipient",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5455,
                          "src": "6318:23:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 7019,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6353:1:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7018,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6345:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 7017,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6345:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 7020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6345:10:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6318:37:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "65786563757465486f6c643a206d75737420706173732074686520726563697069656e74206f6e20657865637574696f6e2061732074686520726563697069656e7420776173206e6f7420736574206f6e20686f6c64",
                        "id": 7022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6369:88:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f15c04bad4a39568ed31ea3c6bc3695f659c7d3ffab2052da0b4914f04d3b76a",
                          "typeString": "literal_string \"executeHold: must pass the recipient on execution as the recipient was not set on hold\""
                        },
                        "value": "executeHold: must pass the recipient on execution as the recipient was not set on hold"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f15c04bad4a39568ed31ea3c6bc3695f659c7d3ffab2052da0b4914f04d3b76a",
                          "typeString": "literal_string \"executeHold: must pass the recipient on execution as the recipient was not set on hold\""
                        }
                      ],
                      "id": 7012,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6297:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6297:170:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7024,
                  "nodeType": "ExpressionStatement",
                  "src": "6297:170:30"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 7033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 7025,
                          "name": "holds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6705,
                          "src": "6481:5:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$5467_storage_$",
                            "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                          }
                        },
                        "id": 7027,
                        "indexExpression": {
                          "id": 7026,
                          "name": "holdId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7006,
                          "src": "6487:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6481:13:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20HoldData_$5467_storage",
                          "typeString": "struct ERC20HoldData storage ref"
                        }
                      },
                      "id": 7028,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "secretHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5463,
                      "src": "6481:24:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 7031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6517:1:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 7030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6509:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 7029,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6509:7:30",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 7032,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6509:10:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "6481:38:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7050,
                  "nodeType": "IfStatement",
                  "src": "6477:265:30",
                  "trueBody": {
                    "id": 7049,
                    "nodeType": "Block",
                    "src": "6521:221:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 7045,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 7035,
                                    "name": "holds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6705,
                                    "src": "6560:5:30",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$5467_storage_$",
                                      "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                                    }
                                  },
                                  "id": 7037,
                                  "indexExpression": {
                                    "id": 7036,
                                    "name": "holdId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7006,
                                    "src": "6566:6:30",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6560:13:30",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ERC20HoldData_$5467_storage",
                                    "typeString": "struct ERC20HoldData storage ref"
                                  }
                                },
                                "id": 7038,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "secretHash",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 5463,
                                "src": "6560:24:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 7042,
                                        "name": "lockPreimage",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7008,
                                        "src": "6632:12:30",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      ],
                                      "expression": {
                                        "id": 7040,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967295,
                                        "src": "6615:3:30",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 7041,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "encodePacked",
                                      "nodeType": "MemberAccess",
                                      "src": "6615:16:30",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 7043,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6615:30:30",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 7039,
                                  "name": "sha256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967274,
                                  "src": "6608:6:30",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 7044,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6608:38:30",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "6560:86:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "65786563757465486f6c643a20707265696d616765206861736820646f6573206e6f74206d61746368206c6f636b2068617368",
                              "id": 7046,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6664:53:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7b67df7aff43b902379f5b51d42b44d55c3dd66fdd309918f58eaabd4d470b8b",
                                "typeString": "literal_string \"executeHold: preimage hash does not match lock hash\""
                              },
                              "value": "executeHold: preimage hash does not match lock hash"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7b67df7aff43b902379f5b51d42b44d55c3dd66fdd309918f58eaabd4d470b8b",
                                "typeString": "literal_string \"executeHold: preimage hash does not match lock hash\""
                              }
                            ],
                            "id": 7034,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "6535:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 7047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6535:196:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7048,
                        "nodeType": "ExpressionStatement",
                        "src": "6535:196:30"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7052,
                        "name": "holdId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7006,
                        "src": "6765:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 7053,
                        "name": "lockPreimage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7008,
                        "src": "6773:12:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 7054,
                            "name": "holds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6705,
                            "src": "6787:5:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$5467_storage_$",
                              "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                            }
                          },
                          "id": 7056,
                          "indexExpression": {
                            "id": 7055,
                            "name": "holdId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7006,
                            "src": "6793:6:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6787:13:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20HoldData_$5467_storage",
                            "typeString": "struct ERC20HoldData storage ref"
                          }
                        },
                        "id": 7057,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "recipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5455,
                        "src": "6787:23:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7051,
                      "name": "_executeHold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7243,
                      "src": "6752:12:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,bytes32,address)"
                      }
                    },
                    "id": 7058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6752:59:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7059,
                  "nodeType": "ExpressionStatement",
                  "src": "6752:59:30"
                }
              ]
            },
            "documentation": {
              "id": 7004,
              "nodeType": "StructuredDocumentation",
              "src": "5953:254:30",
              "text": "@notice Called by the notary to transfer the held tokens to the recipient that was set at the hold.\n@param holdId a unique identifier for the hold.\n@param lockPreimage the image used to generate the lock hash with a sha256 hash"
            },
            "functionSelector": "445850af",
            "id": 7061,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "executeHold",
            "nameLocation": "6221:11:30",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7010,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6278:8:30"
            },
            "parameters": {
              "id": 7009,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7006,
                  "mutability": "mutable",
                  "name": "holdId",
                  "nameLocation": "6241:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 7061,
                  "src": "6233:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7005,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6233:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7008,
                  "mutability": "mutable",
                  "name": "lockPreimage",
                  "nameLocation": "6257:12:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 7061,
                  "src": "6249:20:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7007,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6249:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6232:38:30"
            },
            "returnParameters": {
              "id": 7011,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6287:0:30"
            },
            "scope": 7556,
            "src": "6212:606:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5546
            ],
            "body": {
              "id": 7134,
              "nodeType": "Block",
              "src": "7309:677:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 7073,
                              "name": "holds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6705,
                              "src": "7340:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$5467_storage_$",
                                "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                              }
                            },
                            "id": 7075,
                            "indexExpression": {
                              "id": 7074,
                              "name": "holdId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7064,
                              "src": "7346:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7340:13:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20HoldData_$5467_storage",
                              "typeString": "struct ERC20HoldData storage ref"
                            }
                          },
                          "id": 7076,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "recipient",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5455,
                          "src": "7340:23:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 7079,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7375:1:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7078,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7367:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 7077,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7367:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 7080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7367:10:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7340:37:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "65786563757465486f6c643a2063616e206e6f7420736574206120726563697069656e74206f6e20657865637574696f6e2061732069742077617320736574206f6e20686f6c64",
                        "id": 7082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7391:73:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e25b528742115f43b37a476a8df66d4a71e93f93d2391b99065533f9710ba899",
                          "typeString": "literal_string \"executeHold: can not set a recipient on execution as it was set on hold\""
                        },
                        "value": "executeHold: can not set a recipient on execution as it was set on hold"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e25b528742115f43b37a476a8df66d4a71e93f93d2391b99065533f9710ba899",
                          "typeString": "literal_string \"executeHold: can not set a recipient on execution as it was set on hold\""
                        }
                      ],
                      "id": 7072,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7319:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7319:155:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7084,
                  "nodeType": "ExpressionStatement",
                  "src": "7319:155:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7086,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7068,
                          "src": "7505:9:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 7089,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7526:1:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7088,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7518:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 7087,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7518:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 7090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7518:10:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7505:23:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "65786563757465486f6c643a20726563697069656e74206d757374206e6f742062652061207a65726f2061646472657373",
                        "id": 7092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7542:51:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_501c71291b34e8ea8c38d27b05abbbca9ed16d8e393dcf6a21d81509bdc46bf9",
                          "typeString": "literal_string \"executeHold: recipient must not be a zero address\""
                        },
                        "value": "executeHold: recipient must not be a zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_501c71291b34e8ea8c38d27b05abbbca9ed16d8e393dcf6a21d81509bdc46bf9",
                          "typeString": "literal_string \"executeHold: recipient must not be a zero address\""
                        }
                      ],
                      "id": 7085,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7484:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7484:119:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7094,
                  "nodeType": "ExpressionStatement",
                  "src": "7484:119:30"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 7103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 7095,
                          "name": "holds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6705,
                          "src": "7617:5:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$5467_storage_$",
                            "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                          }
                        },
                        "id": 7097,
                        "indexExpression": {
                          "id": 7096,
                          "name": "holdId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7064,
                          "src": "7623:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7617:13:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20HoldData_$5467_storage",
                          "typeString": "struct ERC20HoldData storage ref"
                        }
                      },
                      "id": 7098,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "secretHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5463,
                      "src": "7617:24:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 7101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7653:1:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 7100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7645:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 7099,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "7645:7:30",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 7102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7645:10:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "7617:38:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7120,
                  "nodeType": "IfStatement",
                  "src": "7613:265:30",
                  "trueBody": {
                    "id": 7119,
                    "nodeType": "Block",
                    "src": "7657:221:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 7115,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 7105,
                                    "name": "holds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6705,
                                    "src": "7696:5:30",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$5467_storage_$",
                                      "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                                    }
                                  },
                                  "id": 7107,
                                  "indexExpression": {
                                    "id": 7106,
                                    "name": "holdId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7064,
                                    "src": "7702:6:30",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7696:13:30",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ERC20HoldData_$5467_storage",
                                    "typeString": "struct ERC20HoldData storage ref"
                                  }
                                },
                                "id": 7108,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "secretHash",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 5463,
                                "src": "7696:24:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 7112,
                                        "name": "lockPreimage",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7066,
                                        "src": "7768:12:30",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      ],
                                      "expression": {
                                        "id": 7110,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967295,
                                        "src": "7751:3:30",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 7111,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "encodePacked",
                                      "nodeType": "MemberAccess",
                                      "src": "7751:16:30",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 7113,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7751:30:30",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 7109,
                                  "name": "sha256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967274,
                                  "src": "7744:6:30",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 7114,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7744:38:30",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "7696:86:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "65786563757465486f6c643a20707265696d616765206861736820646f6573206e6f74206d61746368206c6f636b2068617368",
                              "id": 7116,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7800:53:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7b67df7aff43b902379f5b51d42b44d55c3dd66fdd309918f58eaabd4d470b8b",
                                "typeString": "literal_string \"executeHold: preimage hash does not match lock hash\""
                              },
                              "value": "executeHold: preimage hash does not match lock hash"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7b67df7aff43b902379f5b51d42b44d55c3dd66fdd309918f58eaabd4d470b8b",
                                "typeString": "literal_string \"executeHold: preimage hash does not match lock hash\""
                              }
                            ],
                            "id": 7104,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "7671:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 7117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7671:196:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7118,
                        "nodeType": "ExpressionStatement",
                        "src": "7671:196:30"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 7126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 7121,
                          "name": "holds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6705,
                          "src": "7888:5:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$5467_storage_$",
                            "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                          }
                        },
                        "id": 7123,
                        "indexExpression": {
                          "id": 7122,
                          "name": "holdId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7064,
                          "src": "7894:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7888:13:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20HoldData_$5467_storage",
                          "typeString": "struct ERC20HoldData storage ref"
                        }
                      },
                      "id": 7124,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "recipient",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5455,
                      "src": "7888:23:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7125,
                      "name": "recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7068,
                      "src": "7914:9:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7888:35:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7127,
                  "nodeType": "ExpressionStatement",
                  "src": "7888:35:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7129,
                        "name": "holdId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7064,
                        "src": "7947:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 7130,
                        "name": "lockPreimage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7066,
                        "src": "7955:12:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 7131,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7068,
                        "src": "7969:9:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7128,
                      "name": "_executeHold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7243,
                      "src": "7934:12:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,bytes32,address)"
                      }
                    },
                    "id": 7132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7934:45:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7133,
                  "nodeType": "ExpressionStatement",
                  "src": "7934:45:30"
                }
              ]
            },
            "documentation": {
              "id": 7062,
              "nodeType": "StructuredDocumentation",
              "src": "6824:356:30",
              "text": "@notice Called by the notary to transfer the held tokens to the recipient if no recipient was specified at the hold.\n@param holdId a unique identifier for the hold.\n@param lockPreimage the image used to generate the lock hash with a keccak256 hash\n@param recipient the account the tokens will be transferred to on execution."
            },
            "functionSelector": "603dfcb5",
            "id": 7135,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "executeHold",
            "nameLocation": "7194:11:30",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7070,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7300:8:30"
            },
            "parameters": {
              "id": 7069,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7064,
                  "mutability": "mutable",
                  "name": "holdId",
                  "nameLocation": "7223:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 7135,
                  "src": "7215:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7063,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7215:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7066,
                  "mutability": "mutable",
                  "name": "lockPreimage",
                  "nameLocation": "7247:12:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 7135,
                  "src": "7239:20:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7065,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7239:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7068,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "7277:9:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 7135,
                  "src": "7269:17:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7067,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7269:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7205:87:30"
            },
            "returnParameters": {
              "id": 7071,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7309:0:30"
            },
            "scope": 7556,
            "src": "7185:801:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7242,
              "nodeType": "Block",
              "src": "8125:810:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 7148,
                              "name": "holds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6705,
                              "src": "8156:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$5467_storage_$",
                                "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                              }
                            },
                            "id": 7150,
                            "indexExpression": {
                              "id": 7149,
                              "name": "holdId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7137,
                              "src": "8162:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8156:13:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20HoldData_$5467_storage",
                              "typeString": "struct ERC20HoldData storage ref"
                            }
                          },
                          "id": 7151,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "notary",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5457,
                          "src": "8156:20:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 7152,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "8180:3:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 7153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8180:10:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8156:34:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "65786563757465486f6c643a2063616c6c6572206d7573742062652074686520686f6c64206e6f74617279",
                        "id": 7155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8204:45:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_06760903a1a137bd7e8f70a654f085804529f6cf9f19abebbae2f256bb6f7248",
                          "typeString": "literal_string \"executeHold: caller must be the hold notary\""
                        },
                        "value": "executeHold: caller must be the hold notary"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_06760903a1a137bd7e8f70a654f085804529f6cf9f19abebbae2f256bb6f7248",
                          "typeString": "literal_string \"executeHold: caller must be the hold notary\""
                        }
                      ],
                      "id": 7147,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8135:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8135:124:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7157,
                  "nodeType": "ExpressionStatement",
                  "src": "8135:124:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 7161,
                            "name": "holds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6705,
                            "src": "8286:5:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$5467_storage_$",
                              "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                            }
                          },
                          "id": 7163,
                          "indexExpression": {
                            "id": 7162,
                            "name": "holdId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7137,
                            "src": "8292:6:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8286:13:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20HoldData_$5467_storage",
                            "typeString": "struct ERC20HoldData storage ref"
                          }
                        },
                        "id": 7164,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5453,
                        "src": "8286:20:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7165,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7141,
                        "src": "8308:9:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 7166,
                            "name": "holds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6705,
                            "src": "8319:5:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$5467_storage_$",
                              "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                            }
                          },
                          "id": 7168,
                          "indexExpression": {
                            "id": 7167,
                            "name": "holdId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7137,
                            "src": "8325:6:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8319:13:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20HoldData_$5467_storage",
                            "typeString": "struct ERC20HoldData storage ref"
                          }
                        },
                        "id": 7169,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5459,
                        "src": "8319:20:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 7158,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "8270:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC20HoldableToken_$7556_$",
                          "typeString": "type(contract super ERC20HoldableToken)"
                        }
                      },
                      "id": 7160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 545,
                      "src": "8270:15:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 7170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8270:70:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7171,
                  "nodeType": "ExpressionStatement",
                  "src": "8270:70:30"
                },
                {
                  "expression": {
                    "id": 7178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 7172,
                          "name": "holds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6705,
                          "src": "8351:5:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$5467_storage_$",
                            "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                          }
                        },
                        "id": 7174,
                        "indexExpression": {
                          "id": 7173,
                          "name": "holdId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7137,
                          "src": "8357:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8351:13:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20HoldData_$5467_storage",
                          "typeString": "struct ERC20HoldData storage ref"
                        }
                      },
                      "id": 7175,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5466,
                      "src": "8351:20:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_HoldStatusCode_$5396",
                        "typeString": "enum HoldStatusCode"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 7176,
                        "name": "HoldStatusCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5396,
                        "src": "8374:14:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_HoldStatusCode_$5396_$",
                          "typeString": "type(enum HoldStatusCode)"
                        }
                      },
                      "id": 7177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Executed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5391,
                      "src": "8374:23:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_HoldStatusCode_$5396",
                        "typeString": "enum HoldStatusCode"
                      }
                    },
                    "src": "8351:46:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_HoldStatusCode_$5396",
                      "typeString": "enum HoldStatusCode"
                    }
                  },
                  "id": 7179,
                  "nodeType": "ExpressionStatement",
                  "src": "8351:46:30"
                },
                {
                  "expression": {
                    "id": 7198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7180,
                        "name": "accountHoldBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6709,
                        "src": "8407:19:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 7185,
                      "indexExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 7181,
                            "name": "holds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6705,
                            "src": "8427:5:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$5467_storage_$",
                              "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                            }
                          },
                          "id": 7183,
                          "indexExpression": {
                            "id": 7182,
                            "name": "holdId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7137,
                            "src": "8433:6:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8427:13:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20HoldData_$5467_storage",
                            "typeString": "struct ERC20HoldData storage ref"
                          }
                        },
                        "id": 7184,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5453,
                        "src": "8427:33:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8407:54:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "baseExpression": {
                              "id": 7193,
                              "name": "holds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6705,
                              "src": "8523:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$5467_storage_$",
                                "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                              }
                            },
                            "id": 7195,
                            "indexExpression": {
                              "id": 7194,
                              "name": "holdId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7137,
                              "src": "8529:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8523:13:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20HoldData_$5467_storage",
                              "typeString": "struct ERC20HoldData storage ref"
                            }
                          },
                          "id": 7196,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5459,
                          "src": "8523:20:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 7186,
                            "name": "accountHoldBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6709,
                            "src": "8464:19:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 7191,
                          "indexExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 7187,
                                "name": "holds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6705,
                                "src": "8484:5:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$5467_storage_$",
                                  "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                                }
                              },
                              "id": 7189,
                              "indexExpression": {
                                "id": 7188,
                                "name": "holdId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7137,
                                "src": "8490:6:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8484:13:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC20HoldData_$5467_storage",
                                "typeString": "struct ERC20HoldData storage ref"
                              }
                            },
                            "id": 7190,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5453,
                            "src": "8484:20:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8464:41:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1373,
                        "src": "8464:45:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 7197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8464:89:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8407:146:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7199,
                  "nodeType": "ExpressionStatement",
                  "src": "8407:146:30"
                },
                {
                  "expression": {
                    "id": 7208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7200,
                      "name": "totalSupplyOnHold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6716,
                      "src": "8563:17:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "baseExpression": {
                              "id": 7203,
                              "name": "holds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6705,
                              "src": "8605:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$5467_storage_$",
                                "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                              }
                            },
                            "id": 7205,
                            "indexExpression": {
                              "id": 7204,
                              "name": "holdId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7137,
                              "src": "8611:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8605:13:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20HoldData_$5467_storage",
                              "typeString": "struct ERC20HoldData storage ref"
                            }
                          },
                          "id": 7206,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5459,
                          "src": "8605:20:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 7201,
                          "name": "totalSupplyOnHold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6716,
                          "src": "8583:17:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1373,
                        "src": "8583:21:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 7207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8583:43:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8563:63:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7209,
                  "nodeType": "ExpressionStatement",
                  "src": "8563:63:30"
                },
                {
                  "assignments": [
                    7211,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7211,
                      "mutability": "mutable",
                      "name": "holdHash",
                      "nameLocation": "8646:8:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 7242,
                      "src": "8638:16:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7210,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8638:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 7230,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 7213,
                            "name": "holds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6705,
                            "src": "8691:5:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$5467_storage_$",
                              "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                            }
                          },
                          "id": 7215,
                          "indexExpression": {
                            "id": 7214,
                            "name": "holdId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7137,
                            "src": "8697:6:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8691:13:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20HoldData_$5467_storage",
                            "typeString": "struct ERC20HoldData storage ref"
                          }
                        },
                        "id": 7216,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "notary",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5457,
                        "src": "8691:20:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 7217,
                            "name": "holds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6705,
                            "src": "8725:5:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$5467_storage_$",
                              "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                            }
                          },
                          "id": 7219,
                          "indexExpression": {
                            "id": 7218,
                            "name": "holdId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7137,
                            "src": "8731:6:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8725:13:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20HoldData_$5467_storage",
                            "typeString": "struct ERC20HoldData storage ref"
                          }
                        },
                        "id": 7220,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5453,
                        "src": "8725:20:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 7221,
                            "name": "holds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6705,
                            "src": "8759:5:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$5467_storage_$",
                              "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                            }
                          },
                          "id": 7223,
                          "indexExpression": {
                            "id": 7222,
                            "name": "holdId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7137,
                            "src": "8765:6:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8759:13:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20HoldData_$5467_storage",
                            "typeString": "struct ERC20HoldData storage ref"
                          }
                        },
                        "id": 7224,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "recipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5455,
                        "src": "8759:23:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 7225,
                            "name": "holds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6705,
                            "src": "8796:5:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$5467_storage_$",
                              "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                            }
                          },
                          "id": 7227,
                          "indexExpression": {
                            "id": 7226,
                            "name": "holdId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7137,
                            "src": "8802:6:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8796:13:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20HoldData_$5467_storage",
                            "typeString": "struct ERC20HoldData storage ref"
                          }
                        },
                        "id": 7228,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5459,
                        "src": "8796:20:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7212,
                      "name": "retrieveHoldHashId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6828,
                      "src": "8659:18:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_bytes32_$_t_bytes32_$",
                        "typeString": "function (address,address,address,uint256) view returns (bytes32,bytes32)"
                      }
                    },
                    "id": 7229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8659:167:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
                      "typeString": "tuple(bytes32,bytes32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8637:189:30"
                },
                {
                  "expression": {
                    "id": 7234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "8837:30:30",
                    "subExpression": {
                      "baseExpression": {
                        "id": 7231,
                        "name": "_holdHashToId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6713,
                        "src": "8844:13:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                          "typeString": "mapping(bytes32 => bytes32)"
                        }
                      },
                      "id": 7233,
                      "indexExpression": {
                        "id": 7232,
                        "name": "holdHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7211,
                        "src": "8858:8:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8844:23:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7235,
                  "nodeType": "ExpressionStatement",
                  "src": "8837:30:30"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7237,
                        "name": "holdId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7137,
                        "src": "8896:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 7238,
                        "name": "lockPreimage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7139,
                        "src": "8904:12:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 7239,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7141,
                        "src": "8918:9:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7236,
                      "name": "ExecutedHold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5492,
                      "src": "8883:12:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,bytes32,address)"
                      }
                    },
                    "id": 7240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8883:45:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7241,
                  "nodeType": "EmitStatement",
                  "src": "8878:50:30"
                }
              ]
            },
            "id": 7243,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 7144,
                    "name": "holdId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7137,
                    "src": "8117:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 7145,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7143,
                  "name": "isHeld",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6741,
                  "src": "8110:6:30"
                },
                "nodeType": "ModifierInvocation",
                "src": "8110:14:30"
              }
            ],
            "name": "_executeHold",
            "nameLocation": "8001:12:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7137,
                  "mutability": "mutable",
                  "name": "holdId",
                  "nameLocation": "8031:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 7243,
                  "src": "8023:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7136,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8023:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7139,
                  "mutability": "mutable",
                  "name": "lockPreimage",
                  "nameLocation": "8055:12:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 7243,
                  "src": "8047:20:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7138,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8047:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7141,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "8085:9:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 7243,
                  "src": "8077:17:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7140,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8077:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8013:87:30"
            },
            "returnParameters": {
              "id": 7146,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8125:0:30"
            },
            "scope": 7556,
            "src": "7992:943:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              5552
            ],
            "body": {
              "id": 7339,
              "nodeType": "Block",
              "src": "9211:815:30",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 7259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 7253,
                          "name": "holds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6705,
                          "src": "9225:5:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$5467_storage_$",
                            "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                          }
                        },
                        "id": 7255,
                        "indexExpression": {
                          "id": 7254,
                          "name": "holdId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7246,
                          "src": "9231:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9225:13:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20HoldData_$5467_storage",
                          "typeString": "struct ERC20HoldData storage ref"
                        }
                      },
                      "id": 7256,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5453,
                      "src": "9225:20:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 7257,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "9249:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 7258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "9249:10:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9225:34:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 7286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 7280,
                            "name": "holds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6705,
                            "src": "9533:5:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$5467_storage_$",
                              "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                            }
                          },
                          "id": 7282,
                          "indexExpression": {
                            "id": 7281,
                            "name": "holdId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7246,
                            "src": "9539:6:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9533:13:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20HoldData_$5467_storage",
                            "typeString": "struct ERC20HoldData storage ref"
                          }
                        },
                        "id": 7283,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "notary",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5457,
                        "src": "9533:20:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "expression": {
                          "id": 7284,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "9557:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9557:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "9533:34:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 7300,
                      "nodeType": "Block",
                      "src": "9664:79:30",
                      "statements": [
                        {
                          "expression": {
                            "id": 7298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "baseExpression": {
                                  "id": 7292,
                                  "name": "holds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6705,
                                  "src": "9678:5:30",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$5467_storage_$",
                                    "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                                  }
                                },
                                "id": 7294,
                                "indexExpression": {
                                  "id": 7293,
                                  "name": "holdId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7246,
                                  "src": "9684:6:30",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9678:13:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ERC20HoldData_$5467_storage",
                                  "typeString": "struct ERC20HoldData storage ref"
                                }
                              },
                              "id": 7295,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberName": "status",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5466,
                              "src": "9678:20:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_HoldStatusCode_$5396",
                                "typeString": "enum HoldStatusCode"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "expression": {
                                "id": 7296,
                                "name": "HoldStatusCode",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5396,
                                "src": "9701:14:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_HoldStatusCode_$5396_$",
                                  "typeString": "type(enum HoldStatusCode)"
                                }
                              },
                              "id": 7297,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "ReleasedByNotary",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5393,
                              "src": "9701:31:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_HoldStatusCode_$5396",
                                "typeString": "enum HoldStatusCode"
                              }
                            },
                            "src": "9678:54:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_HoldStatusCode_$5396",
                              "typeString": "enum HoldStatusCode"
                            }
                          },
                          "id": 7299,
                          "nodeType": "ExpressionStatement",
                          "src": "9678:54:30"
                        }
                      ]
                    },
                    "id": 7301,
                    "nodeType": "IfStatement",
                    "src": "9529:214:30",
                    "trueBody": {
                      "id": 7291,
                      "nodeType": "Block",
                      "src": "9569:89:30",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "72656c65617365486f6c643a2063616c6c6572206d7573742062652074686520686f6c642073656e646572206f72206e6f746172792e",
                                "id": 7288,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9590:56:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_bef427c6599b78a67199088855f3e7d148eff965aedbe04891332f4fd50908c0",
                                  "typeString": "literal_string \"releaseHold: caller must be the hold sender or notary.\""
                                },
                                "value": "releaseHold: caller must be the hold sender or notary."
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_bef427c6599b78a67199088855f3e7d148eff965aedbe04891332f4fd50908c0",
                                  "typeString": "literal_string \"releaseHold: caller must be the hold sender or notary.\""
                                }
                              ],
                              "id": 7287,
                              "name": "revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                4294967277,
                                4294967277
                              ],
                              "referencedDeclaration": 4294967277,
                              "src": "9583:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (string memory) pure"
                              }
                            },
                            "id": 7289,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9583:64:30",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 7290,
                          "nodeType": "ExpressionStatement",
                          "src": "9583:64:30"
                        }
                      ]
                    }
                  },
                  "id": 7302,
                  "nodeType": "IfStatement",
                  "src": "9221:522:30",
                  "trueBody": {
                    "id": 7279,
                    "nodeType": "Block",
                    "src": "9261:262:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 7267,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 7261,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967292,
                                  "src": "9300:5:30",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 7262,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "9300:15:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 7263,
                                    "name": "holds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6705,
                                    "src": "9318:5:30",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$5467_storage_$",
                                      "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                                    }
                                  },
                                  "id": 7265,
                                  "indexExpression": {
                                    "id": 7264,
                                    "name": "holdId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7246,
                                    "src": "9324:6:30",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9318:13:30",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ERC20HoldData_$5467_storage",
                                    "typeString": "struct ERC20HoldData storage ref"
                                  }
                                },
                                "id": 7266,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "expirationDateTime",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 5461,
                                "src": "9318:32:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9300:50:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "72656c65617365486f6c643a2063616e206f6e6c792072656c65617365206166746572207468652065787069726174696f6e20646174652e",
                              "id": 7268,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9368:58:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_493d53730a9bdfe5ea17be5fb48f7cf625c731a31a9424f72b43547622da1e56",
                                "typeString": "literal_string \"releaseHold: can only release after the expiration date.\""
                              },
                              "value": "releaseHold: can only release after the expiration date."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_493d53730a9bdfe5ea17be5fb48f7cf625c731a31a9424f72b43547622da1e56",
                                "typeString": "literal_string \"releaseHold: can only release after the expiration date.\""
                              }
                            ],
                            "id": 7260,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "9275:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 7269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9275:165:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7270,
                        "nodeType": "ExpressionStatement",
                        "src": "9275:165:30"
                      },
                      {
                        "expression": {
                          "id": 7277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 7271,
                                "name": "holds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6705,
                                "src": "9454:5:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$5467_storage_$",
                                  "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                                }
                              },
                              "id": 7273,
                              "indexExpression": {
                                "id": 7272,
                                "name": "holdId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7246,
                                "src": "9460:6:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9454:13:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC20HoldData_$5467_storage",
                                "typeString": "struct ERC20HoldData storage ref"
                              }
                            },
                            "id": 7274,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5466,
                            "src": "9454:20:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_HoldStatusCode_$5396",
                              "typeString": "enum HoldStatusCode"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 7275,
                              "name": "HoldStatusCode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5396,
                              "src": "9477:14:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_HoldStatusCode_$5396_$",
                                "typeString": "type(enum HoldStatusCode)"
                              }
                            },
                            "id": 7276,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ReleasedOnExpiration",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5395,
                            "src": "9477:35:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_HoldStatusCode_$5396",
                              "typeString": "enum HoldStatusCode"
                            }
                          },
                          "src": "9454:58:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_HoldStatusCode_$5396",
                            "typeString": "enum HoldStatusCode"
                          }
                        },
                        "id": 7278,
                        "nodeType": "ExpressionStatement",
                        "src": "9454:58:30"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 7321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7303,
                        "name": "accountHoldBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6709,
                        "src": "9753:19:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 7308,
                      "indexExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 7304,
                            "name": "holds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6705,
                            "src": "9773:5:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$5467_storage_$",
                              "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                            }
                          },
                          "id": 7306,
                          "indexExpression": {
                            "id": 7305,
                            "name": "holdId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7246,
                            "src": "9779:6:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9773:13:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20HoldData_$5467_storage",
                            "typeString": "struct ERC20HoldData storage ref"
                          }
                        },
                        "id": 7307,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5453,
                        "src": "9773:33:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9753:54:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "baseExpression": {
                              "id": 7316,
                              "name": "holds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6705,
                              "src": "9869:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$5467_storage_$",
                                "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                              }
                            },
                            "id": 7318,
                            "indexExpression": {
                              "id": 7317,
                              "name": "holdId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7246,
                              "src": "9875:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9869:13:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20HoldData_$5467_storage",
                              "typeString": "struct ERC20HoldData storage ref"
                            }
                          },
                          "id": 7319,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5459,
                          "src": "9869:20:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 7309,
                            "name": "accountHoldBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6709,
                            "src": "9810:19:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 7314,
                          "indexExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 7310,
                                "name": "holds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6705,
                                "src": "9830:5:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$5467_storage_$",
                                  "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                                }
                              },
                              "id": 7312,
                              "indexExpression": {
                                "id": 7311,
                                "name": "holdId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7246,
                                "src": "9836:6:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9830:13:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC20HoldData_$5467_storage",
                                "typeString": "struct ERC20HoldData storage ref"
                              }
                            },
                            "id": 7313,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5453,
                            "src": "9830:20:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9810:41:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1373,
                        "src": "9810:45:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 7320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9810:89:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9753:146:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7322,
                  "nodeType": "ExpressionStatement",
                  "src": "9753:146:30"
                },
                {
                  "expression": {
                    "id": 7331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7323,
                      "name": "totalSupplyOnHold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6716,
                      "src": "9909:17:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "baseExpression": {
                              "id": 7326,
                              "name": "holds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6705,
                              "src": "9951:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$5467_storage_$",
                                "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                              }
                            },
                            "id": 7328,
                            "indexExpression": {
                              "id": 7327,
                              "name": "holdId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7246,
                              "src": "9957:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9951:13:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20HoldData_$5467_storage",
                              "typeString": "struct ERC20HoldData storage ref"
                            }
                          },
                          "id": 7329,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5459,
                          "src": "9951:20:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 7324,
                          "name": "totalSupplyOnHold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6716,
                          "src": "9929:17:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1373,
                        "src": "9929:21:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 7330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9929:43:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9909:63:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7332,
                  "nodeType": "ExpressionStatement",
                  "src": "9909:63:30"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7334,
                        "name": "holdId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7246,
                        "src": "10000:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 7335,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "10008:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10008:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7333,
                      "name": "ReleaseHold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5498,
                      "src": "9988:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 7337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9988:31:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7338,
                  "nodeType": "EmitStatement",
                  "src": "9983:36:30"
                }
              ]
            },
            "documentation": {
              "id": 7244,
              "nodeType": "StructuredDocumentation",
              "src": "8941:197:30",
              "text": "@notice Called by the notary at any time or the sender after the expiration date to release the held tokens back to the sender.\n@param holdId a unique identifier for the hold."
            },
            "functionSelector": "9335c28f",
            "id": 7340,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 7250,
                    "name": "holdId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7246,
                    "src": "9203:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 7251,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7249,
                  "name": "isHeld",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6741,
                  "src": "9196:6:30"
                },
                "nodeType": "ModifierInvocation",
                "src": "9196:14:30"
              }
            ],
            "name": "releaseHold",
            "nameLocation": "9152:11:30",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7248,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9187:8:30"
            },
            "parameters": {
              "id": 7247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7246,
                  "mutability": "mutable",
                  "name": "holdId",
                  "nameLocation": "9172:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 7340,
                  "src": "9164:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7245,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9164:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9163:16:30"
            },
            "returnParameters": {
              "id": 7252,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9211:0:30"
            },
            "scope": 7556,
            "src": "9143:883:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              294,
              758
            ],
            "body": {
              "id": 7356,
              "nodeType": "Block",
              "src": "10312:57:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7353,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7343,
                        "src": "10345:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7351,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "10329:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC20HoldableToken_$7556_$",
                          "typeString": "type(contract super ERC20HoldableToken)"
                        }
                      },
                      "id": 7352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 294,
                      "src": "10329:15:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 7354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10329:24:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7350,
                  "id": 7355,
                  "nodeType": "Return",
                  "src": "10322:31:30"
                }
              ]
            },
            "documentation": {
              "id": 7341,
              "nodeType": "StructuredDocumentation",
              "src": "10032:185:30",
              "text": "@notice Amount of tokens owned by an account that are available for transfer. That is, the gross balance less any held tokens.\n@param account owner of the tokensß"
            },
            "functionSelector": "70a08231",
            "id": 7357,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "10231:9:30",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7347,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 7345,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 741,
                  "src": "10274:5:30"
                },
                {
                  "id": 7346,
                  "name": "IERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 819,
                  "src": "10281:6:30"
                }
              ],
              "src": "10265:23:30"
            },
            "parameters": {
              "id": 7344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7343,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "10249:7:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 7357,
                  "src": "10241:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7342,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10241:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10240:17:30"
            },
            "returnParameters": {
              "id": 7350,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7349,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7357,
                  "src": "10303:7:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7348,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10303:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10302:9:30"
            },
            "scope": 7556,
            "src": "10222:147:30",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5560
            ],
            "body": {
              "id": 7370,
              "nodeType": "Block",
              "src": "10604:52:30",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 7366,
                      "name": "accountHoldBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6709,
                      "src": "10621:19:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 7368,
                    "indexExpression": {
                      "id": 7367,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7360,
                      "src": "10641:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10621:28:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7365,
                  "id": 7369,
                  "nodeType": "Return",
                  "src": "10614:35:30"
                }
              ]
            },
            "documentation": {
              "id": 7358,
              "nodeType": "StructuredDocumentation",
              "src": "10375:145:30",
              "text": "@notice Amount of tokens owned by an account that are held pending execution or release.\n@param account owner of the tokens"
            },
            "functionSelector": "c5a468c6",
            "id": 7371,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOnHold",
            "nameLocation": "10534:13:30",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7362,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10572:8:30"
            },
            "parameters": {
              "id": 7361,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7360,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "10556:7:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 7371,
                  "src": "10548:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7359,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10548:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10547:17:30"
            },
            "returnParameters": {
              "id": 7365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7364,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7371,
                  "src": "10595:7:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7363,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10595:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10594:9:30"
            },
            "scope": 7556,
            "src": "10525:131:30",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5568
            ],
            "body": {
              "id": 7390,
              "nodeType": "Block",
              "src": "10918:82:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 7385,
                          "name": "accountHoldBalances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6709,
                          "src": "10964:19:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 7387,
                        "indexExpression": {
                          "id": 7386,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7374,
                          "src": "10984:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10964:28:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7382,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7374,
                            "src": "10951:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 7380,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "10935:5:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC20HoldableToken_$7556_$",
                              "typeString": "type(contract super ERC20HoldableToken)"
                            }
                          },
                          "id": 7381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 294,
                          "src": "10935:15:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 7383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10935:24:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 7384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1373,
                      "src": "10935:28:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 7388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10935:58:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7379,
                  "id": 7389,
                  "nodeType": "Return",
                  "src": "10928:65:30"
                }
              ]
            },
            "documentation": {
              "id": 7372,
              "nodeType": "StructuredDocumentation",
              "src": "10662:167:30",
              "text": "@notice Total amount of tokens owned by an account including all the held tokens pending execution or release.\n@param account owner of the tokens"
            },
            "functionSelector": "0f8f8b83",
            "id": 7391,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "spendableBalanceOf",
            "nameLocation": "10843:18:30",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7376,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10886:8:30"
            },
            "parameters": {
              "id": 7375,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7374,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "10870:7:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 7391,
                  "src": "10862:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7373,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10862:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10861:17:30"
            },
            "returnParameters": {
              "id": 7379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7378,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7391,
                  "src": "10909:7:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7377,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10909:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10908:9:30"
            },
            "scope": 7556,
            "src": "10834:166:30",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5582
            ],
            "body": {
              "id": 7406,
              "nodeType": "Block",
              "src": "11188:44:30",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 7401,
                        "name": "holds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6705,
                        "src": "11205:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$5467_storage_$",
                          "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                        }
                      },
                      "id": 7403,
                      "indexExpression": {
                        "id": 7402,
                        "name": "holdId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7394,
                        "src": "11211:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "11205:13:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20HoldData_$5467_storage",
                        "typeString": "struct ERC20HoldData storage ref"
                      }
                    },
                    "id": 7404,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "status",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 5466,
                    "src": "11205:20:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_HoldStatusCode_$5396",
                      "typeString": "enum HoldStatusCode"
                    }
                  },
                  "functionReturnParameters": 7400,
                  "id": 7405,
                  "nodeType": "Return",
                  "src": "11198:27:30"
                }
              ]
            },
            "documentation": {
              "id": 7392,
              "nodeType": "StructuredDocumentation",
              "src": "11006:95:30",
              "text": "@param holdId a unique identifier for the hold.\n@return hold status code."
            },
            "functionSelector": "b67f7bd4",
            "id": 7407,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "holdStatus",
            "nameLocation": "11115:10:30",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7396,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11149:8:30"
            },
            "parameters": {
              "id": 7395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7394,
                  "mutability": "mutable",
                  "name": "holdId",
                  "nameLocation": "11134:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 7407,
                  "src": "11126:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7393,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11126:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11125:16:30"
            },
            "returnParameters": {
              "id": 7400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7399,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7407,
                  "src": "11172:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_HoldStatusCode_$5396",
                    "typeString": "enum HoldStatusCode"
                  },
                  "typeName": {
                    "id": 7398,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7397,
                      "name": "HoldStatusCode",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5396,
                      "src": "11172:14:30"
                    },
                    "referencedDeclaration": 5396,
                    "src": "11172:14:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_HoldStatusCode_$5396",
                      "typeString": "enum HoldStatusCode"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11171:16:30"
            },
            "scope": 7556,
            "src": "11106:126:30",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              315,
              768
            ],
            "body": {
              "id": 7437,
              "nodeType": "Block",
              "src": "11432:206:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 7423,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "11487:3:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 7424,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "11487:10:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 7421,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "11463:4:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20HoldableToken_$7556",
                                "typeString": "contract ERC20HoldableToken"
                              }
                            },
                            "id": 7422,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "spendableBalanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7391,
                            "src": "11463:23:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 7425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11463:35:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 7426,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7412,
                          "src": "11502:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11463:45:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "486f6c6461626c65546f6b656e3a20616d6f756e74206578636565647320617661696c61626c652062616c616e6365",
                        "id": 7428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11522:49:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de0c4f5e4acd44e6696778f13c28096ebd7a4c585872d8f8a461ad0da6c197c8",
                          "typeString": "literal_string \"HoldableToken: amount exceeds available balance\""
                        },
                        "value": "HoldableToken: amount exceeds available balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de0c4f5e4acd44e6696778f13c28096ebd7a4c585872d8f8a461ad0da6c197c8",
                          "typeString": "literal_string \"HoldableToken: amount exceeds available balance\""
                        }
                      ],
                      "id": 7420,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11442:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11442:139:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7430,
                  "nodeType": "ExpressionStatement",
                  "src": "11442:139:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7433,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7410,
                        "src": "11613:9:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7434,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7412,
                        "src": "11624:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 7431,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "11598:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC20HoldableToken_$7556_$",
                          "typeString": "type(contract super ERC20HoldableToken)"
                        }
                      },
                      "id": 7432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 315,
                      "src": "11598:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 7435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11598:33:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 7419,
                  "id": 7436,
                  "nodeType": "Return",
                  "src": "11591:40:30"
                }
              ]
            },
            "documentation": {
              "id": 7408,
              "nodeType": "StructuredDocumentation",
              "src": "11238:90:30",
              "text": "@notice ERC20 transfer that checks on hold tokens can not be transferred."
            },
            "functionSelector": "a9059cbb",
            "id": 7438,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "11342:8:30",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7416,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 7414,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 741,
                  "src": "11402:5:30"
                },
                {
                  "id": 7415,
                  "name": "IERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 819,
                  "src": "11409:6:30"
                }
              ],
              "src": "11393:23:30"
            },
            "parameters": {
              "id": 7413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7410,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "11359:9:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 7438,
                  "src": "11351:17:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7409,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11351:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7412,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11378:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 7438,
                  "src": "11370:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7411,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11370:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11350:35:30"
            },
            "returnParameters": {
              "id": 7419,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7418,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7438,
                  "src": "11426:4:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7417,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11426:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11425:6:30"
            },
            "scope": 7556,
            "src": "11333:305:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              402,
              800
            ],
            "body": {
              "id": 7470,
              "nodeType": "Block",
              "src": "11892:214:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 7456,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7441,
                              "src": "11947:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 7454,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "11923:4:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20HoldableToken_$7556",
                                "typeString": "contract ERC20HoldableToken"
                              }
                            },
                            "id": 7455,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "spendableBalanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7391,
                            "src": "11923:23:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 7457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11923:31:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 7458,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7445,
                          "src": "11958:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11923:41:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "486f6c6461626c65546f6b656e3a20616d6f756e74206578636565647320617661696c61626c652062616c616e6365",
                        "id": 7460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11978:49:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de0c4f5e4acd44e6696778f13c28096ebd7a4c585872d8f8a461ad0da6c197c8",
                          "typeString": "literal_string \"HoldableToken: amount exceeds available balance\""
                        },
                        "value": "HoldableToken: amount exceeds available balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de0c4f5e4acd44e6696778f13c28096ebd7a4c585872d8f8a461ad0da6c197c8",
                          "typeString": "literal_string \"HoldableToken: amount exceeds available balance\""
                        }
                      ],
                      "id": 7453,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11902:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11902:135:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7462,
                  "nodeType": "ExpressionStatement",
                  "src": "11902:135:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7465,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7441,
                        "src": "12073:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7466,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7443,
                        "src": "12081:9:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7467,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7445,
                        "src": "12092:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 7463,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "12054:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC20HoldableToken_$7556_$",
                          "typeString": "type(contract super ERC20HoldableToken)"
                        }
                      },
                      "id": 7464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 402,
                      "src": "12054:18:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 7468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12054:45:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 7452,
                  "id": 7469,
                  "nodeType": "Return",
                  "src": "12047:52:30"
                }
              ]
            },
            "documentation": {
              "id": 7439,
              "nodeType": "StructuredDocumentation",
              "src": "11644:94:30",
              "text": "@notice ERC20 transferFrom that checks on hold tokens can not be transferred."
            },
            "functionSelector": "23b872dd",
            "id": 7471,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "11752:12:30",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7449,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 7447,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 741,
                  "src": "11862:5:30"
                },
                {
                  "id": 7448,
                  "name": "IERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 819,
                  "src": "11869:6:30"
                }
              ],
              "src": "11853:23:30"
            },
            "parameters": {
              "id": 7446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7441,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "11782:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 7471,
                  "src": "11774:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7440,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11774:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7443,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "11806:9:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 7471,
                  "src": "11798:17:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7442,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11798:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7445,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11833:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 7471,
                  "src": "11825:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7444,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11825:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11764:81:30"
            },
            "returnParameters": {
              "id": 7452,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7451,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7471,
                  "src": "11886:4:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7450,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11886:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11885:6:30"
            },
            "scope": 7556,
            "src": "11743:363:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              354,
              788
            ],
            "body": {
              "id": 7501,
              "nodeType": "Block",
              "src": "12331:203:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 7487,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "12386:3:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 7488,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "12386:10:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 7485,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "12362:4:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20HoldableToken_$7556",
                                "typeString": "contract ERC20HoldableToken"
                              }
                            },
                            "id": 7486,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "spendableBalanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7391,
                            "src": "12362:23:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 7489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12362:35:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 7490,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7476,
                          "src": "12401:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12362:45:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "486f6c6461626c65546f6b656e3a20616d6f756e74206578636565647320617661696c61626c652062616c616e6365",
                        "id": 7492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12421:49:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de0c4f5e4acd44e6696778f13c28096ebd7a4c585872d8f8a461ad0da6c197c8",
                          "typeString": "literal_string \"HoldableToken: amount exceeds available balance\""
                        },
                        "value": "HoldableToken: amount exceeds available balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de0c4f5e4acd44e6696778f13c28096ebd7a4c585872d8f8a461ad0da6c197c8",
                          "typeString": "literal_string \"HoldableToken: amount exceeds available balance\""
                        }
                      ],
                      "id": 7484,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12341:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12341:139:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7494,
                  "nodeType": "ExpressionStatement",
                  "src": "12341:139:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7497,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7474,
                        "src": "12511:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7498,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7476,
                        "src": "12520:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 7495,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "12497:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC20HoldableToken_$7556_$",
                          "typeString": "type(contract super ERC20HoldableToken)"
                        }
                      },
                      "id": 7496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 354,
                      "src": "12497:13:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 7499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12497:30:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 7483,
                  "id": 7500,
                  "nodeType": "Return",
                  "src": "12490:37:30"
                }
              ]
            },
            "documentation": {
              "id": 7472,
              "nodeType": "StructuredDocumentation",
              "src": "12112:118:30",
              "text": "@notice ERC20 approve that checks on hold tokens can not be approved for spending by another account."
            },
            "functionSelector": "095ea7b3",
            "id": 7502,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "12244:7:30",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7480,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 7478,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 741,
                  "src": "12301:5:30"
                },
                {
                  "id": 7479,
                  "name": "IERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 819,
                  "src": "12308:6:30"
                }
              ],
              "src": "12292:23:30"
            },
            "parameters": {
              "id": 7477,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7474,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "12260:7:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 7502,
                  "src": "12252:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7473,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12252:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7476,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12277:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 7502,
                  "src": "12269:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7475,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12269:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12251:33:30"
            },
            "returnParameters": {
              "id": 7483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7482,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7502,
                  "src": "12325:4:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7481,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12325:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12324:6:30"
            },
            "scope": 7556,
            "src": "12235:299:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              841
            ],
            "body": {
              "id": 7526,
              "nodeType": "Block",
              "src": "12671:184:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 7512,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "12726:3:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 7513,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "12726:10:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 7510,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "12702:4:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20HoldableToken_$7556",
                                "typeString": "contract ERC20HoldableToken"
                              }
                            },
                            "id": 7511,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "spendableBalanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7391,
                            "src": "12702:23:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 7514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12702:35:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 7515,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7505,
                          "src": "12741:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12702:45:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "486f6c6461626c65546f6b656e3a20616d6f756e74206578636565647320617661696c61626c652062616c616e6365",
                        "id": 7517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12761:49:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de0c4f5e4acd44e6696778f13c28096ebd7a4c585872d8f8a461ad0da6c197c8",
                          "typeString": "literal_string \"HoldableToken: amount exceeds available balance\""
                        },
                        "value": "HoldableToken: amount exceeds available balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de0c4f5e4acd44e6696778f13c28096ebd7a4c585872d8f8a461ad0da6c197c8",
                          "typeString": "literal_string \"HoldableToken: amount exceeds available balance\""
                        }
                      ],
                      "id": 7509,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12681:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12681:139:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7519,
                  "nodeType": "ExpressionStatement",
                  "src": "12681:139:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7523,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7505,
                        "src": "12841:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 7520,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "12830:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC20HoldableToken_$7556_$",
                          "typeString": "type(contract super ERC20HoldableToken)"
                        }
                      },
                      "id": 7522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 841,
                      "src": "12830:10:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 7524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12830:18:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7525,
                  "nodeType": "ExpressionStatement",
                  "src": "12830:18:30"
                }
              ]
            },
            "documentation": {
              "id": 7503,
              "nodeType": "StructuredDocumentation",
              "src": "12540:80:30",
              "text": "@notice ERC20 burn that checks on hold tokens can not be burnt."
            },
            "functionSelector": "42966c68",
            "id": 7527,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "12634:4:30",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7507,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12662:8:30"
            },
            "parameters": {
              "id": 7506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7505,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12647:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 7527,
                  "src": "12639:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7504,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12639:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12638:16:30"
            },
            "returnParameters": {
              "id": 7508,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12671:0:30"
            },
            "scope": 7556,
            "src": "12625:230:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              880
            ],
            "body": {
              "id": 7554,
              "nodeType": "Block",
              "src": "13017:197:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 7539,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "13072:3:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 7540,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "13072:10:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 7537,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "13048:4:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20HoldableToken_$7556",
                                "typeString": "contract ERC20HoldableToken"
                              }
                            },
                            "id": 7538,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "spendableBalanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7391,
                            "src": "13048:23:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 7541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13048:35:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 7542,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7532,
                          "src": "13087:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13048:45:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "486f6c6461626c65546f6b656e3a20616d6f756e74206578636565647320617661696c61626c652062616c616e6365",
                        "id": 7544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13107:49:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de0c4f5e4acd44e6696778f13c28096ebd7a4c585872d8f8a461ad0da6c197c8",
                          "typeString": "literal_string \"HoldableToken: amount exceeds available balance\""
                        },
                        "value": "HoldableToken: amount exceeds available balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de0c4f5e4acd44e6696778f13c28096ebd7a4c585872d8f8a461ad0da6c197c8",
                          "typeString": "literal_string \"HoldableToken: amount exceeds available balance\""
                        }
                      ],
                      "id": 7536,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "13027:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13027:139:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7546,
                  "nodeType": "ExpressionStatement",
                  "src": "13027:139:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7550,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7530,
                        "src": "13191:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7551,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7532,
                        "src": "13200:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 7547,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "13176:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC20HoldableToken_$7556_$",
                          "typeString": "type(contract super ERC20HoldableToken)"
                        }
                      },
                      "id": 7549,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 880,
                      "src": "13176:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 7552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13176:31:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7553,
                  "nodeType": "ExpressionStatement",
                  "src": "13176:31:30"
                }
              ]
            },
            "documentation": {
              "id": 7528,
              "nodeType": "StructuredDocumentation",
              "src": "12861:84:30",
              "text": "@notice ERC20 burnFrom that checks on hold tokens can not be burnt."
            },
            "functionSelector": "79cc6790",
            "id": 7555,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnFrom",
            "nameLocation": "12959:8:30",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7534,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "13008:8:30"
            },
            "parameters": {
              "id": 7533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7530,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "12976:7:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 7555,
                  "src": "12968:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7529,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12968:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7532,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12993:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 7555,
                  "src": "12985:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7531,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12985:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12967:33:30"
            },
            "returnParameters": {
              "id": 7535,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13017:0:30"
            },
            "scope": 7556,
            "src": "12950:264:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 7557,
        "src": "1050:12166:30",
        "usedErrors": []
      }
    ],
    "src": "154:13063:30"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-05-07T16:50:54.400Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "balanceOf(address)": {
        "params": {
          "account": "owner of the tokensß"
        }
      },
      "balanceOnHold(address)": {
        "params": {
          "account": "owner of the tokens"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "executeHold(bytes32)": {
        "params": {
          "holdId": "a unique identifier for the hold."
        }
      },
      "executeHold(bytes32,bytes32)": {
        "params": {
          "holdId": "a unique identifier for the hold.",
          "lockPreimage": "the image used to generate the lock hash with a sha256 hash"
        }
      },
      "executeHold(bytes32,bytes32,address)": {
        "params": {
          "holdId": "a unique identifier for the hold.",
          "lockPreimage": "the image used to generate the lock hash with a keccak256 hash",
          "recipient": "the account the tokens will be transferred to on execution."
        }
      },
      "hold(bytes32,address,address,uint256,uint256,bytes32)": {
        "params": {
          "amount": "of tokens to be transferred to the recipient on execution. Must be a non zero amount.",
          "expirationDateTime": "UNIX epoch seconds the held amount can be released back to the sender by the sender. Past dates are allowed.",
          "holdId": "a unique identifier for the hold.",
          "lockHash": "optional keccak256 hash of a lock preimage. An empty hash will not enforce the hash lock when the hold is executed.",
          "notary": "account that can execute the hold. Typically the recipient but can be a third party or a smart contact.",
          "recipient": "optional account the tokens will be transferred to on execution. If a zero address, the recipient must be specified on execution of the hold."
        }
      },
      "holdStatus(bytes32)": {
        "params": {
          "holdId": "a unique identifier for the hold."
        },
        "returns": {
          "_0": "hold status code."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "value": "The amount of tokens to mint."
        },
        "returns": {
          "_0": "A boolean that indicates if the operation was successful."
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "releaseHold(bytes32)": {
        "params": {
          "holdId": "a unique identifier for the hold."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "retrieveHoldHashId(address,address,address,uint256)": {
        "details": "Retrieve hold hash, and ID for given parameters"
      },
      "spendableBalanceOf(address)": {
        "params": {
          "account": "owner of the tokens"
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "ERC20HoldableToken",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "approve(address,uint256)": {
        "notice": "ERC20 approve that checks on hold tokens can not be approved for spending by another account."
      },
      "balanceOf(address)": {
        "notice": "Amount of tokens owned by an account that are available for transfer. That is, the gross balance less any held tokens."
      },
      "balanceOnHold(address)": {
        "notice": "Amount of tokens owned by an account that are held pending execution or release."
      },
      "burn(uint256)": {
        "notice": "ERC20 burn that checks on hold tokens can not be burnt."
      },
      "burnFrom(address,uint256)": {
        "notice": "ERC20 burnFrom that checks on hold tokens can not be burnt."
      },
      "executeHold(bytes32)": {
        "notice": "Called by the notary to transfer the held tokens to the set at the hold recipient if there is no hash lock."
      },
      "executeHold(bytes32,bytes32)": {
        "notice": "Called by the notary to transfer the held tokens to the recipient that was set at the hold."
      },
      "executeHold(bytes32,bytes32,address)": {
        "notice": "Called by the notary to transfer the held tokens to the recipient if no recipient was specified at the hold."
      },
      "hold(bytes32,address,address,uint256,uint256,bytes32)": {
        "notice": "Called by the sender to hold some tokens for a recipient that the sender can not release back to themself until after the expiration date."
      },
      "releaseHold(bytes32)": {
        "notice": "Called by the notary at any time or the sender after the expiration date to release the held tokens back to the sender."
      },
      "spendableBalanceOf(address)": {
        "notice": "Total amount of tokens owned by an account including all the held tokens pending execution or release."
      },
      "transfer(address,uint256)": {
        "notice": "ERC20 transfer that checks on hold tokens can not be transferred."
      },
      "transferFrom(address,address,uint256)": {
        "notice": "ERC20 transferFrom that checks on hold tokens can not be transferred."
      }
    },
    "notice": "A hold is like an approve where held tokens can not be spent by the token holder until after an hold expiration period. The hold can be executed by a notary, which can be the recipient of the tokens, a third party or a smart contract. The notary can execute the hold before or after the expiration period. Additionally, a hash lock at be applied which requires the notary of the hold to present the hash preimage to execute the hold. Held tokens can be released by the notary at any time or by the token holder after the expiration period. A recipient does not have to get set at the time of the hold, which means it will have to be specified when the hold is executed.",
    "version": 1
  }
}