/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result, EventFragment } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export interface AllowlistAdminRoleInterface extends utils.Interface {
  functions: {
    "isAllowlistAdmin(address,address)": FunctionFragment;
    "addAllowlistAdmin(address,address)": FunctionFragment;
    "removeAllowlistAdmin(address,address)": FunctionFragment;
    "renounceAllowlistAdmin(address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "isAllowlistAdmin",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "addAllowlistAdmin",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "removeAllowlistAdmin",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceAllowlistAdmin",
    values: [string]
  ): string;

  decodeFunctionResult(
    functionFragment: "isAllowlistAdmin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addAllowlistAdmin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeAllowlistAdmin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceAllowlistAdmin",
    data: BytesLike
  ): Result;

  events: {
    "AllowlistAdminAdded(address,address)": EventFragment;
    "AllowlistAdminRemoved(address,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "AllowlistAdminAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "AllowlistAdminRemoved"): EventFragment;
}

export type AllowlistAdminAddedEvent = TypedEvent<
  [string, string],
  { token: string; account: string }
>;

export type AllowlistAdminAddedEventFilter =
  TypedEventFilter<AllowlistAdminAddedEvent>;

export type AllowlistAdminRemovedEvent = TypedEvent<
  [string, string],
  { token: string; account: string }
>;

export type AllowlistAdminRemovedEventFilter =
  TypedEventFilter<AllowlistAdminRemovedEvent>;

export interface AllowlistAdminRole extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: AllowlistAdminRoleInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    isAllowlistAdmin(
      token: string,
      account: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    addAllowlistAdmin(
      token: string,
      account: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    removeAllowlistAdmin(
      token: string,
      account: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    renounceAllowlistAdmin(
      token: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  isAllowlistAdmin(
    token: string,
    account: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  addAllowlistAdmin(
    token: string,
    account: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  removeAllowlistAdmin(
    token: string,
    account: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  renounceAllowlistAdmin(
    token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    isAllowlistAdmin(
      token: string,
      account: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    addAllowlistAdmin(
      token: string,
      account: string,
      overrides?: CallOverrides
    ): Promise<void>;

    removeAllowlistAdmin(
      token: string,
      account: string,
      overrides?: CallOverrides
    ): Promise<void>;

    renounceAllowlistAdmin(
      token: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "AllowlistAdminAdded(address,address)"(
      token?: string | null,
      account?: string | null
    ): AllowlistAdminAddedEventFilter;
    AllowlistAdminAdded(
      token?: string | null,
      account?: string | null
    ): AllowlistAdminAddedEventFilter;

    "AllowlistAdminRemoved(address,address)"(
      token?: string | null,
      account?: string | null
    ): AllowlistAdminRemovedEventFilter;
    AllowlistAdminRemoved(
      token?: string | null,
      account?: string | null
    ): AllowlistAdminRemovedEventFilter;
  };

  estimateGas: {
    isAllowlistAdmin(
      token: string,
      account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    addAllowlistAdmin(
      token: string,
      account: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    removeAllowlistAdmin(
      token: string,
      account: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    renounceAllowlistAdmin(
      token: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    isAllowlistAdmin(
      token: string,
      account: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    addAllowlistAdmin(
      token: string,
      account: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    removeAllowlistAdmin(
      token: string,
      account: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    renounceAllowlistAdmin(
      token: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
