/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BatchTokenIssuer,
  BatchTokenIssuerInterface,
} from "../BatchTokenIssuer";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "interfaceHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "canImplementInterfaceForAddress",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bytes32[]",
        name: "partitions",
        type: "bytes32[]",
      },
      {
        internalType: "address[]",
        name: "tokenHolders",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "batchIssueByPartition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061004c6040518060400160405280601081526020016f2130ba31b42a37b5b2b724b9b9bab2b960811b81525061005160201b6103821760201c565b6100d9565b600160008083604051602001610067919061009e565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff191691151591909117905550565b6000825160005b818110156100bf57602081860181015185830152016100a5565b818111156100ce576000828501525b509190910192915050565b610600806100e86000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063249cb3fa1461003b578063edec7e1514610060575b600080fd5b61004e610049366004610524565b610075565b60405190815260200160405180910390f35b61007361006e366004610458565b6100d6565b005b60008281526020819052604081205460ff16156100cc5760405173455243313832305f4143434550545f4d4147494360601b60208201526034016040516020818303038152906040528051906020012090506100d0565b5060005b92915050565b6040516355138f0d60e11b815233600482015287906001600160a01b0382169063aa271e1a9060240160206040518083038186803b15801561011757600080fd5b505afa15801561012b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014f9190610502565b6101a05760405162461bcd60e51b815260206004820152601d60248201527f53656e646572206973206e6f74206120746f6b656e206d696e7465722e00000060448201526064015b60405180910390fd5b8584146102115760405162461bcd60e51b815260206004820152603960248201527f706172746974696f6e7320616e6420746f6b656e486f6c6465727320617272616044820152787973206861766520646966666572656e74206c656e6774687360381b6064820152608401610197565b85821461027c5760405162461bcd60e51b815260206004820152603360248201527f706172746974696f6e7320616e642076616c75657320617272617973206861766044820152726520646966666572656e74206c656e6774687360681b6064820152608401610197565b60005b8681101561037757886001600160a01b03166367c849198989848181106102a8576102a86105b4565b905060200201358888858181106102c1576102c16105b4565b90506020020160208101906102d69190610436565b8787868181106102e8576102e86105b4565b6040516001600160e01b031960e088901b16815260048101959095526001600160a01b03909316602485015250602090910201356044820152608060648201526000608482015260a401600060405180830381600087803b15801561034c57600080fd5b505af1158015610360573d6000803e3d6000fd5b50505050808061036f9061058b565b91505061027f565b505050505050505050565b6001600080836040516020016103989190610550565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff191691151591909117905550565b80356001600160a01b03811681146103e657600080fd5b919050565b60008083601f8401126103fd57600080fd5b5081356001600160401b0381111561041457600080fd5b6020830191508360208260051b850101111561042f57600080fd5b9250929050565b60006020828403121561044857600080fd5b610451826103cf565b9392505050565b60008060008060008060006080888a03121561047357600080fd5b61047c886103cf565b965060208801356001600160401b038082111561049857600080fd5b6104a48b838c016103eb565b909850965060408a01359150808211156104bd57600080fd5b6104c98b838c016103eb565b909650945060608a01359150808211156104e257600080fd5b506104ef8a828b016103eb565b989b979a50959850939692959293505050565b60006020828403121561051457600080fd5b8151801515811461045157600080fd5b6000806040838503121561053757600080fd5b82359150610547602084016103cf565b90509250929050565b6000825160005b818110156105715760208186018101518583015201610557565b81811115610580576000828501525b509190910192915050565b60006000198214156105ad57634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220806ea4a52cc2d3d5df5f6f515796217524adc4c4b7857cccb0f0ecd844caeffc64736f6c63430008070033";

type BatchTokenIssuerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BatchTokenIssuerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BatchTokenIssuer__factory extends ContractFactory {
  constructor(...args: BatchTokenIssuerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BatchTokenIssuer> {
    return super.deploy(overrides || {}) as Promise<BatchTokenIssuer>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BatchTokenIssuer {
    return super.attach(address) as BatchTokenIssuer;
  }
  connect(signer: Signer): BatchTokenIssuer__factory {
    return super.connect(signer) as BatchTokenIssuer__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BatchTokenIssuerInterface {
    return new utils.Interface(_abi) as BatchTokenIssuerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BatchTokenIssuer {
    return new Contract(address, _abi, signerOrProvider) as BatchTokenIssuer;
  }
}
