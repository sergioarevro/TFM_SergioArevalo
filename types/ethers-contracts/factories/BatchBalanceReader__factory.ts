/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BatchBalanceReader,
  BatchBalanceReaderInterface,
} from "../BatchBalanceReader";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "interfaceHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "canImplementInterfaceForAddress",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokenHolders",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "tokenAddresses",
        type: "address[]",
      },
      {
        internalType: "bytes32[]",
        name: "partitions",
        type: "bytes32[]",
      },
    ],
    name: "balancesOfByPartition",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokenHolders",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "tokenAddresses",
        type: "address[]",
      },
    ],
    name: "balancesOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "partitions",
        type: "bytes32[]",
      },
      {
        internalType: "address[]",
        name: "tokenAddresses",
        type: "address[]",
      },
    ],
    name: "totalSuppliesByPartition",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokenAddresses",
        type: "address[]",
      },
    ],
    name: "totalSupplies",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061004e604051806040016040528060128152602001712130ba31b42130b630b731b2a932b0b232b960711b81525061005360201b6107861760201c565b6100db565b60016000808360405160200161006991906100a0565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff191691151591909117905550565b6000825160005b818110156100c157602081860181015185830152016100a7565b818111156100d0576000828501525b509190910192915050565b610b23806100ea6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631929e0091461005c578063249cb3fa14610085578063a09640ec146100a6578063dd2e4bb5146100b9578063feeef1e6146100cc575b600080fd5b61006f61006a36600461089d565b6100df565b60405161007c9190610a21565b60405180910390f35b6100986100933660046109a1565b610268565b60405190815260200161007c565b61006f6100b436600461089d565b6102c9565b61006f6100c736600461085c565b61045d565b61006f6100da366004610908565b61057e565b606060006100ed8386610a71565b6001600160401b0381111561010457610104610ad7565b60405190808252806020026020018201604052801561012d578160200160208202803683370190505b5090506000805b8481101561025c5760005b8781101561024957806101528984610a71565b61015c9190610a59565b925086868381811061017057610170610ac1565b9050602002016020810190610185919061083a565b6001600160a01b031663a26734dc8a8a848181106101a5576101a5610ac1565b905060200201356040518263ffffffff1660e01b81526004016101ca91815260200190565b60206040518083038186803b1580156101e257600080fd5b505afa1580156101f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021a91906109cd565b84848151811061022c5761022c610ac1565b60209081029190910101528061024181610a90565b91505061013f565b508061025481610a90565b915050610134565b50909695505050505050565b60008281526020819052604081205460ff16156102bf5760405173455243313832305f4143434550545f4d4147494360601b60208201526034016040516020818303038152906040528051906020012090506102c3565b5060005b92915050565b606060006102d78386610a71565b6001600160401b038111156102ee576102ee610ad7565b604051908082528060200260200182016040528015610317578160200160208202803683370190505b5090506000805b8681101561025c5760005b8581101561044a578061033c8784610a71565b6103469190610a59565b925086868281811061035a5761035a610ac1565b905060200201602081019061036f919061083a565b6001600160a01b03166370a082318a8a8581811061038f5761038f610ac1565b90506020020160208101906103a4919061083a565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160206040518083038186803b1580156103e357600080fd5b505afa1580156103f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041b91906109cd565b84848151811061042d5761042d610ac1565b60209081029190910101528061044281610a90565b915050610329565b508061045581610a90565b91505061031e565b60606000826001600160401b0381111561047957610479610ad7565b6040519080825280602002602001820160405280156104a2578160200160208202803683370190505b50905060005b83811015610576578484828181106104c2576104c2610ac1565b90506020020160208101906104d7919061083a565b6001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561050f57600080fd5b505afa158015610523573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054791906109cd565b82828151811061055957610559610ac1565b60209081029190910101528061056e81610a90565b9150506104a8565b509392505050565b606060008661058d8487610a71565b6105979190610a71565b6001600160401b038111156105ae576105ae610ad7565b6040519080825280602002602001820160405280156105d7578160200160208202803683370190505b5090506000805b888110156107785760005b878110156107655760005b8681101561075257806106078884610a71565b610611898c610a71565b61061b9086610a71565b6106259190610a59565b61062f9190610a59565b935089898381811061064357610643610ac1565b9050602002016020810190610658919061083a565b6001600160a01b03166330e8280389898481811061067857610678610ac1565b905060200201358e8e8781811061069157610691610ac1565b90506020020160208101906106a6919061083a565b6040516001600160e01b031960e085901b16815260048101929092526001600160a01b0316602482015260440160206040518083038186803b1580156106eb57600080fd5b505afa1580156106ff573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072391906109cd565b85858151811061073557610735610ac1565b60209081029190910101528061074a81610a90565b9150506105f4565b508061075d81610a90565b9150506105e9565b508061077081610a90565b9150506105de565b509098975050505050505050565b60016000808360405160200161079c91906109e6565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff191691151591909117905550565b80356001600160a01b03811681146107ea57600080fd5b919050565b60008083601f84011261080157600080fd5b5081356001600160401b0381111561081857600080fd5b6020830191508360208260051b850101111561083357600080fd5b9250929050565b60006020828403121561084c57600080fd5b610855826107d3565b9392505050565b6000806020838503121561086f57600080fd5b82356001600160401b0381111561088557600080fd5b610891858286016107ef565b90969095509350505050565b600080600080604085870312156108b357600080fd5b84356001600160401b03808211156108ca57600080fd5b6108d6888389016107ef565b909650945060208701359150808211156108ef57600080fd5b506108fc878288016107ef565b95989497509550505050565b6000806000806000806060878903121561092157600080fd5b86356001600160401b038082111561093857600080fd5b6109448a838b016107ef565b9098509650602089013591508082111561095d57600080fd5b6109698a838b016107ef565b9096509450604089013591508082111561098257600080fd5b5061098f89828a016107ef565b979a9699509497509295939492505050565b600080604083850312156109b457600080fd5b823591506109c4602084016107d3565b90509250929050565b6000602082840312156109df57600080fd5b5051919050565b6000825160005b81811015610a0757602081860181015185830152016109ed565b81811115610a16576000828501525b509190910192915050565b6020808252825182820181905260009190848201906040850190845b8181101561025c57835183529284019291840191600101610a3d565b60008219821115610a6c57610a6c610aab565b500190565b6000816000190483118215151615610a8b57610a8b610aab565b500290565b6000600019821415610aa457610aa4610aab565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220bb350b6020b5aa655b694980cb3e75b8fe6489857ba4d42cc8aaa0b763bddb5c64736f6c63430008070033";

type BatchBalanceReaderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BatchBalanceReaderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BatchBalanceReader__factory extends ContractFactory {
  constructor(...args: BatchBalanceReaderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BatchBalanceReader> {
    return super.deploy(overrides || {}) as Promise<BatchBalanceReader>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BatchBalanceReader {
    return super.attach(address) as BatchBalanceReader;
  }
  connect(signer: Signer): BatchBalanceReader__factory {
    return super.connect(signer) as BatchBalanceReader__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BatchBalanceReaderInterface {
    return new utils.Interface(_abi) as BatchBalanceReaderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BatchBalanceReader {
    return new Contract(address, _abi, signerOrProvider) as BatchBalanceReader;
  }
}
