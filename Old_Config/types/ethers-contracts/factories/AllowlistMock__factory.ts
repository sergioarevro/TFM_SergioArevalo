/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AllowlistMock, AllowlistMockInterface } from "../AllowlistMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AllowlistAdminAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AllowlistAdminRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AllowlistedAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AllowlistedRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addAllowlistAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addAllowlisted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isAllowlistAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isAllowlisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeAllowlistAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeAllowlisted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "renounceAllowlistAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "mockActivated",
        type: "bool",
      },
    ],
    name: "mockFunction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161081638038061081683398101604081905261002f916101b3565b610039813361003f565b506101e3565b6001600160a01b03821660009081526020818152604090912061006b91839061022a6100af821b17901c565b806001600160a01b0316826001600160a01b03167f7a247cc00caf875946bd4af440d6b1776fe6bb625e25cad7626bedf5e6a1c37060405160405180910390a35050565b6100b98282610130565b1561010b5760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650060448201526064015b60405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b0382166101935760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b6064820152608401610102565b506001600160a01b03166000908152602091909152604090205460ff1690565b6000602082840312156101c557600080fd5b81516001600160a01b03811681146101dc57600080fd5b9392505050565b610624806101f26000396000f3fe608060405234801561001057600080fd5b50600436106100785760003560e01c80630d21cdd81461007d5780634261699f1461009257806342be5787146100a557806361c2e281146100cc578063685e2519146100df5780636c41d4ea146100f2578063dfe15da014610105578063fa061ca014610118575b600080fd5b61009061008b366004610564565b61012b565b005b6100906100a036600461057f565b610138565b6100b86100b336600461057f565b61015b565b604051901515815260200160405180910390f35b6100b86100da36600461057f565b610184565b6100906100ed36600461057f565b6101a6565b6100906101003660046105b2565b6101c4565b61009061011336600461057f565b6101ee565b61009061012636600461057f565b61020c565b61013581336102ab565b50565b81610143813361015b565b61014c57600080fd5b6101568383610311565b505050565b6001600160a01b038216600090815260208190526040812061017d9083610377565b9392505050565b6001600160a01b038216600090815260016020526040812061017d9083610377565b816101b1813361015b565b6101ba57600080fd5b61015683836103fa565b816101cf8133610184565b156101d957600080fd5b506002805460ff191691151591909117905550565b816101f9813361015b565b61020257600080fd5b61015683836102ab565b81610217813361015b565b61022057600080fd5b6101568383610460565b6102348282610377565b156102865760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650060448201526064015b60405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6001600160a01b03821660009081526020819052604090206102cd90826104c6565b806001600160a01b0316826001600160a01b03167f84c618afa7439d9985b8c707a18637a9c6b0128399c0f5dee2ca90254d66fc3a60405160405180910390a35050565b6001600160a01b0382166000908152600160205260409020610333908261022a565b806001600160a01b0316826001600160a01b03167ff537a4c39a5575220902fda69b79909e02d44c8a7146b1a1c3b936f86aa71e3860405160405180910390a35050565b60006001600160a01b0382166103da5760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b606482015260840161027d565b506001600160a01b03166000908152602091909152604090205460ff1690565b6001600160a01b038216600090815260016020526040902061041c90826104c6565b806001600160a01b0316826001600160a01b03167f99c45157365b22d82f22eea7bc8cff76cb53628113f4b52b10f83db3b404001660405160405180910390a35050565b6001600160a01b0382166000908152602081905260409020610482908261022a565b806001600160a01b0316826001600160a01b03167f7a247cc00caf875946bd4af440d6b1776fe6bb625e25cad7626bedf5e6a1c37060405160405180910390a35050565b6104d08282610377565b6105265760405162461bcd60e51b815260206004820152602160248201527f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6044820152606560f81b606482015260840161027d565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b80356001600160a01b038116811461055f57600080fd5b919050565b60006020828403121561057657600080fd5b61017d82610548565b6000806040838503121561059257600080fd5b61059b83610548565b91506105a960208401610548565b90509250929050565b600080604083850312156105c557600080fd5b6105ce83610548565b9150602083013580151581146105e357600080fd5b80915050925092905056fea2646970667358221220e84f3fa8411667733befed13d100f6529a1a4f0f9ada515fad0fcaf5cb89cbf264736f6c63430008070033";

type AllowlistMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AllowlistMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AllowlistMock__factory extends ContractFactory {
  constructor(...args: AllowlistMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AllowlistMock> {
    return super.deploy(token, overrides || {}) as Promise<AllowlistMock>;
  }
  getDeployTransaction(
    token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(token, overrides || {});
  }
  attach(address: string): AllowlistMock {
    return super.attach(address) as AllowlistMock;
  }
  connect(signer: Signer): AllowlistMock__factory {
    return super.connect(signer) as AllowlistMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AllowlistMockInterface {
    return new utils.Interface(_abi) as AllowlistMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AllowlistMock {
    return new Contract(address, _abi, signerOrProvider) as AllowlistMock;
  }
}
