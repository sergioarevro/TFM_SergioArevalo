{
  "contractName": "ERC20HoldableToken",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "holdId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "lockPreimage",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "ExecutedHold",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "holdId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "notary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "expirationDateTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "lockHash",
          "type": "bytes32"
        }
      ],
      "name": "NewHold",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "holdId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ReleaseHold",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "interfaceHash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "canImplementInterfaceForAddress",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupplyOnHold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "notary",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expirationDateTime",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "lockHash",
          "type": "bytes32"
        }
      ],
      "name": "generateHoldId",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "holdId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "notary",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "retrieveHoldHashId",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "holdId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "notary",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expirationDateTime",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "lockHash",
          "type": "bytes32"
        }
      ],
      "name": "hold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "holdId",
          "type": "bytes32"
        }
      ],
      "name": "retrieveHoldData",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "notary",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationDateTime",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "secretHash",
              "type": "bytes32"
            },
            {
              "internalType": "enum HoldStatusCode",
              "name": "status",
              "type": "uint8"
            }
          ],
          "internalType": "struct ERC20HoldData",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "holdId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "lockPreimage",
          "type": "bytes32"
        }
      ],
      "name": "executeHold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "holdId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "lockPreimage",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "executeHold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "holdId",
          "type": "bytes32"
        }
      ],
      "name": "executeHold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "holdId",
          "type": "bytes32"
        }
      ],
      "name": "releaseHold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOnHold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "spendableBalanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "holdId",
          "type": "bytes32"
        }
      ],
      "name": "holdStatus",
      "outputs": [
        {
          "internalType": "enum HoldStatusCode",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"holdId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"lockPreimage\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"ExecutedHold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"holdId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"notary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expirationDateTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"lockHash\",\"type\":\"bytes32\"}],\"name\":\"NewHold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"holdId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ReleaseHold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOnHold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"interfaceHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"canImplementInterfaceForAddress\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"holdId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"lockPreimage\",\"type\":\"bytes32\"}],\"name\":\"executeHold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"holdId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"lockPreimage\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"executeHold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"holdId\",\"type\":\"bytes32\"}],\"name\":\"executeHold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"notary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDateTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"lockHash\",\"type\":\"bytes32\"}],\"name\":\"generateHoldId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"holdId\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"holdId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"notary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDateTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"lockHash\",\"type\":\"bytes32\"}],\"name\":\"hold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"holdId\",\"type\":\"bytes32\"}],\"name\":\"holdStatus\",\"outputs\":[{\"internalType\":\"enum HoldStatusCode\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"holdId\",\"type\":\"bytes32\"}],\"name\":\"releaseHold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"holdId\",\"type\":\"bytes32\"}],\"name\":\"retrieveHoldData\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"notary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDateTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"secretHash\",\"type\":\"bytes32\"},{\"internalType\":\"enum HoldStatusCode\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct ERC20HoldData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"notary\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"retrieveHoldHashId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"spendableBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupplyOnHold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"balanceOf(address)\":{\"params\":{\"account\":\"owner of the tokens\\u00df\"}},\"balanceOnHold(address)\":{\"params\":{\"account\":\"owner of the tokens\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"executeHold(bytes32)\":{\"params\":{\"holdId\":\"a unique identifier for the hold.\"}},\"executeHold(bytes32,bytes32)\":{\"params\":{\"holdId\":\"a unique identifier for the hold.\",\"lockPreimage\":\"the image used to generate the lock hash with a sha256 hash\"}},\"executeHold(bytes32,bytes32,address)\":{\"params\":{\"holdId\":\"a unique identifier for the hold.\",\"lockPreimage\":\"the image used to generate the lock hash with a keccak256 hash\",\"recipient\":\"the account the tokens will be transferred to on execution.\"}},\"hold(bytes32,address,address,uint256,uint256,bytes32)\":{\"params\":{\"amount\":\"of tokens to be transferred to the recipient on execution. Must be a non zero amount.\",\"expirationDateTime\":\"UNIX epoch seconds the held amount can be released back to the sender by the sender. Past dates are allowed.\",\"holdId\":\"a unique identifier for the hold.\",\"lockHash\":\"optional keccak256 hash of a lock preimage. An empty hash will not enforce the hash lock when the hold is executed.\",\"notary\":\"account that can execute the hold. Typically the recipient but can be a third party or a smart contact.\",\"recipient\":\"optional account the tokens will be transferred to on execution. If a zero address, the recipient must be specified on execution of the hold.\"}},\"holdStatus(bytes32)\":{\"params\":{\"holdId\":\"a unique identifier for the hold.\"},\"returns\":{\"_0\":\"hold status code.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens\",\"params\":{\"to\":\"The address that will receive the minted tokens.\",\"value\":\"The amount of tokens to mint.\"},\"returns\":{\"_0\":\"A boolean that indicates if the operation was successful.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"releaseHold(bytes32)\":{\"params\":{\"holdId\":\"a unique identifier for the hold.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"retrieveHoldHashId(address,address,address,uint256)\":{\"details\":\"Retrieve hold hash, and ID for given parameters\"},\"spendableBalanceOf(address)\":{\"params\":{\"account\":\"owner of the tokens\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"ERC20HoldableToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"ERC20 approve that checks on hold tokens can not be approved for spending by another account.\"},\"balanceOf(address)\":{\"notice\":\"Amount of tokens owned by an account that are available for transfer. That is, the gross balance less any held tokens.\"},\"balanceOnHold(address)\":{\"notice\":\"Amount of tokens owned by an account that are held pending execution or release.\"},\"burn(uint256)\":{\"notice\":\"ERC20 burn that checks on hold tokens can not be burnt.\"},\"burnFrom(address,uint256)\":{\"notice\":\"ERC20 burnFrom that checks on hold tokens can not be burnt.\"},\"executeHold(bytes32)\":{\"notice\":\"Called by the notary to transfer the held tokens to the set at the hold recipient if there is no hash lock.\"},\"executeHold(bytes32,bytes32)\":{\"notice\":\"Called by the notary to transfer the held tokens to the recipient that was set at the hold.\"},\"executeHold(bytes32,bytes32,address)\":{\"notice\":\"Called by the notary to transfer the held tokens to the recipient if no recipient was specified at the hold.\"},\"hold(bytes32,address,address,uint256,uint256,bytes32)\":{\"notice\":\"Called by the sender to hold some tokens for a recipient that the sender can not release back to themself until after the expiration date.\"},\"releaseHold(bytes32)\":{\"notice\":\"Called by the notary at any time or the sender after the expiration date to release the held tokens back to the sender.\"},\"spendableBalanceOf(address)\":{\"notice\":\"Total amount of tokens owned by an account including all the held tokens pending execution or release.\"},\"transfer(address,uint256)\":{\"notice\":\"ERC20 transfer that checks on hold tokens can not be transferred.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"ERC20 transferFrom that checks on hold tokens can not be transferred.\"}},\"notice\":\"A hold is like an approve where held tokens can not be spent by the token holder until after an hold expiration period. The hold can be executed by a notary, which can be the recipient of the tokens, a third party or a smart contract. The notary can execute the hold before or after the expiration period. Additionally, a hash lock at be applied which requires the notary of the hold to present the hash preimage to execute the hold. Held tokens can be released by the notary at any time or by the token holder after the expiration period. A recipient does not have to get set at the time of the hold, which means it will have to be specified when the hold is executed.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/tokens/ERC20HoldableToken.sol\":\"ERC20HoldableToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":0},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xa35b1f2a670cd2a701a52c398032c9fed72df1909fe394d77ceacbf074e8937b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72b957861691ebdaa78c52834465c4f8296480fe4f1a12ba72dc6c0c8ac076dd\",\"dweb:/ipfs/QmVz1sHCwgEivHPRDswdt9tdvky7EnWqFmbuk1wFE55VMG\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x418cfe64226a974419f8ab7287ad4bb413156a4d7af8ab5d9bcaa5678d1a2f22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f65118c99d5d6cfe602720418b8551c2da6c3de650e61c5231b0be4396aae0d\",\"dweb:/ipfs/QmdLmkRHJhEifzzDjF44MHXcQx2SXc5EzhpHzN2z1vUq8H\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0xf98cb1651a90d20ef77d8c1dd10d5fce4954e747603e5672a8292bd4368120dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76b539a8edd558b010d1ff3e462c5d4edd039b790b91f31a5bce18957655cc9f\",\"dweb:/ipfs/QmSdJehhx1SwCWLSFFgHQTmUY2YwDTBQjTVjkmhXhA1srb\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0xb6d09c0a37d1222bff59fb166567558c057bab36b96a8457de29f25afd6e87b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70a859245ffa6c804558f365acc53b0d90f020e199f46e87568e41f47d2a28db\",\"dweb:/ipfs/QmSpzKQeYL6yqqb526wC6VdphBcmb3oqDeb3anMRKzbM33\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]},\"project:/contracts/interface/ERC1820Implementer.sol\":{\"keccak256\":\"0x73a779c5921dd13ed066e7f552c70650a7dc180259c7ae3ca737412c44f456f4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6ef9b2cd1dc82ba9a8a0174f3eb319ad4272ba88ece590245b1b226587c6c640\",\"dweb:/ipfs/QmVQ154bNWE8ZVtC9HFYEntAgxGj5KNamUSXmCGWjacebx\"]},\"project:/contracts/interface/HoldStatusCode.sol\":{\"keccak256\":\"0x6deb0acca580b9e9474d8dc953a759311c1f77876fa06cf672550970db0289a6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://603ba40c099b8affdd7a25a2922b7a13fe30a52d0922cc10d669723dac80de05\",\"dweb:/ipfs/QmWE3hHWtcJqaL1g2rU3ztTxwJMUJnMQS5ZdA2QvChpRo6\"]},\"project:/contracts/interface/IERC20HoldableToken.sol\":{\"keccak256\":\"0x8348bebc4695425ee6e0adbb79980ee226fbe410ccb4d46bca76d45214f123a1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://722d3a124137d7f819066ab36108fbcf54d77fd130e2069ae093e454af10fbc6\",\"dweb:/ipfs/QmNRgnDos5dW12tiW71g1h4JCQ7dqNxisXRjczEaNFb1Cp\"]},\"project:/contracts/roles/MinterRole.sol\":{\"keccak256\":\"0x8122ab47d135e2a61d934f701973ba60f1a37a6b8ec96caadf4312361bb96423\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://84022004ad75be59548bd32ede14801d8214fa548d235a5f12c768dcafdd9010\",\"dweb:/ipfs/QmQE5WQxcKD7DBfuM864oLVyU6yTvZCqwQqA4CwEM2J9R6\"]},\"project:/contracts/roles/Roles.sol\":{\"keccak256\":\"0x5a50db74c6506a1fa2bf12dc2a584e9131d27e011ca11f848c3eefcc87ccf9e3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ef0289f75d1b7b3f0dd7dd815ef7bff742f38e137605fbf3c4a3b5e3a6b44b6b\",\"dweb:/ipfs/QmTdoBbU4PhqcApxJmbJxVVVJLpBTMKofy9USEYjGnariR\"]},\"project:/contracts/tokens/ERC20HoldableToken.sol\":{\"keccak256\":\"0x5a76a3d4e768c79fa57d2fd35acf35687ad8118fc15d2d648cfa643a973f7718\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4c419d43360e468b0822473e1bb68dfca2f9f847968555fe47740d99f87a0877\",\"dweb:/ipfs/QmQ2Nytd1QL1dzavXGY4q3cG4btuDkVaPWvd4gxTVKKfeq\"]},\"project:/contracts/tokens/ERC20Token.sol\":{\"keccak256\":\"0xae2a11a2f9342944c6e56a0e2b61d25889dd1a0e3df0fa3170337132a0d25754\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ed1bd1de54a583f30ea21805ce42ed259f5157f4cb3db47b1341462f8a493d9\",\"dweb:/ipfs/QmbbhN7FhzenrwDJGAhYvNVQXaPZBmqoN4fsdZPBqsejc7\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101a15760003560e01c806306fdde03146101a6578063095ea7b3146101c45780630f8f8b83146101e757806318160ddd1461020857806323b872dd14610210578063249cb3fa146102235780633092afd514610236578063313ce5671461024b578063395093511461027c57806340c10f191461028f57806342966c68146102a2578063445850af146102b557806351bfb961146102c85780635c975abb146102d1578063603dfcb5146102dc57806370a08231146102ef578063715018a61461030257806379cc67901461030a5780638da5cb5b1461031d5780639335c28f1461033257806395d89b4114610345578063983b2d561461034d57806398650275146103605780639d22091514610368578063a457c2d714610390578063a9059cbb146103a3578063aa271e1a146103b6578063b67f7bd4146103c9578063c0e8330e146103fc578063c5a468c61461040f578063da1ec24614610438578063dd62ed3e14610458578063f2fde38b14610491578063f8abd4bc146104a4578063fdec4c21146104b7575b600080fd5b6101ae610522565b6040516101bb9190612613565b60405180910390f35b6101d76101d2366004612485565b6105b4565b60405190151581526020016101bb565b6101fa6101f5366004612363565b610666565b6040519081526020016101bb565b6003546101fa565b6101d761021e3660046123fc565b610692565b6101fa6102313660046124e1565b61073b565b610249610244366004612363565b61079a565b005b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016101bb565b6101d761028a366004612485565b6107b8565b6101d761029d366004612485565b6107fd565b6102496102b03660046124af565b61081b565b6102496102c336600461255c565b6108b7565b6101fa600c5481565b60065460ff166101d7565b6102496102ea36600461257e565b6109cf565b6101fa6102fd366004612363565b610bcc565b610249610bd7565b610249610318366004612485565b610c12565b610325610caf565b6040516101bb91906125f1565b6102496103403660046124af565b610cbe565b6101ae610f53565b61024961035b366004612363565b610f62565b610249610f7d565b61037b6103763660046123b1565b610f86565b604080519283526020830191909152016101bb565b6101d761039e366004612485565b610ff6565b6101d76103b1366004612485565b61108f565b6101d76103c4366004612363565b61112f565b6103ef6103d73660046124af565b60009081526009602052604090206006015460ff1690565b6040516101bb9190612605565b61024961040a366004612504565b61113c565b6101fa61041d366004612363565b6001600160a01b03166000908152600a602052604090205490565b61044b6104463660046124af565b6114ff565b6040516101bb91906127d0565b6101fa61046636600461237e565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b61024961049f366004612363565b6115dd565b6102496104b23660046124af565b61167a565b6101fa6104c5366004612438565b6040516001600160601b0319606087811b8216602084015286901b16603482015260488101849052606881018390526088810182905260009060a80160405160208183030381529060405280519060200120905095945050505050565b60606004805461053190612890565b80601f016020809104026020016040519081016040528092919081815260200182805461055d90612890565b80156105aa5780601f1061057f576101008083540402835291602001916105aa565b820191906000526020600020905b81548152906001019060200180831161058d57829003601f168201915b5050505050905090565b604051630f8f8b8360e01b815260009082903090630f8f8b83906105dc9033906004016125f1565b60206040518083038186803b1580156105f457600080fd5b505afa158015610608573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062c91906124c8565b10156106535760405162461bcd60e51b815260040161064a90612705565b60405180910390fd5b61065d838361181f565b90505b92915050565b6001600160a01b0381166000908152600a60205260408120546106609061068c8461182c565b90611847565b604051630f8f8b8360e01b815260009082903090630f8f8b83906106ba9088906004016125f1565b60206040518083038186803b1580156106d257600080fd5b505afa1580156106e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070a91906124c8565b10156107285760405162461bcd60e51b815260040161064a90612705565b610733848484611853565b949350505050565b60008281526007602052604081205460ff16156107925760405173455243313832305f4143434550545f4d4147494360601b6020820152603401604051602081830303815290604052805190602001209050610660565b506000610660565b6107a33361112f565b6107ac57600080fd5b6107b5816118fd565b50565b3360008181526002602090815260408083206001600160a01b038716845290915281205490916107f49185906107ef908690612835565b61193f565b50600192915050565b60006108083361112f565b61081157600080fd5b6107f48383611a63565b604051630f8f8b8360e01b815281903090630f8f8b83906108409033906004016125f1565b60206040518083038186803b15801561085857600080fd5b505afa15801561086c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089091906124c8565b10156108ae5760405162461bcd60e51b815260040161064a90612705565b6107b581611b3c565b6000828152600960205260409020600101546001600160a01b03166108ee5760405162461bcd60e51b815260040161064a90612754565b600082815260096020526040902060050154156109a35760028160405160200161091a91815260200190565b60408051601f1981840301815290829052610934916125d5565b602060405180830381855afa158015610951573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061097491906124c8565b600083815260096020526040902060050154146109a35760405162461bcd60e51b815260040161064a9061267d565b6000828152600960205260409020600101546109cb90839083906001600160a01b0316611b46565b5050565b6000838152600960205260409020600101546001600160a01b031615610a6d5760405162461bcd60e51b815260206004820152604760248201527f65786563757465486f6c643a2063616e206e6f7420736574206120726563697060448201527f69656e74206f6e20657865637574696f6e2061732069742077617320736574206064820152661bdb881a1bdb1960ca1b608482015260a40161064a565b6001600160a01b038116610add5760405162461bcd60e51b815260206004820152603160248201527f65786563757465486f6c643a20726563697069656e74206d757374206e6f742060448201527062652061207a65726f206164647265737360781b606482015260840161064a565b60008381526009602052604090206005015415610b9257600282604051602001610b0991815260200190565b60408051601f1981840301815290829052610b23916125d5565b602060405180830381855afa158015610b40573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610b6391906124c8565b60008481526009602052604090206005015414610b925760405162461bcd60e51b815260040161064a9061267d565b600083815260096020526040902060010180546001600160a01b0319166001600160a01b038316179055610bc7838383611b46565b505050565b60006106608261182c565b33610be0610caf565b6001600160a01b031614610c065760405162461bcd60e51b815260040161064a906126d0565b610c106000611d94565b565b604051630f8f8b8360e01b815281903090630f8f8b8390610c379033906004016125f1565b60206040518083038186803b158015610c4f57600080fd5b505afa158015610c63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8791906124c8565b1015610ca55760405162461bcd60e51b815260040161064a90612705565b6109cb8282611de4565b6000546001600160a01b031690565b806001600082815260096020526040902060069081015460ff1690811115610ce857610ce86128e1565b1480610d1a57506003600082815260096020526040902060069081015460ff1690811115610d1857610d186128e1565b145b610d365760405162461bcd60e51b815260040161064a90612646565b6000828152600960205260409020546001600160a01b0316331415610df9576000828152600960205260409020600401544211610dd65760405162461bcd60e51b815260206004820152603860248201527f72656c65617365486f6c643a2063616e206f6e6c792072656c656173652061666044820152773a32b9103a34329032bc3834b930ba34b7b7103230ba329760411b606482015260840161064a565b60008281526009602052604090206006908101805460ff19169091179055610e9e565b6000828152600960205260409020600201546001600160a01b03163314610e815760405162461bcd60e51b815260206004820152603660248201527f72656c65617365486f6c643a2063616c6c6572206d75737420626520746865206044820152753437b6321039b2b73232b91037b9103737ba30b93c9760511b606482015260840161064a565b6000828152600960205260409020600601805460ff191660041790555b6000828152600960209081526040808320600381015490546001600160a01b03168452600a90925290912054610ed391611847565b600083815260096020818152604080842080546001600160a01b03168552600a83529084209490945591859052905260030154600c54610f1291611847565b600c5560405182907f67493c41cf2a398ecd74af2c26b3ad6114f9a0b0532ea06fc327adec6015110290610f479033906125f1565b60405180910390a25050565b60606005805461053190612890565b610f6b3361112f565b610f7457600080fd5b6107b581611e65565b610c10336118fd565b604080516001600160601b031930606090811b821660208085019190915296811b8216603484015294851b811660488301529590931b909416605c83015260708083019190915283518083039091018152609090910183528051908201206000818152600b909252919020549091565b3360009081526002602090815260408083206001600160a01b0386168452909152812054828110156110785760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161064a565b611085338585840361193f565b5060019392505050565b604051630f8f8b8360e01b815260009082903090630f8f8b83906110b79033906004016125f1565b60206040518083038186803b1580156110cf57600080fd5b505afa1580156110e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110791906124c8565b10156111255760405162461bcd60e51b815260040161064a90612705565b61065d8383611ea7565b6000610660600883611eb4565b6001600160a01b0384166111a25760405162461bcd60e51b815260206004820152602760248201527f686f6c643a206e6f74617279206d757374206e6f742062652061207a65726f206044820152666164647265737360c81b606482015260840161064a565b826111fe5760405162461bcd60e51b815260206004820152602660248201527f686f6c643a20616d6f756e74206d7573742062652067726561746572207468616044820152656e207a65726f60d01b606482015260840161064a565b604051630f8f8b8360e01b815283903090630f8f8b83906112239033906004016125f1565b60206040518083038186803b15801561123b57600080fd5b505afa15801561124f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061127391906124c8565b10156112d05760405162461bcd60e51b815260206004820152602660248201527f686f6c643a20616d6f756e74206578636565647320617661696c61626c652062604482015265616c616e636560d01b606482015260840161064a565b60006112de85338887610f86565b506000818152600b60205260408120899055909150600088815260096020526040902060069081015460ff169081111561131a5761131a6128e1565b146113615760405162461bcd60e51b8152602060048201526017602482015276686f6c643a20696420616c72656164792065786973747360481b604482015260640161064a565b6040518060e00160405280336001600160a01b03168152602001876001600160a01b03168152602001866001600160a01b03168152602001858152602001848152602001838152602001600160068111156113be576113be6128e1565b9052600088815260096020908152604091829020835181546001600160a01b03199081166001600160a01b03928316178355928501516001808401805486169284169290921790915593850151600283018054909416911617909155606083015160038201556080830151600482015560a0830151600582015560c08301516006808301805493949293909260ff19909116918490811115611462576114626128e1565b021790555050336000908152600a6020526040902054611483915085611f37565b336000908152600a6020526040902055600c546114a09085611f37565b600c5560408051858152602081018590529081018390526001600160a01b03808716919088169089907fe978043d2c2c19e698dfa9c4c7d635cd7a872597314f9f0b7979dae393c6da7c9060600160405180910390a450505050505050565b61153c6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a081018290529060c082015290565b600082815260096020908152604091829020825160e08101845281546001600160a01b03908116825260018301548116938201939093526002820154909216928201929092526003820154606082015260048201546080820152600582015460a082015260068083015491929160c084019160ff909116908111156115c3576115c36128e1565b60068111156115d4576115d46128e1565b90525092915050565b336115e6610caf565b6001600160a01b03161461160c5760405162461bcd60e51b815260040161064a906126d0565b6001600160a01b0381166116715760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161064a565b6107b581611d94565b6000818152600960205260409020600101546001600160a01b03166116b15760405162461bcd60e51b815260040161064a90612754565b6000818152600960205260409020600501541561172f5760405162461bcd60e51b815260206004820152603660248201527f65786563757465486f6c643a206e65656420707265696d6167652069662074686044820152750ca40d0ded8c840d0c2e640c240d8dec6d640d0c2e6d60531b606482015260840161064a565b6000818152600960205260408120600101546107b59183916001600160a01b0316611b46565b6001600760008360405160200161176c91906125d5565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff191691151591909117905550565b6117ad8282611eb4565b156117fa5760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015260640161064a565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006107f433848461193f565b6001600160a01b031660009081526001602052604090205490565b600061065d828461284d565b6000611860848484611f43565b6001600160a01b0384166000908152600260209081526040808320338452909152902054828110156118e55760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b606482015260840161064a565b6118f2853385840361193f565b506001949350505050565b61190860088261210c565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6001600160a01b0383166119a15760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161064a565b6001600160a01b038216611a025760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161064a565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038216611ab95760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161064a565b611ac56000838361218e565b8060036000828254611ad79190612835565b90915550506001600160a01b03821660009081526001602052604081208054839290611b04908490612835565b90915550506040518181526001600160a01b038316906000906000805160206128f88339815191529060200160405180910390a35050565b6107b53382612199565b826001600082815260096020526040902060069081015460ff1690811115611b7057611b706128e1565b1480611ba257506003600082815260096020526040902060069081015460ff1690811115611ba057611ba06128e1565b145b611bbe5760405162461bcd60e51b815260040161064a90612646565b6000848152600960205260409020600201546001600160a01b03163314611c3b5760405162461bcd60e51b815260206004820152602b60248201527f65786563757465486f6c643a2063616c6c6572206d757374206265207468652060448201526a686f6c64206e6f7461727960a81b606482015260840161064a565b60008481526009602052604090208054600390910154611c66916001600160a01b0316908490611f43565b600084815260096020908152604080832060068101805460ff19166002179055600381015490546001600160a01b03168452600a90925290912054611caa91611847565b600085815260096020818152604080842080546001600160a01b03168552600a83529084209490945591879052905260030154600c54611ce991611847565b600c556000848152600960205260408120600281015481546001830154600390930154611d27936001600160a01b0393841693928316921690610f86565b509050600b600082815260200190815260200160002060009055847fc6d1a93a7a047b3f030e0a63b85e07ff5741659917295090572c23834d53281d8585604051611d859291909182526001600160a01b0316602082015260400190565b60405180910390a25050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000611df08333610466565b905081811015611e4e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604482015263616e636560e01b606482015260840161064a565b611e5b833384840361193f565b610bc78383612199565b611e706008826117a3565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b60006107f4338484611f43565b60006001600160a01b038216611f175760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b606482015260840161064a565b506001600160a01b03166000908152602091909152604090205460ff1690565b600061065d8284612835565b6001600160a01b038316611fa75760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161064a565b6001600160a01b0382166120095760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161064a565b61201483838361218e565b6001600160a01b0383166000908152600160205260409020548181101561208c5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161064a565b6001600160a01b038085166000908152600160205260408082208585039055918516815290812080548492906120c3908490612835565b92505081905550826001600160a01b0316846001600160a01b03166000805160206128f8833981519152846040516120fd91815260200190565b60405180910390a35b50505050565b6121168282611eb4565b61216c5760405162461bcd60e51b815260206004820152602160248201527f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6044820152606560f81b606482015260840161064a565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b610bc78383836122e1565b6001600160a01b0382166121f95760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161064a565b6122058260008361218e565b6001600160a01b038216600090815260016020526040902054818110156122795760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161064a565b6001600160a01b03831660009081526001602052604081208383039055600380548492906122a890849061284d565b90915550506040518281526000906001600160a01b038516906000805160206128f88339815191529060200160405180910390a3505050565b60065460ff1615610bc75760405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b606482015260840161064a565b80356001600160a01b038116811461235e57600080fd5b919050565b60006020828403121561237557600080fd5b61065d82612347565b6000806040838503121561239157600080fd5b61239a83612347565b91506123a860208401612347565b90509250929050565b600080600080608085870312156123c757600080fd5b6123d085612347565b93506123de60208601612347565b92506123ec60408601612347565b9396929550929360600135925050565b60008060006060848603121561241157600080fd5b61241a84612347565b925061242860208501612347565b9150604084013590509250925092565b600080600080600060a0868803121561245057600080fd5b61245986612347565b945061246760208701612347565b94979496505050506040830135926060810135926080909101359150565b6000806040838503121561249857600080fd5b6124a183612347565b946020939093013593505050565b6000602082840312156124c157600080fd5b5035919050565b6000602082840312156124da57600080fd5b5051919050565b600080604083850312156124f457600080fd5b823591506123a860208401612347565b60008060008060008060c0878903121561251d57600080fd5b8635955061252d60208801612347565b945061253b60408801612347565b9350606087013592506080870135915060a087013590509295509295509295565b6000806040838503121561256f57600080fd5b50508035926020909101359150565b60008060006060848603121561259357600080fd5b83359250602084013591506125aa60408501612347565b90509250925092565b600781106125d157634e487b7160e01b600052602160045260246000fd5b9052565b600082516125e7818460208701612864565b9190910192915050565b6001600160a01b0391909116815260200190565b6020810161066082846125b3565b6020815260008251806020840152612632816040850160208701612864565b601f01601f19169190910160400192915050565b6020808252601d908201527f486f6c64206973206e6f7420696e204f72646572656420737461747573000000604082015260600190565b60208082526033908201527f65786563757465486f6c643a20707265696d616765206861736820646f6573206040820152720dcdee840dac2e8c6d040d8dec6d640d0c2e6d606b1b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602f908201527f486f6c6461626c65546f6b656e3a20616d6f756e74206578636565647320617660408201526e61696c61626c652062616c616e636560881b606082015260800190565b60208082526056908201527f65786563757465486f6c643a206d75737420706173732074686520726563697060408201527f69656e74206f6e20657865637574696f6e2061732074686520726563697069656060820152751b9d081dd85cc81b9bdd081cd95d081bdb881a1bdb1960521b608082015260a00190565b600060e08201905060018060a01b0380845116835280602085015116602084015280604085015116604084015250606083015160608301526080830151608083015260a083015160a083015260c083015161282e60c08401826125b3565b5092915050565b60008219821115612848576128486128cb565b500190565b60008282101561285f5761285f6128cb565b500390565b60005b8381101561287f578181015183820152602001612867565b838111156121065750506000910152565b600181811c908216806128a457607f821691505b602082108114156128c557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212204036f3c436cb6ab646cbabd5e414172343db81d6b9aed818e4b76c473c9d88e064736f6c63430008070033",
  "immutableReferences": {
    "15245": [
      {
        "length": 32,
        "start": 594
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3243:72",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:72",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "78:622:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "127:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "136:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "129:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "129:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "129:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "106:6:72"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "114:4:72",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "102:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "102:17:72"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "121:3:72"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "98:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "98:27:72"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "91:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "91:35:72"
                  },
                  "nodeType": "YulIf",
                  "src": "88:55:72"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "152:23:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "168:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "162:5:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "162:13:72"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "156:2:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "184:28:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "202:2:72",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "206:1:72",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "198:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "198:10:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "210:1:72",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "194:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "194:18:72"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "188:2:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "235:22:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "237:16:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "237:18:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "237:18:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "227:2:72"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "231:2:72"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "224:2:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "224:10:72"
                  },
                  "nodeType": "YulIf",
                  "src": "221:36:72"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "266:17:72",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "280:2:72",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "276:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "276:7:72"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "270:2:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "292:23:72",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "312:2:72",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "306:5:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "306:9:72"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "296:6:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "324:71:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "346:6:72"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "370:2:72"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "374:4:72",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "366:3:72"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "366:13:72"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "381:2:72"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "362:3:72"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "362:22:72"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "386:2:72",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "358:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "358:31:72"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "391:2:72"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "354:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "354:40:72"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "342:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "342:53:72"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "328:10:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "454:22:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "456:16:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "456:18:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "456:18:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "413:10:72"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "425:2:72"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "410:2:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "410:18:72"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "433:10:72"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "445:6:72"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "430:2:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "430:22:72"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "407:2:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "407:46:72"
                  },
                  "nodeType": "YulIf",
                  "src": "404:72:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "492:2:72",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "496:10:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "485:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "485:22:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "485:22:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "523:6:72"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "531:2:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "516:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "516:18:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "516:18:72"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "582:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "591:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "594:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "584:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "584:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "584:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "557:6:72"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "565:2:72"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "553:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "553:15:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "570:4:72",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "549:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "549:26:72"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "577:3:72"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "546:2:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "546:35:72"
                  },
                  "nodeType": "YulIf",
                  "src": "543:55:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "633:6:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "641:4:72",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "629:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "629:17:72"
                      },
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "652:6:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "660:4:72",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "648:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "648:17:72"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "667:2:72"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "607:21:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "607:63:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "607:63:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "679:15:72",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "688:6:72"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "679:5:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_string_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "52:6:72",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "60:3:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "68:5:72",
                "type": ""
              }
            ],
            "src": "14:686:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "838:579:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "884:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "893:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "896:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "886:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "886:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "886:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "859:7:72"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "868:9:72"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "855:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "855:23:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "880:2:72",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "851:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "851:32:72"
                  },
                  "nodeType": "YulIf",
                  "src": "848:52:72"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "909:30:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "929:9:72"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "923:5:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "923:16:72"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "913:6:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "948:28:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "966:2:72",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "970:1:72",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "962:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "962:10:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "974:1:72",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "958:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "958:18:72"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "952:2:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1003:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1012:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1015:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1005:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1005:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1005:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "991:6:72"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "999:2:72"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "988:2:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "988:14:72"
                  },
                  "nodeType": "YulIf",
                  "src": "985:34:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1028:71:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1071:9:72"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1082:6:72"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1067:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1067:22:72"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1091:7:72"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1038:28:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1038:61:72"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1028:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1108:41:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1134:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1145:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1130:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1130:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1124:5:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1124:25:72"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "1112:8:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1178:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1187:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1190:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1180:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1180:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1180:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "1164:8:72"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1174:2:72"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1161:2:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1161:16:72"
                  },
                  "nodeType": "YulIf",
                  "src": "1158:36:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1203:73:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1246:9:72"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "1257:8:72"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1242:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1242:24:72"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1268:7:72"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1213:28:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1213:63:72"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1203:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1285:38:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1308:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1319:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1304:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1304:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1298:5:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1298:25:72"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1289:5:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1371:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1380:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1383:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1373:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1373:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1373:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1345:5:72"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1356:5:72"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1363:4:72",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1352:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1352:16:72"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1342:2:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1342:27:72"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1335:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1335:35:72"
                  },
                  "nodeType": "YulIf",
                  "src": "1332:55:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1396:15:72",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1406:5:72"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1396:6:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "788:9:72",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "799:7:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "811:6:72",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "819:6:72",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "827:6:72",
                "type": ""
              }
            ],
            "src": "705:712:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1561:137:72",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1571:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1591:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1585:5:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1585:13:72"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1575:6:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1633:6:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1641:4:72",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1629:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1629:17:72"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1648:3:72"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1653:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "1607:21:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1607:53:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1607:53:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1669:23:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1680:3:72"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1685:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1676:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1676:16:72"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1669:3:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1537:3:72",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1542:6:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1553:3:72",
                "type": ""
              }
            ],
            "src": "1422:276:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1877:181:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1894:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1905:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1887:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1887:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1887:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1928:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1939:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1924:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1924:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1944:2:72",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1917:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1917:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1917:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1967:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1978:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1963:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1963:18:72"
                      },
                      {
                        "hexValue": "526f6c65733a206163636f756e7420616c72656164792068617320726f6c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1983:33:72",
                        "type": "",
                        "value": "Roles: account already has role"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1956:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1956:61:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1956:61:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2026:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2038:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2049:2:72",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2034:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2034:18:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2026:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1854:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1868:4:72",
                "type": ""
              }
            ],
            "src": "1703:355:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2237:224:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2254:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2265:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2247:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2247:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2247:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2288:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2299:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2284:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2284:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2304:2:72",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2277:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2277:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2277:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2327:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2338:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2323:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2323:18:72"
                      },
                      {
                        "hexValue": "526f6c65733a206163636f756e7420697320746865207a65726f206164647265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2343:34:72",
                        "type": "",
                        "value": "Roles: account is the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2316:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2316:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2316:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2398:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2409:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2394:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2394:18:72"
                      },
                      {
                        "hexValue": "7373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2414:4:72",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2387:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2387:32:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2387:32:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2428:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2440:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2451:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2436:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2436:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2428:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2214:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2228:4:72",
                "type": ""
              }
            ],
            "src": "2063:398:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2519:205:72",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2529:10:72",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2538:1:72",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "2533:1:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2598:63:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "2623:3:72"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "2628:1:72"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2619:3:72"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2619:11:72"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "2642:3:72"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "2647:1:72"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2638:3:72"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2638:11:72"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2632:5:72"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2632:18:72"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2612:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2612:39:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2612:39:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2559:1:72"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2562:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2556:2:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2556:13:72"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2570:19:72",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2572:15:72",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2581:1:72"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2584:2:72",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2577:3:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2577:10:72"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2572:1:72"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2552:3:72",
                    "statements": []
                  },
                  "src": "2548:113:72"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2687:31:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "2700:3:72"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "2705:6:72"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2696:3:72"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2696:16:72"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2714:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2689:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2689:27:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2689:27:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2676:1:72"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2679:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2673:2:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2673:13:72"
                  },
                  "nodeType": "YulIf",
                  "src": "2670:48:72"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "2497:3:72",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "2502:3:72",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2507:6:72",
                "type": ""
              }
            ],
            "src": "2466:258:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2784:325:72",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2794:22:72",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2808:1:72",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2811:4:72"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "2804:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2804:12:72"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "2794:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2825:38:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2855:4:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2861:1:72",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2851:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2851:12:72"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "2829:18:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2902:31:72",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2904:27:72",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "2918:6:72"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2926:4:72",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "2914:3:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2914:17:72"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2904:6:72"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "2882:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2875:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2875:26:72"
                  },
                  "nodeType": "YulIf",
                  "src": "2872:61:72"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2992:111:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3013:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3020:3:72",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3025:10:72",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "3016:3:72"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3016:20:72"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3006:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3006:31:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3006:31:72"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3057:1:72",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3060:4:72",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3050:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3050:15:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3050:15:72"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3085:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3088:4:72",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3078:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3078:15:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3078:15:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "2948:18:72"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2971:6:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2979:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2968:2:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2968:14:72"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "2945:2:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2945:38:72"
                  },
                  "nodeType": "YulIf",
                  "src": "2942:161:72"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "2764:4:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2773:6:72",
                "type": ""
              }
            ],
            "src": "2729:380:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3146:95:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3163:1:72",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3170:3:72",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3175:10:72",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3166:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3166:20:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3156:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3156:31:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3156:31:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3203:1:72",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3206:4:72",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3196:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3196:15:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3196:15:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3227:1:72",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3230:4:72",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3220:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3220:15:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3220:15:72"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "3114:127:72"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        copy_memory_to_memory(add(offset, 0x20), add(memPtr, 0x20), _1)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        let value := mload(add(headStart, 64))\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value2 := value\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Roles: account already has role\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Roles: account is the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
      "id": 72,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:23558:72",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:72",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:124:72",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:72"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:72"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "165:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "174:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "177:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "167:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "167:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:72"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:72"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "150:3:72",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "155:1:72",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "146:3:72"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "146:11:72"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "159:1:72",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "142:3:72"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "142:19:72"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:31:72"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:42:72"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:50:72"
                  },
                  "nodeType": "YulIf",
                  "src": "111:70:72"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:72",
                "type": ""
              }
            ],
            "src": "14:173:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "262:116:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "308:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "317:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "320:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "310:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "310:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "310:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "283:7:72"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "292:9:72"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "279:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "279:23:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "304:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "275:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "275:32:72"
                  },
                  "nodeType": "YulIf",
                  "src": "272:52:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "333:39:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "362:9:72"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "343:18:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "343:29:72"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "333:6:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "228:9:72",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "239:7:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "251:6:72",
                "type": ""
              }
            ],
            "src": "192:186:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "470:173:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "516:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "525:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "528:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "518:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "518:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "518:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "491:7:72"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "500:9:72"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "487:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "487:23:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "512:2:72",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "483:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "483:32:72"
                  },
                  "nodeType": "YulIf",
                  "src": "480:52:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "541:39:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "570:9:72"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "551:18:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "551:29:72"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "541:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "589:48:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "622:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "633:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "618:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "618:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "599:18:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "599:38:72"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "589:6:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "428:9:72",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "439:7:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "451:6:72",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "459:6:72",
                "type": ""
              }
            ],
            "src": "383:260:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "769:282:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "816:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "825:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "828:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "818:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "818:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "818:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "790:7:72"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "799:9:72"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "786:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "786:23:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "811:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "782:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "782:33:72"
                  },
                  "nodeType": "YulIf",
                  "src": "779:53:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "841:39:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "870:9:72"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "851:18:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "851:29:72"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "841:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "889:48:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "922:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "933:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "918:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "918:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "899:18:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "899:38:72"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "889:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "946:48:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "979:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "990:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "975:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "975:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "956:18:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "956:38:72"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "946:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1003:42:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1030:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1041:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1026:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1026:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1013:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1013:32:72"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1003:6:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "711:9:72",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "722:7:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "734:6:72",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "742:6:72",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "750:6:72",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "758:6:72",
                "type": ""
              }
            ],
            "src": "648:403:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1160:224:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1206:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1215:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1218:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1208:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1208:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1208:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1181:7:72"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1190:9:72"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1177:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1177:23:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1202:2:72",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1173:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1173:32:72"
                  },
                  "nodeType": "YulIf",
                  "src": "1170:52:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1231:39:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1260:9:72"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1241:18:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1241:29:72"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1231:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1279:48:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1312:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1323:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1308:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1308:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1289:18:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1289:38:72"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1279:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1336:42:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1363:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1374:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1359:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1359:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1346:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1346:32:72"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1336:6:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1110:9:72",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1121:7:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1133:6:72",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1141:6:72",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1149:6:72",
                "type": ""
              }
            ],
            "src": "1056:328:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1527:328:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1574:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1583:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1586:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1576:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1576:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1576:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1548:7:72"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1557:9:72"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1544:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1544:23:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1569:3:72",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1540:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1540:33:72"
                  },
                  "nodeType": "YulIf",
                  "src": "1537:53:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1599:39:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1628:9:72"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1609:18:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1609:29:72"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1599:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1647:48:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1680:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1691:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1676:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1676:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1657:18:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1657:38:72"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1647:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1704:42:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1731:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1742:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1727:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1727:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1714:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1714:32:72"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1704:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1755:42:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1782:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1793:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1778:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1778:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1765:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1765:32:72"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1755:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1806:43:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1833:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1844:3:72",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1829:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1829:19:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1816:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1816:33:72"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "1806:6:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1461:9:72",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1472:7:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1484:6:72",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1492:6:72",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1500:6:72",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1508:6:72",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1516:6:72",
                "type": ""
              }
            ],
            "src": "1389:466:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1947:167:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1993:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2002:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2005:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1995:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1995:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1995:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1968:7:72"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1977:9:72"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1964:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1964:23:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1989:2:72",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1960:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1960:32:72"
                  },
                  "nodeType": "YulIf",
                  "src": "1957:52:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2018:39:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2047:9:72"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2028:18:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2028:29:72"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2018:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2066:42:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2093:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2104:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2089:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2089:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2076:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2076:32:72"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2066:6:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1905:9:72",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1916:7:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1928:6:72",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1936:6:72",
                "type": ""
              }
            ],
            "src": "1860:254:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2189:110:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2235:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2244:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2247:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2237:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2237:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2237:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2210:7:72"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2219:9:72"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2206:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2206:23:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2231:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2202:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2202:32:72"
                  },
                  "nodeType": "YulIf",
                  "src": "2199:52:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2260:33:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2283:9:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2270:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2270:23:72"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2260:6:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2155:9:72",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2166:7:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2178:6:72",
                "type": ""
              }
            ],
            "src": "2119:180:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2385:103:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2431:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2440:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2443:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2433:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2433:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2433:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2406:7:72"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2415:9:72"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2402:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2402:23:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2427:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2398:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2398:32:72"
                  },
                  "nodeType": "YulIf",
                  "src": "2395:52:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2456:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2472:9:72"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2466:5:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2466:16:72"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2456:6:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2351:9:72",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2362:7:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2374:6:72",
                "type": ""
              }
            ],
            "src": "2304:184:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2580:167:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2626:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2635:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2638:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2628:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2628:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2628:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2601:7:72"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2610:9:72"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2597:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2597:23:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2622:2:72",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2593:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2593:32:72"
                  },
                  "nodeType": "YulIf",
                  "src": "2590:52:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2651:33:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2674:9:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2661:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2661:23:72"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2651:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2693:48:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2726:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2737:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2722:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2722:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2703:18:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2703:38:72"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2693:6:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2538:9:72",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2549:7:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2561:6:72",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2569:6:72",
                "type": ""
              }
            ],
            "src": "2493:254:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2907:380:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2954:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2963:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2966:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2956:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2956:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2956:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2928:7:72"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2937:9:72"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2924:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2924:23:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2949:3:72",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2920:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2920:33:72"
                  },
                  "nodeType": "YulIf",
                  "src": "2917:53:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2979:33:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3002:9:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2989:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2989:23:72"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2979:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3021:48:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3054:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3065:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3050:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3050:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "3031:18:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3031:38:72"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3021:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3078:48:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3111:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3122:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3107:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3107:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "3088:18:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3088:38:72"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3078:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3135:42:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3162:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3173:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3158:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3158:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3145:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3145:32:72"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "3135:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3186:43:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3213:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3224:3:72",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3209:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3209:19:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3196:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3196:33:72"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "3186:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3238:43:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3265:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3276:3:72",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3261:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3261:19:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3248:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3248:33:72"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "3238:6:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_addresst_addresst_uint256t_uint256t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2833:9:72",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2844:7:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2856:6:72",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2864:6:72",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2872:6:72",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2880:6:72",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "2888:6:72",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "2896:6:72",
                "type": ""
              }
            ],
            "src": "2752:535:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3379:161:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3425:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3434:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3437:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3427:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3427:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3427:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3400:7:72"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3409:9:72"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3396:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3396:23:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3421:2:72",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3392:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3392:32:72"
                  },
                  "nodeType": "YulIf",
                  "src": "3389:52:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3450:33:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3473:9:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3460:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3460:23:72"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3450:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3492:42:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3519:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3530:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3515:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3515:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3502:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3502:32:72"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3492:6:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3337:9:72",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3348:7:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3360:6:72",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3368:6:72",
                "type": ""
              }
            ],
            "src": "3292:248:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3649:218:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3695:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3704:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3707:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3697:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3697:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3697:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3670:7:72"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3679:9:72"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3666:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3666:23:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3691:2:72",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3662:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3662:32:72"
                  },
                  "nodeType": "YulIf",
                  "src": "3659:52:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3720:33:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3743:9:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3730:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3730:23:72"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3720:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3762:42:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3789:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3800:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3785:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3785:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3772:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3772:32:72"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3762:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3813:48:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3846:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3857:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3842:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3842:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "3823:18:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3823:38:72"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3813:6:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3599:9:72",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3610:7:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3622:6:72",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3630:6:72",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3638:6:72",
                "type": ""
              }
            ],
            "src": "3545:322:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3942:110:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3988:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3997:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4000:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3990:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3990:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3990:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3963:7:72"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3972:9:72"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3959:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3959:23:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3984:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3955:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3955:32:72"
                  },
                  "nodeType": "YulIf",
                  "src": "3952:52:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4013:33:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4036:9:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4023:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4023:23:72"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4013:6:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3908:9:72",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3919:7:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3931:6:72",
                "type": ""
              }
            ],
            "src": "3872:180:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4138:103:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4184:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4193:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4196:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4186:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4186:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4186:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4159:7:72"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4168:9:72"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4155:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4155:23:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4180:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4151:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4151:32:72"
                  },
                  "nodeType": "YulIf",
                  "src": "4148:52:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4209:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4225:9:72"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4219:5:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4219:16:72"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4209:6:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4104:9:72",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4115:7:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4127:6:72",
                "type": ""
              }
            ],
            "src": "4057:184:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4302:186:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4344:111:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4365:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4372:3:72",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4377:10:72",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "4368:3:72"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4368:20:72"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4358:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4358:31:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4358:31:72"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4409:1:72",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4412:4:72",
                              "type": "",
                              "value": "0x21"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4402:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4402:15:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4402:15:72"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4437:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4440:4:72",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4430:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4430:15:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4430:15:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4325:5:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4332:1:72",
                            "type": "",
                            "value": "7"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "4322:2:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4322:12:72"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4315:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4315:20:72"
                  },
                  "nodeType": "YulIf",
                  "src": "4312:143:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4471:3:72"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4476:5:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4464:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4464:18:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4464:18:72"
                }
              ]
            },
            "name": "abi_encode_enum_HoldStatusCode",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4286:5:72",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4293:3:72",
                "type": ""
              }
            ],
            "src": "4246:242:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4724:326:72",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4734:33:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4756:2:72",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4760:1:72",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "4752:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4752:10:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4764:1:72",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4748:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4748:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "4744:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4744:23:72"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4738:2:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4783:3:72"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4796:2:72",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "4800:6:72"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "4792:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4792:15:72"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4809:2:72"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4788:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4788:24:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4776:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4776:37:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4776:37:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4833:3:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4838:2:72",
                            "type": "",
                            "value": "20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4829:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4829:12:72"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4851:2:72",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "4855:6:72"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "4847:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4847:15:72"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4864:2:72"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4843:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4843:24:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4822:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4822:46:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4822:46:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4888:3:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4893:2:72",
                            "type": "",
                            "value": "40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4884:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4884:12:72"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4906:2:72",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "4910:6:72"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "4902:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4902:15:72"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4919:2:72"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4898:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4898:24:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4877:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4877:46:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4877:46:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4943:3:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4948:2:72",
                            "type": "",
                            "value": "60"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4939:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4939:12:72"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4961:2:72",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value3",
                                "nodeType": "YulIdentifier",
                                "src": "4965:6:72"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "4957:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4957:15:72"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4974:2:72"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4953:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4953:24:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4932:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4932:46:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4932:46:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4998:3:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5003:2:72",
                            "type": "",
                            "value": "80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4994:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4994:12:72"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "5008:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4987:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4987:28:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4987:28:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5024:20:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5035:3:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5040:3:72",
                        "type": "",
                        "value": "112"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5031:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5031:13:72"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5024:3:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_address_t_uint256__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4668:3:72",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "4673:6:72",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4681:6:72",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4689:6:72",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4697:6:72",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4705:6:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4716:3:72",
                "type": ""
              }
            ],
            "src": "4493:557:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5286:291:72",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5296:33:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5318:2:72",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5322:1:72",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "5314:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5314:10:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5326:1:72",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5310:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5310:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "5306:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5306:23:72"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "5300:2:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5345:3:72"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5358:2:72",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5362:6:72"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "5354:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5354:15:72"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5371:2:72"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5350:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5350:24:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5338:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5338:37:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5338:37:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5395:3:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5400:2:72",
                            "type": "",
                            "value": "20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5391:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5391:12:72"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5413:2:72",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "5417:6:72"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "5409:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5409:15:72"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5426:2:72"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5405:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5405:24:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5384:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5384:46:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5384:46:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5450:3:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5455:2:72",
                            "type": "",
                            "value": "40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5446:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5446:12:72"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "5460:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5439:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5439:28:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5439:28:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5487:3:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5492:2:72",
                            "type": "",
                            "value": "72"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5483:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5483:12:72"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "5497:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5476:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5476:28:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5476:28:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5524:3:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5529:3:72",
                            "type": "",
                            "value": "104"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5520:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5520:13:72"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "5535:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5513:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5513:29:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5513:29:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5551:20:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5562:3:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5567:3:72",
                        "type": "",
                        "value": "136"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5558:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5558:13:72"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5551:3:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address_t_address_t_uint256_t_uint256_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_bytes32__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5230:3:72",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "5235:6:72",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "5243:6:72",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5251:6:72",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5259:6:72",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5267:6:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5278:3:72",
                "type": ""
              }
            ],
            "src": "5055:522:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5701:63:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5718:3:72"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5723:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5711:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5711:19:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5711:19:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5739:19:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5750:3:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5755:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5746:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5746:12:72"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5739:3:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5677:3:72",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5682:6:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5693:3:72",
                "type": ""
              }
            ],
            "src": "5582:182:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5906:137:72",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5916:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5936:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5930:5:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5930:13:72"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5920:6:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5978:6:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5986:4:72",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5974:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5974:17:72"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5993:3:72"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5998:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "5952:21:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5952:53:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5952:53:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6014:23:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6025:3:72"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6030:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6021:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6021:16:72"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6014:3:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5882:3:72",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5887:6:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5898:3:72",
                "type": ""
              }
            ],
            "src": "5769:274:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6187:137:72",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6197:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6217:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6211:5:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6211:13:72"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "6201:6:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6259:6:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6267:4:72",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6255:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6255:17:72"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6274:3:72"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6279:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "6233:21:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6233:53:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6233:53:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6295:23:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6306:3:72"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6311:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6302:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6302:16:72"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6295:3:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6163:3:72",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6168:6:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6179:3:72",
                "type": ""
              }
            ],
            "src": "6048:276:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6521:79:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6538:3:72"
                      },
                      {
                        "hexValue": "455243313832305f4143434550545f4d41474943",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6543:22:72",
                        "type": "",
                        "value": "ERC1820_ACCEPT_MAGIC"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6531:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6531:35:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6531:35:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6575:19:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6586:3:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6591:2:72",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6582:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6582:12:72"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6575:3:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_a2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b4__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6505:3:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6513:3:72",
                "type": ""
              }
            ],
            "src": "6329:271:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6706:102:72",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6716:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6728:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6739:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6724:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6724:18:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6716:4:72"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6758:9:72"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6773:6:72"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6789:3:72",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6794:1:72",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "6785:3:72"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6785:11:72"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6798:1:72",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "6781:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6781:19:72"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6769:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6769:32:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6751:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6751:51:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6751:51:72"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6675:9:72",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6686:6:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6697:4:72",
                "type": ""
              }
            ],
            "src": "6605:203:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6908:92:72",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6918:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6930:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6941:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6926:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6926:18:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6918:4:72"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6960:9:72"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "6985:6:72"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "6978:6:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6978:14:72"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6971:6:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6971:22:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6953:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6953:41:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6953:41:72"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6877:9:72",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6888:6:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6899:4:72",
                "type": ""
              }
            ],
            "src": "6813:187:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7106:76:72",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7116:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7128:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7139:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7124:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7124:18:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7116:4:72"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7158:9:72"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7169:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7151:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7151:25:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7151:25:72"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7075:9:72",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7086:6:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7097:4:72",
                "type": ""
              }
            ],
            "src": "7005:177:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7316:145:72",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7326:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7338:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7349:2:72",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7334:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7334:18:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7326:4:72"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7368:9:72"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7379:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7361:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7361:25:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7361:25:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7406:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7417:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7402:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7402:18:72"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "7426:6:72"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7442:3:72",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7447:1:72",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "7438:3:72"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7438:11:72"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7451:1:72",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "7434:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7434:19:72"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7422:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7422:32:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7395:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7395:60:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7395:60:72"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7277:9:72",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7288:6:72",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7296:6:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7307:4:72",
                "type": ""
              }
            ],
            "src": "7187:274:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7595:119:72",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7605:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7617:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7628:2:72",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7613:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7613:18:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7605:4:72"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7647:9:72"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7658:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7640:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7640:25:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7640:25:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7685:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7696:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7681:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7681:18:72"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7701:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7674:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7674:34:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7674:34:72"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7556:9:72",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7567:6:72",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7575:6:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7586:4:72",
                "type": ""
              }
            ],
            "src": "7466:248:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7838:100:72",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7848:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7860:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7871:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7856:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7856:18:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7848:4:72"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7914:6:72"
                      },
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7922:9:72"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_enum_HoldStatusCode",
                      "nodeType": "YulIdentifier",
                      "src": "7883:30:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7883:49:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7883:49:72"
                }
              ]
            },
            "name": "abi_encode_tuple_t_enum$_HoldStatusCode_$12361__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7807:9:72",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7818:6:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7829:4:72",
                "type": ""
              }
            ],
            "src": "7719:219:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8064:262:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8081:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8092:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8074:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8074:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8074:21:72"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8104:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8124:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8118:5:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8118:13:72"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "8108:6:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8151:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8162:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8147:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8147:18:72"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8167:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8140:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8140:34:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8140:34:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "8209:6:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8217:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8205:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8205:15:72"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8226:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8237:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8222:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8222:18:72"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8242:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "8183:21:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8183:66:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8183:66:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8258:62:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8274:9:72"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "8293:6:72"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8301:2:72",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8289:3:72"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8289:15:72"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8310:2:72",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "8306:3:72"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8306:7:72"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "8285:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8285:29:72"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8270:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8270:45:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8317:2:72",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8266:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8266:54:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8258:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8033:9:72",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8044:6:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8055:4:72",
                "type": ""
              }
            ],
            "src": "7943:383:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8505:225:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8522:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8533:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8515:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8515:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8515:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8556:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8567:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8552:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8552:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8572:2:72",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8545:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8545:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8545:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8595:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8606:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8591:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8591:18:72"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8611:34:72",
                        "type": "",
                        "value": "ERC20: transfer to the zero addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8584:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8584:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8584:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8666:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8677:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8662:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8662:18:72"
                      },
                      {
                        "hexValue": "657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8682:5:72",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8655:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8655:33:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8655:33:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8697:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8709:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8720:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8705:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8705:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8697:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8482:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8496:4:72",
                "type": ""
              }
            ],
            "src": "8331:399:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8909:233:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8926:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8937:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8919:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8919:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8919:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8960:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8971:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8956:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8956:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8976:2:72",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8949:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8949:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8949:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8999:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9010:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8995:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8995:18:72"
                      },
                      {
                        "hexValue": "65786563757465486f6c643a2063616c6c6572206d7573742062652074686520",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9015:34:72",
                        "type": "",
                        "value": "executeHold: caller must be the "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8988:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8988:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8988:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9070:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9081:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9066:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9066:18:72"
                      },
                      {
                        "hexValue": "686f6c64206e6f74617279",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9086:13:72",
                        "type": "",
                        "value": "hold notary"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9059:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9059:41:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9059:41:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9109:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9121:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9132:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9117:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9117:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9109:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_06760903a1a137bd7e8f70a654f085804529f6cf9f19abebbae2f256bb6f7248__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8886:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8900:4:72",
                "type": ""
              }
            ],
            "src": "8735:407:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9321:229:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9338:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9349:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9331:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9331:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9331:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9372:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9383:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9368:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9368:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9388:2:72",
                        "type": "",
                        "value": "39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9361:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9361:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9361:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9411:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9422:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9407:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9407:18:72"
                      },
                      {
                        "hexValue": "686f6c643a206e6f74617279206d757374206e6f742062652061207a65726f20",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9427:34:72",
                        "type": "",
                        "value": "hold: notary must not be a zero "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9400:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9400:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9400:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9482:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9493:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9478:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9478:18:72"
                      },
                      {
                        "hexValue": "61646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9498:9:72",
                        "type": "",
                        "value": "address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9471:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9471:37:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9471:37:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9517:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9529:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9540:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9525:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9525:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9517:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0892ca814e3c1b3a07b90f43daa4885ed2a91182b50bd144f324a7ba002d6e25__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9298:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9312:4:72",
                "type": ""
              }
            ],
            "src": "9147:403:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9729:181:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9746:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9757:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9739:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9739:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9739:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9780:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9791:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9776:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9776:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9796:2:72",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9769:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9769:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9769:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9819:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9830:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9815:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9815:18:72"
                      },
                      {
                        "hexValue": "526f6c65733a206163636f756e7420616c72656164792068617320726f6c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9835:33:72",
                        "type": "",
                        "value": "Roles: account already has role"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9808:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9808:61:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9808:61:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9878:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9890:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9901:2:72",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9886:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9886:18:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9878:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9706:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9720:4:72",
                "type": ""
              }
            ],
            "src": "9555:355:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10089:224:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10106:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10117:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10099:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10099:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10099:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10140:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10151:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10136:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10136:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10156:2:72",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10129:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10129:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10129:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10179:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10190:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10175:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10175:18:72"
                      },
                      {
                        "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10195:34:72",
                        "type": "",
                        "value": "ERC20: burn amount exceeds balan"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10168:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10168:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10168:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10250:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10261:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10246:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10246:18:72"
                      },
                      {
                        "hexValue": "6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10266:4:72",
                        "type": "",
                        "value": "ce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10239:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10239:32:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10239:32:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10280:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10292:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10303:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10288:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10288:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10280:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10066:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10080:4:72",
                "type": ""
              }
            ],
            "src": "9915:398:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10492:179:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10509:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10520:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10502:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10502:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10502:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10543:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10554:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10539:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10539:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10559:2:72",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10532:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10532:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10532:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10582:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10593:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10578:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10578:18:72"
                      },
                      {
                        "hexValue": "486f6c64206973206e6f7420696e204f72646572656420737461747573",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10598:31:72",
                        "type": "",
                        "value": "Hold is not in Ordered status"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10571:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10571:59:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10571:59:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10639:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10651:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10662:2:72",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10647:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10647:18:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10639:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1586263b6ed81250e09e3511dae8b28d2c9acb5016a4c7516ff2ccacc49700c4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10469:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10483:4:72",
                "type": ""
              }
            ],
            "src": "10318:353:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10850:228:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10867:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10878:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10860:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10860:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10860:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10901:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10912:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10897:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10897:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10917:2:72",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10890:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10890:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10890:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10940:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10951:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10936:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10936:18:72"
                      },
                      {
                        "hexValue": "686f6c643a20616d6f756e74206578636565647320617661696c61626c652062",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10956:34:72",
                        "type": "",
                        "value": "hold: amount exceeds available b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10929:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10929:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10929:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11011:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11022:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11007:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11007:18:72"
                      },
                      {
                        "hexValue": "616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11027:8:72",
                        "type": "",
                        "value": "alance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11000:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11000:36:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11000:36:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11045:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11057:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11068:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11053:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11053:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11045:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_19034bf26bc3742bd67470410ce64f54edcc10d93f84f4739233c2ff57191b75__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10827:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10841:4:72",
                "type": ""
              }
            ],
            "src": "10676:402:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11257:244:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11274:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11285:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11267:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11267:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11267:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11308:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11319:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11304:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11304:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11324:2:72",
                        "type": "",
                        "value": "54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11297:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11297:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11297:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11347:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11358:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11343:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11343:18:72"
                      },
                      {
                        "hexValue": "65786563757465486f6c643a206e65656420707265696d616765206966207468",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11363:34:72",
                        "type": "",
                        "value": "executeHold: need preimage if th"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11336:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11336:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11336:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11418:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11429:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11414:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11414:18:72"
                      },
                      {
                        "hexValue": "6520686f6c64206861732061206c6f636b2068617368",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11434:24:72",
                        "type": "",
                        "value": "e hold has a lock hash"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11407:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11407:52:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11407:52:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11468:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11480:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11491:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11476:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11476:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11468:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1f68c2a16436ef9beba75fe6c860676b87d7e7c18f5be2e4c797c12ed8ef7eb4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11234:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11248:4:72",
                "type": ""
              }
            ],
            "src": "11083:418:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11680:228:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11697:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11708:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11690:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11690:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11690:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11731:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11742:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11727:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11727:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11747:2:72",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11720:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11720:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11720:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11770:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11781:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11766:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11766:18:72"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11786:34:72",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11759:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11759:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11759:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11841:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11852:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11837:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11837:18:72"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11857:8:72",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11830:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11830:36:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11830:36:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11875:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11887:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11898:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11883:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11883:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11875:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11657:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11671:4:72",
                "type": ""
              }
            ],
            "src": "11506:402:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12087:224:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12104:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12115:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12097:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12097:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12097:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12138:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12149:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12134:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12134:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12154:2:72",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12127:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12127:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12127:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12177:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12188:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12173:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12173:18:72"
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12193:34:72",
                        "type": "",
                        "value": "ERC20: approve to the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12166:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12166:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12166:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12248:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12259:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12244:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12244:18:72"
                      },
                      {
                        "hexValue": "7373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12264:4:72",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12237:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12237:32:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12237:32:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12278:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12290:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12301:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12286:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12286:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12278:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12064:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12078:4:72",
                "type": ""
              }
            ],
            "src": "11913:398:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12490:173:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12507:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12518:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12500:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12500:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12500:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12541:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12552:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12537:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12537:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12557:2:72",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12530:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12530:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12530:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12580:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12591:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12576:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12576:18:72"
                      },
                      {
                        "hexValue": "686f6c643a20696420616c726561647920657869737473",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12596:25:72",
                        "type": "",
                        "value": "hold: id already exists"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12569:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12569:53:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12569:53:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12631:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12643:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12654:2:72",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12639:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12639:18:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12631:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3fb1032916a9fa7eb9854a20718a129abc1980a1ddced64bc82359ff8f32fdb5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12467:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12481:4:72",
                "type": ""
              }
            ],
            "src": "12316:347:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12842:228:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12859:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12870:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12852:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12852:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12852:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12893:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12904:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12889:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12889:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12909:2:72",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12882:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12882:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12882:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12932:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12943:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12928:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12928:18:72"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12948:34:72",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12921:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12921:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12921:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13003:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13014:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12999:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12999:18:72"
                      },
                      {
                        "hexValue": "616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13019:8:72",
                        "type": "",
                        "value": "alance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12992:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12992:36:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12992:36:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13037:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13049:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13060:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13045:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13045:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13037:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12819:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12833:4:72",
                "type": ""
              }
            ],
            "src": "12668:402:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13249:246:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13266:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13277:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13259:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13259:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13259:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13300:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13311:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13296:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13296:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13316:2:72",
                        "type": "",
                        "value": "56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13289:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13289:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13289:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13339:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13350:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13335:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13335:18:72"
                      },
                      {
                        "hexValue": "72656c65617365486f6c643a2063616e206f6e6c792072656c65617365206166",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13355:34:72",
                        "type": "",
                        "value": "releaseHold: can only release af"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13328:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13328:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13328:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13410:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13421:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13406:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13406:18:72"
                      },
                      {
                        "hexValue": "746572207468652065787069726174696f6e20646174652e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13426:26:72",
                        "type": "",
                        "value": "ter the expiration date."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13399:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13399:54:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13399:54:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13462:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13474:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13485:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13470:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13470:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13462:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_493d53730a9bdfe5ea17be5fb48f7cf625c731a31a9424f72b43547622da1e56__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13226:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13240:4:72",
                "type": ""
              }
            ],
            "src": "13075:420:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13674:228:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13691:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13702:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13684:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13684:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13684:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13725:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13736:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13721:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13721:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13741:2:72",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13714:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13714:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13714:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13764:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13775:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13760:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13760:18:72"
                      },
                      {
                        "hexValue": "686f6c643a20616d6f756e74206d757374206265206772656174657220746861",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13780:34:72",
                        "type": "",
                        "value": "hold: amount must be greater tha"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13753:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13753:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13753:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13835:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13846:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13831:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13831:18:72"
                      },
                      {
                        "hexValue": "6e207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13851:8:72",
                        "type": "",
                        "value": "n zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13824:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13824:36:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13824:36:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13869:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13881:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13892:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13877:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13877:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13869:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4cc511149ca81358a86c3964feb50f2ffdb7c4ba6870b88f6af6e124d9c0f7af__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13651:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13665:4:72",
                "type": ""
              }
            ],
            "src": "13500:402:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14081:239:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14098:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14109:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14091:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14091:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14091:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14132:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14143:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14128:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14128:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14148:2:72",
                        "type": "",
                        "value": "49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14121:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14121:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14121:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14171:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14182:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14167:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14167:18:72"
                      },
                      {
                        "hexValue": "65786563757465486f6c643a20726563697069656e74206d757374206e6f7420",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14187:34:72",
                        "type": "",
                        "value": "executeHold: recipient must not "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14160:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14160:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14160:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14242:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14253:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14238:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14238:18:72"
                      },
                      {
                        "hexValue": "62652061207a65726f2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14258:19:72",
                        "type": "",
                        "value": "be a zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14231:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14231:47:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14231:47:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14287:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14299:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14310:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14295:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14295:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14287:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_501c71291b34e8ea8c38d27b05abbbca9ed16d8e393dcf6a21d81509bdc46bf9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14058:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14072:4:72",
                "type": ""
              }
            ],
            "src": "13907:413:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14499:241:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14516:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14527:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14509:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14509:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14509:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14550:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14561:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14546:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14546:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14566:2:72",
                        "type": "",
                        "value": "51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14539:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14539:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14539:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14589:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14600:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14585:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14585:18:72"
                      },
                      {
                        "hexValue": "65786563757465486f6c643a20707265696d616765206861736820646f657320",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14605:34:72",
                        "type": "",
                        "value": "executeHold: preimage hash does "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14578:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14578:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14578:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14660:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14671:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14656:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14656:18:72"
                      },
                      {
                        "hexValue": "6e6f74206d61746368206c6f636b2068617368",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14676:21:72",
                        "type": "",
                        "value": "not match lock hash"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14649:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14649:49:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14649:49:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14707:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14719:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14730:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14715:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14715:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14707:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7b67df7aff43b902379f5b51d42b44d55c3dd66fdd309918f58eaabd4d470b8b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14476:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14490:4:72",
                "type": ""
              }
            ],
            "src": "14325:415:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14919:223:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14936:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14947:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14929:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14929:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14929:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14970:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14981:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14966:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14966:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14986:2:72",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14959:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14959:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14959:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15009:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15020:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15005:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15005:18:72"
                      },
                      {
                        "hexValue": "526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15025:34:72",
                        "type": "",
                        "value": "Roles: account does not have rol"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14998:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14998:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14998:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15080:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15091:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15076:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15076:18:72"
                      },
                      {
                        "hexValue": "65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15096:3:72",
                        "type": "",
                        "value": "e"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15069:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15069:31:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15069:31:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15109:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15121:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15132:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15117:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15117:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15109:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14896:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14910:4:72",
                "type": ""
              }
            ],
            "src": "14745:397:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15321:230:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15338:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15349:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15331:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15331:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15331:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15372:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15383:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15368:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15368:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15388:2:72",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15361:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15361:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15361:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15411:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15422:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15407:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15407:18:72"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15427:34:72",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15400:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15400:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15400:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15482:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15493:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15478:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15478:18:72"
                      },
                      {
                        "hexValue": "6c6c6f77616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15498:10:72",
                        "type": "",
                        "value": "llowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15471:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15471:38:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15471:38:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15518:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15530:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15541:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15526:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15526:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15518:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15298:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15312:4:72",
                "type": ""
              }
            ],
            "src": "15147:404:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15730:182:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15747:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15758:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15740:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15740:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15740:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15781:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15792:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15777:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15777:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15797:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15770:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15770:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15770:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15820:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15831:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15816:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15816:18:72"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15836:34:72",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15809:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15809:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15809:62:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15880:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15892:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15903:2:72",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15888:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15888:18:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15880:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15707:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15721:4:72",
                "type": ""
              }
            ],
            "src": "15556:356:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16091:224:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16108:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16119:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16101:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16101:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16101:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16142:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16153:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16138:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16138:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16158:2:72",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16131:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16131:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16131:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16181:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16192:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16177:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16177:18:72"
                      },
                      {
                        "hexValue": "526f6c65733a206163636f756e7420697320746865207a65726f206164647265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16197:34:72",
                        "type": "",
                        "value": "Roles: account is the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16170:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16170:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16170:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16252:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16263:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16248:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16248:18:72"
                      },
                      {
                        "hexValue": "7373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16268:4:72",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16241:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16241:32:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16241:32:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16282:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16294:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16305:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16290:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16290:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16282:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16068:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16082:4:72",
                "type": ""
              }
            ],
            "src": "15917:398:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16494:226:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16511:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16522:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16504:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16504:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16504:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16545:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16556:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16541:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16541:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16561:2:72",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16534:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16534:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16534:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16584:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16595:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16580:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16580:18:72"
                      },
                      {
                        "hexValue": "45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16600:34:72",
                        "type": "",
                        "value": "ERC20: burn amount exceeds allow"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16573:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16573:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16573:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16655:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16666:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16651:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16651:18:72"
                      },
                      {
                        "hexValue": "616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16671:6:72",
                        "type": "",
                        "value": "ance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16644:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16644:34:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16644:34:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16687:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16699:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16710:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16695:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16695:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16687:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16471:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16485:4:72",
                "type": ""
              }
            ],
            "src": "16320:400:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16899:223:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16916:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16927:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16909:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16909:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16909:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16950:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16961:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16946:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16946:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16966:2:72",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16939:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16939:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16939:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16989:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17000:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16985:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16985:18:72"
                      },
                      {
                        "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17005:34:72",
                        "type": "",
                        "value": "ERC20: burn from the zero addres"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16978:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16978:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16978:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17060:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17071:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17056:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17056:18:72"
                      },
                      {
                        "hexValue": "73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17076:3:72",
                        "type": "",
                        "value": "s"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17049:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17049:31:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17049:31:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17089:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17101:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17112:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17097:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17097:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17089:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16876:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16890:4:72",
                "type": ""
              }
            ],
            "src": "16725:397:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17301:227:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17318:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17329:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17311:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17311:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17311:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17352:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17363:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17348:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17348:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17368:2:72",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17341:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17341:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17341:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17391:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17402:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17387:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17387:18:72"
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17407:34:72",
                        "type": "",
                        "value": "ERC20: transfer from the zero ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17380:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17380:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17380:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17462:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17473:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17458:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17458:18:72"
                      },
                      {
                        "hexValue": "6472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17478:7:72",
                        "type": "",
                        "value": "dress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17451:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17451:35:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17451:35:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17495:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17507:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17518:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17503:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17503:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17495:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17278:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17292:4:72",
                "type": ""
              }
            ],
            "src": "17127:401:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17707:244:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17724:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17735:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17717:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17717:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17717:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17758:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17769:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17754:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17754:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17774:2:72",
                        "type": "",
                        "value": "54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17747:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17747:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17747:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17797:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17808:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17793:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17793:18:72"
                      },
                      {
                        "hexValue": "72656c65617365486f6c643a2063616c6c6572206d7573742062652074686520",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17813:34:72",
                        "type": "",
                        "value": "releaseHold: caller must be the "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17786:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17786:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17786:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17868:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17879:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17864:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17864:18:72"
                      },
                      {
                        "hexValue": "686f6c642073656e646572206f72206e6f746172792e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17884:24:72",
                        "type": "",
                        "value": "hold sender or notary."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17857:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17857:52:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17857:52:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17918:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17930:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17941:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17926:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17926:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17918:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_bef427c6599b78a67199088855f3e7d148eff965aedbe04891332f4fd50908c0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17684:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17698:4:72",
                "type": ""
              }
            ],
            "src": "17533:418:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18130:226:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18147:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18158:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18140:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18140:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18140:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18181:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18192:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18177:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18177:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18197:2:72",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18170:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18170:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18170:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18220:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18231:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18216:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18216:18:72"
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18236:34:72",
                        "type": "",
                        "value": "ERC20: approve from the zero add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18209:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18209:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18209:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18291:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18302:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18287:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18287:18:72"
                      },
                      {
                        "hexValue": "72657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18307:6:72",
                        "type": "",
                        "value": "ress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18280:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18280:34:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18280:34:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18323:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18335:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18346:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18331:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18331:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18323:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18107:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18121:4:72",
                "type": ""
              }
            ],
            "src": "17956:400:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18535:237:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18552:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18563:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18545:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18545:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18545:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18586:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18597:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18582:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18582:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18602:2:72",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18575:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18575:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18575:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18625:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18636:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18621:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18621:18:72"
                      },
                      {
                        "hexValue": "486f6c6461626c65546f6b656e3a20616d6f756e742065786365656473206176",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18641:34:72",
                        "type": "",
                        "value": "HoldableToken: amount exceeds av"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18614:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18614:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18614:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18696:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18707:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18692:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18692:18:72"
                      },
                      {
                        "hexValue": "61696c61626c652062616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18712:17:72",
                        "type": "",
                        "value": "ailable balance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18685:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18685:45:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18685:45:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18739:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18751:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18762:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18747:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18747:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18739:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_de0c4f5e4acd44e6696778f13c28096ebd7a4c585872d8f8a461ad0da6c197c8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18512:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18526:4:72",
                "type": ""
              }
            ],
            "src": "18361:411:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18951:301:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18968:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18979:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18961:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18961:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18961:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19002:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19013:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18998:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18998:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19018:2:72",
                        "type": "",
                        "value": "71"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18991:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18991:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18991:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19041:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19052:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19037:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19037:18:72"
                      },
                      {
                        "hexValue": "65786563757465486f6c643a2063616e206e6f74207365742061207265636970",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19057:34:72",
                        "type": "",
                        "value": "executeHold: can not set a recip"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19030:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19030:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19030:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19112:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19123:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19108:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19108:18:72"
                      },
                      {
                        "hexValue": "69656e74206f6e20657865637574696f6e206173206974207761732073657420",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19128:34:72",
                        "type": "",
                        "value": "ient on execution as it was set "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19101:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19101:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19101:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19183:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19194:3:72",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19179:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19179:19:72"
                      },
                      {
                        "hexValue": "6f6e20686f6c64",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19200:9:72",
                        "type": "",
                        "value": "on hold"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19172:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19172:38:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19172:38:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19219:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19231:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19242:3:72",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19227:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19227:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19219:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e25b528742115f43b37a476a8df66d4a71e93f93d2391b99065533f9710ba899__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18928:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18942:4:72",
                "type": ""
              }
            ],
            "src": "18777:475:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19431:316:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19448:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19459:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19441:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19441:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19441:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19482:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19493:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19478:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19478:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19498:2:72",
                        "type": "",
                        "value": "86"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19471:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19471:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19471:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19521:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19532:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19517:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19517:18:72"
                      },
                      {
                        "hexValue": "65786563757465486f6c643a206d757374207061737320746865207265636970",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19537:34:72",
                        "type": "",
                        "value": "executeHold: must pass the recip"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19510:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19510:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19510:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19592:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19603:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19588:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19588:18:72"
                      },
                      {
                        "hexValue": "69656e74206f6e20657865637574696f6e206173207468652072656369706965",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19608:34:72",
                        "type": "",
                        "value": "ient on execution as the recipie"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19581:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19581:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19581:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19663:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19674:3:72",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19659:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19659:19:72"
                      },
                      {
                        "hexValue": "6e7420776173206e6f7420736574206f6e20686f6c64",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19680:24:72",
                        "type": "",
                        "value": "nt was not set on hold"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19652:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19652:53:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19652:53:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19714:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19726:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19737:3:72",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19722:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19722:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19714:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f15c04bad4a39568ed31ea3c6bc3695f659c7d3ffab2052da0b4914f04d3b76a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19408:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19422:4:72",
                "type": ""
              }
            ],
            "src": "19257:490:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19926:227:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19943:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19954:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19936:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19936:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19936:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19977:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19988:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19973:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19973:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19993:2:72",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19966:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19966:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19966:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20016:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20027:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20012:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20012:18:72"
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20032:34:72",
                        "type": "",
                        "value": "ERC20: decreased allowance below"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20005:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20005:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20005:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20087:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20098:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20083:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20083:18:72"
                      },
                      {
                        "hexValue": "207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20103:7:72",
                        "type": "",
                        "value": " zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20076:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20076:35:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20076:35:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20120:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20132:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20143:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20128:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20128:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20120:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19903:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19917:4:72",
                "type": ""
              }
            ],
            "src": "19752:401:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20332:181:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20349:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20360:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20342:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20342:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20342:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20383:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20394:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20379:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20379:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20399:2:72",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20372:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20372:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20372:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20422:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20433:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20418:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20418:18:72"
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20438:33:72",
                        "type": "",
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20411:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20411:61:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20411:61:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20481:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20493:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20504:2:72",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20489:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20489:18:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20481:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20309:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20323:4:72",
                "type": ""
              }
            ],
            "src": "20158:355:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20692:232:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20709:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20720:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20702:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20702:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20702:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20743:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20754:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20739:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20739:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20759:2:72",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20732:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20732:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20732:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20782:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20793:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20778:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20778:18:72"
                      },
                      {
                        "hexValue": "45524332305061757361626c653a20746f6b656e207472616e73666572207768",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20798:34:72",
                        "type": "",
                        "value": "ERC20Pausable: token transfer wh"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20771:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20771:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20771:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20853:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20864:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20849:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20849:18:72"
                      },
                      {
                        "hexValue": "696c6520706175736564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20869:12:72",
                        "type": "",
                        "value": "ile paused"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20842:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20842:40:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20842:40:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20891:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20903:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20914:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20899:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20899:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20891:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20669:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20683:4:72",
                "type": ""
              }
            ],
            "src": "20518:406:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21094:592:72",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21104:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21116:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21127:3:72",
                        "type": "",
                        "value": "224"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21112:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21112:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21104:4:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21140:29:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21158:3:72",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21163:1:72",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "21154:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21154:11:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21167:1:72",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "21150:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21150:19:72"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "21144:2:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21185:9:72"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "21206:6:72"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "21200:5:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21200:13:72"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "21215:2:72"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "21196:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21196:22:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21178:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21178:41:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21178:41:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21239:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21250:4:72",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21235:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21235:20:72"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "21271:6:72"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21279:4:72",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21267:3:72"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21267:17:72"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "21261:5:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21261:24:72"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "21287:2:72"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "21257:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21257:33:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21228:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21228:63:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21228:63:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21311:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21322:4:72",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21307:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21307:20:72"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "21343:6:72"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21351:4:72",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21339:3:72"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21339:17:72"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "21333:5:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21333:24:72"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "21359:2:72"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "21329:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21329:33:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21300:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21300:63:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21300:63:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21383:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21394:4:72",
                            "type": "",
                            "value": "0x60"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21379:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21379:20:72"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "21411:6:72"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "21419:4:72",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "21407:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21407:17:72"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "21401:5:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21401:24:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21372:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21372:54:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21372:54:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21446:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21457:4:72",
                            "type": "",
                            "value": "0x80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21442:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21442:20:72"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "21474:6:72"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "21482:4:72",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "21470:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21470:17:72"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "21464:5:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21464:24:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21435:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21435:54:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21435:54:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21509:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21520:4:72",
                            "type": "",
                            "value": "0xa0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21505:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21505:20:72"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "21537:6:72"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "21545:4:72",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "21533:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21533:17:72"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "21527:5:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21527:24:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21498:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21498:54:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21498:54:72"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21561:44:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "21591:6:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21599:4:72",
                            "type": "",
                            "value": "0xc0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21587:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21587:17:72"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "21581:5:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21581:24:72"
                  },
                  "variables": [
                    {
                      "name": "memberValue0",
                      "nodeType": "YulTypedName",
                      "src": "21565:12:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memberValue0",
                        "nodeType": "YulIdentifier",
                        "src": "21645:12:72"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21663:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21674:4:72",
                            "type": "",
                            "value": "0xc0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21659:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21659:20:72"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_enum_HoldStatusCode",
                      "nodeType": "YulIdentifier",
                      "src": "21614:30:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21614:66:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21614:66:72"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_ERC20HoldData_$12432_memory_ptr__to_t_struct$_ERC20HoldData_$12432_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21063:9:72",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "21074:6:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21085:4:72",
                "type": ""
              }
            ],
            "src": "20929:757:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21792:76:72",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21802:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21814:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21825:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21810:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21810:18:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21802:4:72"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21844:9:72"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "21855:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21837:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21837:25:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21837:25:72"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21761:9:72",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "21772:6:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21783:4:72",
                "type": ""
              }
            ],
            "src": "21691:177:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22030:162:72",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "22040:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22052:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22063:2:72",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22048:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22048:18:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22040:4:72"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22082:9:72"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "22093:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22075:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22075:25:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22075:25:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22120:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22131:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22116:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22116:18:72"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "22136:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22109:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22109:34:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22109:34:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22163:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22174:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22159:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22159:18:72"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "22179:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22152:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22152:34:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22152:34:72"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_bytes32__to_t_uint256_t_uint256_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21983:9:72",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "21994:6:72",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "22002:6:72",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "22010:6:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22021:4:72",
                "type": ""
              }
            ],
            "src": "21873:319:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22294:87:72",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "22304:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22316:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22327:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22312:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22312:18:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22304:4:72"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22346:9:72"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "22361:6:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22369:4:72",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "22357:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22357:17:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22339:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22339:36:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22339:36:72"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "22263:9:72",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "22274:6:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22285:4:72",
                "type": ""
              }
            ],
            "src": "22197:184:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22434:80:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "22461:22:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "22463:16:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22463:18:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "22463:18:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "22450:1:72"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "22457:1:72"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "22453:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22453:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "22447:2:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22447:13:72"
                  },
                  "nodeType": "YulIf",
                  "src": "22444:39:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22492:16:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "22503:1:72"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "22506:1:72"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22499:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22499:9:72"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "22492:3:72"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "22417:1:72",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "22420:1:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "22426:3:72",
                "type": ""
              }
            ],
            "src": "22386:128:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22568:76:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "22590:22:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "22592:16:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22592:18:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "22592:18:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "22584:1:72"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "22587:1:72"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "22581:2:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22581:8:72"
                  },
                  "nodeType": "YulIf",
                  "src": "22578:34:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22621:17:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "22633:1:72"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "22636:1:72"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "22629:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22629:9:72"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "22621:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "22550:1:72",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "22553:1:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "22559:4:72",
                "type": ""
              }
            ],
            "src": "22519:125:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22702:205:72",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "22712:10:72",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "22721:1:72",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "22716:1:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "22781:63:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "22806:3:72"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "22811:1:72"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "22802:3:72"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "22802:11:72"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "22825:3:72"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "22830:1:72"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "22821:3:72"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "22821:11:72"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "22815:5:72"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "22815:18:72"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "22795:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22795:39:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "22795:39:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "22742:1:72"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "22745:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "22739:2:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22739:13:72"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "22753:19:72",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "22755:15:72",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "22764:1:72"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "22767:2:72",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "22760:3:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22760:10:72"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "22755:1:72"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "22735:3:72",
                    "statements": []
                  },
                  "src": "22731:113:72"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "22870:31:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "22883:3:72"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "22888:6:72"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "22879:3:72"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "22879:16:72"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "22897:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "22872:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22872:27:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "22872:27:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "22859:1:72"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "22862:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "22856:2:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22856:13:72"
                  },
                  "nodeType": "YulIf",
                  "src": "22853:48:72"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "22680:3:72",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "22685:3:72",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "22690:6:72",
                "type": ""
              }
            ],
            "src": "22649:258:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22967:325:72",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "22977:22:72",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22991:1:72",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "22994:4:72"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "22987:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22987:12:72"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "22977:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "23008:38:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "23038:4:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23044:1:72",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "23034:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23034:12:72"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "23012:18:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "23085:31:72",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "23087:27:72",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "23101:6:72"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "23109:4:72",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "23097:3:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "23097:17:72"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "23087:6:72"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "23065:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "23058:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23058:26:72"
                  },
                  "nodeType": "YulIf",
                  "src": "23055:61:72"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "23175:111:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "23196:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "23203:3:72",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "23208:10:72",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "23199:3:72"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "23199:20:72"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "23189:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "23189:31:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "23189:31:72"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "23240:1:72",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "23243:4:72",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "23233:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "23233:15:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "23233:15:72"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "23268:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "23271:4:72",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "23261:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "23261:15:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "23261:15:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "23131:18:72"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "23154:6:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23162:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "23151:2:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23151:14:72"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "23128:2:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23128:38:72"
                  },
                  "nodeType": "YulIf",
                  "src": "23125:161:72"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "22947:4:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "22956:6:72",
                "type": ""
              }
            ],
            "src": "22912:380:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23329:95:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23346:1:72",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23353:3:72",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23358:10:72",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "23349:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23349:20:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23339:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23339:31:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23339:31:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23386:1:72",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23389:4:72",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23379:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23379:15:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23379:15:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23410:1:72",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23413:4:72",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "23403:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23403:15:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23403:15:72"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "23297:127:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23461:95:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23478:1:72",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23485:3:72",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23490:10:72",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "23481:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23481:20:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23471:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23471:31:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23471:31:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23518:1:72",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23521:4:72",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23511:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23511:15:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23511:15:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23542:1:72",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23545:4:72",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "23535:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23535:15:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23535:15:72"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "23429:127:72"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32t_addresst_addresst_uint256t_uint256t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_decode_tuple_t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32t_bytes32t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_enum_HoldStatusCode(value, pos)\n    {\n        if iszero(lt(value, 7))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(pos, value)\n    }\n    function abi_encode_tuple_packed_t_address_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value4, value3, value2, value1, value0) -> end\n    {\n        let _1 := not(sub(shl(96, 1), 1))\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), and(shl(96, value1), _1))\n        mstore(add(pos, 40), and(shl(96, value2), _1))\n        mstore(add(pos, 60), and(shl(96, value3), _1))\n        mstore(add(pos, 80), value4)\n        end := add(pos, 112)\n    }\n    function abi_encode_tuple_packed_t_address_t_address_t_uint256_t_uint256_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value4, value3, value2, value1, value0) -> end\n    {\n        let _1 := not(sub(shl(96, 1), 1))\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), and(shl(96, value1), _1))\n        mstore(add(pos, 40), value2)\n        mstore(add(pos, 72), value3)\n        mstore(add(pos, 104), value4)\n        end := add(pos, 136)\n    }\n    function abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, value0)\n        end := add(pos, 32)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_a2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b4__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"ERC1820_ACCEPT_MAGIC\")\n        end := add(pos, 20)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_enum$_HoldStatusCode_$12361__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        abi_encode_enum_HoldStatusCode(value0, headStart)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_06760903a1a137bd7e8f70a654f085804529f6cf9f19abebbae2f256bb6f7248__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"executeHold: caller must be the \")\n        mstore(add(headStart, 96), \"hold notary\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0892ca814e3c1b3a07b90f43daa4885ed2a91182b50bd144f324a7ba002d6e25__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"hold: notary must not be a zero \")\n        mstore(add(headStart, 96), \"address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Roles: account already has role\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1586263b6ed81250e09e3511dae8b28d2c9acb5016a4c7516ff2ccacc49700c4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Hold is not in Ordered status\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_19034bf26bc3742bd67470410ce64f54edcc10d93f84f4739233c2ff57191b75__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"hold: amount exceeds available b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1f68c2a16436ef9beba75fe6c860676b87d7e7c18f5be2e4c797c12ed8ef7eb4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"executeHold: need preimage if th\")\n        mstore(add(headStart, 96), \"e hold has a lock hash\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3fb1032916a9fa7eb9854a20718a129abc1980a1ddced64bc82359ff8f32fdb5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"hold: id already exists\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_493d53730a9bdfe5ea17be5fb48f7cf625c731a31a9424f72b43547622da1e56__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"releaseHold: can only release af\")\n        mstore(add(headStart, 96), \"ter the expiration date.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4cc511149ca81358a86c3964feb50f2ffdb7c4ba6870b88f6af6e124d9c0f7af__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"hold: amount must be greater tha\")\n        mstore(add(headStart, 96), \"n zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_501c71291b34e8ea8c38d27b05abbbca9ed16d8e393dcf6a21d81509bdc46bf9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"executeHold: recipient must not \")\n        mstore(add(headStart, 96), \"be a zero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7b67df7aff43b902379f5b51d42b44d55c3dd66fdd309918f58eaabd4d470b8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 51)\n        mstore(add(headStart, 64), \"executeHold: preimage hash does \")\n        mstore(add(headStart, 96), \"not match lock hash\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Roles: account does not have rol\")\n        mstore(add(headStart, 96), \"e\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Roles: account is the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds allow\")\n        mstore(add(headStart, 96), \"ance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_bef427c6599b78a67199088855f3e7d148eff965aedbe04891332f4fd50908c0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"releaseHold: caller must be the \")\n        mstore(add(headStart, 96), \"hold sender or notary.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_de0c4f5e4acd44e6696778f13c28096ebd7a4c585872d8f8a461ad0da6c197c8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"HoldableToken: amount exceeds av\")\n        mstore(add(headStart, 96), \"ailable balance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e25b528742115f43b37a476a8df66d4a71e93f93d2391b99065533f9710ba899__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 71)\n        mstore(add(headStart, 64), \"executeHold: can not set a recip\")\n        mstore(add(headStart, 96), \"ient on execution as it was set \")\n        mstore(add(headStart, 128), \"on hold\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_f15c04bad4a39568ed31ea3c6bc3695f659c7d3ffab2052da0b4914f04d3b76a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 86)\n        mstore(add(headStart, 64), \"executeHold: must pass the recip\")\n        mstore(add(headStart, 96), \"ient on execution as the recipie\")\n        mstore(add(headStart, 128), \"nt was not set on hold\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC20Pausable: token transfer wh\")\n        mstore(add(headStart, 96), \"ile paused\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_struct$_ERC20HoldData_$12432_memory_ptr__to_t_struct$_ERC20HoldData_$12432_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 224)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(mload(value0), _1))\n        mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), _1))\n        mstore(add(headStart, 0x40), and(mload(add(value0, 0x40)), _1))\n        mstore(add(headStart, 0x60), mload(add(value0, 0x60)))\n        mstore(add(headStart, 0x80), mload(add(value0, 0x80)))\n        mstore(add(headStart, 0xa0), mload(add(value0, 0xa0)))\n        let memberValue0 := mload(add(value0, 0xc0))\n        abi_encode_enum_HoldStatusCode(memberValue0, add(headStart, 0xc0))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_bytes32__to_t_uint256_t_uint256_t_bytes32__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n}",
      "id": 72,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "1050:12166:61:-:0;;;1734:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1815:4;1821:6;1829:8;1815:4;1821:6;867:23:2;665:10:19;867:9:2;:23::i;:::-;1962:13:4;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1985:17:4;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;924:7:3;:15;;-1:-1:-1;;924:15:3;;;-1:-1:-1;512:22:57;523:10;512;:22::i;:::-;639:45:62::1;672:11;;;;;;;;;;;;;-1:-1:-1::0;;;672:11:62::1;;::::0;639:32:::1;;;;;:45;;:::i;:::-;690:22;::::0;;;::::1;::::0;-1:-1:-1;1050:12166:61;;-1:-1:-1;;;;1050:12166:61;2041:169:2;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:2;;;-1:-1:-1;;;;;;2131:17:2;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;1032:119:57:-;1088:21;1101:7;1088:8;:12;;;;;;:21;;;;:::i;:::-;1124:20;;-1:-1:-1;;;;;1124:20:57;;;;;;;;1032:119;:::o;676:141:37:-;808:4;744:16;:61;788:14;771:32;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;771:32:37;;;;;;761:43;;771:32;761:43;;;;744:61;;;;;;;;;;-1:-1:-1;744:61:37;:68;;-1:-1:-1;;744:68:37;;;;;;;;;;-1:-1:-1;676:141:37:o;414:175:59:-;491:18;495:4;501:7;491:3;:18::i;:::-;490:19;482:63;;;;-1:-1:-1;;;482:63:59;;1905:2:72;482:63:59;;;1887:21:72;1944:2;1924:18;;;1917:30;1983:33;1963:18;;;1956:61;2034:18;;482:63:59;;;;;;;;;-1:-1:-1;;;;;555:20:59;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;555:27:59;578:4;555:27;;;414:175::o;933:200::-;1005:4;-1:-1:-1;;;;;1029:21:59;;1021:68;;;;-1:-1:-1;;;1021:68:59;;2265:2:72;1021:68:59;;;2247:21:72;2304:2;2284:18;;;2277:30;2343:34;2323:18;;;2316:62;-1:-1:-1;;;2394:18:72;;;2387:32;2436:19;;1021:68:59;2063:398:72;1021:68:59;-1:-1:-1;;;;;;1106:20:59;:11;:20;;;;;;;;;;;;;;;933:200::o;1050:12166:61:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1050:12166:61;;;-1:-1:-1;1050:12166:61;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:686:72;68:5;121:3;114:4;106:6;102:17;98:27;88:55;;139:1;136;129:12;88:55;162:13;;-1:-1:-1;;;;;224:10:72;;;221:36;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:72;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:72;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;577:3;570:4;565:2;557:6;553:15;549:26;546:35;543:55;;;594:1;591;584:12;543:55;607:63;667:2;660:4;652:6;648:17;641:4;633:6;629:17;607:63;:::i;:::-;688:6;14:686;-1:-1:-1;;;;;;14:686:72:o;705:712::-;811:6;819;827;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;923:16;;-1:-1:-1;;;;;988:14:72;;;985:34;;;1015:1;1012;1005:12;985:34;1038:61;1091:7;1082:6;1071:9;1067:22;1038:61;:::i;:::-;1028:71;;1145:2;1134:9;1130:18;1124:25;1108:41;;1174:2;1164:8;1161:16;1158:36;;;1190:1;1187;1180:12;1158:36;;1213:63;1268:7;1257:8;1246:9;1242:24;1213:63;:::i;:::-;1203:73;;;1319:2;1308:9;1304:18;1298:25;1363:4;1356:5;1352:16;1345:5;1342:27;1332:55;;1383:1;1380;1373:12;1332:55;1406:5;1396:15;;;705:712;;;;;:::o;1422:276::-;1553:3;1591:6;1585:13;1607:53;1653:6;1648:3;1641:4;1633:6;1629:17;1607:53;:::i;:::-;1676:16;;;;;1422:276;-1:-1:-1;;1422:276:72:o;2466:258::-;2538:1;2548:113;2562:6;2559:1;2556:13;2548:113;;;2638:11;;;2632:18;2619:11;;;2612:39;2584:2;2577:10;2548:113;;;2679:6;2676:1;2673:13;2670:48;;;2714:1;2705:6;2700:3;2696:16;2689:27;2670:48;;2466:258;;;:::o;2729:380::-;2808:1;2804:12;;;;2851;;;2872:61;;2926:4;2918:6;2914:17;2904:27;;2872:61;2979:2;2971:6;2968:14;2948:18;2945:38;2942:161;;;3025:10;3020:3;3016:20;3013:1;3006:31;3060:4;3057:1;3050:15;3088:4;3085:1;3078:15;2942:161;;2729:380;;;:::o;3114:127::-;3175:10;3170:3;3166:20;3163:1;3156:31;3206:4;3203:1;3196:15;3230:4;3227:1;3220:15;3114:127;1050:12166:61;;;;;;;;;;;;",
  "deployedSourceMap": "1050:12166:61:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:98:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12235:299:61;;;;;;:::i;:::-;;:::i;:::-;;;6978:14:72;;6971:22;6953:41;;6941:2;6926:18;12235:299:61;6813:187:72;10834:166:61;;;;;;:::i;:::-;;:::i;:::-;;;7151:25:72;;;7139:2;7124:18;10834:166:61;7005:177:72;3162:106:4;3249:12;;3162:106;;11743:363:61;;;;;;:::i;:::-;;:::i;363:309:37:-;;;;;;:::i;:::-;;:::i;849:96:57:-;;;;;;:::i;:::-;;:::i;:::-;;1325:94:62;;;22369:4:72;1405:9:62;22357:17:72;22339:36;;22327:2;22312:18;1325:94:62;22197:184:72;5677:212:4;;;;;;:::i;:::-;;:::i;1659:122:62:-;;;;;;:::i;:::-;;:::i;12625:230:61:-;;;;;;:::i;:::-;;:::i;6212:606::-;;;;;;:::i;:::-;;:::i;1424:41::-;;;;;;1041:84:3;1111:7;;;;1041:84;;7185:801:61;;;;;;:::i;:::-;;:::i;10222:147::-;;;;;;:::i;:::-;;:::i;1605:92:2:-;;;:::i;12950:264:61:-;;;;;;:::i;:::-;;:::i;973:85:2:-;;;:::i;:::-;;;;;;;:::i;9143:883:61:-;;;;;;:::i;:::-;;:::i;2285:102:4:-;;;:::i;753:90:57:-;;;;;;:::i;:::-;;:::i;951:75::-;;;:::i;2359:486:61:-;;;;;;:::i;:::-;;:::i;:::-;;;;7640:25:72;;;7696:2;7681:18;;7674:34;;;;7613:18;2359:486:61;7466:248:72;6376:405:4;;;;;;:::i;:::-;;:::i;11333:305:61:-;;;;;;:::i;:::-;;:::i;640:107:57:-;;;;;;:::i;:::-;;:::i;11106:126:61:-;;;;;;:::i;:::-;11172:14;11205:13;;;:5;:13;;;;;:20;;;;;;11106:126;;;;;;;;:::i;3743:1420::-;;;;;;:::i;:::-;;:::i;10525:131::-;;;;;;:::i;:::-;-1:-1:-1;;;;;10621:28:61;10595:7;10621:28;;;:19;:28;;;;;;;10525:131;5169:133;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3884:149:4:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3999:18:4;;;3973:7;3999:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3884:149;1846:189:2;;;;;;:::i;:::-;;:::i;5498:449:61:-;;;;;;:::i;:::-;;:::i;1847:432::-;;;;;;:::i;:::-;2095:167;;-1:-1:-1;;;;;;5318:2:72;5354:15;;;5350:24;;2095:167:61;;;5338:37:72;5409:15;;;5405:24;5391:12;;;5384:46;5446:12;;;5439:28;;;5483:12;;;5476:28;;;5520:13;;;5513:29;;;2037:14:61;;5558:13:72;;2095:167:61;;;;;;;;;;;;2072:200;;;;;;2063:209;;1847:432;;;;;;;;2074:98:4;2128:13;2160:5;2153:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:98;:::o;12235:299:61:-;12362:35;;-1:-1:-1;;;12362:35:61;;12325:4;;12401:6;;12362:4;;:23;;:35;;12386:10;;12362:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;;12341:139;;;;-1:-1:-1;;;12341:139:61;;;;;;;:::i;:::-;;;;;;;;;12497:30;12511:7;12520:6;12497:13;:30::i;:::-;12490:37;;12235:299;;;;;:::o;10834:166::-;-1:-1:-1;;;;;10964:28:61;;10909:7;10964:28;;;:19;:28;;;;;;10935:58;;:24;10984:7;10935:15;:24::i;:::-;:28;;:58::i;11743:363::-;11923:31;;-1:-1:-1;;;11923:31:61;;11886:4;;11958:6;;11923:4;;:23;;:31;;11947:6;;11923:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:41;;11902:135;;;;-1:-1:-1;;;11902:135:61;;;;;;;:::i;:::-;12054:45;12073:6;12081:9;12092:6;12054:18;:45::i;:::-;12047:52;11743:363;-1:-1:-1;;;;11743:363:61:o;363:309:37:-;543:7;563:31;;;:16;:31;;;;;;;;560:108;;;262:40;;-1:-1:-1;;;262:40:37;;;6531:35:72;6582:12;;262:40:37;;;;;;;;;;;;252:51;;;;;;604:27;;;;560:108;-1:-1:-1;652:9:37;;;849:96:57;595:20;604:10;595:8;:20::i;:::-;587:29;;;;;;916:22:::1;930:7;916:13;:22::i;:::-;849:96:::0;:::o;5677:212:4:-;665:10:19;5765:4:4;5813:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5813:34:4;;;;;;;;;;5765:4;;5781:80;;5804:7;;5813:47;;5850:10;;5813:47;:::i;:::-;5781:8;:80::i;:::-;-1:-1:-1;5878:4:4;5677:212;;;;:::o;1659:122:62:-;1727:4;595:20:57;604:10;595:8;:20::i;:::-;587:29;;;;;;1741:16:62::1;1747:2;1751:5;1741;:16::i;12625:230:61:-:0;12702:35;;-1:-1:-1;;;12702:35:61;;12741:6;;12702:4;;:23;;:35;;12726:10;;12702:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;;12681:139;;;;-1:-1:-1;;;12681:139:61;;;;;;;:::i;:::-;12830:18;12841:6;12830:10;:18::i;6212:606::-;6353:1;6318:13;;;:5;:13;;;;;:23;;;-1:-1:-1;;;;;6318:23:61;6297:170;;;;-1:-1:-1;;;6297:170:61;;;;;;;:::i;:::-;6517:1;6481:13;;;:5;:13;;;;;:24;;;:38;6477:265;;6608:38;6632:12;6615:30;;;;;;5711:19:72;;5755:2;5746:12;;5582:182;6615:30:61;;;;-1:-1:-1;;6615:30:61;;;;;;;;;;6608:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6560:13;;;;:5;:13;;;;;:24;;;:86;6535:196;;;;-1:-1:-1;;;6535:196:61;;;;;;;:::i;:::-;6787:13;;;;:5;:13;;;;;:23;;;6752:59;;6765:6;;6773:12;;-1:-1:-1;;;;;6787:23:61;6752:12;:59::i;:::-;6212:606;;:::o;7185:801::-;7375:1;7340:13;;;:5;:13;;;;;:23;;;-1:-1:-1;;;;;7340:23:61;:37;7319:155;;;;-1:-1:-1;;;7319:155:61;;18979:2:72;7319:155:61;;;18961:21:72;19018:2;18998:18;;;18991:30;19057:34;19037:18;;;19030:62;19128:34;19108:18;;;19101:62;-1:-1:-1;;;19179:19:72;;;19172:38;19227:19;;7319:155:61;18777:475:72;7319:155:61;-1:-1:-1;;;;;7505:23:61;;7484:119;;;;-1:-1:-1;;;7484:119:61;;14109:2:72;7484:119:61;;;14091:21:72;14148:2;14128:18;;;14121:30;14187:34;14167:18;;;14160:62;-1:-1:-1;;;14238:18:72;;;14231:47;14295:19;;7484:119:61;13907:413:72;7484:119:61;7653:1;7617:13;;;:5;:13;;;;;:24;;;:38;7613:265;;7744:38;7768:12;7751:30;;;;;;5711:19:72;;5755:2;5746:12;;5582:182;7751:30:61;;;;-1:-1:-1;;7751:30:61;;;;;;;;;;7744:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7696:13;;;;:5;:13;;;;;:24;;;:86;7671:196;;;;-1:-1:-1;;;7671:196:61;;;;;;;:::i;:::-;7888:13;;;;:5;:13;;;;;:23;;:35;;-1:-1:-1;;;;;;7888:35:61;-1:-1:-1;;;;;7888:35:61;;;;;7934:45;7888:13;7955:12;7888:35;7934:12;:45::i;:::-;7185:801;;;:::o;10222:147::-;10303:7;10329:24;10345:7;10329:15;:24::i;1605:92:2:-;665:10:19;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;12950:264:61:-;13048:35;;-1:-1:-1;;;13048:35:61;;13087:6;;13048:4;;:23;;:35;;13072:10;;13048:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;;13027:139;;;;-1:-1:-1;;;13027:139:61;;;;;;;:::i;:::-;13176:31;13191:7;13200:6;13176:14;:31::i;973:85:2:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:2;;973:85::o;9143:883:61:-;9203:6;1559:22;1535:13;;;;:5;:13;;;;;:20;;;;;;;;:46;;;;;;;:::i;:::-;;:120;;;-1:-1:-1;1621:34:61;1597:13;;;;:5;:13;;;;;:20;;;;;;;;:58;;;;;;;:::i;:::-;;1535:120;1514:196;;;;-1:-1:-1;;;1514:196:61;;;;;;;:::i;:::-;9225:13:::1;::::0;;;:5:::1;:13;::::0;;;;:20;-1:-1:-1;;;;;9225:20:61::1;9249:10;9225:34;9221:522;;;9318:13;::::0;;;:5:::1;:13;::::0;;;;:32:::1;;::::0;9300:15:::1;:50;9275:165;;;::::0;-1:-1:-1;;;9275:165:61;;13277:2:72;9275:165:61::1;::::0;::::1;13259:21:72::0;13316:2;13296:18;;;13289:30;13355:34;13335:18;;;13328:62;-1:-1:-1;;;13406:18:72;;;13399:54;13470:19;;9275:165:61::1;13075:420:72::0;9275:165:61::1;9454:13;::::0;;;:5:::1;:13;::::0;;;;9477:35:::1;9454:20:::0;;::::1;:58:::0;;-1:-1:-1;;9454:58:61::1;::::0;;::::1;::::0;;9221:522:::1;;;9533:13;::::0;;;:5:::1;:13;::::0;;;;:20:::1;;::::0;-1:-1:-1;;;;;9533:20:61::1;9557:10;9533:34;9529:214;;9583:64;::::0;-1:-1:-1;;;9583:64:61;;17735:2:72;9583:64:61::1;::::0;::::1;17717:21:72::0;17774:2;17754:18;;;17747:30;17813:34;17793:18;;;17786:62;-1:-1:-1;;;17864:18:72;;;17857:52;17926:19;;9583:64:61::1;17533:418:72::0;9529:214:61::1;9678:13;::::0;;;:5:::1;:13;::::0;;;;:20:::1;;:54:::0;;-1:-1:-1;;9678:54:61::1;9701:31;9678:54;::::0;;9529:214:::1;9869:13;::::0;;;:5:::1;:13;::::0;;;;;;;:20:::1;::::0;::::1;::::0;9830;;-1:-1:-1;;;;;9830:20:61::1;9810:41:::0;;:19:::1;:41:::0;;;;;;;:89:::1;::::0;:45:::1;:89::i;:::-;9753:54;9773:13:::0;;;:5:::1;:13;::::0;;;;;;;:33;;-1:-1:-1;;;;;9773:33:61::1;9753:54:::0;;:19:::1;:54:::0;;;;;:146;;;;9951:13;;;;;;:20:::1;;::::0;9929:17:::1;::::0;:43:::1;::::0;:21:::1;:43::i;:::-;9909:17;:63:::0;9988:31:::1;::::0;10000:6;;9988:31:::1;::::0;::::1;::::0;10008:10:::1;::::0;9988:31:::1;:::i;:::-;;;;;;;;9143:883:::0;;:::o;2285:102:4:-;2341:13;2373:7;2366:14;;;;;:::i;753:90:57:-;595:20;604:10;595:8;:20::i;:::-;587:29;;;;;;817:19:::1;828:7;817:10;:19::i;951:75::-:0;994:25;1008:10;994:13;:25::i;2359:486:61:-;2569:182;;;-1:-1:-1;;;;;;2607:4:61;4756:2:72;4792:15;;;4788:24;;2569:182:61;;;;4776:37:72;;;;4847:15;;;4843:24;;4829:12;;;4822:46;4902:15;;;4898:24;;4884:12;;;4877:46;4957:15;;;;4953:24;;;4939:12;;;4932:46;4994:12;;;;4987:28;;;;2569:182:61;;;;;;;;;;5031:13:72;;;;2569:182:61;;2559:193;;;;;;-1:-1:-1;2779:23:61;;;:13;:23;;;;;;;2559:193;;2359:486::o;6376:405:4:-;665:10:19;6469:4:4;6512:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6512:34:4;;;;;;;;;;6564:35;;;;6556:85;;;;-1:-1:-1;;;6556:85:4;;19954:2:72;6556:85:4;;;19936:21:72;19993:2;19973:18;;;19966:30;20032:34;20012:18;;;20005:62;-1:-1:-1;;;20083:18:72;;;20076:35;20128:19;;6556:85:4;19752:401:72;6556:85:4;6675:67;665:10:19;6698:7:4;6726:15;6707:16;:34;6675:8;:67::i;:::-;-1:-1:-1;6770:4:4;;6376:405;-1:-1:-1;;;6376:405:4:o;11333:305:61:-;11463:35;;-1:-1:-1;;;11463:35:61;;11426:4;;11502:6;;11463:4;;:23;;:35;;11487:10;;11463:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;;11442:139;;;;-1:-1:-1;;;11442:139:61;;;;;;;:::i;:::-;11598:33;11613:9;11624:6;11598:14;:33::i;640:107:57:-;696:4;719:21;:8;732:7;719:12;:21::i;3743:1420:61:-;-1:-1:-1;;;;;3971:20:61;;3950:106;;;;-1:-1:-1;;;3950:106:61;;9349:2:72;3950:106:61;;;9331:21:72;9388:2;9368:18;;;9361:30;9427:34;9407:18;;;9400:62;-1:-1:-1;;;9478:18:72;;;9471:37;9525:19;;3950:106:61;9147:403:72;3950:106:61;4074:11;4066:62;;;;-1:-1:-1;;;4066:62:61;;13702:2:72;4066:62:61;;;13684:21:72;13741:2;13721:18;;;13714:30;13780:34;13760:18;;;13753:62;-1:-1:-1;;;13831:18:72;;;13824:36;13877:19;;4066:62:61;13500:402:72;4066:62:61;4159:35;;-1:-1:-1;;;4159:35:61;;4198:6;;4159:4;;:23;;:35;;4183:10;;4159:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;;4138:130;;;;-1:-1:-1;;;4138:130:61;;10878:2:72;4138:130:61;;;10860:21:72;10917:2;10897:18;;;10890:30;10956:34;10936:18;;;10929:62;-1:-1:-1;;;11007:18:72;;;11000:36;11053:19;;4138:130:61;10676:402:72;4138:130:61;4280:16;4301:117;4333:6;665:10:19;4379:9:61;4402:6;4301:18;:117::i;:::-;-1:-1:-1;4429:23:61;;;;:13;:23;;;;;:32;;;4279:139;;-1:-1:-1;4493:13:61;;;;:5;:13;;;;;:20;;;;;;;;:50;;;;;;;:::i;:::-;;4472:120;;;;-1:-1:-1;;;4472:120:61;;12518:2:72;4472:120:61;;;12500:21:72;12557:2;12537:18;;;12530:30;-1:-1:-1;;;12576:18:72;;;12569:53;12639:18;;4472:120:61;12316:347:72;4472:120:61;4618:200;;;;;;;;4645:10;-1:-1:-1;;;;;4618:200:61;;;;;4669:9;-1:-1:-1;;;;;4618:200:61;;;;;4692:6;-1:-1:-1;;;;;4618:200:61;;;;;4712:6;4618:200;;;;4732:18;4618:200;;;;4764:8;4618:200;;;;4786:22;4618:200;;;;;;;;:::i;:::-;;;4602:13;;;;:5;:13;;;;;;;;;:216;;;;-1:-1:-1;;;;;;4602:216:61;;;-1:-1:-1;;;;;4602:216:61;;;;;;;;;;-1:-1:-1;4602:216:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:13;;:216;;;;-1:-1:-1;;4602:216:61;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;4882:10:61;4862:31;;;;:19;:31;;;;;;:65;;-1:-1:-1;4911:6:61;4862:35;:65::i;:::-;4848:10;4828:31;;;;:19;:31;;;;;:99;4957:17;;:29;;4979:6;4957:21;:29::i;:::-;4937:17;:49;5002:154;;;22075:25:72;;;22131:2;22116:18;;22109:34;;;22159:18;;;22152:34;;;-1:-1:-1;;;;;5002:154:61;;;;;;;;5023:6;;5002:154;;22063:2:72;22048:18;5002:154:61;;;;;;;3940:1223;3743:1420;;;;;;:::o;5169:133::-;5243:20;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5243:20:61;5282:13;;;;:5;:13;;;;;;;;;5275:20;;;;;;;;;-1:-1:-1;;;;;5275:20:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5282:13;5275:20;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;5275:20:61;5169:133;-1:-1:-1;;5169:133:61:o;1846:189:2:-;665:10:19;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:2;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:2;;11708:2:72;1926:73:2::1;::::0;::::1;11690:21:72::0;11747:2;11727:18;;;11720:30;11786:34;11766:18;;;11759:62;-1:-1:-1;;;11837:18:72;;;11830:36;11883:19;;1926:73:2::1;11506:402:72::0;1926:73:2::1;2009:19;2019:8;2009:9;:19::i;5498:449:61:-:0;5617:1;5582:13;;;:5;:13;;;;;:23;;;-1:-1:-1;;;;;5582:23:61;5561:170;;;;-1:-1:-1;;;5561:170:61;;;;;;;:::i;:::-;5798:1;5762:13;;;:5;:13;;;;;:24;;;:38;5741:139;;;;-1:-1:-1;;;5741:139:61;;11285:2:72;5741:139:61;;;11267:21:72;11324:2;11304:18;;;11297:30;11363:34;11343:18;;;11336:62;-1:-1:-1;;;11414:18:72;;;11407:52;11476:19;;5741:139:61;11083:418:72;5741:139:61;5891:49;5916:13;;;:5;:13;;;;;:23;;;5891:49;;5904:6;;-1:-1:-1;;;;;5916:23:61;5891:12;:49::i;676:141:37:-;808:4;744:16;:61;788:14;771:32;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;771:32:37;;;;;;761:43;;771:32;761:43;;;;744:61;;;;;;;;;;-1:-1:-1;744:61:37;:68;;-1:-1:-1;;744:68:37;;;;;;;;;;-1:-1:-1;676:141:37:o;414:175:59:-;491:18;495:4;501:7;491:3;:18::i;:::-;490:19;482:63;;;;-1:-1:-1;;;482:63:59;;9757:2:72;482:63:59;;;9739:21:72;9796:2;9776:18;;;9769:30;9835:33;9815:18;;;9808:61;9886:18;;482:63:59;9555:355:72;482:63:59;-1:-1:-1;;;;;555:20:59;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;555:27:59;578:4;555:27;;;414:175::o;4171:166:4:-;4254:4;4270:39;665:10:19;4293:7:4;4302:6;4270:8;:39::i;3326:125::-;-1:-1:-1;;;;;3426:18:4;3400:7;3426:18;;;:9;:18;;;;;;;3326:125::o;3039:96:24:-;3097:7;3123:5;3127:1;3123;:5;:::i;4804:478:4:-;4940:4;4956:36;4966:6;4974:9;4985:6;4956:9;:36::i;:::-;-1:-1:-1;;;;;5030:19:4;;5003:24;5030:19;;;:11;:19;;;;;;;;665:10:19;5030:33:4;;;;;;;;5081:26;;;;5073:79;;;;-1:-1:-1;;;5073:79:4;;15349:2:72;5073:79:4;;;15331:21:72;15388:2;15368:18;;;15361:30;15427:34;15407:18;;;15400:62;-1:-1:-1;;;15478:18:72;;;15471:38;15526:19;;5073:79:4;15147:404:72;5073:79:4;5186:57;5195:6;665:10:19;5236:6:4;5217:16;:25;5186:8;:57::i;:::-;-1:-1:-1;5271:4:4;;4804:478;-1:-1:-1;;;;4804:478:4:o;1157:127:57:-;1216:24;:8;1232:7;1216:15;:24::i;:::-;1255:22;;-1:-1:-1;;;;;1255:22:57;;;;;;;;1157:127;:::o;9952:370:4:-;-1:-1:-1;;;;;10083:19:4;;10075:68;;;;-1:-1:-1;;;10075:68:4;;18158:2:72;10075:68:4;;;18140:21:72;18197:2;18177:18;;;18170:30;18236:34;18216:18;;;18209:62;-1:-1:-1;;;18287:18:72;;;18280:34;18331:19;;10075:68:4;17956:400:72;10075:68:4;-1:-1:-1;;;;;10161:21:4;;10153:68;;;;-1:-1:-1;;;10153:68:4;;12115:2:72;10153:68:4;;;12097:21:72;12154:2;12134:18;;;12127:30;12193:34;12173:18;;;12166:62;-1:-1:-1;;;12244:18:72;;;12237:32;12286:19;;10153:68:4;11913:398:72;10153:68:4;-1:-1:-1;;;;;10232:18:4;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10283:32;;7151:25:72;;;10283:32:4;;7124:18:72;10283:32:4;;;;;;;9952:370;;;:::o;8244:389::-;-1:-1:-1;;;;;8327:21:4;;8319:65;;;;-1:-1:-1;;;8319:65:4;;20360:2:72;8319:65:4;;;20342:21:72;20399:2;20379:18;;;20372:30;20438:33;20418:18;;;20411:61;20489:18;;8319:65:4;20158:355:72;8319:65:4;8395:49;8424:1;8428:7;8437:6;8395:20;:49::i;:::-;8471:6;8455:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8487:18:4;;;;;;:9;:18;;;;;:28;;8509:6;;8487:18;:28;;8509:6;;8487:28;:::i;:::-;;;;-1:-1:-1;;8530:37:4;;7151:25:72;;;-1:-1:-1;;;;;8530:37:4;;;8547:1;;-1:-1:-1;;;;;;;;;;;8530:37:4;7139:2:72;7124:18;8530:37:4;;;;;;;6212:606:61;;:::o;487:89:6:-;542:27;665:10:19;562:6:6;542:5;:27::i;7992:943:61:-;8117:6;1559:22;1535:13;;;;:5;:13;;;;;:20;;;;;;;;:46;;;;;;;:::i;:::-;;:120;;;-1:-1:-1;1621:34:61;1597:13;;;;:5;:13;;;;;:20;;;;;;;;:58;;;;;;;:::i;:::-;;1535:120;1514:196;;;;-1:-1:-1;;;1514:196:61;;;;;;;:::i;:::-;8156:13:::1;::::0;;;:5:::1;:13;::::0;;;;:20:::1;;::::0;-1:-1:-1;;;;;8156:20:61::1;8180:10;8156:34;8135:124;;;::::0;-1:-1:-1;;;8135:124:61;;8937:2:72;8135:124:61::1;::::0;::::1;8919:21:72::0;8976:2;8956:18;;;8949:30;9015:34;8995:18;;;8988:62;-1:-1:-1;;;9066:18:72;;;9059:41;9117:19;;8135:124:61::1;8735:407:72::0;8135:124:61::1;8286:13;::::0;;;:5:::1;:13;::::0;;;;:20;;8319::::1;::::0;;::::1;::::0;8270:70:::1;::::0;-1:-1:-1;;;;;8286:20:61::1;::::0;8308:9;;8270:15:::1;:70::i;:::-;8351:13;::::0;;;:5:::1;:13;::::0;;;;;;;:20:::1;::::0;::::1;:46:::0;;-1:-1:-1;;8351:46:61::1;8374:23;8351:46;::::0;;8523:20:::1;::::0;::::1;::::0;8484;;-1:-1:-1;;;;;8484:20:61::1;8464:41:::0;;:19:::1;:41:::0;;;;;;;:89:::1;::::0;:45:::1;:89::i;:::-;8407:54;8427:13:::0;;;:5:::1;:13;::::0;;;;;;;:33;;-1:-1:-1;;;;;8427:33:61::1;8407:54:::0;;:19:::1;:54:::0;;;;;:146;;;;8605:13;;;;;;:20:::1;;::::0;8583:17:::1;::::0;:43:::1;::::0;:21:::1;:43::i;:::-;8563:17;:63:::0;8638:16:::1;8691:13:::0;;;:5:::1;:13;::::0;;;;:20:::1;::::0;::::1;::::0;8725;;8691;8759:23;::::1;::::0;8796:20:::1;::::0;;::::1;::::0;8659:167:::1;::::0;-1:-1:-1;;;;;8691:20:61;;::::1;::::0;8725;;::::1;::::0;8759:23:::1;::::0;8659:18:::1;:167::i;:::-;8637:189;;;8844:13;:23;8858:8;8844:23;;;;;;;;;;;8837:30;;;8896:6;8883:45;8904:12;8918:9;8883:45;;;;;;7361:25:72::0;;;-1:-1:-1;;;;;7422:32:72;7417:2;7402:18;;7395:60;7349:2;7334:18;;7187:274;8883:45:61::1;;;;;;;;8125:810;7992:943:::0;;;;:::o;2041:169:2:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:2;;;-1:-1:-1;;;;;;2131:17:2;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;882:361:6:-;958:24;985:32;995:7;665:10:19;3884:149:4;:::i;985:32:6:-;958:59;;1055:6;1035:16;:26;;1027:75;;;;-1:-1:-1;;;1027:75:6;;16522:2:72;1027:75:6;;;16504:21:72;16561:2;16541:18;;;16534:30;16600:34;16580:18;;;16573:62;-1:-1:-1;;;16651:18:72;;;16644:34;16695:19;;1027:75:6;16320:400:72;1027:75:6;1136:58;1145:7;665:10:19;1187:6:6;1168:16;:25;1136:8;:58::i;:::-;1214:22;1220:7;1229:6;1214:5;:22::i;1032:119:57:-;1088:21;:8;1101:7;1088:12;:21::i;:::-;1124:20;;-1:-1:-1;;;;;1124:20:57;;;;;;;;1032:119;:::o;3654:172:4:-;3740:4;3756:42;665:10:19;3780:9:4;3791:6;3756:9;:42::i;933:200:59:-;1005:4;-1:-1:-1;;;;;1029:21:59;;1021:68;;;;-1:-1:-1;;;1021:68:59;;16119:2:72;1021:68:59;;;16101:21:72;16158:2;16138:18;;;16131:30;16197:34;16177:18;;;16170:62;-1:-1:-1;;;16248:18:72;;;16241:32;16290:19;;1021:68:59;15917:398:72;1021:68:59;-1:-1:-1;;;;;;1106:20:59;:11;:20;;;;;;;;;;;;;;;933:200::o;2672:96:24:-;2730:7;2756:5;2760:1;2756;:5;:::i;7255:713:4:-;-1:-1:-1;;;;;7390:20:4;;7382:70;;;;-1:-1:-1;;;7382:70:4;;17329:2:72;7382:70:4;;;17311:21:72;17368:2;17348:18;;;17341:30;17407:34;17387:18;;;17380:62;-1:-1:-1;;;17458:18:72;;;17451:35;17503:19;;7382:70:4;17127:401:72;7382:70:4;-1:-1:-1;;;;;7470:23:4;;7462:71;;;;-1:-1:-1;;;7462:71:4;;8533:2:72;7462:71:4;;;8515:21:72;8572:2;8552:18;;;8545:30;8611:34;8591:18;;;8584:62;-1:-1:-1;;;8662:18:72;;;8655:33;8705:19;;7462:71:4;8331:399:72;7462:71:4;7544:47;7565:6;7573:9;7584:6;7544:20;:47::i;:::-;-1:-1:-1;;;;;7626:17:4;;7602:21;7626:17;;;:9;:17;;;;;;7661:23;;;;7653:74;;;;-1:-1:-1;;;7653:74:4;;12870:2:72;7653:74:4;;;12852:21:72;12909:2;12889:18;;;12882:30;12948:34;12928:18;;;12921:62;-1:-1:-1;;;12999:18:72;;;12992:36;13045:19;;7653:74:4;12668:402:72;7653:74:4;-1:-1:-1;;;;;7761:17:4;;;;;;;:9;:17;;;;;;7781:22;;;7761:42;;7823:20;;;;;;;;:30;;7797:6;;7761:17;7823:30;;7797:6;;7823:30;:::i;:::-;;;;;;;;7886:9;-1:-1:-1;;;;;7869:35:4;7878:6;-1:-1:-1;;;;;7869:35:4;-1:-1:-1;;;;;;;;;;;7897:6:4;7869:35;;;;7151:25:72;;7139:2;7124:18;;7005:177;7869:35:4;;;;;;;;7915:46;7372:596;7255:713;;;:::o;664:180:59:-;743:18;747:4;753:7;743:3;:18::i;:::-;735:64;;;;-1:-1:-1;;;735:64:59;;14947:2:72;735:64:59;;;14929:21:72;14986:2;14966:18;;;14959:30;15025:34;15005:18;;;14998:62;-1:-1:-1;;;15076:18:72;;;15069:31;15117:19;;735:64:59;14745:397:72;735:64:59;-1:-1:-1;;;;;809:20:59;832:5;809:20;;;;;;;;;;;:28;;-1:-1:-1;;809:28:59;;;664:180::o;1787:197:62:-;1927:52;1962:4;1968:2;1972:6;1927:34;:52::i;8953:576:4:-;-1:-1:-1;;;;;9036:21:4;;9028:67;;;;-1:-1:-1;;;9028:67:4;;16927:2:72;9028:67:4;;;16909:21:72;16966:2;16946:18;;;16939:30;17005:34;16985:18;;;16978:62;-1:-1:-1;;;17056:18:72;;;17049:31;17097:19;;9028:67:4;16725:397:72;9028:67:4;9106:49;9127:7;9144:1;9148:6;9106:20;:49::i;:::-;-1:-1:-1;;;;;9191:18:4;;9166:22;9191:18;;;:9;:18;;;;;;9227:24;;;;9219:71;;;;-1:-1:-1;;;9219:71:4;;10117:2:72;9219:71:4;;;10099:21:72;10156:2;10136:18;;;10129:30;10195:34;10175:18;;;10168:62;-1:-1:-1;;;10246:18:72;;;10239:32;10288:19;;9219:71:4;9915:398:72;9219:71:4;-1:-1:-1;;;;;9324:18:4;;;;;;:9;:18;;;;;9345:23;;;9324:44;;9388:12;:22;;9362:6;;9324:18;9388:22;;9362:6;;9388:22;:::i;:::-;;;;-1:-1:-1;;9426:37:4;;7151:25:72;;;9452:1:4;;-1:-1:-1;;;;;9426:37:4;;;-1:-1:-1;;;;;;;;;;;9426:37:4;7139:2:72;7124:18;9426:37:4;;;;;;;7185:801:61;;;:::o;589:264:7:-;1111:7:3;;;;790:9:7;782:64;;;;-1:-1:-1;;;782:64:7;;20720:2:72;782:64:7;;;20702:21:72;20759:2;20739:18;;;20732:30;20798:34;20778:18;;;20771:62;-1:-1:-1;;;20849:18:72;;;20842:40;20899:19;;782:64:7;20518:406:72;14:173;82:20;;-1:-1:-1;;;;;131:31:72;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:403::-;734:6;742;750;758;811:3;799:9;790:7;786:23;782:33;779:53;;;828:1;825;818:12;779:53;851:29;870:9;851:29;:::i;:::-;841:39;;899:38;933:2;922:9;918:18;899:38;:::i;:::-;889:48;;956:38;990:2;979:9;975:18;956:38;:::i;:::-;648:403;;;;-1:-1:-1;946:48:72;;1041:2;1026:18;1013:32;;-1:-1:-1;;648:403:72:o;1056:328::-;1133:6;1141;1149;1202:2;1190:9;1181:7;1177:23;1173:32;1170:52;;;1218:1;1215;1208:12;1170:52;1241:29;1260:9;1241:29;:::i;:::-;1231:39;;1289:38;1323:2;1312:9;1308:18;1289:38;:::i;:::-;1279:48;;1374:2;1363:9;1359:18;1346:32;1336:42;;1056:328;;;;;:::o;1389:466::-;1484:6;1492;1500;1508;1516;1569:3;1557:9;1548:7;1544:23;1540:33;1537:53;;;1586:1;1583;1576:12;1537:53;1609:29;1628:9;1609:29;:::i;:::-;1599:39;;1657:38;1691:2;1680:9;1676:18;1657:38;:::i;:::-;1389:466;;1647:48;;-1:-1:-1;;;;1742:2:72;1727:18;;1714:32;;1793:2;1778:18;;1765:32;;1844:3;1829:19;;;1816:33;;-1:-1:-1;1389:466:72:o;1860:254::-;1928:6;1936;1989:2;1977:9;1968:7;1964:23;1960:32;1957:52;;;2005:1;2002;1995:12;1957:52;2028:29;2047:9;2028:29;:::i;:::-;2018:39;2104:2;2089:18;;;;2076:32;;-1:-1:-1;;;1860:254:72:o;2119:180::-;2178:6;2231:2;2219:9;2210:7;2206:23;2202:32;2199:52;;;2247:1;2244;2237:12;2199:52;-1:-1:-1;2270:23:72;;2119:180;-1:-1:-1;2119:180:72:o;2304:184::-;2374:6;2427:2;2415:9;2406:7;2402:23;2398:32;2395:52;;;2443:1;2440;2433:12;2395:52;-1:-1:-1;2466:16:72;;2304:184;-1:-1:-1;2304:184:72:o;2493:254::-;2561:6;2569;2622:2;2610:9;2601:7;2597:23;2593:32;2590:52;;;2638:1;2635;2628:12;2590:52;2674:9;2661:23;2651:33;;2703:38;2737:2;2726:9;2722:18;2703:38;:::i;2752:535::-;2856:6;2864;2872;2880;2888;2896;2949:3;2937:9;2928:7;2924:23;2920:33;2917:53;;;2966:1;2963;2956:12;2917:53;3002:9;2989:23;2979:33;;3031:38;3065:2;3054:9;3050:18;3031:38;:::i;:::-;3021:48;;3088:38;3122:2;3111:9;3107:18;3088:38;:::i;:::-;3078:48;;3173:2;3162:9;3158:18;3145:32;3135:42;;3224:3;3213:9;3209:19;3196:33;3186:43;;3276:3;3265:9;3261:19;3248:33;3238:43;;2752:535;;;;;;;;:::o;3292:248::-;3360:6;3368;3421:2;3409:9;3400:7;3396:23;3392:32;3389:52;;;3437:1;3434;3427:12;3389:52;-1:-1:-1;;3460:23:72;;;3530:2;3515:18;;;3502:32;;-1:-1:-1;3292:248:72:o;3545:322::-;3622:6;3630;3638;3691:2;3679:9;3670:7;3666:23;3662:32;3659:52;;;3707:1;3704;3697:12;3659:52;3743:9;3730:23;3720:33;;3800:2;3789:9;3785:18;3772:32;3762:42;;3823:38;3857:2;3846:9;3842:18;3823:38;:::i;:::-;3813:48;;3545:322;;;;;:::o;4246:242::-;4332:1;4325:5;4322:12;4312:143;;4377:10;4372:3;4368:20;4365:1;4358:31;4412:4;4409:1;4402:15;4440:4;4437:1;4430:15;4312:143;4464:18;;4246:242::o;5769:274::-;5898:3;5936:6;5930:13;5952:53;5998:6;5993:3;5986:4;5978:6;5974:17;5952:53;:::i;:::-;6021:16;;;;;5769:274;-1:-1:-1;;5769:274:72:o;6605:203::-;-1:-1:-1;;;;;6769:32:72;;;;6751:51;;6739:2;6724:18;;6605:203::o;7719:219::-;7871:2;7856:18;;7883:49;7860:9;7914:6;7883:49;:::i;7943:383::-;8092:2;8081:9;8074:21;8055:4;8124:6;8118:13;8167:6;8162:2;8151:9;8147:18;8140:34;8183:66;8242:6;8237:2;8226:9;8222:18;8217:2;8209:6;8205:15;8183:66;:::i;:::-;8310:2;8289:15;-1:-1:-1;;8285:29:72;8270:45;;;;8317:2;8266:54;;7943:383;-1:-1:-1;;7943:383:72:o;10318:353::-;10520:2;10502:21;;;10559:2;10539:18;;;10532:30;10598:31;10593:2;10578:18;;10571:59;10662:2;10647:18;;10318:353::o;14325:415::-;14527:2;14509:21;;;14566:2;14546:18;;;14539:30;14605:34;14600:2;14585:18;;14578:62;-1:-1:-1;;;14671:2:72;14656:18;;14649:49;14730:3;14715:19;;14325:415::o;15556:356::-;15758:2;15740:21;;;15777:18;;;15770:30;15836:34;15831:2;15816:18;;15809:62;15903:2;15888:18;;15556:356::o;18361:411::-;18563:2;18545:21;;;18602:2;18582:18;;;18575:30;18641:34;18636:2;18621:18;;18614:62;-1:-1:-1;;;18707:2:72;18692:18;;18685:45;18762:3;18747:19;;18361:411::o;19257:490::-;19459:2;19441:21;;;19498:2;19478:18;;;19471:30;19537:34;19532:2;19517:18;;19510:62;19608:34;19603:2;19588:18;;19581:62;-1:-1:-1;;;19674:3:72;19659:19;;19652:53;19737:3;19722:19;;19257:490::o;20929:757::-;21085:4;21127:3;21116:9;21112:19;21104:27;;21167:1;21163;21158:3;21154:11;21150:19;21215:2;21206:6;21200:13;21196:22;21185:9;21178:41;21287:2;21279:4;21271:6;21267:17;21261:24;21257:33;21250:4;21239:9;21235:20;21228:63;21359:2;21351:4;21343:6;21339:17;21333:24;21329:33;21322:4;21311:9;21307:20;21300:63;;21419:4;21411:6;21407:17;21401:24;21394:4;21383:9;21379:20;21372:54;21482:4;21474:6;21470:17;21464:24;21457:4;21446:9;21442:20;21435:54;21545:4;21537:6;21533:17;21527:24;21520:4;21509:9;21505:20;21498:54;21599:4;21591:6;21587:17;21581:24;21614:66;21674:4;21663:9;21659:20;21645:12;21614:66;:::i;:::-;;20929:757;;;;:::o;22386:128::-;22426:3;22457:1;22453:6;22450:1;22447:13;22444:39;;;22463:18;;:::i;:::-;-1:-1:-1;22499:9:72;;22386:128::o;22519:125::-;22559:4;22587:1;22584;22581:8;22578:34;;;22592:18;;:::i;:::-;-1:-1:-1;22629:9:72;;22519:125::o;22649:258::-;22721:1;22731:113;22745:6;22742:1;22739:13;22731:113;;;22821:11;;;22815:18;22802:11;;;22795:39;22767:2;22760:10;22731:113;;;22862:6;22859:1;22856:13;22853:48;;;-1:-1:-1;;22897:1:72;22879:16;;22872:27;22649:258::o;22912:380::-;22991:1;22987:12;;;;23034;;;23055:61;;23109:4;23101:6;23097:17;23087:27;;23055:61;23162:2;23154:6;23151:14;23131:18;23128:38;23125:161;;;23208:10;23203:3;23199:20;23196:1;23189:31;23243:4;23240:1;23233:15;23271:4;23268:1;23261:15;23125:161;;22912:380;;;:::o;23297:127::-;23358:10;23353:3;23349:20;23346:1;23339:31;23389:4;23386:1;23379:15;23413:4;23410:1;23403:15;23429:127;23490:10;23485:3;23481:20;23478:1;23471:31;23521:4;23518:1;23511:15;23545:4;23542:1;23535:15",
  "source": "// SPDX-License-Identifier: Apache-2.0\n/*\n * This code has not been reviewed.\n * Do not use or deploy this code before reviewing it personally first.\n */\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"./ERC20Token.sol\";\nimport \"../interface/IERC20HoldableToken.sol\";\n\n/**\n * @title ERC20HoldableToken\n * @notice A hold is like an approve where held tokens can not be spent by the token holder until after an hold expiration period.\n    The hold can be executed by a notary, which can be the recipient of the tokens, a third party or a smart contract.\n    The notary can execute the hold before or after the expiration period.\n    Additionally, a hash lock at be applied which requires the notary of the hold to present the hash preimage to execute the hold.\n    Held tokens can be released by the notary at any time or by the token holder after the expiration period.\n    A recipient does not have to get set at the time of the hold, which means it will have to be specified when the hold is executed.\n */\ncontract ERC20HoldableToken is ERC20Token, IERC20HoldableToken {\n    using SafeMath for uint256;\n\n    // mapping of accounts to hold data\n    mapping(bytes32 => ERC20HoldData) internal holds;\n    // mapping of accounts and their total amount on hold\n    mapping(address => uint256) internal accountHoldBalances;\n\n    mapping(bytes32 => bytes32) internal _holdHashToId;\n\n    uint256 override public totalSupplyOnHold;\n\n    modifier isHeld(bytes32 holdId) {\n        require(\n            holds[holdId].status == HoldStatusCode.Ordered ||\n            holds[holdId].status == HoldStatusCode.ExecutedAndKeptOpen,\n            \"Hold is not in Ordered status\"\n        );\n        _;\n    }\n\n    constructor(string memory name, string memory symbol, uint8 decimals) ERC20Token(name, symbol, decimals) {}\n\n    function generateHoldId(\n        address recipient,\n        address notary,\n        uint256 amount,\n        uint256 expirationDateTime,\n        bytes32 lockHash\n    ) external pure returns (bytes32 holdId) {\n        holdId = keccak256(\n            abi.encodePacked(\n                recipient,\n                notary,\n                amount,\n                expirationDateTime,\n                lockHash\n            )\n        );\n    }\n\n    /**\n    * @dev Retrieve hold hash, and ID for given parameters\n    */\n    function retrieveHoldHashId(address notary, address sender, address recipient, uint value) public view returns (bytes32, bytes32) {\n        // Pack and hash hold parameters\n        bytes32 holdHash = keccak256(abi.encodePacked(\n            address(this), //Include the token address to indicate domain\n            sender,\n            recipient,\n            notary,\n            value\n        ));\n        bytes32 holdId = _holdHashToId[holdHash];\n\n        return (holdHash, holdId);\n    }  \n\n    /**\n     @notice Called by the sender to hold some tokens for a recipient that the sender can not release back to themself until after the expiration date.\n     @param holdId a unique identifier for the hold.\n     @param recipient optional account the tokens will be transferred to on execution. If a zero address, the recipient must be specified on execution of the hold.\n     @param notary account that can execute the hold. Typically the recipient but can be a third party or a smart contact.\n     @param amount of tokens to be transferred to the recipient on execution. Must be a non zero amount.\n     @param expirationDateTime UNIX epoch seconds the held amount can be released back to the sender by the sender. Past dates are allowed.\n     @param lockHash optional keccak256 hash of a lock preimage. An empty hash will not enforce the hash lock when the hold is executed.\n     */\n    function hold(\n        bytes32 holdId,\n        address recipient,\n        address notary,\n        uint256 amount,\n        uint256 expirationDateTime,\n        bytes32 lockHash\n    ) public override {\n        require(\n            notary != address(0),\n            \"hold: notary must not be a zero address\"\n        );\n        require(amount != 0, \"hold: amount must be greater than zero\");\n        require(\n            this.spendableBalanceOf(msg.sender) >= amount,\n            \"hold: amount exceeds available balance\"\n        );\n\n        (bytes32 holdHash,) = retrieveHoldHashId(\n            notary,\n            _msgSender(),\n            recipient,\n            amount\n        );\n\n        _holdHashToId[holdHash] = holdId;\n\n        require(\n            holds[holdId].status == HoldStatusCode.Nonexistent,\n            \"hold: id already exists\"\n        );\n        holds[holdId] = ERC20HoldData(\n            msg.sender,\n            recipient,\n            notary,\n            amount,\n            expirationDateTime,\n            lockHash,\n            HoldStatusCode.Ordered\n        );\n        accountHoldBalances[msg.sender] = accountHoldBalances[msg.sender].add(\n            amount\n        );\n        totalSupplyOnHold = totalSupplyOnHold.add(amount);\n\n        emit NewHold(\n            holdId,\n            recipient,\n            notary,\n            amount,\n            expirationDateTime,\n            lockHash\n        );\n    }\n\n    function retrieveHoldData(bytes32 holdId) external override view returns (ERC20HoldData memory) {\n        return holds[holdId];\n    }\n\n    /**\n     @notice Called by the notary to transfer the held tokens to the set at the hold recipient if there is no hash lock.\n     @param holdId a unique identifier for the hold.\n     */\n    function executeHold(bytes32 holdId) public override {\n        require(\n            holds[holdId].recipient != address(0),\n            \"executeHold: must pass the recipient on execution as the recipient was not set on hold\"\n        );\n        require(\n            holds[holdId].secretHash == bytes32(0),\n            \"executeHold: need preimage if the hold has a lock hash\"\n        );\n\n        _executeHold(holdId, \"\", holds[holdId].recipient);\n    }\n\n    /**\n     @notice Called by the notary to transfer the held tokens to the recipient that was set at the hold.\n     @param holdId a unique identifier for the hold.\n     @param lockPreimage the image used to generate the lock hash with a sha256 hash\n     */\n    function executeHold(bytes32 holdId, bytes32 lockPreimage) public override {\n        require(\n            holds[holdId].recipient != address(0),\n            \"executeHold: must pass the recipient on execution as the recipient was not set on hold\"\n        );\n        if (holds[holdId].secretHash != bytes32(0)) {\n            require(\n                holds[holdId].secretHash ==\n                    sha256(abi.encodePacked(lockPreimage)),\n                \"executeHold: preimage hash does not match lock hash\"\n            );\n        }\n\n        _executeHold(holdId, lockPreimage, holds[holdId].recipient);\n    }\n\n    /**\n     @notice Called by the notary to transfer the held tokens to the recipient if no recipient was specified at the hold.\n     @param holdId a unique identifier for the hold.\n     @param lockPreimage the image used to generate the lock hash with a keccak256 hash\n     @param recipient the account the tokens will be transferred to on execution.\n     */\n    function executeHold(\n        bytes32 holdId,\n        bytes32 lockPreimage,\n        address recipient\n    ) public override {\n        require(\n            holds[holdId].recipient == address(0),\n            \"executeHold: can not set a recipient on execution as it was set on hold\"\n        );\n        require(\n            recipient != address(0),\n            \"executeHold: recipient must not be a zero address\"\n        );\n        if (holds[holdId].secretHash != bytes32(0)) {\n            require(\n                holds[holdId].secretHash ==\n                    sha256(abi.encodePacked(lockPreimage)),\n                \"executeHold: preimage hash does not match lock hash\"\n            );\n        }\n\n        holds[holdId].recipient = recipient;\n\n        _executeHold(holdId, lockPreimage, recipient);\n    }\n\n    function _executeHold(\n        bytes32 holdId,\n        bytes32 lockPreimage,\n        address recipient\n    ) internal isHeld(holdId) {\n        require(\n            holds[holdId].notary == msg.sender,\n            \"executeHold: caller must be the hold notary\"\n        );\n\n        super._transfer(holds[holdId].sender, recipient, holds[holdId].amount);\n\n        holds[holdId].status = HoldStatusCode.Executed;\n        accountHoldBalances[holds[holdId]\n            .sender] = accountHoldBalances[holds[holdId].sender].sub(\n            holds[holdId].amount\n        );\n        totalSupplyOnHold = totalSupplyOnHold.sub(holds[holdId].amount);\n\n        (bytes32 holdHash,) = retrieveHoldHashId(\n            holds[holdId].notary,\n            holds[holdId].sender,\n            holds[holdId].recipient,\n            holds[holdId].amount\n        );\n\n        delete _holdHashToId[holdHash];\n\n        emit ExecutedHold(holdId, lockPreimage, recipient);\n    }\n\n    /**\n     @notice Called by the notary at any time or the sender after the expiration date to release the held tokens back to the sender.\n     @param holdId a unique identifier for the hold.\n     */\n    function releaseHold(bytes32 holdId) public override isHeld(holdId) {\n        if (holds[holdId].sender == msg.sender) {\n            require(\n                block.timestamp > holds[holdId].expirationDateTime,\n                \"releaseHold: can only release after the expiration date.\"\n            );\n            holds[holdId].status = HoldStatusCode.ReleasedOnExpiration;\n        } else if (holds[holdId].notary != msg.sender) {\n            revert(\"releaseHold: caller must be the hold sender or notary.\");\n        } else {\n            holds[holdId].status = HoldStatusCode.ReleasedByNotary;\n        }\n\n        accountHoldBalances[holds[holdId]\n            .sender] = accountHoldBalances[holds[holdId].sender].sub(\n            holds[holdId].amount\n        );\n        totalSupplyOnHold = totalSupplyOnHold.sub(holds[holdId].amount);\n\n        emit ReleaseHold(holdId, msg.sender);\n    }\n\n    /**\n     @notice Amount of tokens owned by an account that are available for transfer. That is, the gross balance less any held tokens.\n     @param account owner of the tokensß\n     */\n    function balanceOf(address account) public override(ERC20, IERC20) view returns (uint256) {\n        return super.balanceOf(account);\n        \n    }\n\n    /**\n     @notice Amount of tokens owned by an account that are held pending execution or release.\n     @param account owner of the tokens\n     */\n    function balanceOnHold(address account) public override view returns (uint256) {\n        return accountHoldBalances[account];\n    }\n\n    /**\n     @notice Total amount of tokens owned by an account including all the held tokens pending execution or release.\n     @param account owner of the tokens\n     */\n    function spendableBalanceOf(address account) public override view returns (uint256) {\n        return super.balanceOf(account).sub(accountHoldBalances[account]);\n    }\n\n    /**\n     @param holdId a unique identifier for the hold.\n     @return hold status code.\n     */\n    function holdStatus(bytes32 holdId) public override view returns (HoldStatusCode) {\n        return holds[holdId].status;\n    }\n\n    /**\n     @notice ERC20 transfer that checks on hold tokens can not be transferred.\n     */\n    function transfer(address recipient, uint256 amount) public override(ERC20, IERC20) returns (bool) {\n        require(\n            this.spendableBalanceOf(msg.sender) >= amount,\n            \"HoldableToken: amount exceeds available balance\"\n        );\n        return super.transfer(recipient, amount);\n    }\n\n    /**\n     @notice ERC20 transferFrom that checks on hold tokens can not be transferred.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public override(ERC20, IERC20) returns (bool) {\n        require(\n            this.spendableBalanceOf(sender) >= amount,\n            \"HoldableToken: amount exceeds available balance\"\n        );\n        return super.transferFrom(sender, recipient, amount);\n    }\n\n    /**\n     @notice ERC20 approve that checks on hold tokens can not be approved for spending by another account.\n     */\n    function approve(address spender, uint256 amount) public override(ERC20, IERC20) returns (bool) {\n        require(\n            this.spendableBalanceOf(msg.sender) >= amount,\n            \"HoldableToken: amount exceeds available balance\"\n        );\n        return super.approve(spender, amount);\n    }\n\n    /**\n     @notice ERC20 burn that checks on hold tokens can not be burnt.\n     */\n    function burn(uint256 amount) public override {\n        require(\n            this.spendableBalanceOf(msg.sender) >= amount,\n            \"HoldableToken: amount exceeds available balance\"\n        );\n        super.burn(amount);\n    }\n\n    /**\n     @notice ERC20 burnFrom that checks on hold tokens can not be burnt.\n     */\n    function burnFrom(address account, uint256 amount) public override {\n        require(\n            this.spendableBalanceOf(msg.sender) >= amount,\n            \"HoldableToken: amount exceeds available balance\"\n        );\n        super.burnFrom(account, amount);\n    }\n}\n",
  "sourcePath": "/Users/sergio/Desktop/TFM/project/contracts/tokens/ERC20HoldableToken.sol",
  "ast": {
    "absolutePath": "project:/contracts/tokens/ERC20HoldableToken.sol",
    "exportedSymbols": {
      "Context": [
        3361
      ],
      "ERC1820Implementer": [
        12351
      ],
      "ERC20": [
        1299
      ],
      "ERC20Burnable": [
        1439
      ],
      "ERC20HoldData": [
        12432
      ],
      "ERC20HoldableToken": [
        15223
      ],
      "ERC20Pausable": [
        1476
      ],
      "ERC20Token": [
        15321
      ],
      "HoldStatusCode": [
        12361
      ],
      "IERC20": [
        1377
      ],
      "IERC20HoldableToken": [
        12548
      ],
      "IERC20Metadata": [
        1501
      ],
      "MinterRole": [
        14014
      ],
      "Ownable": [
        661
      ],
      "Pausable": [
        753
      ],
      "Roles": [
        14244
      ],
      "SafeMath": [
        4002
      ]
    },
    "id": 15224,
    "license": "Apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 14356,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "154:23:61"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 14357,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15224,
        "sourceUnit": 4003,
        "src": "179:57:61",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/tokens/ERC20Token.sol",
        "file": "./ERC20Token.sol",
        "id": 14358,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15224,
        "sourceUnit": 15322,
        "src": "237:26:61",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interface/IERC20HoldableToken.sol",
        "file": "../interface/IERC20HoldableToken.sol",
        "id": 14359,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15224,
        "sourceUnit": 12549,
        "src": "264:46:61",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 14361,
              "name": "ERC20Token",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15321,
              "src": "1081:10:61"
            },
            "id": 14362,
            "nodeType": "InheritanceSpecifier",
            "src": "1081:10:61"
          },
          {
            "baseName": {
              "id": 14363,
              "name": "IERC20HoldableToken",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12548,
              "src": "1093:19:61"
            },
            "id": 14364,
            "nodeType": "InheritanceSpecifier",
            "src": "1093:19:61"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 14360,
          "nodeType": "StructuredDocumentation",
          "src": "312:737:61",
          "text": " @title ERC20HoldableToken\n @notice A hold is like an approve where held tokens can not be spent by the token holder until after an hold expiration period.\nThe hold can be executed by a notary, which can be the recipient of the tokens, a third party or a smart contract.\nThe notary can execute the hold before or after the expiration period.\nAdditionally, a hash lock at be applied which requires the notary of the hold to present the hash preimage to execute the hold.\nHeld tokens can be released by the notary at any time or by the token holder after the expiration period.\nA recipient does not have to get set at the time of the hold, which means it will have to be specified when the hold is executed."
        },
        "fullyImplemented": true,
        "id": 15223,
        "linearizedBaseContracts": [
          15223,
          12548,
          15321,
          14014,
          12351,
          1476,
          753,
          1439,
          1299,
          1501,
          1377,
          661,
          3361
        ],
        "name": "ERC20HoldableToken",
        "nameLocation": "1059:18:61",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 14367,
            "libraryName": {
              "id": 14365,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4002,
              "src": "1125:8:61"
            },
            "nodeType": "UsingForDirective",
            "src": "1119:27:61",
            "typeName": {
              "id": 14366,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1138:7:61",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 14372,
            "mutability": "mutable",
            "name": "holds",
            "nameLocation": "1235:5:61",
            "nodeType": "VariableDeclaration",
            "scope": 15223,
            "src": "1192:48:61",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$12432_storage_$",
              "typeString": "mapping(bytes32 => struct ERC20HoldData)"
            },
            "typeName": {
              "id": 14371,
              "keyType": {
                "id": 14368,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1200:7:61",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1192:33:61",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$12432_storage_$",
                "typeString": "mapping(bytes32 => struct ERC20HoldData)"
              },
              "valueType": {
                "id": 14370,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 14369,
                  "name": "ERC20HoldData",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12432,
                  "src": "1211:13:61"
                },
                "referencedDeclaration": 12432,
                "src": "1211:13:61",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ERC20HoldData_$12432_storage_ptr",
                  "typeString": "struct ERC20HoldData"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 14376,
            "mutability": "mutable",
            "name": "accountHoldBalances",
            "nameLocation": "1341:19:61",
            "nodeType": "VariableDeclaration",
            "scope": 15223,
            "src": "1304:56:61",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 14375,
              "keyType": {
                "id": 14373,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1312:7:61",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1304:27:61",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 14374,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1323:7:61",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 14380,
            "mutability": "mutable",
            "name": "_holdHashToId",
            "nameLocation": "1404:13:61",
            "nodeType": "VariableDeclaration",
            "scope": 15223,
            "src": "1367:50:61",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
              "typeString": "mapping(bytes32 => bytes32)"
            },
            "typeName": {
              "id": 14379,
              "keyType": {
                "id": 14377,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1375:7:61",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1367:27:61",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                "typeString": "mapping(bytes32 => bytes32)"
              },
              "valueType": {
                "id": 14378,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1386:7:61",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              12538
            ],
            "constant": false,
            "functionSelector": "51bfb961",
            "id": 14383,
            "mutability": "mutable",
            "name": "totalSupplyOnHold",
            "nameLocation": "1448:17:61",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 14382,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1432:8:61"
            },
            "scope": 15223,
            "src": "1424:41:61",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14381,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1424:7:61",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 14407,
              "nodeType": "Block",
              "src": "1504:224:61",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 14402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_HoldStatusCode_$12361",
                            "typeString": "enum HoldStatusCode"
                          },
                          "id": 14394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 14388,
                                "name": "holds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14372,
                                "src": "1535:5:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$12432_storage_$",
                                  "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                                }
                              },
                              "id": 14390,
                              "indexExpression": {
                                "id": 14389,
                                "name": "holdId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14385,
                                "src": "1541:6:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1535:13:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC20HoldData_$12432_storage",
                                "typeString": "struct ERC20HoldData storage ref"
                              }
                            },
                            "id": 14391,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12431,
                            "src": "1535:20:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_HoldStatusCode_$12361",
                              "typeString": "enum HoldStatusCode"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 14392,
                              "name": "HoldStatusCode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12361,
                              "src": "1559:14:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_HoldStatusCode_$12361_$",
                                "typeString": "type(enum HoldStatusCode)"
                              }
                            },
                            "id": 14393,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Ordered",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12355,
                            "src": "1559:22:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_HoldStatusCode_$12361",
                              "typeString": "enum HoldStatusCode"
                            }
                          },
                          "src": "1535:46:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_HoldStatusCode_$12361",
                            "typeString": "enum HoldStatusCode"
                          },
                          "id": 14401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 14395,
                                "name": "holds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14372,
                                "src": "1597:5:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$12432_storage_$",
                                  "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                                }
                              },
                              "id": 14397,
                              "indexExpression": {
                                "id": 14396,
                                "name": "holdId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14385,
                                "src": "1603:6:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1597:13:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC20HoldData_$12432_storage",
                                "typeString": "struct ERC20HoldData storage ref"
                              }
                            },
                            "id": 14398,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12431,
                            "src": "1597:20:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_HoldStatusCode_$12361",
                              "typeString": "enum HoldStatusCode"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 14399,
                              "name": "HoldStatusCode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12361,
                              "src": "1621:14:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_HoldStatusCode_$12361_$",
                                "typeString": "type(enum HoldStatusCode)"
                              }
                            },
                            "id": 14400,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ExecutedAndKeptOpen",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12357,
                            "src": "1621:34:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_HoldStatusCode_$12361",
                              "typeString": "enum HoldStatusCode"
                            }
                          },
                          "src": "1597:58:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1535:120:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "486f6c64206973206e6f7420696e204f72646572656420737461747573",
                        "id": 14403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1669:31:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1586263b6ed81250e09e3511dae8b28d2c9acb5016a4c7516ff2ccacc49700c4",
                          "typeString": "literal_string \"Hold is not in Ordered status\""
                        },
                        "value": "Hold is not in Ordered status"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1586263b6ed81250e09e3511dae8b28d2c9acb5016a4c7516ff2ccacc49700c4",
                          "typeString": "literal_string \"Hold is not in Ordered status\""
                        }
                      ],
                      "id": 14387,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1514:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1514:196:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14405,
                  "nodeType": "ExpressionStatement",
                  "src": "1514:196:61"
                },
                {
                  "id": 14406,
                  "nodeType": "PlaceholderStatement",
                  "src": "1720:1:61"
                }
              ]
            },
            "id": 14408,
            "name": "isHeld",
            "nameLocation": "1481:6:61",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 14386,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14385,
                  "mutability": "mutable",
                  "name": "holdId",
                  "nameLocation": "1496:6:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 14408,
                  "src": "1488:14:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14384,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1488:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1487:16:61"
            },
            "src": "1472:256:61",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 14422,
              "nodeType": "Block",
              "src": "1839:2:61",
              "statements": []
            },
            "id": 14423,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 14417,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14410,
                    "src": "1815:4:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 14418,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14412,
                    "src": "1821:6:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 14419,
                    "name": "decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14414,
                    "src": "1829:8:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 14420,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 14416,
                  "name": "ERC20Token",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 15321,
                  "src": "1804:10:61"
                },
                "nodeType": "ModifierInvocation",
                "src": "1804:34:61"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14415,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14410,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1760:4:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 14423,
                  "src": "1746:18:61",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 14409,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1746:6:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14412,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "1780:6:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 14423,
                  "src": "1766:20:61",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 14411,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1766:6:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14414,
                  "mutability": "mutable",
                  "name": "decimals",
                  "nameLocation": "1794:8:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 14423,
                  "src": "1788:14:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 14413,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1788:5:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1745:58:61"
            },
            "returnParameters": {
              "id": 14421,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1839:0:61"
            },
            "scope": 15223,
            "src": "1734:107:61",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 14451,
              "nodeType": "Block",
              "src": "2053:226:61",
              "statements": [
                {
                  "expression": {
                    "id": 14449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14438,
                      "name": "holdId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14436,
                      "src": "2063:6:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 14442,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14425,
                              "src": "2129:9:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 14443,
                              "name": "notary",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14427,
                              "src": "2156:6:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 14444,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14429,
                              "src": "2180:6:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 14445,
                              "name": "expirationDateTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14431,
                              "src": "2204:18:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 14446,
                              "name": "lockHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14433,
                              "src": "2240:8:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 14440,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967295,
                              "src": "2095:3:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 14441,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "2095:16:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 14447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2095:167:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 14439,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967288,
                        "src": "2072:9:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 14448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2072:200:61",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2063:209:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 14450,
                  "nodeType": "ExpressionStatement",
                  "src": "2063:209:61"
                }
              ]
            },
            "functionSelector": "fdec4c21",
            "id": 14452,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "generateHoldId",
            "nameLocation": "1856:14:61",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14434,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14425,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1888:9:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 14452,
                  "src": "1880:17:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14424,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1880:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14427,
                  "mutability": "mutable",
                  "name": "notary",
                  "nameLocation": "1915:6:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 14452,
                  "src": "1907:14:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14426,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1907:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14429,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1939:6:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 14452,
                  "src": "1931:14:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14428,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1931:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14431,
                  "mutability": "mutable",
                  "name": "expirationDateTime",
                  "nameLocation": "1963:18:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 14452,
                  "src": "1955:26:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14430,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1955:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14433,
                  "mutability": "mutable",
                  "name": "lockHash",
                  "nameLocation": "1999:8:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 14452,
                  "src": "1991:16:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14432,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1991:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1870:143:61"
            },
            "returnParameters": {
              "id": 14437,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14436,
                  "mutability": "mutable",
                  "name": "holdId",
                  "nameLocation": "2045:6:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 14452,
                  "src": "2037:14:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14435,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2037:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2036:16:61"
            },
            "scope": 15223,
            "src": "1847:432:61",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14494,
              "nodeType": "Block",
              "src": "2489:356:61",
              "statements": [
                {
                  "assignments": [
                    14469
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14469,
                      "mutability": "mutable",
                      "name": "holdHash",
                      "nameLocation": "2548:8:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 14494,
                      "src": "2540:16:61",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 14468,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2540:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14483,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 14475,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "2607:4:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20HoldableToken_$15223",
                                  "typeString": "contract ERC20HoldableToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20HoldableToken_$15223",
                                  "typeString": "contract ERC20HoldableToken"
                                }
                              ],
                              "id": 14474,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2599:7:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 14473,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2599:7:61",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 14476,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2599:13:61",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 14477,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14457,
                            "src": "2673:6:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 14478,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14459,
                            "src": "2693:9:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 14479,
                            "name": "notary",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14455,
                            "src": "2716:6:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 14480,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14461,
                            "src": "2736:5:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 14471,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "2569:3:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 14472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "2569:16:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 14481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2569:182:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 14470,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "2559:9:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 14482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2559:193:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2540:212:61"
                },
                {
                  "assignments": [
                    14485
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14485,
                      "mutability": "mutable",
                      "name": "holdId",
                      "nameLocation": "2770:6:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 14494,
                      "src": "2762:14:61",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 14484,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2762:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14489,
                  "initialValue": {
                    "baseExpression": {
                      "id": 14486,
                      "name": "_holdHashToId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14380,
                      "src": "2779:13:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                        "typeString": "mapping(bytes32 => bytes32)"
                      }
                    },
                    "id": 14488,
                    "indexExpression": {
                      "id": 14487,
                      "name": "holdHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14469,
                      "src": "2793:8:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2779:23:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2762:40:61"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 14490,
                        "name": "holdHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14469,
                        "src": "2821:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 14491,
                        "name": "holdId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14485,
                        "src": "2831:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "id": 14492,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2820:18:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
                      "typeString": "tuple(bytes32,bytes32)"
                    }
                  },
                  "functionReturnParameters": 14467,
                  "id": 14493,
                  "nodeType": "Return",
                  "src": "2813:25:61"
                }
              ]
            },
            "documentation": {
              "id": 14453,
              "nodeType": "StructuredDocumentation",
              "src": "2285:69:61",
              "text": " @dev Retrieve hold hash, and ID for given parameters"
            },
            "functionSelector": "9d220915",
            "id": 14495,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retrieveHoldHashId",
            "nameLocation": "2368:18:61",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14462,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14455,
                  "mutability": "mutable",
                  "name": "notary",
                  "nameLocation": "2395:6:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 14495,
                  "src": "2387:14:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14454,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2387:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14457,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2411:6:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 14495,
                  "src": "2403:14:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14456,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2403:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14459,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "2427:9:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 14495,
                  "src": "2419:17:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14458,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2419:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14461,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2443:5:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 14495,
                  "src": "2438:10:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14460,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2438:4:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2386:63:61"
            },
            "returnParameters": {
              "id": 14467,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14464,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14495,
                  "src": "2471:7:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14463,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2471:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14466,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14495,
                  "src": "2480:7:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14465,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2480:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2470:18:61"
            },
            "scope": 15223,
            "src": "2359:486:61",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12479
            ],
            "body": {
              "id": 14612,
              "nodeType": "Block",
              "src": "3940:1223:61",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14513,
                          "name": "notary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14502,
                          "src": "3971:6:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 14516,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3989:1:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 14515,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3981:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 14514,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3981:7:61",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 14517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3981:10:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3971:20:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "686f6c643a206e6f74617279206d757374206e6f742062652061207a65726f2061646472657373",
                        "id": 14519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4005:41:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0892ca814e3c1b3a07b90f43daa4885ed2a91182b50bd144f324a7ba002d6e25",
                          "typeString": "literal_string \"hold: notary must not be a zero address\""
                        },
                        "value": "hold: notary must not be a zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0892ca814e3c1b3a07b90f43daa4885ed2a91182b50bd144f324a7ba002d6e25",
                          "typeString": "literal_string \"hold: notary must not be a zero address\""
                        }
                      ],
                      "id": 14512,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3950:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3950:106:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14521,
                  "nodeType": "ExpressionStatement",
                  "src": "3950:106:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14523,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14504,
                          "src": "4074:6:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 14524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4084:1:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4074:11:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "686f6c643a20616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
                        "id": 14526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4087:40:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4cc511149ca81358a86c3964feb50f2ffdb7c4ba6870b88f6af6e124d9c0f7af",
                          "typeString": "literal_string \"hold: amount must be greater than zero\""
                        },
                        "value": "hold: amount must be greater than zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4cc511149ca81358a86c3964feb50f2ffdb7c4ba6870b88f6af6e124d9c0f7af",
                          "typeString": "literal_string \"hold: amount must be greater than zero\""
                        }
                      ],
                      "id": 14522,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4066:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4066:62:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14528,
                  "nodeType": "ExpressionStatement",
                  "src": "4066:62:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 14532,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4183:3:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 14533,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4183:10:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 14530,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "4159:4:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20HoldableToken_$15223",
                                "typeString": "contract ERC20HoldableToken"
                              }
                            },
                            "id": 14531,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "spendableBalanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15058,
                            "src": "4159:23:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 14534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4159:35:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 14535,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14504,
                          "src": "4198:6:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4159:45:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "686f6c643a20616d6f756e74206578636565647320617661696c61626c652062616c616e6365",
                        "id": 14537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4218:40:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19034bf26bc3742bd67470410ce64f54edcc10d93f84f4739233c2ff57191b75",
                          "typeString": "literal_string \"hold: amount exceeds available balance\""
                        },
                        "value": "hold: amount exceeds available balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19034bf26bc3742bd67470410ce64f54edcc10d93f84f4739233c2ff57191b75",
                          "typeString": "literal_string \"hold: amount exceeds available balance\""
                        }
                      ],
                      "id": 14529,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4138:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4138:130:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14539,
                  "nodeType": "ExpressionStatement",
                  "src": "4138:130:61"
                },
                {
                  "assignments": [
                    14541,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14541,
                      "mutability": "mutable",
                      "name": "holdHash",
                      "nameLocation": "4288:8:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 14612,
                      "src": "4280:16:61",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 14540,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4280:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 14549,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 14543,
                        "name": "notary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14502,
                        "src": "4333:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 14544,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3351,
                          "src": "4353:10:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 14545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4353:12:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14546,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14500,
                        "src": "4379:9:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14547,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14504,
                        "src": "4402:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14542,
                      "name": "retrieveHoldHashId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14495,
                      "src": "4301:18:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_bytes32_$_t_bytes32_$",
                        "typeString": "function (address,address,address,uint256) view returns (bytes32,bytes32)"
                      }
                    },
                    "id": 14548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4301:117:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
                      "typeString": "tuple(bytes32,bytes32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4279:139:61"
                },
                {
                  "expression": {
                    "id": 14554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 14550,
                        "name": "_holdHashToId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14380,
                        "src": "4429:13:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                          "typeString": "mapping(bytes32 => bytes32)"
                        }
                      },
                      "id": 14552,
                      "indexExpression": {
                        "id": 14551,
                        "name": "holdHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14541,
                        "src": "4443:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4429:23:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14553,
                      "name": "holdId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14498,
                      "src": "4455:6:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4429:32:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 14555,
                  "nodeType": "ExpressionStatement",
                  "src": "4429:32:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_HoldStatusCode_$12361",
                          "typeString": "enum HoldStatusCode"
                        },
                        "id": 14563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 14557,
                              "name": "holds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14372,
                              "src": "4493:5:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$12432_storage_$",
                                "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                              }
                            },
                            "id": 14559,
                            "indexExpression": {
                              "id": 14558,
                              "name": "holdId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14498,
                              "src": "4499:6:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4493:13:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20HoldData_$12432_storage",
                              "typeString": "struct ERC20HoldData storage ref"
                            }
                          },
                          "id": 14560,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12431,
                          "src": "4493:20:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_HoldStatusCode_$12361",
                            "typeString": "enum HoldStatusCode"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 14561,
                            "name": "HoldStatusCode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12361,
                            "src": "4517:14:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_HoldStatusCode_$12361_$",
                              "typeString": "type(enum HoldStatusCode)"
                            }
                          },
                          "id": 14562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Nonexistent",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12354,
                          "src": "4517:26:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_HoldStatusCode_$12361",
                            "typeString": "enum HoldStatusCode"
                          }
                        },
                        "src": "4493:50:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "686f6c643a20696420616c726561647920657869737473",
                        "id": 14564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4557:25:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3fb1032916a9fa7eb9854a20718a129abc1980a1ddced64bc82359ff8f32fdb5",
                          "typeString": "literal_string \"hold: id already exists\""
                        },
                        "value": "hold: id already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3fb1032916a9fa7eb9854a20718a129abc1980a1ddced64bc82359ff8f32fdb5",
                          "typeString": "literal_string \"hold: id already exists\""
                        }
                      ],
                      "id": 14556,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4472:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4472:120:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14566,
                  "nodeType": "ExpressionStatement",
                  "src": "4472:120:61"
                },
                {
                  "expression": {
                    "id": 14581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 14567,
                        "name": "holds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14372,
                        "src": "4602:5:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$12432_storage_$",
                          "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                        }
                      },
                      "id": 14569,
                      "indexExpression": {
                        "id": 14568,
                        "name": "holdId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14498,
                        "src": "4608:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4602:13:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20HoldData_$12432_storage",
                        "typeString": "struct ERC20HoldData storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 14571,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4645:3:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 14572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4645:10:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 14573,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14500,
                          "src": "4669:9:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 14574,
                          "name": "notary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14502,
                          "src": "4692:6:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 14575,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14504,
                          "src": "4712:6:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 14576,
                          "name": "expirationDateTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14506,
                          "src": "4732:18:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 14577,
                          "name": "lockHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14508,
                          "src": "4764:8:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "expression": {
                            "id": 14578,
                            "name": "HoldStatusCode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12361,
                            "src": "4786:14:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_HoldStatusCode_$12361_$",
                              "typeString": "type(enum HoldStatusCode)"
                            }
                          },
                          "id": 14579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Ordered",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12355,
                          "src": "4786:22:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_HoldStatusCode_$12361",
                            "typeString": "enum HoldStatusCode"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_enum$_HoldStatusCode_$12361",
                            "typeString": "enum HoldStatusCode"
                          }
                        ],
                        "id": 14570,
                        "name": "ERC20HoldData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12432,
                        "src": "4618:13:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_ERC20HoldData_$12432_storage_ptr_$",
                          "typeString": "type(struct ERC20HoldData storage pointer)"
                        }
                      },
                      "id": 14580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4618:200:61",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20HoldData_$12432_memory_ptr",
                        "typeString": "struct ERC20HoldData memory"
                      }
                    },
                    "src": "4602:216:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20HoldData_$12432_storage",
                      "typeString": "struct ERC20HoldData storage ref"
                    }
                  },
                  "id": 14582,
                  "nodeType": "ExpressionStatement",
                  "src": "4602:216:61"
                },
                {
                  "expression": {
                    "id": 14594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 14583,
                        "name": "accountHoldBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14376,
                        "src": "4828:19:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 14586,
                      "indexExpression": {
                        "expression": {
                          "id": 14584,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4848:3:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 14585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4848:10:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4828:31:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 14592,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14504,
                          "src": "4911:6:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 14587,
                            "name": "accountHoldBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14376,
                            "src": "4862:19:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 14590,
                          "indexExpression": {
                            "expression": {
                              "id": 14588,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4882:3:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 14589,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4882:10:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4862:31:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 14591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3866,
                        "src": "4862:35:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 14593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4862:65:61",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4828:99:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14595,
                  "nodeType": "ExpressionStatement",
                  "src": "4828:99:61"
                },
                {
                  "expression": {
                    "id": 14601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14596,
                      "name": "totalSupplyOnHold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14383,
                      "src": "4937:17:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 14599,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14504,
                          "src": "4979:6:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 14597,
                          "name": "totalSupplyOnHold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14383,
                          "src": "4957:17:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 14598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3866,
                        "src": "4957:21:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 14600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4957:29:61",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4937:49:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14602,
                  "nodeType": "ExpressionStatement",
                  "src": "4937:49:61"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 14604,
                        "name": "holdId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14498,
                        "src": "5023:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 14605,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14500,
                        "src": "5043:9:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14606,
                        "name": "notary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14502,
                        "src": "5066:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14607,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14504,
                        "src": "5086:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 14608,
                        "name": "expirationDateTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14506,
                        "src": "5106:18:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 14609,
                        "name": "lockHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14508,
                        "src": "5138:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 14603,
                      "name": "NewHold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12449,
                      "src": "5002:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,address,address,uint256,uint256,bytes32)"
                      }
                    },
                    "id": 14610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5002:154:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14611,
                  "nodeType": "EmitStatement",
                  "src": "4997:159:61"
                }
              ]
            },
            "documentation": {
              "id": 14496,
              "nodeType": "StructuredDocumentation",
              "src": "2853:885:61",
              "text": "@notice Called by the sender to hold some tokens for a recipient that the sender can not release back to themself until after the expiration date.\n@param holdId a unique identifier for the hold.\n@param recipient optional account the tokens will be transferred to on execution. If a zero address, the recipient must be specified on execution of the hold.\n@param notary account that can execute the hold. Typically the recipient but can be a third party or a smart contact.\n@param amount of tokens to be transferred to the recipient on execution. Must be a non zero amount.\n@param expirationDateTime UNIX epoch seconds the held amount can be released back to the sender by the sender. Past dates are allowed.\n@param lockHash optional keccak256 hash of a lock preimage. An empty hash will not enforce the hash lock when the hold is executed."
            },
            "functionSelector": "c0e8330e",
            "id": 14613,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hold",
            "nameLocation": "3752:4:61",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 14510,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3931:8:61"
            },
            "parameters": {
              "id": 14509,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14498,
                  "mutability": "mutable",
                  "name": "holdId",
                  "nameLocation": "3774:6:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 14613,
                  "src": "3766:14:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14497,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3766:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14500,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "3798:9:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 14613,
                  "src": "3790:17:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14499,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3790:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14502,
                  "mutability": "mutable",
                  "name": "notary",
                  "nameLocation": "3825:6:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 14613,
                  "src": "3817:14:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14501,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3817:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14504,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3849:6:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 14613,
                  "src": "3841:14:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14503,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3841:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14506,
                  "mutability": "mutable",
                  "name": "expirationDateTime",
                  "nameLocation": "3873:18:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 14613,
                  "src": "3865:26:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14505,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3865:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14508,
                  "mutability": "mutable",
                  "name": "lockHash",
                  "nameLocation": "3909:8:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 14613,
                  "src": "3901:16:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14507,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3901:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3756:167:61"
            },
            "returnParameters": {
              "id": 14511,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3940:0:61"
            },
            "scope": 15223,
            "src": "3743:1420:61",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12487
            ],
            "body": {
              "id": 14626,
              "nodeType": "Block",
              "src": "5265:37:61",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 14622,
                      "name": "holds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14372,
                      "src": "5282:5:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$12432_storage_$",
                        "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                      }
                    },
                    "id": 14624,
                    "indexExpression": {
                      "id": 14623,
                      "name": "holdId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14615,
                      "src": "5288:6:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5282:13:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20HoldData_$12432_storage",
                      "typeString": "struct ERC20HoldData storage ref"
                    }
                  },
                  "functionReturnParameters": 14621,
                  "id": 14625,
                  "nodeType": "Return",
                  "src": "5275:20:61"
                }
              ]
            },
            "functionSelector": "da1ec246",
            "id": 14627,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retrieveHoldData",
            "nameLocation": "5178:16:61",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 14617,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5220:8:61"
            },
            "parameters": {
              "id": 14616,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14615,
                  "mutability": "mutable",
                  "name": "holdId",
                  "nameLocation": "5203:6:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 14627,
                  "src": "5195:14:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14614,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5195:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5194:16:61"
            },
            "returnParameters": {
              "id": 14621,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14620,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14627,
                  "src": "5243:20:61",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ERC20HoldData_$12432_memory_ptr",
                    "typeString": "struct ERC20HoldData"
                  },
                  "typeName": {
                    "id": 14619,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14618,
                      "name": "ERC20HoldData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 12432,
                      "src": "5243:13:61"
                    },
                    "referencedDeclaration": 12432,
                    "src": "5243:13:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20HoldData_$12432_storage_ptr",
                      "typeString": "struct ERC20HoldData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5242:22:61"
            },
            "scope": 15223,
            "src": "5169:133:61",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              12493
            ],
            "body": {
              "id": 14669,
              "nodeType": "Block",
              "src": "5551:396:61",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 14635,
                              "name": "holds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14372,
                              "src": "5582:5:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$12432_storage_$",
                                "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                              }
                            },
                            "id": 14637,
                            "indexExpression": {
                              "id": 14636,
                              "name": "holdId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14630,
                              "src": "5588:6:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5582:13:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20HoldData_$12432_storage",
                              "typeString": "struct ERC20HoldData storage ref"
                            }
                          },
                          "id": 14638,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "recipient",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12420,
                          "src": "5582:23:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 14641,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5617:1:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 14640,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5609:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 14639,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5609:7:61",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 14642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5609:10:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5582:37:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "65786563757465486f6c643a206d75737420706173732074686520726563697069656e74206f6e20657865637574696f6e2061732074686520726563697069656e7420776173206e6f7420736574206f6e20686f6c64",
                        "id": 14644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5633:88:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f15c04bad4a39568ed31ea3c6bc3695f659c7d3ffab2052da0b4914f04d3b76a",
                          "typeString": "literal_string \"executeHold: must pass the recipient on execution as the recipient was not set on hold\""
                        },
                        "value": "executeHold: must pass the recipient on execution as the recipient was not set on hold"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f15c04bad4a39568ed31ea3c6bc3695f659c7d3ffab2052da0b4914f04d3b76a",
                          "typeString": "literal_string \"executeHold: must pass the recipient on execution as the recipient was not set on hold\""
                        }
                      ],
                      "id": 14634,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5561:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5561:170:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14646,
                  "nodeType": "ExpressionStatement",
                  "src": "5561:170:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 14656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 14648,
                              "name": "holds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14372,
                              "src": "5762:5:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$12432_storage_$",
                                "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                              }
                            },
                            "id": 14650,
                            "indexExpression": {
                              "id": 14649,
                              "name": "holdId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14630,
                              "src": "5768:6:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5762:13:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20HoldData_$12432_storage",
                              "typeString": "struct ERC20HoldData storage ref"
                            }
                          },
                          "id": 14651,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "secretHash",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12428,
                          "src": "5762:24:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 14654,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5798:1:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 14653,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5790:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 14652,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5790:7:61",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 14655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5790:10:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "5762:38:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "65786563757465486f6c643a206e65656420707265696d6167652069662074686520686f6c64206861732061206c6f636b2068617368",
                        "id": 14657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5814:56:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f68c2a16436ef9beba75fe6c860676b87d7e7c18f5be2e4c797c12ed8ef7eb4",
                          "typeString": "literal_string \"executeHold: need preimage if the hold has a lock hash\""
                        },
                        "value": "executeHold: need preimage if the hold has a lock hash"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f68c2a16436ef9beba75fe6c860676b87d7e7c18f5be2e4c797c12ed8ef7eb4",
                          "typeString": "literal_string \"executeHold: need preimage if the hold has a lock hash\""
                        }
                      ],
                      "id": 14647,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5741:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5741:139:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14659,
                  "nodeType": "ExpressionStatement",
                  "src": "5741:139:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14661,
                        "name": "holdId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14630,
                        "src": "5904:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 14662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5912:2:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 14663,
                            "name": "holds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14372,
                            "src": "5916:5:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$12432_storage_$",
                              "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                            }
                          },
                          "id": 14665,
                          "indexExpression": {
                            "id": 14664,
                            "name": "holdId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14630,
                            "src": "5922:6:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5916:13:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20HoldData_$12432_storage",
                            "typeString": "struct ERC20HoldData storage ref"
                          }
                        },
                        "id": 14666,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "recipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12420,
                        "src": "5916:23:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 14660,
                      "name": "_executeHold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14910,
                      "src": "5891:12:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,bytes32,address)"
                      }
                    },
                    "id": 14667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5891:49:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14668,
                  "nodeType": "ExpressionStatement",
                  "src": "5891:49:61"
                }
              ]
            },
            "documentation": {
              "id": 14628,
              "nodeType": "StructuredDocumentation",
              "src": "5308:185:61",
              "text": "@notice Called by the notary to transfer the held tokens to the set at the hold recipient if there is no hash lock.\n@param holdId a unique identifier for the hold."
            },
            "functionSelector": "f8abd4bc",
            "id": 14670,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "executeHold",
            "nameLocation": "5507:11:61",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 14632,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5542:8:61"
            },
            "parameters": {
              "id": 14631,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14630,
                  "mutability": "mutable",
                  "name": "holdId",
                  "nameLocation": "5527:6:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 14670,
                  "src": "5519:14:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14629,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5519:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5518:16:61"
            },
            "returnParameters": {
              "id": 14633,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5551:0:61"
            },
            "scope": 15223,
            "src": "5498:449:61",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12501
            ],
            "body": {
              "id": 14727,
              "nodeType": "Block",
              "src": "6287:531:61",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 14680,
                              "name": "holds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14372,
                              "src": "6318:5:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$12432_storage_$",
                                "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                              }
                            },
                            "id": 14682,
                            "indexExpression": {
                              "id": 14681,
                              "name": "holdId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14673,
                              "src": "6324:6:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6318:13:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20HoldData_$12432_storage",
                              "typeString": "struct ERC20HoldData storage ref"
                            }
                          },
                          "id": 14683,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "recipient",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12420,
                          "src": "6318:23:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 14686,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6353:1:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 14685,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6345:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 14684,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6345:7:61",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 14687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6345:10:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6318:37:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "65786563757465486f6c643a206d75737420706173732074686520726563697069656e74206f6e20657865637574696f6e2061732074686520726563697069656e7420776173206e6f7420736574206f6e20686f6c64",
                        "id": 14689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6369:88:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f15c04bad4a39568ed31ea3c6bc3695f659c7d3ffab2052da0b4914f04d3b76a",
                          "typeString": "literal_string \"executeHold: must pass the recipient on execution as the recipient was not set on hold\""
                        },
                        "value": "executeHold: must pass the recipient on execution as the recipient was not set on hold"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f15c04bad4a39568ed31ea3c6bc3695f659c7d3ffab2052da0b4914f04d3b76a",
                          "typeString": "literal_string \"executeHold: must pass the recipient on execution as the recipient was not set on hold\""
                        }
                      ],
                      "id": 14679,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6297:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6297:170:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14691,
                  "nodeType": "ExpressionStatement",
                  "src": "6297:170:61"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 14700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 14692,
                          "name": "holds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14372,
                          "src": "6481:5:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$12432_storage_$",
                            "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                          }
                        },
                        "id": 14694,
                        "indexExpression": {
                          "id": 14693,
                          "name": "holdId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14673,
                          "src": "6487:6:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6481:13:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20HoldData_$12432_storage",
                          "typeString": "struct ERC20HoldData storage ref"
                        }
                      },
                      "id": 14695,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "secretHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12428,
                      "src": "6481:24:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 14698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6517:1:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 14697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6509:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 14696,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6509:7:61",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 14699,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6509:10:61",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "6481:38:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 14717,
                  "nodeType": "IfStatement",
                  "src": "6477:265:61",
                  "trueBody": {
                    "id": 14716,
                    "nodeType": "Block",
                    "src": "6521:221:61",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 14712,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 14702,
                                    "name": "holds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14372,
                                    "src": "6560:5:61",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$12432_storage_$",
                                      "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                                    }
                                  },
                                  "id": 14704,
                                  "indexExpression": {
                                    "id": 14703,
                                    "name": "holdId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14673,
                                    "src": "6566:6:61",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6560:13:61",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ERC20HoldData_$12432_storage",
                                    "typeString": "struct ERC20HoldData storage ref"
                                  }
                                },
                                "id": 14705,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "secretHash",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 12428,
                                "src": "6560:24:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 14709,
                                        "name": "lockPreimage",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 14675,
                                        "src": "6632:12:61",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      ],
                                      "expression": {
                                        "id": 14707,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967295,
                                        "src": "6615:3:61",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 14708,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "encodePacked",
                                      "nodeType": "MemberAccess",
                                      "src": "6615:16:61",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 14710,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6615:30:61",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 14706,
                                  "name": "sha256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967274,
                                  "src": "6608:6:61",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 14711,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6608:38:61",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "6560:86:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "65786563757465486f6c643a20707265696d616765206861736820646f6573206e6f74206d61746368206c6f636b2068617368",
                              "id": 14713,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6664:53:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7b67df7aff43b902379f5b51d42b44d55c3dd66fdd309918f58eaabd4d470b8b",
                                "typeString": "literal_string \"executeHold: preimage hash does not match lock hash\""
                              },
                              "value": "executeHold: preimage hash does not match lock hash"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7b67df7aff43b902379f5b51d42b44d55c3dd66fdd309918f58eaabd4d470b8b",
                                "typeString": "literal_string \"executeHold: preimage hash does not match lock hash\""
                              }
                            ],
                            "id": 14701,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "6535:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 14714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6535:196:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 14715,
                        "nodeType": "ExpressionStatement",
                        "src": "6535:196:61"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14719,
                        "name": "holdId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14673,
                        "src": "6765:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 14720,
                        "name": "lockPreimage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14675,
                        "src": "6773:12:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 14721,
                            "name": "holds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14372,
                            "src": "6787:5:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$12432_storage_$",
                              "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                            }
                          },
                          "id": 14723,
                          "indexExpression": {
                            "id": 14722,
                            "name": "holdId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14673,
                            "src": "6793:6:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6787:13:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20HoldData_$12432_storage",
                            "typeString": "struct ERC20HoldData storage ref"
                          }
                        },
                        "id": 14724,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "recipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12420,
                        "src": "6787:23:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 14718,
                      "name": "_executeHold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14910,
                      "src": "6752:12:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,bytes32,address)"
                      }
                    },
                    "id": 14725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6752:59:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14726,
                  "nodeType": "ExpressionStatement",
                  "src": "6752:59:61"
                }
              ]
            },
            "documentation": {
              "id": 14671,
              "nodeType": "StructuredDocumentation",
              "src": "5953:254:61",
              "text": "@notice Called by the notary to transfer the held tokens to the recipient that was set at the hold.\n@param holdId a unique identifier for the hold.\n@param lockPreimage the image used to generate the lock hash with a sha256 hash"
            },
            "functionSelector": "445850af",
            "id": 14728,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "executeHold",
            "nameLocation": "6221:11:61",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 14677,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6278:8:61"
            },
            "parameters": {
              "id": 14676,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14673,
                  "mutability": "mutable",
                  "name": "holdId",
                  "nameLocation": "6241:6:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 14728,
                  "src": "6233:14:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14672,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6233:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14675,
                  "mutability": "mutable",
                  "name": "lockPreimage",
                  "nameLocation": "6257:12:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 14728,
                  "src": "6249:20:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14674,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6249:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6232:38:61"
            },
            "returnParameters": {
              "id": 14678,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6287:0:61"
            },
            "scope": 15223,
            "src": "6212:606:61",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12511
            ],
            "body": {
              "id": 14801,
              "nodeType": "Block",
              "src": "7309:677:61",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 14740,
                              "name": "holds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14372,
                              "src": "7340:5:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$12432_storage_$",
                                "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                              }
                            },
                            "id": 14742,
                            "indexExpression": {
                              "id": 14741,
                              "name": "holdId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14731,
                              "src": "7346:6:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7340:13:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20HoldData_$12432_storage",
                              "typeString": "struct ERC20HoldData storage ref"
                            }
                          },
                          "id": 14743,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "recipient",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12420,
                          "src": "7340:23:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 14746,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7375:1:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 14745,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7367:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 14744,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7367:7:61",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 14747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7367:10:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7340:37:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "65786563757465486f6c643a2063616e206e6f7420736574206120726563697069656e74206f6e20657865637574696f6e2061732069742077617320736574206f6e20686f6c64",
                        "id": 14749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7391:73:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e25b528742115f43b37a476a8df66d4a71e93f93d2391b99065533f9710ba899",
                          "typeString": "literal_string \"executeHold: can not set a recipient on execution as it was set on hold\""
                        },
                        "value": "executeHold: can not set a recipient on execution as it was set on hold"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e25b528742115f43b37a476a8df66d4a71e93f93d2391b99065533f9710ba899",
                          "typeString": "literal_string \"executeHold: can not set a recipient on execution as it was set on hold\""
                        }
                      ],
                      "id": 14739,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7319:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7319:155:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14751,
                  "nodeType": "ExpressionStatement",
                  "src": "7319:155:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14753,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14735,
                          "src": "7505:9:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 14756,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7526:1:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 14755,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7518:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 14754,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7518:7:61",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 14757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7518:10:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7505:23:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "65786563757465486f6c643a20726563697069656e74206d757374206e6f742062652061207a65726f2061646472657373",
                        "id": 14759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7542:51:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_501c71291b34e8ea8c38d27b05abbbca9ed16d8e393dcf6a21d81509bdc46bf9",
                          "typeString": "literal_string \"executeHold: recipient must not be a zero address\""
                        },
                        "value": "executeHold: recipient must not be a zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_501c71291b34e8ea8c38d27b05abbbca9ed16d8e393dcf6a21d81509bdc46bf9",
                          "typeString": "literal_string \"executeHold: recipient must not be a zero address\""
                        }
                      ],
                      "id": 14752,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7484:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7484:119:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14761,
                  "nodeType": "ExpressionStatement",
                  "src": "7484:119:61"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 14770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 14762,
                          "name": "holds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14372,
                          "src": "7617:5:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$12432_storage_$",
                            "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                          }
                        },
                        "id": 14764,
                        "indexExpression": {
                          "id": 14763,
                          "name": "holdId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14731,
                          "src": "7623:6:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7617:13:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20HoldData_$12432_storage",
                          "typeString": "struct ERC20HoldData storage ref"
                        }
                      },
                      "id": 14765,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "secretHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12428,
                      "src": "7617:24:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 14768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7653:1:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 14767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7645:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 14766,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "7645:7:61",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 14769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7645:10:61",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "7617:38:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 14787,
                  "nodeType": "IfStatement",
                  "src": "7613:265:61",
                  "trueBody": {
                    "id": 14786,
                    "nodeType": "Block",
                    "src": "7657:221:61",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 14782,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 14772,
                                    "name": "holds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14372,
                                    "src": "7696:5:61",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$12432_storage_$",
                                      "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                                    }
                                  },
                                  "id": 14774,
                                  "indexExpression": {
                                    "id": 14773,
                                    "name": "holdId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14731,
                                    "src": "7702:6:61",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7696:13:61",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ERC20HoldData_$12432_storage",
                                    "typeString": "struct ERC20HoldData storage ref"
                                  }
                                },
                                "id": 14775,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "secretHash",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 12428,
                                "src": "7696:24:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 14779,
                                        "name": "lockPreimage",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 14733,
                                        "src": "7768:12:61",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      ],
                                      "expression": {
                                        "id": 14777,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967295,
                                        "src": "7751:3:61",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 14778,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "encodePacked",
                                      "nodeType": "MemberAccess",
                                      "src": "7751:16:61",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 14780,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7751:30:61",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 14776,
                                  "name": "sha256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967274,
                                  "src": "7744:6:61",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 14781,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7744:38:61",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "7696:86:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "65786563757465486f6c643a20707265696d616765206861736820646f6573206e6f74206d61746368206c6f636b2068617368",
                              "id": 14783,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7800:53:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7b67df7aff43b902379f5b51d42b44d55c3dd66fdd309918f58eaabd4d470b8b",
                                "typeString": "literal_string \"executeHold: preimage hash does not match lock hash\""
                              },
                              "value": "executeHold: preimage hash does not match lock hash"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7b67df7aff43b902379f5b51d42b44d55c3dd66fdd309918f58eaabd4d470b8b",
                                "typeString": "literal_string \"executeHold: preimage hash does not match lock hash\""
                              }
                            ],
                            "id": 14771,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "7671:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 14784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7671:196:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 14785,
                        "nodeType": "ExpressionStatement",
                        "src": "7671:196:61"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 14793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 14788,
                          "name": "holds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14372,
                          "src": "7888:5:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$12432_storage_$",
                            "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                          }
                        },
                        "id": 14790,
                        "indexExpression": {
                          "id": 14789,
                          "name": "holdId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14731,
                          "src": "7894:6:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7888:13:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20HoldData_$12432_storage",
                          "typeString": "struct ERC20HoldData storage ref"
                        }
                      },
                      "id": 14791,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "recipient",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12420,
                      "src": "7888:23:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14792,
                      "name": "recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14735,
                      "src": "7914:9:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7888:35:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 14794,
                  "nodeType": "ExpressionStatement",
                  "src": "7888:35:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14796,
                        "name": "holdId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14731,
                        "src": "7947:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 14797,
                        "name": "lockPreimage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14733,
                        "src": "7955:12:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 14798,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14735,
                        "src": "7969:9:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 14795,
                      "name": "_executeHold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14910,
                      "src": "7934:12:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,bytes32,address)"
                      }
                    },
                    "id": 14799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7934:45:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14800,
                  "nodeType": "ExpressionStatement",
                  "src": "7934:45:61"
                }
              ]
            },
            "documentation": {
              "id": 14729,
              "nodeType": "StructuredDocumentation",
              "src": "6824:356:61",
              "text": "@notice Called by the notary to transfer the held tokens to the recipient if no recipient was specified at the hold.\n@param holdId a unique identifier for the hold.\n@param lockPreimage the image used to generate the lock hash with a keccak256 hash\n@param recipient the account the tokens will be transferred to on execution."
            },
            "functionSelector": "603dfcb5",
            "id": 14802,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "executeHold",
            "nameLocation": "7194:11:61",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 14737,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7300:8:61"
            },
            "parameters": {
              "id": 14736,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14731,
                  "mutability": "mutable",
                  "name": "holdId",
                  "nameLocation": "7223:6:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 14802,
                  "src": "7215:14:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14730,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7215:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14733,
                  "mutability": "mutable",
                  "name": "lockPreimage",
                  "nameLocation": "7247:12:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 14802,
                  "src": "7239:20:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14732,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7239:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14735,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "7277:9:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 14802,
                  "src": "7269:17:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14734,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7269:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7205:87:61"
            },
            "returnParameters": {
              "id": 14738,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7309:0:61"
            },
            "scope": 15223,
            "src": "7185:801:61",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 14909,
              "nodeType": "Block",
              "src": "8125:810:61",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 14815,
                              "name": "holds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14372,
                              "src": "8156:5:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$12432_storage_$",
                                "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                              }
                            },
                            "id": 14817,
                            "indexExpression": {
                              "id": 14816,
                              "name": "holdId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14804,
                              "src": "8162:6:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8156:13:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20HoldData_$12432_storage",
                              "typeString": "struct ERC20HoldData storage ref"
                            }
                          },
                          "id": 14818,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "notary",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12422,
                          "src": "8156:20:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 14819,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "8180:3:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 14820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8180:10:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8156:34:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "65786563757465486f6c643a2063616c6c6572206d7573742062652074686520686f6c64206e6f74617279",
                        "id": 14822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8204:45:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_06760903a1a137bd7e8f70a654f085804529f6cf9f19abebbae2f256bb6f7248",
                          "typeString": "literal_string \"executeHold: caller must be the hold notary\""
                        },
                        "value": "executeHold: caller must be the hold notary"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_06760903a1a137bd7e8f70a654f085804529f6cf9f19abebbae2f256bb6f7248",
                          "typeString": "literal_string \"executeHold: caller must be the hold notary\""
                        }
                      ],
                      "id": 14814,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8135:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8135:124:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14824,
                  "nodeType": "ExpressionStatement",
                  "src": "8135:124:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 14828,
                            "name": "holds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14372,
                            "src": "8286:5:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$12432_storage_$",
                              "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                            }
                          },
                          "id": 14830,
                          "indexExpression": {
                            "id": 14829,
                            "name": "holdId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14804,
                            "src": "8292:6:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8286:13:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20HoldData_$12432_storage",
                            "typeString": "struct ERC20HoldData storage ref"
                          }
                        },
                        "id": 14831,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12418,
                        "src": "8286:20:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14832,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14808,
                        "src": "8308:9:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 14833,
                            "name": "holds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14372,
                            "src": "8319:5:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$12432_storage_$",
                              "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                            }
                          },
                          "id": 14835,
                          "indexExpression": {
                            "id": 14834,
                            "name": "holdId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14804,
                            "src": "8325:6:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8319:13:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20HoldData_$12432_storage",
                            "typeString": "struct ERC20HoldData storage ref"
                          }
                        },
                        "id": 14836,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12424,
                        "src": "8319:20:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 14825,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "8270:5:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC20HoldableToken_$15223_$",
                          "typeString": "type(contract super ERC20HoldableToken)"
                        }
                      },
                      "id": 14827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1103,
                      "src": "8270:15:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 14837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8270:70:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14838,
                  "nodeType": "ExpressionStatement",
                  "src": "8270:70:61"
                },
                {
                  "expression": {
                    "id": 14845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 14839,
                          "name": "holds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14372,
                          "src": "8351:5:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$12432_storage_$",
                            "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                          }
                        },
                        "id": 14841,
                        "indexExpression": {
                          "id": 14840,
                          "name": "holdId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14804,
                          "src": "8357:6:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8351:13:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20HoldData_$12432_storage",
                          "typeString": "struct ERC20HoldData storage ref"
                        }
                      },
                      "id": 14842,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12431,
                      "src": "8351:20:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_HoldStatusCode_$12361",
                        "typeString": "enum HoldStatusCode"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 14843,
                        "name": "HoldStatusCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12361,
                        "src": "8374:14:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_HoldStatusCode_$12361_$",
                          "typeString": "type(enum HoldStatusCode)"
                        }
                      },
                      "id": 14844,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Executed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12356,
                      "src": "8374:23:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_HoldStatusCode_$12361",
                        "typeString": "enum HoldStatusCode"
                      }
                    },
                    "src": "8351:46:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_HoldStatusCode_$12361",
                      "typeString": "enum HoldStatusCode"
                    }
                  },
                  "id": 14846,
                  "nodeType": "ExpressionStatement",
                  "src": "8351:46:61"
                },
                {
                  "expression": {
                    "id": 14865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 14847,
                        "name": "accountHoldBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14376,
                        "src": "8407:19:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 14852,
                      "indexExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 14848,
                            "name": "holds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14372,
                            "src": "8427:5:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$12432_storage_$",
                              "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                            }
                          },
                          "id": 14850,
                          "indexExpression": {
                            "id": 14849,
                            "name": "holdId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14804,
                            "src": "8433:6:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8427:13:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20HoldData_$12432_storage",
                            "typeString": "struct ERC20HoldData storage ref"
                          }
                        },
                        "id": 14851,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12418,
                        "src": "8427:33:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8407:54:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "baseExpression": {
                              "id": 14860,
                              "name": "holds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14372,
                              "src": "8523:5:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$12432_storage_$",
                                "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                              }
                            },
                            "id": 14862,
                            "indexExpression": {
                              "id": 14861,
                              "name": "holdId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14804,
                              "src": "8529:6:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8523:13:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20HoldData_$12432_storage",
                              "typeString": "struct ERC20HoldData storage ref"
                            }
                          },
                          "id": 14863,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12424,
                          "src": "8523:20:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 14853,
                            "name": "accountHoldBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14376,
                            "src": "8464:19:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 14858,
                          "indexExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 14854,
                                "name": "holds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14372,
                                "src": "8484:5:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$12432_storage_$",
                                  "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                                }
                              },
                              "id": 14856,
                              "indexExpression": {
                                "id": 14855,
                                "name": "holdId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14804,
                                "src": "8490:6:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8484:13:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC20HoldData_$12432_storage",
                                "typeString": "struct ERC20HoldData storage ref"
                              }
                            },
                            "id": 14857,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12418,
                            "src": "8484:20:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8464:41:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 14859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3881,
                        "src": "8464:45:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 14864,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8464:89:61",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8407:146:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14866,
                  "nodeType": "ExpressionStatement",
                  "src": "8407:146:61"
                },
                {
                  "expression": {
                    "id": 14875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14867,
                      "name": "totalSupplyOnHold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14383,
                      "src": "8563:17:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "baseExpression": {
                              "id": 14870,
                              "name": "holds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14372,
                              "src": "8605:5:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$12432_storage_$",
                                "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                              }
                            },
                            "id": 14872,
                            "indexExpression": {
                              "id": 14871,
                              "name": "holdId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14804,
                              "src": "8611:6:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8605:13:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20HoldData_$12432_storage",
                              "typeString": "struct ERC20HoldData storage ref"
                            }
                          },
                          "id": 14873,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12424,
                          "src": "8605:20:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 14868,
                          "name": "totalSupplyOnHold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14383,
                          "src": "8583:17:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 14869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3881,
                        "src": "8583:21:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 14874,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8583:43:61",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8563:63:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14876,
                  "nodeType": "ExpressionStatement",
                  "src": "8563:63:61"
                },
                {
                  "assignments": [
                    14878,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14878,
                      "mutability": "mutable",
                      "name": "holdHash",
                      "nameLocation": "8646:8:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 14909,
                      "src": "8638:16:61",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 14877,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8638:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 14897,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 14880,
                            "name": "holds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14372,
                            "src": "8691:5:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$12432_storage_$",
                              "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                            }
                          },
                          "id": 14882,
                          "indexExpression": {
                            "id": 14881,
                            "name": "holdId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14804,
                            "src": "8697:6:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8691:13:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20HoldData_$12432_storage",
                            "typeString": "struct ERC20HoldData storage ref"
                          }
                        },
                        "id": 14883,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "notary",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12422,
                        "src": "8691:20:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 14884,
                            "name": "holds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14372,
                            "src": "8725:5:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$12432_storage_$",
                              "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                            }
                          },
                          "id": 14886,
                          "indexExpression": {
                            "id": 14885,
                            "name": "holdId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14804,
                            "src": "8731:6:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8725:13:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20HoldData_$12432_storage",
                            "typeString": "struct ERC20HoldData storage ref"
                          }
                        },
                        "id": 14887,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12418,
                        "src": "8725:20:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 14888,
                            "name": "holds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14372,
                            "src": "8759:5:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$12432_storage_$",
                              "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                            }
                          },
                          "id": 14890,
                          "indexExpression": {
                            "id": 14889,
                            "name": "holdId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14804,
                            "src": "8765:6:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8759:13:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20HoldData_$12432_storage",
                            "typeString": "struct ERC20HoldData storage ref"
                          }
                        },
                        "id": 14891,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "recipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12420,
                        "src": "8759:23:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 14892,
                            "name": "holds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14372,
                            "src": "8796:5:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$12432_storage_$",
                              "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                            }
                          },
                          "id": 14894,
                          "indexExpression": {
                            "id": 14893,
                            "name": "holdId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14804,
                            "src": "8802:6:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8796:13:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20HoldData_$12432_storage",
                            "typeString": "struct ERC20HoldData storage ref"
                          }
                        },
                        "id": 14895,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12424,
                        "src": "8796:20:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14879,
                      "name": "retrieveHoldHashId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14495,
                      "src": "8659:18:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_bytes32_$_t_bytes32_$",
                        "typeString": "function (address,address,address,uint256) view returns (bytes32,bytes32)"
                      }
                    },
                    "id": 14896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8659:167:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
                      "typeString": "tuple(bytes32,bytes32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8637:189:61"
                },
                {
                  "expression": {
                    "id": 14901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "8837:30:61",
                    "subExpression": {
                      "baseExpression": {
                        "id": 14898,
                        "name": "_holdHashToId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14380,
                        "src": "8844:13:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                          "typeString": "mapping(bytes32 => bytes32)"
                        }
                      },
                      "id": 14900,
                      "indexExpression": {
                        "id": 14899,
                        "name": "holdHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14878,
                        "src": "8858:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8844:23:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14902,
                  "nodeType": "ExpressionStatement",
                  "src": "8837:30:61"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 14904,
                        "name": "holdId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14804,
                        "src": "8896:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 14905,
                        "name": "lockPreimage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14806,
                        "src": "8904:12:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 14906,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14808,
                        "src": "8918:9:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 14903,
                      "name": "ExecutedHold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12457,
                      "src": "8883:12:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,bytes32,address)"
                      }
                    },
                    "id": 14907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8883:45:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14908,
                  "nodeType": "EmitStatement",
                  "src": "8878:50:61"
                }
              ]
            },
            "id": 14910,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 14811,
                    "name": "holdId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14804,
                    "src": "8117:6:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 14812,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14810,
                  "name": "isHeld",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14408,
                  "src": "8110:6:61"
                },
                "nodeType": "ModifierInvocation",
                "src": "8110:14:61"
              }
            ],
            "name": "_executeHold",
            "nameLocation": "8001:12:61",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14809,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14804,
                  "mutability": "mutable",
                  "name": "holdId",
                  "nameLocation": "8031:6:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 14910,
                  "src": "8023:14:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14803,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8023:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14806,
                  "mutability": "mutable",
                  "name": "lockPreimage",
                  "nameLocation": "8055:12:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 14910,
                  "src": "8047:20:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14805,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8047:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14808,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "8085:9:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 14910,
                  "src": "8077:17:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14807,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8077:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8013:87:61"
            },
            "returnParameters": {
              "id": 14813,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8125:0:61"
            },
            "scope": 15223,
            "src": "7992:943:61",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              12517
            ],
            "body": {
              "id": 15006,
              "nodeType": "Block",
              "src": "9211:815:61",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 14926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 14920,
                          "name": "holds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14372,
                          "src": "9225:5:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$12432_storage_$",
                            "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                          }
                        },
                        "id": 14922,
                        "indexExpression": {
                          "id": 14921,
                          "name": "holdId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14913,
                          "src": "9231:6:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9225:13:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20HoldData_$12432_storage",
                          "typeString": "struct ERC20HoldData storage ref"
                        }
                      },
                      "id": 14923,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12418,
                      "src": "9225:20:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 14924,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "9249:3:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 14925,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "9249:10:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9225:34:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 14953,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 14947,
                            "name": "holds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14372,
                            "src": "9533:5:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$12432_storage_$",
                              "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                            }
                          },
                          "id": 14949,
                          "indexExpression": {
                            "id": 14948,
                            "name": "holdId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14913,
                            "src": "9539:6:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9533:13:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20HoldData_$12432_storage",
                            "typeString": "struct ERC20HoldData storage ref"
                          }
                        },
                        "id": 14950,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "notary",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12422,
                        "src": "9533:20:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "expression": {
                          "id": 14951,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "9557:3:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 14952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9557:10:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "9533:34:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 14967,
                      "nodeType": "Block",
                      "src": "9664:79:61",
                      "statements": [
                        {
                          "expression": {
                            "id": 14965,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "baseExpression": {
                                  "id": 14959,
                                  "name": "holds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14372,
                                  "src": "9678:5:61",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$12432_storage_$",
                                    "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                                  }
                                },
                                "id": 14961,
                                "indexExpression": {
                                  "id": 14960,
                                  "name": "holdId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14913,
                                  "src": "9684:6:61",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9678:13:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ERC20HoldData_$12432_storage",
                                  "typeString": "struct ERC20HoldData storage ref"
                                }
                              },
                              "id": 14962,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberName": "status",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 12431,
                              "src": "9678:20:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_HoldStatusCode_$12361",
                                "typeString": "enum HoldStatusCode"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "expression": {
                                "id": 14963,
                                "name": "HoldStatusCode",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12361,
                                "src": "9701:14:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_HoldStatusCode_$12361_$",
                                  "typeString": "type(enum HoldStatusCode)"
                                }
                              },
                              "id": 14964,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "ReleasedByNotary",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 12358,
                              "src": "9701:31:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_HoldStatusCode_$12361",
                                "typeString": "enum HoldStatusCode"
                              }
                            },
                            "src": "9678:54:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_HoldStatusCode_$12361",
                              "typeString": "enum HoldStatusCode"
                            }
                          },
                          "id": 14966,
                          "nodeType": "ExpressionStatement",
                          "src": "9678:54:61"
                        }
                      ]
                    },
                    "id": 14968,
                    "nodeType": "IfStatement",
                    "src": "9529:214:61",
                    "trueBody": {
                      "id": 14958,
                      "nodeType": "Block",
                      "src": "9569:89:61",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "72656c65617365486f6c643a2063616c6c6572206d7573742062652074686520686f6c642073656e646572206f72206e6f746172792e",
                                "id": 14955,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9590:56:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_bef427c6599b78a67199088855f3e7d148eff965aedbe04891332f4fd50908c0",
                                  "typeString": "literal_string \"releaseHold: caller must be the hold sender or notary.\""
                                },
                                "value": "releaseHold: caller must be the hold sender or notary."
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_bef427c6599b78a67199088855f3e7d148eff965aedbe04891332f4fd50908c0",
                                  "typeString": "literal_string \"releaseHold: caller must be the hold sender or notary.\""
                                }
                              ],
                              "id": 14954,
                              "name": "revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                4294967277,
                                4294967277
                              ],
                              "referencedDeclaration": 4294967277,
                              "src": "9583:6:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (string memory) pure"
                              }
                            },
                            "id": 14956,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9583:64:61",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 14957,
                          "nodeType": "ExpressionStatement",
                          "src": "9583:64:61"
                        }
                      ]
                    }
                  },
                  "id": 14969,
                  "nodeType": "IfStatement",
                  "src": "9221:522:61",
                  "trueBody": {
                    "id": 14946,
                    "nodeType": "Block",
                    "src": "9261:262:61",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 14934,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 14928,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967292,
                                  "src": "9300:5:61",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 14929,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "9300:15:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 14930,
                                    "name": "holds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14372,
                                    "src": "9318:5:61",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$12432_storage_$",
                                      "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                                    }
                                  },
                                  "id": 14932,
                                  "indexExpression": {
                                    "id": 14931,
                                    "name": "holdId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14913,
                                    "src": "9324:6:61",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9318:13:61",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ERC20HoldData_$12432_storage",
                                    "typeString": "struct ERC20HoldData storage ref"
                                  }
                                },
                                "id": 14933,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "expirationDateTime",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 12426,
                                "src": "9318:32:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9300:50:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "72656c65617365486f6c643a2063616e206f6e6c792072656c65617365206166746572207468652065787069726174696f6e20646174652e",
                              "id": 14935,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9368:58:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_493d53730a9bdfe5ea17be5fb48f7cf625c731a31a9424f72b43547622da1e56",
                                "typeString": "literal_string \"releaseHold: can only release after the expiration date.\""
                              },
                              "value": "releaseHold: can only release after the expiration date."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_493d53730a9bdfe5ea17be5fb48f7cf625c731a31a9424f72b43547622da1e56",
                                "typeString": "literal_string \"releaseHold: can only release after the expiration date.\""
                              }
                            ],
                            "id": 14927,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "9275:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 14936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9275:165:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 14937,
                        "nodeType": "ExpressionStatement",
                        "src": "9275:165:61"
                      },
                      {
                        "expression": {
                          "id": 14944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 14938,
                                "name": "holds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14372,
                                "src": "9454:5:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$12432_storage_$",
                                  "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                                }
                              },
                              "id": 14940,
                              "indexExpression": {
                                "id": 14939,
                                "name": "holdId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14913,
                                "src": "9460:6:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9454:13:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC20HoldData_$12432_storage",
                                "typeString": "struct ERC20HoldData storage ref"
                              }
                            },
                            "id": 14941,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12431,
                            "src": "9454:20:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_HoldStatusCode_$12361",
                              "typeString": "enum HoldStatusCode"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 14942,
                              "name": "HoldStatusCode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12361,
                              "src": "9477:14:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_HoldStatusCode_$12361_$",
                                "typeString": "type(enum HoldStatusCode)"
                              }
                            },
                            "id": 14943,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ReleasedOnExpiration",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12360,
                            "src": "9477:35:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_HoldStatusCode_$12361",
                              "typeString": "enum HoldStatusCode"
                            }
                          },
                          "src": "9454:58:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_HoldStatusCode_$12361",
                            "typeString": "enum HoldStatusCode"
                          }
                        },
                        "id": 14945,
                        "nodeType": "ExpressionStatement",
                        "src": "9454:58:61"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 14988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 14970,
                        "name": "accountHoldBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14376,
                        "src": "9753:19:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 14975,
                      "indexExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 14971,
                            "name": "holds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14372,
                            "src": "9773:5:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$12432_storage_$",
                              "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                            }
                          },
                          "id": 14973,
                          "indexExpression": {
                            "id": 14972,
                            "name": "holdId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14913,
                            "src": "9779:6:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9773:13:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20HoldData_$12432_storage",
                            "typeString": "struct ERC20HoldData storage ref"
                          }
                        },
                        "id": 14974,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12418,
                        "src": "9773:33:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9753:54:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "baseExpression": {
                              "id": 14983,
                              "name": "holds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14372,
                              "src": "9869:5:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$12432_storage_$",
                                "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                              }
                            },
                            "id": 14985,
                            "indexExpression": {
                              "id": 14984,
                              "name": "holdId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14913,
                              "src": "9875:6:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9869:13:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20HoldData_$12432_storage",
                              "typeString": "struct ERC20HoldData storage ref"
                            }
                          },
                          "id": 14986,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12424,
                          "src": "9869:20:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 14976,
                            "name": "accountHoldBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14376,
                            "src": "9810:19:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 14981,
                          "indexExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 14977,
                                "name": "holds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14372,
                                "src": "9830:5:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$12432_storage_$",
                                  "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                                }
                              },
                              "id": 14979,
                              "indexExpression": {
                                "id": 14978,
                                "name": "holdId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14913,
                                "src": "9836:6:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9830:13:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC20HoldData_$12432_storage",
                                "typeString": "struct ERC20HoldData storage ref"
                              }
                            },
                            "id": 14980,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12418,
                            "src": "9830:20:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9810:41:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 14982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3881,
                        "src": "9810:45:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 14987,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9810:89:61",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9753:146:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14989,
                  "nodeType": "ExpressionStatement",
                  "src": "9753:146:61"
                },
                {
                  "expression": {
                    "id": 14998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14990,
                      "name": "totalSupplyOnHold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14383,
                      "src": "9909:17:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "baseExpression": {
                              "id": 14993,
                              "name": "holds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14372,
                              "src": "9951:5:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$12432_storage_$",
                                "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                              }
                            },
                            "id": 14995,
                            "indexExpression": {
                              "id": 14994,
                              "name": "holdId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14913,
                              "src": "9957:6:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9951:13:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20HoldData_$12432_storage",
                              "typeString": "struct ERC20HoldData storage ref"
                            }
                          },
                          "id": 14996,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12424,
                          "src": "9951:20:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 14991,
                          "name": "totalSupplyOnHold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14383,
                          "src": "9929:17:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 14992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3881,
                        "src": "9929:21:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 14997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9929:43:61",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9909:63:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14999,
                  "nodeType": "ExpressionStatement",
                  "src": "9909:63:61"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 15001,
                        "name": "holdId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14913,
                        "src": "10000:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 15002,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "10008:3:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10008:10:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 15000,
                      "name": "ReleaseHold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12463,
                      "src": "9988:11:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 15004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9988:31:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15005,
                  "nodeType": "EmitStatement",
                  "src": "9983:36:61"
                }
              ]
            },
            "documentation": {
              "id": 14911,
              "nodeType": "StructuredDocumentation",
              "src": "8941:197:61",
              "text": "@notice Called by the notary at any time or the sender after the expiration date to release the held tokens back to the sender.\n@param holdId a unique identifier for the hold."
            },
            "functionSelector": "9335c28f",
            "id": 15007,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 14917,
                    "name": "holdId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14913,
                    "src": "9203:6:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 14918,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14916,
                  "name": "isHeld",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14408,
                  "src": "9196:6:61"
                },
                "nodeType": "ModifierInvocation",
                "src": "9196:14:61"
              }
            ],
            "name": "releaseHold",
            "nameLocation": "9152:11:61",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 14915,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9187:8:61"
            },
            "parameters": {
              "id": 14914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14913,
                  "mutability": "mutable",
                  "name": "holdId",
                  "nameLocation": "9172:6:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 15007,
                  "src": "9164:14:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14912,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9164:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9163:16:61"
            },
            "returnParameters": {
              "id": 14919,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9211:0:61"
            },
            "scope": 15223,
            "src": "9143:883:61",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              852,
              1316
            ],
            "body": {
              "id": 15023,
              "nodeType": "Block",
              "src": "10312:57:61",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15020,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15010,
                        "src": "10345:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 15018,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "10329:5:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC20HoldableToken_$15223_$",
                          "typeString": "type(contract super ERC20HoldableToken)"
                        }
                      },
                      "id": 15019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 852,
                      "src": "10329:15:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 15021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10329:24:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 15017,
                  "id": 15022,
                  "nodeType": "Return",
                  "src": "10322:31:61"
                }
              ]
            },
            "documentation": {
              "id": 15008,
              "nodeType": "StructuredDocumentation",
              "src": "10032:185:61",
              "text": "@notice Amount of tokens owned by an account that are available for transfer. That is, the gross balance less any held tokens.\n@param account owner of the tokensß"
            },
            "functionSelector": "70a08231",
            "id": 15024,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "10231:9:61",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 15014,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 15012,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1299,
                  "src": "10274:5:61"
                },
                {
                  "id": 15013,
                  "name": "IERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1377,
                  "src": "10281:6:61"
                }
              ],
              "src": "10265:23:61"
            },
            "parameters": {
              "id": 15011,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15010,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "10249:7:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 15024,
                  "src": "10241:15:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15009,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10241:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10240:17:61"
            },
            "returnParameters": {
              "id": 15017,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15016,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15024,
                  "src": "10303:7:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15015,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10303:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10302:9:61"
            },
            "scope": 15223,
            "src": "10222:147:61",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12525
            ],
            "body": {
              "id": 15037,
              "nodeType": "Block",
              "src": "10604:52:61",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 15033,
                      "name": "accountHoldBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14376,
                      "src": "10621:19:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 15035,
                    "indexExpression": {
                      "id": 15034,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15027,
                      "src": "10641:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10621:28:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 15032,
                  "id": 15036,
                  "nodeType": "Return",
                  "src": "10614:35:61"
                }
              ]
            },
            "documentation": {
              "id": 15025,
              "nodeType": "StructuredDocumentation",
              "src": "10375:145:61",
              "text": "@notice Amount of tokens owned by an account that are held pending execution or release.\n@param account owner of the tokens"
            },
            "functionSelector": "c5a468c6",
            "id": 15038,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOnHold",
            "nameLocation": "10534:13:61",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 15029,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10572:8:61"
            },
            "parameters": {
              "id": 15028,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15027,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "10556:7:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 15038,
                  "src": "10548:15:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15026,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10548:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10547:17:61"
            },
            "returnParameters": {
              "id": 15032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15031,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15038,
                  "src": "10595:7:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15030,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10595:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10594:9:61"
            },
            "scope": 15223,
            "src": "10525:131:61",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12533
            ],
            "body": {
              "id": 15057,
              "nodeType": "Block",
              "src": "10918:82:61",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 15052,
                          "name": "accountHoldBalances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14376,
                          "src": "10964:19:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 15054,
                        "indexExpression": {
                          "id": 15053,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15041,
                          "src": "10984:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10964:28:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 15049,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15041,
                            "src": "10951:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 15047,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "10935:5:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC20HoldableToken_$15223_$",
                              "typeString": "type(contract super ERC20HoldableToken)"
                            }
                          },
                          "id": 15048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 852,
                          "src": "10935:15:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 15050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10935:24:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 15051,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3881,
                      "src": "10935:28:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 15055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10935:58:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 15046,
                  "id": 15056,
                  "nodeType": "Return",
                  "src": "10928:65:61"
                }
              ]
            },
            "documentation": {
              "id": 15039,
              "nodeType": "StructuredDocumentation",
              "src": "10662:167:61",
              "text": "@notice Total amount of tokens owned by an account including all the held tokens pending execution or release.\n@param account owner of the tokens"
            },
            "functionSelector": "0f8f8b83",
            "id": 15058,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "spendableBalanceOf",
            "nameLocation": "10843:18:61",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 15043,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10886:8:61"
            },
            "parameters": {
              "id": 15042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15041,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "10870:7:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 15058,
                  "src": "10862:15:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15040,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10862:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10861:17:61"
            },
            "returnParameters": {
              "id": 15046,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15045,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15058,
                  "src": "10909:7:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15044,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10909:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10908:9:61"
            },
            "scope": 15223,
            "src": "10834:166:61",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12547
            ],
            "body": {
              "id": 15073,
              "nodeType": "Block",
              "src": "11188:44:61",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 15068,
                        "name": "holds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14372,
                        "src": "11205:5:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ERC20HoldData_$12432_storage_$",
                          "typeString": "mapping(bytes32 => struct ERC20HoldData storage ref)"
                        }
                      },
                      "id": 15070,
                      "indexExpression": {
                        "id": 15069,
                        "name": "holdId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15061,
                        "src": "11211:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "11205:13:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20HoldData_$12432_storage",
                        "typeString": "struct ERC20HoldData storage ref"
                      }
                    },
                    "id": 15071,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "status",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 12431,
                    "src": "11205:20:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_HoldStatusCode_$12361",
                      "typeString": "enum HoldStatusCode"
                    }
                  },
                  "functionReturnParameters": 15067,
                  "id": 15072,
                  "nodeType": "Return",
                  "src": "11198:27:61"
                }
              ]
            },
            "documentation": {
              "id": 15059,
              "nodeType": "StructuredDocumentation",
              "src": "11006:95:61",
              "text": "@param holdId a unique identifier for the hold.\n@return hold status code."
            },
            "functionSelector": "b67f7bd4",
            "id": 15074,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "holdStatus",
            "nameLocation": "11115:10:61",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 15063,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11149:8:61"
            },
            "parameters": {
              "id": 15062,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15061,
                  "mutability": "mutable",
                  "name": "holdId",
                  "nameLocation": "11134:6:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 15074,
                  "src": "11126:14:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 15060,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11126:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11125:16:61"
            },
            "returnParameters": {
              "id": 15067,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15066,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15074,
                  "src": "11172:14:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_HoldStatusCode_$12361",
                    "typeString": "enum HoldStatusCode"
                  },
                  "typeName": {
                    "id": 15065,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 15064,
                      "name": "HoldStatusCode",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 12361,
                      "src": "11172:14:61"
                    },
                    "referencedDeclaration": 12361,
                    "src": "11172:14:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_HoldStatusCode_$12361",
                      "typeString": "enum HoldStatusCode"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11171:16:61"
            },
            "scope": 15223,
            "src": "11106:126:61",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              873,
              1326
            ],
            "body": {
              "id": 15104,
              "nodeType": "Block",
              "src": "11432:206:61",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 15094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 15090,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "11487:3:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 15091,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "11487:10:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 15088,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "11463:4:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20HoldableToken_$15223",
                                "typeString": "contract ERC20HoldableToken"
                              }
                            },
                            "id": 15089,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "spendableBalanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15058,
                            "src": "11463:23:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 15092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11463:35:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 15093,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15079,
                          "src": "11502:6:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11463:45:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "486f6c6461626c65546f6b656e3a20616d6f756e74206578636565647320617661696c61626c652062616c616e6365",
                        "id": 15095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11522:49:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de0c4f5e4acd44e6696778f13c28096ebd7a4c585872d8f8a461ad0da6c197c8",
                          "typeString": "literal_string \"HoldableToken: amount exceeds available balance\""
                        },
                        "value": "HoldableToken: amount exceeds available balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de0c4f5e4acd44e6696778f13c28096ebd7a4c585872d8f8a461ad0da6c197c8",
                          "typeString": "literal_string \"HoldableToken: amount exceeds available balance\""
                        }
                      ],
                      "id": 15087,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11442:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11442:139:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15097,
                  "nodeType": "ExpressionStatement",
                  "src": "11442:139:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15100,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15077,
                        "src": "11613:9:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15101,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15079,
                        "src": "11624:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 15098,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "11598:5:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC20HoldableToken_$15223_$",
                          "typeString": "type(contract super ERC20HoldableToken)"
                        }
                      },
                      "id": 15099,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 873,
                      "src": "11598:14:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 15102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11598:33:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 15086,
                  "id": 15103,
                  "nodeType": "Return",
                  "src": "11591:40:61"
                }
              ]
            },
            "documentation": {
              "id": 15075,
              "nodeType": "StructuredDocumentation",
              "src": "11238:90:61",
              "text": "@notice ERC20 transfer that checks on hold tokens can not be transferred."
            },
            "functionSelector": "a9059cbb",
            "id": 15105,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "11342:8:61",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 15083,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 15081,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1299,
                  "src": "11402:5:61"
                },
                {
                  "id": 15082,
                  "name": "IERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1377,
                  "src": "11409:6:61"
                }
              ],
              "src": "11393:23:61"
            },
            "parameters": {
              "id": 15080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15077,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "11359:9:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 15105,
                  "src": "11351:17:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15076,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11351:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15079,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11378:6:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 15105,
                  "src": "11370:14:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15078,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11370:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11350:35:61"
            },
            "returnParameters": {
              "id": 15086,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15085,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15105,
                  "src": "11426:4:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 15084,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11426:4:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11425:6:61"
            },
            "scope": 15223,
            "src": "11333:305:61",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              960,
              1358
            ],
            "body": {
              "id": 15137,
              "nodeType": "Block",
              "src": "11892:214:61",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 15126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 15123,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15108,
                              "src": "11947:6:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 15121,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "11923:4:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20HoldableToken_$15223",
                                "typeString": "contract ERC20HoldableToken"
                              }
                            },
                            "id": 15122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "spendableBalanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15058,
                            "src": "11923:23:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 15124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11923:31:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 15125,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15112,
                          "src": "11958:6:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11923:41:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "486f6c6461626c65546f6b656e3a20616d6f756e74206578636565647320617661696c61626c652062616c616e6365",
                        "id": 15127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11978:49:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de0c4f5e4acd44e6696778f13c28096ebd7a4c585872d8f8a461ad0da6c197c8",
                          "typeString": "literal_string \"HoldableToken: amount exceeds available balance\""
                        },
                        "value": "HoldableToken: amount exceeds available balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de0c4f5e4acd44e6696778f13c28096ebd7a4c585872d8f8a461ad0da6c197c8",
                          "typeString": "literal_string \"HoldableToken: amount exceeds available balance\""
                        }
                      ],
                      "id": 15120,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11902:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11902:135:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15129,
                  "nodeType": "ExpressionStatement",
                  "src": "11902:135:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15132,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15108,
                        "src": "12073:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15133,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15110,
                        "src": "12081:9:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15134,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15112,
                        "src": "12092:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 15130,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "12054:5:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC20HoldableToken_$15223_$",
                          "typeString": "type(contract super ERC20HoldableToken)"
                        }
                      },
                      "id": 15131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 960,
                      "src": "12054:18:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 15135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12054:45:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 15119,
                  "id": 15136,
                  "nodeType": "Return",
                  "src": "12047:52:61"
                }
              ]
            },
            "documentation": {
              "id": 15106,
              "nodeType": "StructuredDocumentation",
              "src": "11644:94:61",
              "text": "@notice ERC20 transferFrom that checks on hold tokens can not be transferred."
            },
            "functionSelector": "23b872dd",
            "id": 15138,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "11752:12:61",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 15116,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 15114,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1299,
                  "src": "11862:5:61"
                },
                {
                  "id": 15115,
                  "name": "IERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1377,
                  "src": "11869:6:61"
                }
              ],
              "src": "11853:23:61"
            },
            "parameters": {
              "id": 15113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15108,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "11782:6:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 15138,
                  "src": "11774:14:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15107,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11774:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15110,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "11806:9:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 15138,
                  "src": "11798:17:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15109,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11798:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15112,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11833:6:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 15138,
                  "src": "11825:14:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15111,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11825:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11764:81:61"
            },
            "returnParameters": {
              "id": 15119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15118,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15138,
                  "src": "11886:4:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 15117,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11886:4:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11885:6:61"
            },
            "scope": 15223,
            "src": "11743:363:61",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              912,
              1346
            ],
            "body": {
              "id": 15168,
              "nodeType": "Block",
              "src": "12331:203:61",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 15158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 15154,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "12386:3:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 15155,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "12386:10:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 15152,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "12362:4:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20HoldableToken_$15223",
                                "typeString": "contract ERC20HoldableToken"
                              }
                            },
                            "id": 15153,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "spendableBalanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15058,
                            "src": "12362:23:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 15156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12362:35:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 15157,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15143,
                          "src": "12401:6:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12362:45:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "486f6c6461626c65546f6b656e3a20616d6f756e74206578636565647320617661696c61626c652062616c616e6365",
                        "id": 15159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12421:49:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de0c4f5e4acd44e6696778f13c28096ebd7a4c585872d8f8a461ad0da6c197c8",
                          "typeString": "literal_string \"HoldableToken: amount exceeds available balance\""
                        },
                        "value": "HoldableToken: amount exceeds available balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de0c4f5e4acd44e6696778f13c28096ebd7a4c585872d8f8a461ad0da6c197c8",
                          "typeString": "literal_string \"HoldableToken: amount exceeds available balance\""
                        }
                      ],
                      "id": 15151,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12341:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12341:139:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15161,
                  "nodeType": "ExpressionStatement",
                  "src": "12341:139:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15164,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15141,
                        "src": "12511:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15165,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15143,
                        "src": "12520:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 15162,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "12497:5:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC20HoldableToken_$15223_$",
                          "typeString": "type(contract super ERC20HoldableToken)"
                        }
                      },
                      "id": 15163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 912,
                      "src": "12497:13:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 15166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12497:30:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 15150,
                  "id": 15167,
                  "nodeType": "Return",
                  "src": "12490:37:61"
                }
              ]
            },
            "documentation": {
              "id": 15139,
              "nodeType": "StructuredDocumentation",
              "src": "12112:118:61",
              "text": "@notice ERC20 approve that checks on hold tokens can not be approved for spending by another account."
            },
            "functionSelector": "095ea7b3",
            "id": 15169,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "12244:7:61",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 15147,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 15145,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1299,
                  "src": "12301:5:61"
                },
                {
                  "id": 15146,
                  "name": "IERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1377,
                  "src": "12308:6:61"
                }
              ],
              "src": "12292:23:61"
            },
            "parameters": {
              "id": 15144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15141,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "12260:7:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 15169,
                  "src": "12252:15:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15140,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12252:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15143,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12277:6:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 15169,
                  "src": "12269:14:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15142,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12269:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12251:33:61"
            },
            "returnParameters": {
              "id": 15150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15149,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15169,
                  "src": "12325:4:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 15148,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12325:4:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12324:6:61"
            },
            "scope": 15223,
            "src": "12235:299:61",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1399
            ],
            "body": {
              "id": 15193,
              "nodeType": "Block",
              "src": "12671:184:61",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 15183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 15179,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "12726:3:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 15180,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "12726:10:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 15177,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "12702:4:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20HoldableToken_$15223",
                                "typeString": "contract ERC20HoldableToken"
                              }
                            },
                            "id": 15178,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "spendableBalanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15058,
                            "src": "12702:23:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 15181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12702:35:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 15182,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15172,
                          "src": "12741:6:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12702:45:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "486f6c6461626c65546f6b656e3a20616d6f756e74206578636565647320617661696c61626c652062616c616e6365",
                        "id": 15184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12761:49:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de0c4f5e4acd44e6696778f13c28096ebd7a4c585872d8f8a461ad0da6c197c8",
                          "typeString": "literal_string \"HoldableToken: amount exceeds available balance\""
                        },
                        "value": "HoldableToken: amount exceeds available balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de0c4f5e4acd44e6696778f13c28096ebd7a4c585872d8f8a461ad0da6c197c8",
                          "typeString": "literal_string \"HoldableToken: amount exceeds available balance\""
                        }
                      ],
                      "id": 15176,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12681:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12681:139:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15186,
                  "nodeType": "ExpressionStatement",
                  "src": "12681:139:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15190,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15172,
                        "src": "12841:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 15187,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "12830:5:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC20HoldableToken_$15223_$",
                          "typeString": "type(contract super ERC20HoldableToken)"
                        }
                      },
                      "id": 15189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1399,
                      "src": "12830:10:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 15191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12830:18:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15192,
                  "nodeType": "ExpressionStatement",
                  "src": "12830:18:61"
                }
              ]
            },
            "documentation": {
              "id": 15170,
              "nodeType": "StructuredDocumentation",
              "src": "12540:80:61",
              "text": "@notice ERC20 burn that checks on hold tokens can not be burnt."
            },
            "functionSelector": "42966c68",
            "id": 15194,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "12634:4:61",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 15174,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12662:8:61"
            },
            "parameters": {
              "id": 15173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15172,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12647:6:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 15194,
                  "src": "12639:14:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15171,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12639:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12638:16:61"
            },
            "returnParameters": {
              "id": 15175,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12671:0:61"
            },
            "scope": 15223,
            "src": "12625:230:61",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1438
            ],
            "body": {
              "id": 15221,
              "nodeType": "Block",
              "src": "13017:197:61",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 15210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 15206,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "13072:3:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 15207,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "13072:10:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 15204,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "13048:4:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20HoldableToken_$15223",
                                "typeString": "contract ERC20HoldableToken"
                              }
                            },
                            "id": 15205,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "spendableBalanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15058,
                            "src": "13048:23:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 15208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13048:35:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 15209,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15199,
                          "src": "13087:6:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13048:45:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "486f6c6461626c65546f6b656e3a20616d6f756e74206578636565647320617661696c61626c652062616c616e6365",
                        "id": 15211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13107:49:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de0c4f5e4acd44e6696778f13c28096ebd7a4c585872d8f8a461ad0da6c197c8",
                          "typeString": "literal_string \"HoldableToken: amount exceeds available balance\""
                        },
                        "value": "HoldableToken: amount exceeds available balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de0c4f5e4acd44e6696778f13c28096ebd7a4c585872d8f8a461ad0da6c197c8",
                          "typeString": "literal_string \"HoldableToken: amount exceeds available balance\""
                        }
                      ],
                      "id": 15203,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "13027:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13027:139:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15213,
                  "nodeType": "ExpressionStatement",
                  "src": "13027:139:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15217,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15197,
                        "src": "13191:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15218,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15199,
                        "src": "13200:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 15214,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "13176:5:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC20HoldableToken_$15223_$",
                          "typeString": "type(contract super ERC20HoldableToken)"
                        }
                      },
                      "id": 15216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1438,
                      "src": "13176:14:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 15219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13176:31:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15220,
                  "nodeType": "ExpressionStatement",
                  "src": "13176:31:61"
                }
              ]
            },
            "documentation": {
              "id": 15195,
              "nodeType": "StructuredDocumentation",
              "src": "12861:84:61",
              "text": "@notice ERC20 burnFrom that checks on hold tokens can not be burnt."
            },
            "functionSelector": "79cc6790",
            "id": 15222,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnFrom",
            "nameLocation": "12959:8:61",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 15201,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "13008:8:61"
            },
            "parameters": {
              "id": 15200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15197,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "12976:7:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 15222,
                  "src": "12968:15:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15196,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12968:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15199,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12993:6:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 15222,
                  "src": "12985:14:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15198,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12985:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12967:33:61"
            },
            "returnParameters": {
              "id": 15202,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13017:0:61"
            },
            "scope": 15223,
            "src": "12950:264:61",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 15224,
        "src": "1050:12166:61",
        "usedErrors": []
      }
    ],
    "src": "154:13063:61"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-05-10T15:08:02.433Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "balanceOf(address)": {
        "params": {
          "account": "owner of the tokensß"
        }
      },
      "balanceOnHold(address)": {
        "params": {
          "account": "owner of the tokens"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "executeHold(bytes32)": {
        "params": {
          "holdId": "a unique identifier for the hold."
        }
      },
      "executeHold(bytes32,bytes32)": {
        "params": {
          "holdId": "a unique identifier for the hold.",
          "lockPreimage": "the image used to generate the lock hash with a sha256 hash"
        }
      },
      "executeHold(bytes32,bytes32,address)": {
        "params": {
          "holdId": "a unique identifier for the hold.",
          "lockPreimage": "the image used to generate the lock hash with a keccak256 hash",
          "recipient": "the account the tokens will be transferred to on execution."
        }
      },
      "hold(bytes32,address,address,uint256,uint256,bytes32)": {
        "params": {
          "amount": "of tokens to be transferred to the recipient on execution. Must be a non zero amount.",
          "expirationDateTime": "UNIX epoch seconds the held amount can be released back to the sender by the sender. Past dates are allowed.",
          "holdId": "a unique identifier for the hold.",
          "lockHash": "optional keccak256 hash of a lock preimage. An empty hash will not enforce the hash lock when the hold is executed.",
          "notary": "account that can execute the hold. Typically the recipient but can be a third party or a smart contact.",
          "recipient": "optional account the tokens will be transferred to on execution. If a zero address, the recipient must be specified on execution of the hold."
        }
      },
      "holdStatus(bytes32)": {
        "params": {
          "holdId": "a unique identifier for the hold."
        },
        "returns": {
          "_0": "hold status code."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "value": "The amount of tokens to mint."
        },
        "returns": {
          "_0": "A boolean that indicates if the operation was successful."
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "releaseHold(bytes32)": {
        "params": {
          "holdId": "a unique identifier for the hold."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "retrieveHoldHashId(address,address,address,uint256)": {
        "details": "Retrieve hold hash, and ID for given parameters"
      },
      "spendableBalanceOf(address)": {
        "params": {
          "account": "owner of the tokens"
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "ERC20HoldableToken",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "approve(address,uint256)": {
        "notice": "ERC20 approve that checks on hold tokens can not be approved for spending by another account."
      },
      "balanceOf(address)": {
        "notice": "Amount of tokens owned by an account that are available for transfer. That is, the gross balance less any held tokens."
      },
      "balanceOnHold(address)": {
        "notice": "Amount of tokens owned by an account that are held pending execution or release."
      },
      "burn(uint256)": {
        "notice": "ERC20 burn that checks on hold tokens can not be burnt."
      },
      "burnFrom(address,uint256)": {
        "notice": "ERC20 burnFrom that checks on hold tokens can not be burnt."
      },
      "executeHold(bytes32)": {
        "notice": "Called by the notary to transfer the held tokens to the set at the hold recipient if there is no hash lock."
      },
      "executeHold(bytes32,bytes32)": {
        "notice": "Called by the notary to transfer the held tokens to the recipient that was set at the hold."
      },
      "executeHold(bytes32,bytes32,address)": {
        "notice": "Called by the notary to transfer the held tokens to the recipient if no recipient was specified at the hold."
      },
      "hold(bytes32,address,address,uint256,uint256,bytes32)": {
        "notice": "Called by the sender to hold some tokens for a recipient that the sender can not release back to themself until after the expiration date."
      },
      "releaseHold(bytes32)": {
        "notice": "Called by the notary at any time or the sender after the expiration date to release the held tokens back to the sender."
      },
      "spendableBalanceOf(address)": {
        "notice": "Total amount of tokens owned by an account including all the held tokens pending execution or release."
      },
      "transfer(address,uint256)": {
        "notice": "ERC20 transfer that checks on hold tokens can not be transferred."
      },
      "transferFrom(address,address,uint256)": {
        "notice": "ERC20 transferFrom that checks on hold tokens can not be transferred."
      }
    },
    "notice": "A hold is like an approve where held tokens can not be spent by the token holder until after an hold expiration period. The hold can be executed by a notary, which can be the recipient of the tokens, a third party or a smart contract. The notary can execute the hold before or after the expiration period. Additionally, a hash lock at be applied which requires the notary of the hold to present the hash preimage to execute the hold. Held tokens can be released by the notary at any time or by the token holder after the expiration period. A recipient does not have to get set at the time of the hold, which means it will have to be specified when the hold is executed.",
    "version": 1
  }
}